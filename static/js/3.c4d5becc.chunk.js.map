{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props7","migratedCounters","_this$props8","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","_this$props9","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedMediaBase","constructor","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","toConsumableArray","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","messages","incompleteResults","_args","undefined","query","sender_user_id","from_message_id","offset","finally","total_count","setItems","onLoadMigratedNext","_args2","_x2","handleScroll","listRef","assertThisInitialized","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","_callee3","_args3","_context3","searchItems","searchMigratedItems","_x3","_ref4","_callee4","_args4","_context4","_x4","_ref5","_callee5","_context5","handleCloseSearch","_x5","sharedMediaList","sharedMediaSearchList","default","Error","Tile_SharedMedia_SharedDocument","_this$state4","getItemTemplate","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","SharedLinks","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","Tile_SharedMedia_SharedPhoto","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","_this$props$video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","media-blurred","getDurationString","SharedVideos","Tile_SharedMedia_SharedVideo","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","ColumnRight_SharedMedia_SharedLinks","ColumnRight_SharedMedia_SharedPhotos","ColumnRight_SharedMedia_SharedVideos","ColumnRight_SharedMedia_SharedVoiceNotes","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","category","error","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","Math","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"yIA4GMA,EAAQ,gBAlGV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAQJI,MAAQ,WACJP,EAAKQ,WAAa,KAClBR,EAAKS,KAAO,MAXFT,EAcdU,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBC,EAAwBD,EAAxBC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACDZ,EAAKO,QAKb,MAEJ,IAAK,6BAA8B,IACvBM,EAAoBF,EAApBE,gBACR,GAAIb,EAAKQ,WAAY,KAAAM,EACYd,EAAKQ,WAA1BO,EADSD,EACTC,GAAIC,EADKF,EACLE,aACRA,IAAiBH,EAAgBI,KAAK,SAAAC,GAAC,OAAIA,IAAMH,MACjDf,EAAKQ,WAAaP,OAAOkB,OAAO,GAAInB,EAAKQ,WAAY,CAAEQ,cAAeA,KAI9EhB,EAAKoB,KAAK,6BAA8BT,KAtCtCX,EA8CdqB,eAAiB,SAAAV,GACb,OAAQA,EAAO,UACX,IAAK,0BACDX,EAAKoB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1BF,EAASE,EAATF,KAERT,EAAKS,KAAOA,EAEZT,EAAKoB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3BF,EAASE,EAATF,KAEJT,EAAKS,MAAQT,EAAKS,KAAKa,YAAcb,EAAKa,YAC1CtB,EAAKS,KAAOR,OAAOkB,OAAO,GAAInB,EAAKS,KAAM,CAAEc,cAAed,EAAKe,YAGnExB,EAAKoB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBH,EAAeG,EAAfH,WAERR,EAAKQ,WAAaA,EAElBR,EAAKoB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,iCACDX,EAAKoB,KAAK,iCAAkCT,KA/E1CX,EAuFdyB,iBAAmB,WACfC,IAAgBC,YAAY,SAAU3B,EAAKU,UAC3CgB,IAAgBC,YAAY,eAAgB3B,EAAKqB,iBAzFvCrB,EA4Fd4B,oBAAsB,WAClBF,IAAgBG,eAAe,SAAU7B,EAAKU,UAC9CgB,IAAgBG,eAAe,eAAgB7B,EAAKqB,iBA3FpDrB,EAAKO,QAELP,EAAKyB,mBACLzB,EAAK8B,gBAAgBC,KANX/B,6BADSgC,iBAoG3BC,OAAOC,QAAUpC,EACFA,sHChGTqC,qNACFC,MAAQ,CACJC,MAAO,KACPC,iBAAkB,QAiCtBC,kBAAoB,SAAAL,GAAW,IAEnBnB,EADkBmB,EAAlBA,QACAnB,GAERW,IAAgBc,KAAK,CACjBC,QAAS,mBACTP,QAAS,CAAEO,QAAS,cAAe1B,QACpC2B,KAAK,SAAAC,GACA3C,EAAK4C,MAAMV,UAAYA,GACvBlC,EAAK6C,SAAS,CACVR,MAAOM,EAAOG,OAAOC,KAAK,4FA1BvBC,EAAWC,EAAWC,GAAU,IACvChB,EAAY/B,KAAKyC,MAAjBV,QAEJA,GAAWA,IAAYc,EAAUd,SACjC/B,KAAKoC,kBAAkBL,+CAIX,IACRA,EAAY/B,KAAKyC,MAAjBV,QAEJA,GACA/B,KAAKoC,kBAAkBL,oCAoBtB,IACGA,EAAY/B,KAAKyC,MAAjBV,QACAG,EAAUlC,KAAKiC,MAAfC,MAER,OAAKH,EAGDiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBjB,GACxCc,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASrB,QAASA,EAASsB,YAAaC,OAL3B,wDAlDOb,EAAOR,GAAO,IAClCF,EAAYU,EAAZV,QACAI,EAAqBF,EAArBE,iBAER,OAAIJ,GAAWI,EACJ,CACHA,iBAAkBJ,EAClBG,MAAO,MAIR,YAjBcqB,IAAMC,YAuEpBxB,ksDC1DAyB,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAA7D,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2D,GAAA7D,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6D,GAAAK,MAAAhE,KAAAiE,YAAA,OAAAnE,OAAAoE,EAAA,EAAApE,CAAA6D,EAAAC,GAAA9D,OAAAqE,EAAA,EAAArE,CAAA6D,EAAA,EAAAS,IAAA,SAAAC,MAAA,WAGzC,OACIC,EAAArB,EAAAC,cAACqB,EAAA,iBAAD,CAAkBC,SAAUC,KACxBH,EAAArB,EAAAC,cAACQ,EAAqB1D,KAAKyC,YALMkB,EAAA,CACdJ,IAAMC,WAWzC,OAFAG,EAAqBe,YAArB,6BAAAC,OAAgEC,YAAelB,GAA/E,KAEOC,qKCKLkB,2LACO,IAAAC,EAC2C9E,KAAKyC,MAA7CsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQC,EADpBH,EACoBG,SAAUC,EAD9BJ,EAC8BI,SAE7BC,EAAaC,YAAkBJ,GAAQ,GAE7C,OACIV,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,sBAAuB,CAAEC,+BAAgCL,IAC/EM,QAASL,GACTZ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,KAErBC,GAAYX,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,gCAAiCN,EAAQU,UACjFnB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,2BACAJ,EAAWF,EAAQW,aAAeX,EAAQY,kBAGlDrB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mCAEnBmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6BgC,WAvB5B5B,IAAMC,YAmCvBoC,MAjDA,SAAAC,GAAK,MAAK,CACrBJ,OAAQ,CACJK,YAAaD,EAAME,QAAQC,QAAQC,MAEvCP,aAAc,CACVQ,UAAW,oBAAsBL,EAAME,QAAQC,QAAQC,KACvDR,OAAQ,aAAeI,EAAME,QAAQI,WAAWC,OAEpDT,eAAgB,CACZO,UAAW,iBAAmBL,EAAME,QAAQC,QAAQC,KACpDR,OAAQ,2BAuCkB,CAAEY,WAAW,GAAhCT,CAAwCf,mBCvDnDyB,EAAgB,KAwCpB,SAASC,EAAiBC,GACtB,IAAKA,EAAQ,OAAO,EADU,IAGtBnC,EAAUmC,EAAVnC,MACR,QAAKA,GAEkB,OAAhBA,EAAMA,MAGjB,SAASoC,EAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMC,EAAgBC,IAAYC,IAAI,oBAChCC,EAAkBF,IAAYC,IAAI,8BAExC,KAD0BP,EAAiBK,IAAkBL,EAAiBQ,IACtD,OAAO,KAE/BT,EAAgBA,GAvyBV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIR,EAAMC,OAAQO,IAAK,CACnC,IAAIZ,EAAca,IAAIT,EAAMQ,IAGxB,OAAO,KAFPD,GAAUX,EAAcQ,IAAIJ,EAAMQ,IAM1C,MAAkB,KAAXD,EAAgB,KAAOA,EAGlC,IAAIG,EAAa,KAwCjB,SAASC,EAAcX,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1BS,EAAaA,GAznC,IAAIE,EAAWD,IAAIT,EAAMQ,IAGrB,OAAO,KAFPD,GAAUG,EAAWN,IAAIJ,EAAMQ,IAMvC,MAAkB,KAAXD,EAAgB,KAAOA,wDClF5BK,uBACF,SAAAA,EAAY7E,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsH,IACfzH,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwH,GAAAnH,KAAAH,KAAMyC,KAmBV8E,YApBmBzH,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAoBL,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvI,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVzI,EAAK0I,uBAECX,EAAW,GACXC,EAAkBtG,KAAgBc,KAAK,CACzCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,MAEXd,EAASe,KAAKd,GAERC,EAAuBvG,KAAgBc,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IAEXnB,EAASe,KAAKb,GAjBJM,EAAAE,KAAA,EAmB2BU,QAAQC,IAAIrB,EAASsB,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UAnBtE,OAAArB,EAAAK,EAAAiB,KAAArB,EAAAlI,OAAAwJ,EAAA,EAAAxJ,CAAAiI,EAAA,GAmBHE,EAnBGD,EAAA,GAmBIE,EAnBJF,EAAA,GAqBVnI,EAAK6C,SAAS,CACV6G,QAAStB,EAAMuB,SACftB,cAAeA,IAGbvI,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAOsI,EAAMuB,UA3BpB,yBAAApB,EAAAwB,SAAAjC,MApBK9H,EAkDnB0I,qBAlDmBzI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAkDI,SAAAmC,IAAA,IAAA/E,EAAAE,EAAA8E,EAAAtH,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAAAxD,EACYjF,EAAK4C,MAA5BuC,EADWF,EACXE,OAAQ8E,EADGhF,EACHgF,WACX9E,EAFc,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAGdF,EAHc,CAAAC,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,sBAIfF,EAAWnD,OAAS,GAJL,CAAAoD,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAKdC,YAAajF,GALC,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAMdE,YAAgBlF,GANF,CAAA+E,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,yBAAAD,EAAAzB,KAAA,GAQE/G,KAAgBc,KAAK,CACtCC,QAAS,uBACT6H,QAASnF,EACToF,WAAYN,EAAW,GACvBO,WAAW,IAZI,QAQb7H,EARauH,EAAAV,KAenBxJ,EAAK6C,SAAS,CACV4H,kBAAmB9H,IAhBJ,yBAAAuH,EAAAH,SAAAC,MAlDJhK,EAsEnB0K,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,QAzEK5K,EA6EnB6K,eAAiB,WAAM,IACXC,EAAM9K,EAAK4C,MAAXkI,EACAL,EAAsBzK,EAAKoC,MAA3BqI,kBAER,GAAKA,GACAA,EAAkBM,KAAvB,CAEA,IAAMxG,EAAG,aAAAO,OAAgB2F,EAAkBM,MACrCC,EAAUF,EAAE,cAGlBG,IAAKR,EAAkBM,MAEvB/K,EAAKkL,sBAAsB3G,EAAKyG,EAJjB,QAtFAhL,EA6FnBkL,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAA6G,EAGTpL,EAAK4C,MAAlCyI,EAHsCD,EAGtCC,gBAAiBnG,EAHqBkG,EAGrBlG,QACzB,GAAKmG,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,aAhHDpD,EAuHnBgM,oBAAsB,SAAC7G,EAAQ8E,GAC3B,GAA0B,IAAtBA,EAAWnD,OAAc,OAAO,KAEpC,IAAMkE,EAAUiB,KAAahF,IAAI9B,EAAQ8E,EAAW,IACpD,IAAKe,EAAS,OAAO,KAJqB,IAMlCkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKD,GAAyC,2BAArBC,EAAQ,SAAuC,KAC5DC,EAAUD,EAAVC,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DC,EAAUD,EAAVC,MACR,GAAIA,GAASA,EAAMvF,OACf,OAAOuF,EAAMA,EAAMvF,OAAS,GAIpC,OAAO,MAxIQ9G,EA2InBsM,WAAa,WACTtM,EAAK0K,cADU,IAAA6B,EAGiCvM,EAAK4C,MAA7CuC,EAHOoH,EAGPpH,OAAQ8E,EAHDsC,EAGCtC,WAAYuC,EAHbD,EAGaC,UAAWzB,EAHxBwB,EAGwBxB,KACvC,GAAK5F,GAAW8E,GAAeA,GAAeuC,GAAczB,EAA5D,CAEA,IAAM0B,EAAOzM,EAAK0M,aAAa1M,EAAK2M,WAAWC,SAE/C5M,EAAK6M,YAAYC,QAAQ,SAAAC,GACrB,GAAIhC,EAyCA,OAxCI0B,GACA/K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,UAKzB7L,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAM1B,EACNsC,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMC,EAAOhB,GAAaxM,EAAKgM,oBAAoB7G,EAAQ8E,GAC3D,GAAIuD,EAAJ,CAAU,IACEC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,OAAQtB,EAAUoB,EAAVpB,MAEvB1K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,oBACT2J,MAAO,CACH3J,QAAS,cACT1B,GAAIqL,EAAMrL,IAEd4M,UAAW,KACXC,uBAAwB,GACxBH,MAAOA,EACPC,OAAQA,EACRG,QAAS,CACLpL,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdS,IAAK,UAObrB,GACA/K,KAAgBc,KAAK,CACjBC,QAAS,cACT6H,QAASyC,EACTC,oBAAqB,EACrBC,uBAAuB,EACvBC,iBAAiB,EACjBC,aAAc,KACdC,sBAAuB,CACnB3K,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAKzB7L,KAAgBc,KAAK,CACjBC,QAAS,kBACT6H,QAASyC,EACTgB,aAAc5I,EACd6I,YAAa/D,EACbgD,uBAAuB,EACvBC,iBAAiB,EACjBe,UAAU,QA7PHjO,EAkQnBkO,sBAAwB,SAAA/I,GAChBnF,EAAK6M,YAAYvF,IAAInC,GACrBnF,EAAK6M,YAAYsB,OAAOhJ,GAExBnF,EAAK6M,YAAYuB,IAAIjJ,EAAQA,GAGjCkJ,QAAQC,IAAItO,EAAK6M,aAEjB7M,EAAKuO,eA3QUvO,EA8QnB0M,aAAe,SAAA8B,GACX,IAAMC,EAAYD,EAAIC,UAChBC,EAAYF,EAAIE,UAMtB,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEF,EAAIE,UAAY,IAGbD,GAtRQzO,EAyRnB2O,oBAAsB,SAAAC,GACI,KAAlBA,EAAMC,SACND,EAAME,kBA3RK9O,EA+RnB+O,kBAAoB,WAAM,IAAAC,EACahP,EAAKoC,MAAhCsH,EADcsF,EACdtF,QAASrB,EADK2G,EACL3G,cAEXqG,EAAY1O,EAAKiP,UAAUrC,QAAQ8B,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAKiP,UAAUrC,QAAQ8B,UAAY,IAGvC,IAAMD,EAAYzO,EAAK0M,aAAa1M,EAAKiP,UAAUrC,SAASsC,OAC5D,GAAKT,EAAL,CAKA,IAAMU,EAAY3H,EAAciH,GAC1BW,EAAexI,EAAiB6H,GAMhCY,GAJchH,EACd,CAACA,EAActH,IAAI+D,OAAO4E,EAAQ4F,OAAO,SAAApO,GAAC,OAAIA,IAAMmH,EAActH,MAAKuO,OAAO,SAAApO,GAAC,OAAIqO,YAAgBrO,KACnGwI,GAE4B4F,OAC9B,SAAApO,GAAC,OACGlB,EAAKwP,cAActO,EAAGuN,IACrBU,GAAanP,EAAKwP,cAActO,EAAGiO,IACnCC,GAAgBpP,EAAKwP,cAActO,EAAGkO,KAG/CpP,EAAK6C,SAAS,CAAE4M,WAAYhB,EAAWY,cAAeA,SAlBlDrP,EAAK6C,SAAS,CAAE4M,WAAY,KAAMJ,cAAe,MAzStCrP,EA8TnB0P,kBAAoB,SAAAd,GAChB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAlU/B3P,EAsUnBgQ,mBAAqB,WACjB,IAAMtB,EAAY1O,EAAK2M,WAAWC,QAAQ8B,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAK2M,WAAWC,QAAQ8B,UAAY,KAzUzB1O,EA6UnBiQ,mBAAqB,SAAArB,GACjB,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAjV/B3P,EAqVnBwP,cAAgB,SAACrK,EAAQsK,GAAe,IAC5B3E,EAAM9K,EAAK4C,MAAXkI,EACAzC,EAAkBrI,EAAKoC,MAAvBiG,cAER,GAAIA,GAAiBlD,IAAWkD,EAActH,KAE2B,KADvDmP,YAAa/K,GAAQ,EAAM2F,IAAM,IACrCqF,oBAAoBC,QAAQX,EAAWY,eAC7C,OAAO,EAKf,OAAsE,KADvDH,YAAa/K,GAAQ,EAAO2F,IAAM,IACtCqF,oBAAoBC,QAAQX,EAAWY,iBAKsB,KADvDhG,YAAgBlF,IAAW,IAC/BgL,oBAAoBC,QAAQX,EAAWY,gBAtWrCrQ,EA6WnBsQ,eAAiB,WACbC,WAAW,WACHvQ,EAAKiP,UAAUrC,SACC5M,EAAKiP,UAAUrC,QAEvB4D,SAEb,MAjXHxQ,EAAKoC,MAAQ,CACTsH,QAAS,GACTrB,cAAe,MAGnBrI,EAAKiP,UAAYvL,IAAM+M,YACvBzQ,EAAK2M,WAAajJ,IAAM+M,YAExBzQ,EAAK6M,YAAc,IAAI1F,IAXRnH,mFAefG,KAAKuH,cAELvH,KAAKmQ,kDAsWA,IAAAI,EAAAvQ,KAAAwQ,EACkBxQ,KAAKyC,MAApBsC,EADHyL,EACGzL,QAAS4F,EADZ6F,EACY7F,EADZ8F,EAE4EzQ,KAAKiC,MAA9EsH,EAFHkH,EAEGlH,QAAS+F,EAFZmB,EAEYnB,WAAYJ,EAFxBuB,EAEwBvB,cAAehH,EAFvCuI,EAEuCvI,cAAeoC,EAFtDmG,EAEsDnG,kBAMrDrC,GAJcC,EACd,CAACA,EAActH,IAAI+D,OAAO4E,EAAQ4F,OAAO,SAAApO,GAAC,OAAIA,IAAMmH,EAActH,MAAKuO,OAAO,SAAApO,GAAC,OAAIqO,YAAgBrO,KACnGwI,GAEoBL,IAAI,SAAAnI,GAAC,OAC3BuD,EAAArB,EAAAC,cAACwN,EAAD,CACItM,IAAKrD,EACLiE,OAAQjE,EACRkE,SAAUsL,EAAK7D,YAAYvF,IAAIpG,GAC/BmE,SAAU,kBAAMqL,EAAKxC,sBAAsBhN,QAI7C4P,GAAczB,GAAiB,IAAIhG,IAAI,SAAAnI,GAAC,OAC1CuD,EAAArB,EAAAC,cAACwN,EAAD,CACItM,IAAKrD,EACLiE,OAAQjE,EACRkE,SAAUsL,EAAK7D,YAAYvF,IAAIpG,GAC/BmE,SAAU,kBAAMqL,EAAKxC,sBAAsBhN,QAInD,OACIuD,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACI4N,MAAI,EACJC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,uBAChBC,mBAAiB,6BACjB7N,UAAW4B,EAAQkM,QACnB3M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,wBAAwB+J,EAAE,gBAC1CrG,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAK8O,UACVlO,GAAG,wBACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,UACf4G,UAAWvR,KAAKwO,oBAChBgD,QAASxR,KAAK4O,kBACd6C,QAASzR,KAAKuP,oBAElBjL,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,2BAC5CxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuB8E,GACrCqH,GACGhL,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQ2M,WAAY,+BAAgCf,IAGtF3Q,KAAK0M,YAAYW,KAAO,GACrB/I,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKwM,WACV5L,GAAG,yBACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,gBACf6G,QAASxR,KAAK6P,mBACd4B,QAASzR,KAAK8P,qBAGtBxL,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEN3K,KAAK0M,YAAYW,KAAO,GACrB/I,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKmM,WAAYV,MAAM,UAAUoG,WAAS,GACtDlH,EAAE,UAGT3K,KAAK0M,YAAYW,MAAQ/C,GACvBhG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAK0K,eAAgBe,MAAM,WACvCd,EAAE,sBAhcHpH,IAAMC,YAqdnBsO,GANCC,YACZnM,IAleW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB4L,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,GAElClB,OAAQ,CACJxF,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9BoM,cAAe,CACXH,QAAS,EACTI,QAAS,OACTC,SAAU,YAEdZ,WAAY,CACRvL,WAAYN,EAAME,QAAQI,WAAWC,QAEtCmM,YAAY1M,KAmdI,CAAEQ,WAAW,IAChCmM,cACAC,eAGWX,CAAQxK,+WCpfjBoL,uBACF,SAAAA,EAAYjQ,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0S,IACf7S,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4S,GAAAvS,KAAAH,KAAMyC,KA0DVkQ,mBAAqB,SAAAnS,GAAU,IACnBoS,EAAW/S,EAAK4C,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAEvBA,IAAWpS,EAAOoI,SAClB/I,EAAK6C,SAAS,CAAEoQ,OAAQC,aAAcF,GAAOG,SAAUC,aAAaJ,MAhEzD,IAGPD,EAAW/S,EAAK4C,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAJZ,OAMf/S,EAAKoC,MAAQ,CACTiR,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IATZhT,qFA4BGsT,EAAWC,GAAW,IAAAtO,EACd9E,KAAKyC,MAAvBmQ,EADgC9N,EAChC8N,OAAQ/M,EADwBf,EACxBe,MADwBgJ,EAEX7O,KAAKiC,MAA1B6Q,EAFgCjE,EAEhCiE,OAAQE,EAFwBnE,EAExBmE,SAEhB,OAAIG,EAAUtN,QAAUA,IAIpBsN,EAAUP,SAAWA,IAIrBQ,EAAUN,SAAWA,GAIrBM,EAAUJ,WAAaA,gDAQ3BnK,KAAUwK,GAAG,mBAAoBrT,KAAK2S,mEAItC9J,KAAUnH,eAAe,mBAAoB1B,KAAK2S,qDAY7C,IACG5N,EAAY/E,KAAKyC,MAAjBsC,QADH0L,EAEwBzQ,KAAKiC,MAA1B6Q,EAFHrC,EAEGqC,OAAQE,EAFXvC,EAEWuC,SAEhB,OACI1O,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,iBAAkBN,EAAQuO,mBAA3BxT,OAAAyT,GAAA,EAAAzT,CAAA,CACjB0T,eAAgBR,GACfjO,EAAQ0O,yBAA2BT,KAEvCF,sDAjEmBrQ,EAAOR,GACnC,GAAIQ,EAAMmQ,SAAW3Q,EAAMiR,WAAY,KAC3BN,EAAWnQ,EAAXmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAE3B,MAAO,CACHM,WAAYN,EACZE,OAAQC,aAAcF,GACtBG,SAAUC,aAAaJ,IAI/B,OAAO,YA1BiBtP,IAAMC,YAqFvBoC,OA9FA,SAAAC,GAAK,MAAK,CACrByN,mBAAoB,CAChB7H,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BD,yBAA0B,CACtBhI,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyFV,CAAEtN,WAAW,GAAhCT,CAAwC8M,ICpDxCkB,sNApCXC,YAAc,WAAM,IAAA/O,EACajF,EAAK4C,MAA1BmQ,EADQ9N,EACR8N,OAAQ1N,EADAJ,EACAI,SACXA,GAELA,EAAS0N,yFARSO,EAAWC,GAC7B,OAAOD,EAAUP,SAAW5S,KAAKyC,MAAMmQ,wCAUlC,IACGA,EAAW5S,KAAKyC,MAAhBmQ,OACFC,EAAOhK,KAAU/B,IAAI8L,GAErBkB,EAAWC,aAAgBlB,GAEjC,OACIvO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,OAAOoC,QAASvF,KAAK6T,aAChCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQA,IAClBtO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB2Q,IAEnCxP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAC+Q,GAAD,CAAmBrB,OAAQA,eA3B7BrP,IAAMC,gDCW1B0Q,uBACF,SAAAA,EAAYzR,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAkU,IACfrU,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAoU,GAAA/T,KAAAH,KAAMyC,KA8DVkQ,mBAAqB,SAAAnS,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CAEA,IAAIC,GAAiB,EACrB,OAAQH,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA7T,GAAC,OAAIA,EAAE6H,UAAYpI,EAAOoI,YAE3D0L,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGH,EAAKE,KAAKzL,UAAYpI,EAAOoI,UAC7B0L,GAAiB,GASzBA,GACAzU,EAAKyU,eAAeH,KAnGTtU,EAuGnByU,eAAiB,SAAAH,GACbtU,EAAK6C,SAAS,CACVmS,SAAUC,YAA6BX,EAAKvT,IAC5CoS,SAAU+B,YAAkCZ,EAAKvT,OA1GtCf,EA8GnBmV,qBAAuB,SAAAxU,GAAU,IACrBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKyU,eAAeH,KAxHTtU,EA4HnBoV,2BAA6B,SAAAzU,GAAU,IAC3BwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,gBAEpC7U,EAAKyU,eAAeH,IAtITtU,EA0InBqV,2BAA6B,SAAA1U,GAAU,IAC3BwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKyU,eAAeH,IApJTtU,EAwJnBuV,mBAAqB,SAAA5U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAO6U,YAAYzU,IAEhDf,EAAKyU,eAAeH,IAlKTtU,EAsKnByV,mBAAqB,SAAA9U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACtBmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO+U,WAAW3U,IAE9Cf,EAAKyU,eAAeH,IAhLT,IAGPnP,EAAWnF,EAAK4C,MAAhBuC,OAHO,OAKfnF,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvCgO,SAAU+B,YAAkC/P,IARjCnF,qFA0BGsT,EAAWC,GAAW,IAChCpO,EAAWhF,KAAKyC,MAAhBuC,OADgC6J,EAET7O,KAAKiC,MAA5B4S,EAFgChG,EAEhCgG,SAAU7B,EAFsBnE,EAEtBmE,SAElB,OAAIG,EAAUnO,SAAWA,IAIrBoO,EAAUyB,WAAaA,GAIvBzB,EAAUJ,WAAaA,+CAQ3BnK,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtC6B,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,oBAC5CzM,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,2EAIpDrM,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClD6B,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,oBACxDzM,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,6DAwH3D,IACGnQ,EAAY/E,KAAKyC,MAAjBsC,QADH0L,EAE0BzQ,KAAKiC,MAA5B4S,EAFHpE,EAEGoE,SAAU7B,EAFbvC,EAEauC,SAElB,OACI1O,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,gBACA2N,EAAWjO,EAAQ2Q,qBAAuB3Q,EAAQ4Q,iBAErDd,sDAlLmBpS,EAAOR,GACnC,GAAIQ,EAAMuC,SAAW/C,EAAMuT,WAAY,KAC3BxQ,EAAWvC,EAAXuC,OAER,MAAO,CACHwQ,WAAYxQ,EACZ6P,SAAUC,YAA6B9P,GACvCgO,SAAU+B,YAAkC/P,IAIpD,OAAO,YAxBYzB,IAAMC,YAqMlBoC,OA9MA,SAAAC,GAAK,MAAK,CACrB8P,eAAgB,CACZlK,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BgC,qBAAsB,CAClBjK,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,gBAyMV,CAAEtN,WAAW,GAAhCT,CAAwCsO,IChNjD0B,uBACF,SAAAA,EAAYnT,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4V,IACf/V,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8V,GAAAzV,KAAAH,KAAMyC,KAaVoR,YAAc,WAAM,IAAA/O,EACajF,EAAK4C,MAA1BuC,EADQF,EACRE,OAAQE,EADAJ,EACAI,SACXA,GAELA,EAASF,IAlBMnF,qFAUGsT,EAAWC,GAC7B,OAAOD,EAAUnO,SAAWhF,KAAKyC,MAAMuC,wCAUlC,IAAAiG,EAC2DjL,KAAKyC,MAA7DuC,EADHiG,EACGjG,OAAQ6Q,EADX5K,EACW4K,aAAcC,EADzB7K,EACyB6K,WAAYC,EADrC9K,EACqC8K,kBAE1C,OACIzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,OAAOoC,QAASvF,KAAK6T,aAChCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAU2Q,EAAcE,kBAAmBA,IACrEzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQ+Q,kBAAmBA,KAEnDD,IAAeC,GACZzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAC+S,GAAD,CAAcjR,OAAQA,eAnC5BzB,IAAMC,YAqDhCoS,GAAYM,aAAe,CACvBH,mBAAmB,EACnBD,YAAY,GAGDF,+BC/CTO,uBACF,SAAAA,EAAY1T,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmW,GAAArW,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqW,GAAAhW,KAAAH,KACVyC,0EAGD,IAAAqC,EACwD9E,KAAKyC,MAA1DsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQ2F,EADpB7F,EACoB6F,EAAGyL,EADvBtR,EACuBsR,WAAY7Q,EADnCT,EACmCS,QAASuL,EAD5ChM,EAC4CgM,QAE7CrG,EAAOE,EAAE,YAOb,OANI0L,YAAcrR,GACdyF,EAAOE,EAAE,QACF2L,YAActR,KACrByF,EAAOE,EAAE,gBAITrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACViT,GACG9R,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQwR,eAAgBhR,QAASuL,GACpDxM,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAGRqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCoC,QAASA,GACxDjB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBsH,KAE3C2L,GACE9R,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ0R,gBAAiBlR,QAASuL,GACrDxM,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,eA3BQM,IAAMC,YAwCvBsO,GALCC,YACZS,cACA5M,IA9CW,CACX2Q,eAAgB,CACZG,OAAQ,qBAEZD,gBAAiB,CACbC,OAAQ,sBAyCO,CAAErQ,WAAW,IAGrByL,CAAQqE,2GCqCRQ,eAvFX,SAAAA,EAAYlU,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2W,IACf9W,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6W,GAAAxW,KAAAH,KAAMyC,KAyCVmU,iCAAmC,SAAApW,GAAU,IACjCwE,EAAWnF,EAAK4C,MAAhBuC,OACR,GAAKxE,EAAO2J,SACR3J,EAAO2J,UAAYnF,EAAvB,CAEA,IAAMmP,EAAOC,KAAUtN,IAAItG,EAAO2J,SAC7BgK,GAELtU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,OAlDtBtU,EAqDnBkX,kCAAoC,SAAAvW,GAAU,IAClCwE,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAEL,OAAQ3T,EAAOwW,MAAM,UACjB,IAAK,sCAC0B,uBAAvB7C,EAAKE,KAAK,UAA4D,uBAAvBF,EAAKE,KAAK,UACzDxU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,KAEzC,MAEJ,IAAK,wCAC0B,oBAAvBA,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACtDxU,EAAK6C,SAAS,CAAEmU,QAASC,YAAY3C,OAnElCtU,EA0EnBoX,2BAA6B,WACzBpX,EAAK6C,SAAS,CAAEmU,SAAUhX,EAAKoC,MAAM4U,UACrChX,EAAKqX,wCA5EUrX,EA+EnBsX,4BAA8B,WAAM,IACxBnS,EAAWnF,EAAK4C,MAAhBuC,OACA6R,EAAYhX,EAAKoC,MAAjB4U,QAERO,aAA+BpS,EAAQ6R,IAnFxB,IAGP7R,EAAWvC,EAAXuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACrB6R,EAAUC,YAAY3C,GALb,OAOftU,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ6R,QAASA,GAGbhX,EAAKqX,qCAAuCG,aACxCxX,EAAKsX,4BACLG,KAdWzX,mFAiCfuU,KAAUf,GAAG,iCAAkCrT,KAAK4W,kCACpDzL,IAAiBkI,GAAG,kCAAmCrT,KAAK+W,kFAI5D3C,KAAU1S,eAAe,iCAAkC1B,KAAK4W,kCAChEzL,IAAiBzJ,eAAe,kCAAmC1B,KAAK+W,sFArB5CtU,EAAOR,GACnC,GAAIQ,EAAMuC,SAAW/C,EAAMuT,WAAY,KAC3BxQ,EAAWvC,EAAXuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GACrB6R,EAAUC,YAAY3C,GAE5B,MAAO,CACHqB,WAAY/S,EAAMuC,OAClB6R,QAASA,GAGjB,OAAO,YA9BoBtT,IAAMC,WCYnC+T,eACF,SAAAA,EAAY9U,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAuX,GAAAzX,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAyX,GAAApX,KAAAH,KACVyC,0EAGD,IAAAqC,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EACTkM,EAAY7W,KAAKiC,MAAjB4U,QAER,OACIvS,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKiX,4BACxD3S,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KAAgB4T,EAAwCvS,EAAArB,EAAAC,cAAC0U,GAAA3U,EAAD,MAA9BqB,EAAArB,EAAAC,cAAC2U,GAAA5U,EAAD,OAC1BqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,oBAIfrG,EAAArB,EAAAC,cAACgV,GAAAjV,EAAD,KACIqB,EAAArB,EAAAC,cAACiV,GAAAlV,EAAD,CAAQwI,MAAM,UAAU2M,SAAUpY,KAAKiX,2BAA4BoB,SAAUxB,aApB7DF,IAgCrB7E,GALCC,YACZS,cACA5M,IAnCW,CACX8R,SAAU,CACNzF,QAAS,cAiCM,CAAE5L,WAAW,IAGrByL,CAAQyF,wFC3BjBe,eACF,SAAAA,EAAY7V,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsY,IACfzY,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwY,GAAAnY,KAAAH,KAAMyC,KAoBV8V,gBAAkB,WACd1Y,EAAK6C,SAAS,CAAE8V,UAAW3Y,EAAKoC,MAAMuW,YAtBvB3Y,EAyBnB4Y,kBAAoB,WAChB,IAAMC,EAAgBvN,IAAiBwN,YAC/B3T,EAAWnF,EAAK4C,MAAhBuC,OACJ0T,IAAkB1T,GAGlBzD,KAAgBqX,UAAU5T,IA/BfnF,EAmCnBgZ,YAAc,WAAM,IACR7T,EAAWnF,EAAKoC,MAAhB+C,OAEFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,GACAA,EAAKE,KAAV,CALgB,IAORzL,EAAYuL,EAAKE,KAAjBzL,QACHA,GAELrH,KAAgBc,KAAK,CACjBC,QAASwW,aAAclQ,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGP5D,EAAWnF,EAAK4C,MAAhBuC,OAHO,OAIfnF,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZwT,UAAU,GANC3Y,wEAmDV,IAAAiF,EAC0B9E,KAAKyC,MAA5BkI,EADH7F,EACG6F,EAAG3F,EADNF,EACME,OAAQD,EADdD,EACcC,QACXyT,EAAaxY,KAAKiC,MAAlBuW,SAEFrE,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAElB,IAAM4E,EAAUC,YAAYhU,GACxBiU,GAAY,GACXF,GAAW5E,EAAKE,OACjB4E,EAAYH,aAAc3E,EAAKE,KAAKzL,UAExC,IAAMsQ,EAAWC,YAAanU,GACxBoU,EAAY9C,YAActR,GAEhC,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKuY,iBACxDjU,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACoW,GAAArW,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,WAId6N,EAAWlU,EAAArB,EAAAC,cAACqW,GAAAtW,EAAD,MAAiBqB,EAAArB,EAAAC,cAACsW,GAAAvW,EAAD,OAEjCqB,EAAArB,EAAAC,cAACuW,GAAAxW,EAAD,CAAUyW,GAAIlB,EAAUmB,QAAQ,OAAOC,eAAa,GAChDtV,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,CAAM6W,UAAU,MAAMC,gBAAc,IAC9BhB,GACEzU,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKyY,mBACxDnU,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BtN,EAAE,mBAKnBrG,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAK6Y,aACxDvU,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACrCtN,EAAZsO,EAAc,UAAe,qBAOrDF,GAAWG,GACR5U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,UAChCpT,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACrCtN,EAAZyO,EAAc,eAAoB,kBAMtDL,IAAYG,GACT5U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,UAChCpT,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,YAAYuM,QAAQ,UAAUC,QAAM,GACjDtN,EAAE,wEAnHXlI,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,WAChB,CACHA,WAAY/S,EAAMuC,OAClBwT,UAAU,GAIX,YAnBYjV,IAAMC,WAgJlBsO,GALCC,YACZS,cACA5M,IAnJW,CACX8R,SAAU,CACNzF,QAAS,cAiJM,CAAE5L,WAAW,IAGrByL,CAAQwG,aChGjB2B,uBACF,SAAAA,EAAYxX,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAia,IACfpa,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAma,GAAA9Z,KAAAH,KAAMyC,KAgGVwS,2BAA6B,SAAAzU,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,gBAEpC7U,EAAKuO,eA1GMvO,EA8GnBqV,2BAA6B,SAAA1U,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKuO,eAvHMvO,EA2HnBmV,qBAAuB,SAAAxU,GACnB,IAAM2T,EAAOC,KAAUtN,IAAIjH,EAAK4C,MAAMuC,QACjCmP,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKuO,gBApIMvO,EAwInB8S,mBAAqB,SAAAnS,GACbX,EAAK8U,QAAQxN,IAAI3G,EAAOoI,UACxB/I,EAAKuO,eA1IMvO,EA8InB0H,YAAc,WACV1H,EAAKqa,oBA/IUra,EAkJnBqa,iBAAmB,WAAM,IAAApV,EACKjF,EAAK4C,MAAvBuC,EADaF,EACbE,OAAQmV,EADKrV,EACLqV,MAEVxa,EAAQ8J,KAAUC,WAExBC,YAAiBhK,EAAO,CAACqF,IACzB,IAAM2P,EAAUyF,YAAoBpV,GAAQkE,IAAI,SAAAnI,GAAC,OAAIA,EAAE6H,UACvDyR,YAAiB1a,EAAOgV,GAEpBwF,GACAG,YAAgBtV,IA5JLnF,EAgKnB0a,mBAAqB,WAAM,IAAAtP,EACDpL,EAAK4C,MAAnBkI,EADeM,EACfN,EAAG3F,EADYiG,EACZjG,OACLwV,EAAWtQ,YAAgBlF,GACjC,GAAKwV,EAAL,CAEA,IAAMC,EAAoB5T,IAAYC,IAAI,YACpC4T,EAAeD,EAAoBA,EAAkBpW,MAAQ,wBAEnEyG,IAAK4P,EAAeF,GAEpB,IAAMpW,EAAG,GAAAO,OAAMK,EAAN,kBACH6F,EAAUF,EAAE,cAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,QA5KAhL,EAiLnBkL,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAAgI,EAGTvM,EAAK4C,MAAlCyI,EAHsCkB,EAGtClB,gBAAiBnG,EAHqBqH,EAGrBrH,QACzB,GAAKmG,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,aApMDpD,EA2MnB8a,gBAAkB,WAAM,IAAAnK,EACE3Q,EAAK4C,MAAnBkI,EADY6F,EACZ7F,EAAG3F,EADSwL,EACTxL,OACL4V,EAAcC,YAAmB7V,GACvC,GAAK4V,EAAL,CAEA9P,IAAKgQ,aAAkBF,IAEvB,IAAMxW,EAAG,GAAAO,OAAMK,EAAN,eACH6F,EAAUF,EAAE,eAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,QApNAhL,EAyNnBkb,kBAAoB,WAChBlb,EAAKmb,mBAAmBvO,QAAQwO,UAAY,GA1N7Bpb,EA6NnBqb,iBAAmB,WAAM,IAAAC,EACKtb,EAAK4C,MAAvBuC,EADamW,EACbnW,OAAQmV,EADKgB,EACLhB,MACVhG,EAAOC,KAAUtN,IAAI9B,GACtBmP,GACAA,EAAKlI,QAEVmP,aAA6B,CAAEpW,OAAQA,IAEnCmV,GACA5Y,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,MAxODnF,EA6OnBwb,eAAiB,WAAM,IAAAC,EACOzb,EAAK4C,MAAvBuC,EADWsW,EACXtW,OAAQmV,EADGmB,EACHnB,MAEhBoB,aAASvW,EAAQ,MAAM,GAEnBmV,GACA5Y,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,KArPDnF,EA0PnB2b,eAAiB,SAAA5I,GACb6I,aAAS7I,GAAQ,IA3PF/S,EA8PnB6b,iBAAmB,WACf,OAAK7b,EAAKmb,mBAEHnb,EAAKmb,mBAAmBvO,QAAQkP,aAFF,GA5PrCzN,QAAQC,IAAI,mBAAoBtO,EAAK4C,MAAMmZ,UAE3C/b,EAAKmb,mBAAqBzX,IAAM+M,YALjB,IAOPtL,EAAWnF,EAAK4C,MAAhBuC,OAPO,OASfnF,EAAK8U,QAAU,IAAI3N,IACnBnH,EAAKoC,MAAQ,CACTuT,WAAYxQ,GAXDnF,uFAyBKgD,EAAWC,GACZ9C,KAAKyC,MAAhBuC,OADkC,IAGpC6W,EAAO7b,KAAKgb,mBAAmBvO,QAYrC,MAViB,CACbwO,UAF8CY,EAA1CZ,UAGJa,aAH8CD,EAA/BC,aAIfC,aAJ8CF,EAAjBE,4DAcf5I,EAAWC,GAAW,IAAA4I,EACchc,KAAKyC,MAAnDuC,EADgCgX,EAChChX,OAAQa,EADwBmW,EACxBnW,MAAO+V,EADiBI,EACjBJ,SAAUK,EADOD,EACPC,iBAEjC,OAAI9I,EAAUnO,SAAWA,IAIrBmO,EAAUyI,WAAaA,IAIvBzI,EAAU8I,mBAAqBA,GAI/B9I,EAAUtN,QAAUA,+CAOThD,EAAWC,EAAWC,GAAU,IACvCiC,EAAWhF,KAAKyC,MAAhBuC,OACJnC,EAAUmC,SAAWA,GACrBhF,KAAKuH,cAGT,IAAMsU,EAAO7b,KAAKgb,mBAAmBvO,QAC7BwO,EAA0ClY,EAA1CkY,UAAWa,EAA+B/Y,EAA/B+Y,aAA+B/Y,EAAjBgZ,aAC7BlZ,EAAUmC,SAAWA,EACrB6W,EAAKZ,UAAYA,GAAaY,EAAKC,aAAeA,GAElDD,EAAKZ,UAAY,8CAKrB/M,QAAQC,IAAI,iCACZnO,KAAKuH,cAELsB,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtC9J,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,2EAIpDrM,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClD9J,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,6DAsK3D,IAAA3E,EAAAvQ,KAAAkc,EAiBDlc,KAAKyC,MAfL2T,EAFC8F,EAED9F,WACAjT,EAHC+Y,EAGD/Y,UACA6B,EAJCkX,EAIDlX,OACAD,EALCmX,EAKDnX,QACA+L,EANCoL,EAMDpL,QACAqL,EAPCD,EAODC,oBACAC,EARCF,EAQDE,mBACAC,EATCH,EASDG,sBACAC,EAVCJ,EAUDI,kBAEAC,GAZCL,EAWDM,kBAXCN,EAYDK,oBACAE,EAbCP,EAaDO,mBACAC,EAdCR,EAcDQ,uBACAvC,EAfC+B,EAeD/B,MACAxP,EAhBCuR,EAgBDvR,EAhBCgS,EAmBgC3c,KAAKyC,MAApCmZ,EAnBDe,EAmBCf,SAAUK,EAnBXU,EAmBWV,iBAChBL,EAAWA,GAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACvCK,EAAmBA,GAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD/N,QAAQC,IAAI,8BAA+ByN,EAAUK,GAtBhD,IAAAW,EAwByFhB,EAAS1S,IACnG,SAAC2T,EAAI3V,GAAL,OAAW2V,EAAKZ,EAAiB/U,KAzBhC4V,EAAAhd,OAAAwJ,EAAA,EAAAxJ,CAAA8c,EAAA,GAwBEG,EAxBFD,EAAA,GAwBcE,EAxBdF,EAAA,GAwB0BG,EAxB1BH,EAAA,GAwByCI,EAxBzCJ,EAAA,GAwBqDK,EAxBrDL,EAAA,GAwB+DM,EAxB/DN,EAAA,GA4BC3I,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EACD,OACI7P,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACma,GAAD,CAAmBvM,QAASA,IAC5BxM,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKgb,mBAAoB7X,UAAU,uBAKzD,IAAIma,EAAqB,EACzB,GAAIjH,YAAcrR,GAAS,CACvB,IAAMuP,EAAW1L,KAAU4L,YAAYN,EAAKE,KAAKzL,SACjD0U,EAAqB/I,EAAWA,EAASgJ,sBAAwBD,EAGrE,IAAM9C,EAAWtQ,YAAgBlF,GAC3B4V,EAAcC,YAAmB7V,GACjCwY,EAAMC,YAAWzY,GACjB+T,EAAUC,YAAYhU,GACtB0Y,EAAOC,YAAS3Y,GAEhB2P,EAAUyF,YAAoBpV,GAC9B4Y,EAAQ,GACd5d,KAAK2U,QAAU,IAAI3N,IACnB2N,EAAQhI,QAAQ,SAAAkR,GACZ,IAAMhL,EAAOhK,KAAU/B,IAAI+W,EAAOjV,SAC9BiK,IACAtC,EAAKoE,QAAQ1G,IAAI4E,EAAKjS,GAAIiS,EAAKjS,IAC/Bgd,EAAMjV,KAAKkK,MAInB,IAGMiL,EAHcF,EAAMG,KAAK,SAAChd,EAAGid,GAC/B,OAAOC,aAAmBD,GAAKC,aAAmBld,KAE5BmI,IAAI,SAAA2J,GAAI,OAC9BvO,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUtT,IAAKyO,EAAKjS,IACpD0D,EAAArB,EAAAC,cAACgb,GAAD,CAAatL,OAAQC,EAAKjS,GAAIsE,SAAUqL,EAAKiL,oBAI7CvP,EAAUkI,EAAVlI,MAEFD,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACma,GAAD,CACIrY,OAAQA,EACRoR,WAAYA,EACZtF,QAASA,EACTvL,QAASvF,KAAK+a,oBAElBzW,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKgb,mBAAoB7X,UAAU,qBACzCmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qBACXmB,EAAArB,EAAAC,cAACib,GAAD,CACInZ,OAAQA,EACR8Q,WAAYqE,EACZpE,mBAAoBoE,EACpBtE,aAAc5J,EAAQjM,KAAKkb,iBAAmB,SAGpDV,GAAYI,GAAe4C,IACzBlZ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KACKuX,GACGlW,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKua,oBACxDjW,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACkb,GAAAnb,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/BuC,MAMpBI,GACGtW,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAK2a,iBACxDrW,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACmb,GAAApb,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAC/B6C,aAAkBF,QAO1C4C,GACGlZ,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUE,UAAW4B,EAAQ2S,UACzBpT,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACob,GAAArb,EAAD,CAAkBE,UAAU,4BAEhCmB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QAASwX,EACTe,MAAO,CAAEC,WAAY,WAAYC,SAAU,qBAOhEf,GAAQ3E,GAAYoB,IAAUpB,IAC7BzU,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACwb,GAAAzb,EAAD,MACAqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,MACMya,GAAQpZ,EAAArB,EAAAC,cAACyb,GAAD,CAAuB3Z,OAAQA,IACxC+T,GAAWzU,EAAArB,EAAAC,cAAC0b,GAAD,CAAc5Z,OAAQA,IACjCmV,IAAUpB,GACPzU,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASvF,KAAKqb,gBACxD/W,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,UAAUC,QAAM,GAC/CtN,EAAE,eAAekU,qBAShD9B,EAAa,GACXC,EAAa,GACbC,EAAgB,GAChBC,EAAa,GACbC,EAAW,GACXC,EAAyB,GACzBE,EAAqB,IACrBhZ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACwb,GAAAzb,EAAD,MACAqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KACK8Z,EAAa,GACVzY,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASgX,GACnDjY,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC4b,GAAA7b,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAChB,IAAf8E,EAAmB,UAAnB,GAAApY,OAAkCoY,EAAlC,eAMpBC,EAAa,GACV1Y,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASkX,GACnDnY,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC6b,GAAA9b,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAChB,IAAf+E,EAAmB,UAAnB,GAAArY,OAAkCqY,EAAlC,eAMpBC,EAAgB,GACb3Y,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAAS8W,GACnD/X,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC8b,GAAA/b,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GACb,IAAlBgF,EAAsB,SAAtB,GAAAtY,OAAoCsY,EAApC,cAMpBC,EAAa,GACV5Y,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAAS6W,GACnD9X,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC+b,GAAAhc,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAChB,IAAfiF,EAAmB,eAAnB,GAAAvY,OAAuCuY,EAAvC,oBAMpBC,EAAW,GACR7Y,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAAS+W,GACnDhY,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACgc,GAAAjc,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GAClB,IAAbkF,EAAiB,gBAAjB,GAAAxY,OAAsCwY,EAAtC,qBAMpBC,EAAyB,GACtB9Y,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASmX,GACnDpY,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACic,GAAAlc,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+C,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GACJ,IAA3BmF,EACK,kBADL,GAAAzY,OAEQyY,EAFR,uBAQpBE,EAAqB,GAClBhZ,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAAS4W,GACnD7X,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACkc,GAAAnc,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CACI+W,OAAK,EACLhU,QACI1B,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,UAAUC,QAAM,GACR,IAAvBqF,EACK,oBADL,GAAA3Y,OAEQ2Y,EAFR,2BAWhCQ,EAAMnX,OAAS,GACZrC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACwb,GAAAzb,EAAD,MACAqB,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,KAAO6a,MAO3B,OAAO3D,EAAQ7V,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBlC,IAAa6I,sDAhhB5DvJ,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,WAChB,CACHA,WAAY/S,EAAMuC,QAInB,YAvBWzB,IAAMC,YAyjBjBsO,GARCC,YACZsN,cACA7M,cACA5M,IAnkBW,SAAAC,GAAK,MAAK,CACrByZ,gBAAiB,CACb5I,OAAQ,qBAEZ6I,OAAQ,GAGR7T,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,GAElCuF,SAAU,CACNzF,QAAS,eAwjBM,CAAE5L,WAAW,IAChCoM,eACA+M,cAGW1N,CAAQmI,ICrnBjBwF,4LACO,IAAA3a,EACwB9E,KAAKyC,MAA1BsC,EADHD,EACGC,QAAS+L,EADZhM,EACYgM,QAEjB,OACIxM,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ2a,eAAgBna,QAASuL,GACpDxM,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAEJqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,6BAVeI,IAAMC,YAqB1BoC,OA3BA,CACX8Z,eAAgB,CACZhJ,OAAQ,sBAyBD9Q,CAAmB6Z,ICtB5BE,uBACF,SAAAA,EAAYld,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2f,IACf9f,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6f,GAAAxf,KAAAH,KAAMyC,KA0BVmd,aAAe,SAAA5a,GAAU,IACbmV,EAAUta,EAAK4C,MAAf0X,MAERoB,aAASvW,GAELmV,GACA5Y,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,KAhChBnF,EAAKoC,MAAQ,CACTsH,QAAS,IAJE1J,mFAQC,IAAA0Q,EAAAvQ,KACRgF,EAAWhF,KAAKyC,MAAhBuC,OAEF4N,EAASiN,YAAc7a,GACxB4N,GAELrR,KAAgBc,KAAK,CACjBC,QAAS,oBACTsG,QAASgK,EACTnK,eAAgB,EAChBC,MAAO,MACRnG,KAAK,SAAAC,GACJ,IAAM7C,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAO6C,EAAOgH,UAE/B+G,EAAK7N,SAAS,CAAE6G,QAAS/G,EAAOgH,8CAiB/B,IAAAsW,EAAA9f,KAAA8E,EACiC9E,KAAKyC,MAAnCsd,EADHjb,EACGib,UAAWjP,EADdhM,EACcgM,QAASqJ,EADvBrV,EACuBqV,MAGtBlS,EAFcjI,KAAKiC,MAAjBsH,QAEcL,IAAI,SAAAnI,GAAC,OACvBuD,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACrT,IAAKrD,GAClBuD,EAAArB,EAAAC,cAACib,GAAD,CAAanZ,OAAQjE,EAAGmE,SAAU4a,EAAKF,kBAIzC5T,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC8c,GAAD,CAAsBlP,QAASA,IAC/BxM,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBob,MAAO,CAAEwB,cAC3C9X,IAKb,OAAOkS,EAAQ7V,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBAAoB6I,UA5D9CzI,IAAMC,YAuEnCmc,GAAezJ,aAAe,CAC1BiE,OAAO,EACP4F,UAAW,GAGAJ,yMC3DTM,uBACF,SAAAA,EAAYxd,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAigB,IACfpgB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmgB,GAAA9f,KAAAH,KAAMyC,KAWVyd,kBAAoB,SAAAzR,GAChB5O,EAAKsgB,uBAAuB1R,GADH,IAAA3J,EAGKjF,EAAK4C,MAA3BuC,EAHiBF,EAGjBE,OAAQob,EAHStb,EAGTsb,UAEhB7E,aAASvW,EAAQob,IAjBFvgB,EAoBnBwgB,cAAgB,SAAA5R,GACZ5O,EAAKsgB,uBAAuB1R,GADP,IAAAxD,EAGSpL,EAAK4C,MAA3BuC,EAHaiG,EAGbjG,OAAQob,EAHKnV,EAGLmV,UAEhBE,aAAgBtb,EAAQ,CAACob,KAzBVvgB,EA4BnB0gB,aAAe,SAAA9R,GACX5O,EAAKsgB,uBAAuB1R,GADR,IAAArC,EAGUvM,EAAK4C,MAA3BuC,EAHYoH,EAGZpH,OAAQob,EAHIhU,EAGJgU,UAEVvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAND,IAQZ2V,EAAiC3V,EAAjC2V,6BAER3gB,EAAK6C,SAAS,CACV+d,kBAAkB,EAClBC,wBAAyBF,EACzBG,OAAQH,KAzCG3gB,EA6CnB+gB,kBA7CmB,eAAAC,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA6CC,SAAAC,EAAM8G,GAAN,IAAAqS,EAAAC,EAAA,OAAAtZ,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZmG,IACAA,EAAME,iBACNF,EAAMuS,mBAEcnhB,EAAKoC,MAArBgf,YAGJphB,EAAK6C,SAAS,CAAEue,aAAa,KAEvBH,EAAOrS,EAAMyS,QACbH,EAAMtS,EAAM0S,QAElBthB,EAAK6C,SAAS,CACVue,aAAa,EACbH,OACAC,SAhBQ,wBAAA3Y,EAAAwB,SAAAjC,MA7CD,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAkEnBsgB,uBAAyB,SAAA1R,GACjBA,GACAA,EAAMuS,kBAGVnhB,EAAK6C,SAAS,CAAEue,aAAa,KAvEdphB,EA0EnBwhB,mBAAqB,WACjBxhB,EAAK6C,SAAS,CAAEie,QAAS9gB,EAAKoC,MAAM0e,UA3ErB9gB,EA8EnByhB,kBAAoB,WAChBzhB,EAAK6C,SAAS,CAAE+d,kBAAkB,KA/EnB5gB,EAkFnB0hB,qBAAuB,WAAM,IAAA/Q,EACK3Q,EAAK4C,MAA3BuC,EADiBwL,EACjBxL,OAAQob,EADS5P,EACT4P,UACRO,EAAW9gB,EAAKoC,MAAhB0e,OAER9gB,EAAKyhB,oBAEL/f,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnF,EACT6I,YAAa,CAACuS,GACdO,OAAQA,KAzFZ9gB,EAAKoC,MAAQ,CACTgf,aAAa,EACbH,KAAM,EACNC,IAAK,EACLN,kBAAkB,EAClBE,QAAQ,GARG9gB,wEAgGV,IAAAsb,EACsDnb,KAAKyC,MAAxDuC,EADHmW,EACGnW,OAAQD,EADXoW,EACWpW,QAASqb,EADpBjF,EACoBiF,UAAWoB,EAD/BrG,EAC+BqG,gBAAiB7W,EADhDwQ,EACgDxQ,EADhDkE,EAEwD7O,KAAKiC,MAA1Dgf,EAFHpS,EAEGoS,YAAaH,EAFhBjS,EAEgBiS,KAAMC,EAFtBlS,EAEsBkS,IAAKN,EAF3B5R,EAE2B4R,iBAAkBE,EAF7C9R,EAE6C8R,OAE5C9V,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KALhB,IAOGkB,EAAiFlB,EAAjFkB,iBAAkB0V,EAA+D5W,EAA/D4W,6BAA8BjB,EAAiC3V,EAAjC2V,6BAGxD,OACIlc,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBue,cAAe1hB,KAAK4gB,mBAChDe,aAAS9W,EAAS,kBAAM+W,aAAU5c,EAAQob,GAAW,KACtD9b,EAAArB,EAAAC,cAAC2e,GAAA5e,EAAD,CACI4N,KAAMoQ,EACNnQ,QAAS9Q,KAAKmgB,uBACd2B,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKD,QACvBkB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAhZ,GAAC,OAAIA,EAAE4X,oBACpB1c,EAAArB,EAAAC,cAACmf,GAAApf,EAAD,CAAU8B,QAAS,CAAEud,KAAMvd,EAAQwd,cAAgBhd,QAAS,SAAA6D,GAAC,OAAIA,EAAE4X,oBAC9DQ,GAAmBld,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKkgB,mBAAoBvV,EAAE,gBACjEoB,GAAoBzH,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKqgB,eAAgB1V,EAAE,aAC7D8W,GAAgCjB,IAC9Blc,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKugB,cAAe5V,EAAE,aAIrDrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM4P,EACN3P,QAAS9Q,KAAKshB,kBACdvQ,kBAAgB,uBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAhB,WACA0D,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KAEU,8CAGTud,GACGlc,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACI4f,QACIve,EAAArB,EAAAC,cAAC4f,GAAA7f,EAAD,CAAUoV,QAASsI,EAAQvI,SAAUpY,KAAKqhB,mBAAoB5V,MAAM,YAExEsX,MACI1M,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKshB,kBAAmB7V,MAAM,WAA/C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuhB,qBAAsB9V,MAAM,WAAlD,gBA/JKlI,IAAMC,YAoLpBsO,GALCC,YACZnM,IAtLW,CACX2c,aAAc,CACVS,SAAU,MAoLK,CAAE3c,WAAW,IAChCmM,cAGWV,CAAQmO,8CC3LjBgD,uBACF,SAAAA,EAAYxgB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAijB,IACfpjB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmjB,GAAA9iB,KAAAH,KAAMyC,KAqBVygB,aAAe,WACX,GAAIrjB,EAAKsjB,eAAe1W,SACF5M,EAAKsjB,eAAe1W,QAAQ6B,UAC/B,CACXzO,EAAKsjB,eAAe1W,QAAQ6B,UAAY,GAD7B,IAGH8U,EAAavjB,EAAK4C,MAAlB2gB,SACR,IAAKA,EAAU,OAGf,YADAA,EAAS,IATA,IAcTC,EAAkBxjB,EAAK4C,MAAvB4gB,cACAC,EAAezjB,EAAKoC,MAApBqhB,WAERzjB,EAAK6C,SAAS,CAAE4gB,YAAaA,IAEzBD,GACAA,KA1CWxjB,EA8CnB0jB,cAAgB,SAAA9U,GACU,KAAlBA,EAAMC,SACND,EAAME,kBAhDK9O,EAoDnB2jB,YAAc,WACV,IAAMlV,EAAYzO,EAAKsjB,eAAe1W,QAAQ6B,UACxCC,EAAY1O,EAAKsjB,eAAe1W,QAAQ8B,WAE1CA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAKsjB,eAAe1W,QAAQ8B,UAAY,IAL5B,IAQR6U,EAAavjB,EAAK4C,MAAlB2gB,SACHA,GAELA,EAAS9U,IA/DMzO,EAkEnB4jB,YAAc,SAAAhV,GACV,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAnE9C3P,EAAKsjB,eAAiB5f,IAAM+M,YAE5BzQ,EAAKoC,MAAQ,CACTqhB,YAAY,GANDzjB,kFAUAgD,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvQ,KACvCsjB,EAAetjB,KAAKiC,MAApBqhB,WAEJA,GAAcA,IAAezgB,EAAUygB,YACvClT,WAAW,WACHG,EAAK4S,eAAe1W,SACpB8D,EAAK4S,eAAe1W,QAAQ4D,SAEjCqT,sCAwDF,IAAA5e,EACqD9E,KAAKyC,MAAvDsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EAAGgZ,EADf7e,EACe6e,MAAOpe,EADtBT,EACsBS,QAASuL,EAD/BhM,EAC+BgM,QAASsS,EADxCte,EACwCse,SACrCE,EAAetjB,KAAKiC,MAApBqhB,WAER,OACIhf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACTmgB,EAUEhf,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OACItC,GAAG,yBACHuQ,IAAKnR,KAAKmjB,eACV7R,YAAa3G,EAAE,UACfyG,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvR,KAAKujB,cAChB/R,QAASxR,KAAKwjB,YACd/R,QAASzR,KAAKyjB,gBAnB1Bnf,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ6e,iBAAkBre,QAASuL,GACtDxM,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAEJqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCoC,QAASA,GACxDjB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBwgB,KAmBpDE,QAAQT,IACL9e,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ+e,mBAAoB1B,YAAapiB,KAAKkjB,cACjE5e,EAAArB,EAAAC,cAAC6gB,GAAA9gB,EAAD,CAAe4N,KAAMyS,EAAYU,KAAM1f,EAAArB,EAAAC,cAAC+gB,GAAAhhB,EAAD,MAAgBihB,SAAU5f,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,iBA5GzDM,IAAMC,YAiIvBsO,GALCC,YACZnM,IAtIW,CACXge,iBAAkB,CACdlN,OAAQ,qBAEZoN,mBAAoB,CAChBpN,OAAQ,sBAiIO,CAAErQ,WAAW,IAChCmM,cAGWV,CAAQmR,ICyURkB,uBAtcX,SAAAA,EAAY1hB,GAAO,IAAA5C,EACf,GADeC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmkB,IACXnkB,gBAAAmkB,EAAAnkB,KAAAokB,iBAAA,KAAeD,EACf,MAAM,IAAIE,UAAU,uDAFT,OAOfxkB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqkB,GAAAhkB,KAAAH,KAAMyC,KAyDV6hB,uBAAyB,SAAA9jB,GAAU,IAAAsE,EACIjF,EAAK4C,MAAhCuC,EADuBF,EACvBE,OAAQuf,EADezf,EACfyf,eADe1V,EAEEhP,EAAKoC,MAA9B6b,EAFuBjP,EAEvBiP,MAAO0G,EAFgB3V,EAEhB2V,cAEPra,EAAkD3J,EAAlD2J,QAASC,EAAyC5J,EAAzC4J,WAAyBqa,GAAgBjkB,EAA7BkkB,YAA6BlkB,EAAhBikB,aAEpC5Z,EAAUiB,KAAahF,IAAIqD,EAASC,GAG1C,GAAID,IAAYnF,EAAQ,CACpB,IAAK8Y,EAAMnX,OAAQ,OACnB,IAAKge,aAAQva,EAAY0T,EAAM,GAAGld,GAAIkd,EAAMA,EAAMnX,OAAS,GAAG/F,IAAI,GAAO,OAEzE,IAAMgkB,EAAQ9G,EAAM+G,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOwJ,IACxCvK,EAAKilB,eAAeL,IACL,IAAXG,EAEA/kB,EAAK6C,SAAS,CAAEob,MAAOiH,aAAcjH,EAAOjT,EAASma,QAGrDnlB,EAAK6C,SAAS,CAAEob,MAAK,GAAAnZ,OAAA7E,OAAAmlB,GAAA,EAAAnlB,CAAMge,EAAMoH,MAAM,EAAGN,IAArB,CAA6B/Z,GAA7B/K,OAAAmlB,GAAA,EAAAnlB,CAAyCge,EAAMoH,MAAMN,EAAQ,QAGvE,IAAXA,GAGA/kB,EAAK6C,SAAS,CAAEob,MAAOA,EAAM3O,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOwJ,WAGvD,GAAID,IAAYoa,EAAgB,CACnC,IAAKC,EAAc7d,OAAQ,OAC3B,IAAKge,aAAQva,EAAYoa,EAAc,GAAG5jB,GAAI4jB,EAAcA,EAAc7d,OAAS,GAAG/F,IAAI,GAAO,OAEjG,IAAMgkB,EAAQJ,EAAcK,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOwJ,IAChDvK,EAAKilB,eAAeL,IACL,IAAXG,EAEA/kB,EAAK6C,SAAS,CACV8hB,cAAeO,aAAcP,EAAe3Z,EAASma,QAIzDnlB,EAAK6C,SAAS,CACV8hB,cAAa,GAAA7f,OAAA7E,OAAAmlB,GAAA,EAAAnlB,CAAM0kB,EAAcU,MAAM,EAAGN,IAA7B,CAAqC/Z,GAArC/K,OAAAmlB,GAAA,EAAAnlB,CAAiD0kB,EAAcU,MAAMN,EAAQ,QAInF,IAAXA,GAGA/kB,EAAK6C,SAAS,CAAE8hB,cAAeA,EAAcrV,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOwJ,QAlH/DvK,EAwHnBslB,mBAAqB,SAAA3kB,GAAU,IAAAyK,EACQpL,EAAK4C,MAAhCuC,EADmBiG,EACnBjG,OAAQuf,EADWtZ,EACXsZ,eADW9T,EAEM5Q,EAAKoC,MAA9B6b,EAFmBrN,EAEnBqN,MAAO0G,EAFY/T,EAEZ+T,cAEP3Z,EAAYrK,EAAZqK,QACAV,EAAYU,EAAZV,QAER,GAAIA,IAAYnF,GACXnF,EAAKulB,eAAeva,GAAzB,CAEA,IAAMlL,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO,CAACkL,IAExBV,IAAYnF,EACZnF,EAAK6C,SAAS,CAAEob,MAAO,CAACjT,GAASlG,OAAOmZ,KACjC3T,IAAYoa,GACnB1kB,EAAK6C,SAAS,CAAE8hB,cAAe,CAAC3Z,GAASlG,OAAO6f,OAxIrC3kB,EA4InBylB,uBAAyB,SAAA9kB,GAAU,IAAA4L,EACIvM,EAAK4C,MAAhCuC,EADuBoH,EACvBpH,OAAQuf,EADenY,EACfmY,eADegB,EAEE1lB,EAAKoC,MAA9B6b,EAFuByH,EAEvBzH,MAAO0G,EAFgBe,EAEhBf,cAEPra,EAAyB3J,EAAzB2J,QAAS0D,EAAgBrN,EAAhBqN,YAEX3E,EAAM,IAAIlC,IAAI6G,EAAY3E,IAAI,SAAAnI,GAAC,MAAI,CAACA,EAAGA,MACvCykB,EAAW,WACT3lB,EAAKoC,MAAM6b,MAAMnX,OAAS9G,EAAKoC,MAAMuiB,cAAc7d,OAAS8e,KAC5D5lB,EAAK6lB,cAITvb,IAAYnF,EACZnF,EAAK6C,SAAS,CAAEob,MAAOA,EAAM3O,OAAO,SAAApO,GAAC,OAAKmI,EAAI/B,IAAIpG,EAAEH,OAAQ4kB,GACrDrb,IAAYoa,GACnB1kB,EAAK6C,SAAS,CAAE8hB,cAAeA,EAAcrV,OAAO,SAAApO,GAAC,OAAKmI,EAAI/B,IAAIpG,EAAEH,OAAQ4kB,IA5JjE3lB,EAgKnB0H,YAAc,WACV1H,EAAK8lB,OAAS,CACVC,SAAS,EACTC,WAAW,EACXC,kBAAkB,EAClBhI,MAAO,GACP0G,cAAe,GACfrV,OAAQtP,EAAKkmB,mBAEjBlmB,EAAK6lB,WAAW7lB,EAAK8lB,SAzKN9lB,EA4KnB6lB,WA5KmB,eAAA7E,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA4KN,SAAAC,EAAOge,GAAP,IAAAK,EAAAhhB,EAAA6gB,EAAA1W,EAAA2O,EAAAmI,EAAAzjB,EAAA0jB,EAAAC,EAAAxmB,EAAAymB,EAAAniB,UAAA,OAAAwD,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAe0d,IAAfI,EAAAzf,OAAA,QAAA0f,IAAAD,EAAA,KAAAA,EAAA,GACDphB,EAAWnF,EAAK4C,MAAhBuC,OACA6gB,EAAsCF,EAAtCE,UAAW1W,EAA2BwW,EAA3BxW,OAAQ2O,EAAmB6H,EAAnB7H,OAAmB6H,EAAZC,QAFzB,CAAAxd,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,qBAOL6b,EAPK,CAAAzd,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBASHic,EAAgBnI,EAAMnX,OAAS,EAAImX,EAAMA,EAAMnX,OAAS,GAAG/F,GAAK,EACtE+kB,EAAOC,SAAU,EAVRxd,EAAAE,KAAA,GAWY/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAO,GACPC,eAAgB,EAChBC,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO+c,IACPtW,WACDuX,QAAQ,WACPf,EAAOC,SAAU,IArBZ,QAWHpjB,EAXG4F,EAAAiB,KAwBD6c,EAAa1jB,EAAb0jB,SACRP,EAAOE,UAAgC,IAApBK,EAASvf,QAAyC,IAAzBuf,EAASS,YACrDhB,EAAO7H,MAAQA,EAAMnZ,OAAOuhB,EAAS/W,OAAOtP,EAAKulB,iBAC3Ce,EAAoBH,GAAkBE,EAASvf,OAAS,GAAKuf,EAASvf,OAAS8e,IAErF3Z,KAAa8a,SAASpkB,EAAO0jB,UACvBvmB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAElCrmB,EAAK6C,SAAS,CAAEob,MAAO6H,EAAO7H,QAE1B6H,EAAOE,UACPhmB,EAAKgnB,mBAAmBlB,GAAQ,GACzBQ,GACPtmB,EAAK6lB,WAAWC,GAAQ,GAtCnB,yBAAAvd,EAAAwB,SAAAjC,MA5KM,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAsNnBgnB,mBAtNmB,eAAA9e,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAsNE,SAAAmC,EAAO8b,GAAP,IAAAK,EAAAzB,EAAApV,EAAAyW,EAAAE,EAAAhI,EAAAmI,EAAAzjB,EAAA0jB,EAAAC,EAAAxmB,EAAAmnB,EAAA7iB,UAAA,OAAAwD,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAAe0d,IAAfc,EAAAngB,OAAA,QAAA0f,IAAAS,EAAA,KAAAA,EAAA,GACTvC,EAAmB1kB,EAAK4C,MAAxB8hB,eACApV,EAA4DwW,EAA5DxW,OAAQyW,EAAoDD,EAApDC,QAASE,EAA2CH,EAA3CG,iBAAiChI,EAAU6H,EAAzBnB,cAItCD,EANY,CAAAxa,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAOb4b,EAPa,CAAA7b,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAQb8b,EARa,CAAA/b,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,wBAUXic,EAAgBnI,EAAMnX,OAAS,EAAImX,EAAMA,EAAMnX,OAAS,GAAG/F,GAAK,EACtE+kB,EAAOC,SAAU,EAXA7b,EAAAzB,KAAA,GAYI/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASoa,EACT+B,MAAO,GACPC,eAAgB,EAChBC,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO+c,IACPtW,WACDuX,QAAQ,WACPf,EAAOC,SAAU,IAtBJ,WAYXpjB,EAZWuH,EAAAV,KAyBT6c,EAAa1jB,EAAb0jB,SACRP,EAAOnB,cAAgB1G,EAAMnZ,OAAOuhB,EAAS/W,OAAOtP,EAAKulB,iBACzDO,EAAOG,iBAAuC,IAApBI,EAASvf,QAAyC,IAAzBuf,EAASS,YACtDR,EAAoBH,GAAkBE,EAASvf,OAAS,GAAKuf,EAASvf,OAAS8e,KAEjFE,EAAOG,iBA9BM,CAAA/b,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,kBAgCjB8B,KAAa8a,SAASV,GAChBvmB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAOumB,GAE3BrmB,EAAK6C,SAAS,CAAE8hB,cAAemB,EAAOnB,gBAElC2B,GACAtmB,EAAKgnB,mBAAmBlB,GAAQ,GAvCnB,yBAAA5b,EAAAH,SAAAC,MAtNF,gBAAAkd,GAAA,OAAAhf,EAAA/D,MAAAhE,KAAAiE,YAAA,GAAApE,EAiQnBmnB,aAAe,WACX,GAAKnnB,EAAKonB,QAAV,CAEA,IAAMpL,EAAOhc,EAAKonB,QAAQxa,QAC1B,GAAKoP,EAAL,CAJiB,IAMT8J,EANS7lB,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IAMT8lB,OAEJ9J,EAAKZ,UAAYY,EAAKE,cAAgBF,EAAKC,eACvC6J,IAAWA,EAAOE,UAClBhmB,EAAK6lB,WAAWC,GAEhB9lB,EAAKgnB,mBAAmBlB,OA7QjB9lB,EAkRnBkb,kBAAoB,WAChB,IAAMc,EAAOhc,EAAKonB,QAAQxa,QACrBoP,IAELA,EAAKZ,UAAY,IAtRFpb,EAyRnBsnB,mBAAqB,WACjB,GAAKtnB,EAAKunB,cAAV,CAEA,IAAMvL,EAAOhc,EAAKunB,cAAc3a,QAChC,GAAKoP,EAAL,CAJuB,IAMfwL,EANevnB,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IAMfwnB,aACHA,GAEDxL,EAAKZ,UAAYY,EAAKE,cAAgBF,EAAKC,eACtCuL,EAAaxB,UAGdhmB,EAAKynB,qBAAqBD,GAF1BxnB,EAAK0nB,aAAaF,OApSXxnB,EA2SnB0nB,aA3SmB,eAAAvf,EAAAlI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA2SJ,SAAA8f,EAAO7B,GAAP,IAAAK,EAAAhhB,EAAA6gB,EAAA1W,EAAA2O,EAAA8H,EAAAU,EAAAL,EAAAzjB,EAAA0jB,EAAAC,EAAAxmB,EAAA8nB,EAAAxjB,UAAA,OAAAwD,EAAAxE,EAAAkF,KAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,UAAe0d,IAAfyB,EAAA9gB,OAAA,QAAA0f,IAAAoB,EAAA,KAAAA,EAAA,GACHziB,EAAWnF,EAAK4C,MAAhBuC,OACA6gB,EAA6CF,EAA7CE,UAAW1W,EAAkCwW,EAAlCxW,OAAQ2O,EAA0B6H,EAA1B7H,MAAO8H,EAAmBD,EAAnBC,QAASU,EAAUX,EAAVW,OAIvCT,EANO,CAAA6B,EAAApf,KAAA,eAAAof,EAAA1d,OAAA,qBAOP4b,EAPO,CAAA8B,EAAApf,KAAA,eAAAof,EAAA1d,OAAA,wBASLic,EAAgBnI,EAAMnX,OAAS,EAAImX,EAAMA,EAAMnX,OAAS,GAAG/F,GAAK,EACtE+kB,EAAOC,SAAU,EAVN8B,EAAApf,KAAA,GAWU/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASnF,EACTshB,QACAC,eAAgB,EAChBC,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO+c,IACPtW,WACDuX,QAAQ,WACPf,EAAOC,SAAU,IArBV,WAWLpjB,EAXKklB,EAAAre,KAwBH6c,EAAa1jB,EAAb0jB,SACRP,EAAO7H,MAAQA,EAAMnZ,OAAOuhB,EAAS/W,OAAOtP,EAAKulB,iBACjDO,EAAOE,UAAgC,IAApBK,EAASvf,QAAyC,IAAzBuf,EAASS,YAC/CR,EAAoBH,GAAkBE,EAASvf,OAAS,GAAKuf,EAASvf,OAAS8e,IAEjF5lB,EAAKwnB,eAAiB1B,EA7Bf,CAAA+B,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,kBA+BX8B,KAAa8a,SAASV,GAChBvmB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAOumB,GAE3BrmB,EAAK6C,SAAS,CAAEilB,YAAahC,EAAO7H,MAAO8J,oBAAqBjC,EAAOnB,gBAEnEmB,EAAOE,UACPhmB,EAAKynB,qBAAqB3B,GAAQ,GAC3BQ,GACPtmB,EAAK0nB,aAAa5B,GAAQ,GAxCnB,yBAAA+B,EAAA9d,SAAA4d,MA3SI,gBAAAK,GAAA,OAAA7f,EAAAhE,MAAAhE,KAAAiE,YAAA,GAAApE,EAuVnBynB,qBAvVmB,eAAAQ,EAAAhoB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAuVI,SAAAqgB,EAAOpC,GAAP,IAAAK,EAAAzB,EAAApV,EAAAyW,EAAA9H,EAAAgI,EAAAQ,EAAAL,EAAAzjB,EAAA0jB,EAAAC,EAAAxmB,EAAAqoB,EAAA/jB,UAAA,OAAAwD,EAAAxE,EAAAkF,KAAA,SAAA8f,GAAA,cAAAA,EAAA5f,KAAA4f,EAAA3f,MAAA,UAAe0d,IAAfgC,EAAArhB,OAAA,QAAA0f,IAAA2B,EAAA,KAAAA,EAAA,GACXzD,EAAmB1kB,EAAK4C,MAAxB8hB,eACApV,EAAmEwW,EAAnExW,OAAQyW,EAA2DD,EAA3DC,QAAwB9H,EAAmC6H,EAAlDnB,cAAsBsB,EAA4BH,EAA5BG,iBAAkBQ,EAAUX,EAAVW,MAI5D/B,EANc,CAAA0D,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,qBAOf4b,EAPe,CAAAqC,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,qBAQf8b,EARe,CAAAmC,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,wBAUbic,EAAgBnI,EAAMnX,OAAS,EAAImX,EAAMA,EAAMnX,OAAS,GAAG/F,GAAK,EACtE+kB,EAAOC,SAAU,EAXEqC,EAAA3f,KAAA,GAYE/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASoa,EACT+B,QACAC,eAAgB,EAChBC,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO+c,IACPtW,WACDuX,QAAQ,WACPf,EAAOC,SAAU,IAtBF,WAYbpjB,EAZaylB,EAAA5e,KAyBX6c,EAAa1jB,EAAb0jB,SACRP,EAAOnB,cAAgB1G,EAAMnZ,OAAOuhB,EAAS/W,OAAOtP,EAAKulB,iBACzDO,EAAOG,iBAAuC,IAApBI,EAASvf,QAAyC,IAAzBuf,EAASS,YACtDR,EAAoBH,GAAkBE,EAASvf,OAAS,GAAKuf,EAASvf,OAAS8e,IAEjF5lB,EAAKwnB,eAAiB1B,EA9BP,CAAAsC,EAAA3f,KAAA,gBAAA2f,EAAAje,OAAA,kBAgCnB8B,KAAa8a,SAASV,GAChBvmB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAOumB,GAE3BrmB,EAAK6C,SAAS,CAAEilB,YAAahC,EAAO7H,MAAO8J,oBAAqBjC,EAAOnB,gBAEnE2B,GACAtmB,EAAKynB,qBAAqB3B,GAAQ,GAvCnB,yBAAAsC,EAAAre,SAAAme,MAvVJ,gBAAAG,GAAA,OAAAJ,EAAA9jB,MAAAhE,KAAAiE,YAAA,GAAApE,EAkYnBqjB,aAlYmB,eAAAiF,EAAAroB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAkYJ,SAAA0gB,EAAM9b,GAAN,IAAAga,EAAA,OAAA7e,EAAAxE,EAAAkF,KAAA,SAAAkgB,GAAA,cAAAA,EAAAhgB,KAAAggB,EAAA/f,MAAA,UACLge,EAAQha,EAAOA,EAAKyC,OAAS,GADxB,CAAAsZ,EAAA/f,KAAA,eAGPzI,EAAKyoB,oBAHED,EAAAre,OAAA,iBAOXnK,EAAKwnB,aAAe,CAChBf,QACAT,WAAW,EACXC,kBAAkB,EAClBhI,MAAO,GACP0G,cAAe,GACfrV,OAAQtP,EAAKkmB,mBAEjBlmB,EAAK0nB,aAAa1nB,EAAKwnB,cAAc,GAf1B,wBAAAgB,EAAAze,SAAAwe,MAlYI,gBAAAG,GAAA,OAAAJ,EAAAnkB,MAAAhE,KAAAiE,YAAA,GAAApE,EAoZnByoB,kBAAoB,WAChBzoB,EAAKwnB,aAAe,KACpBxnB,EAAK6C,SAAS,CAAEilB,YAAa,GAAIC,oBAAqB,MAtZvC/nB,EAyZnBulB,eAAiB,SAAAva,GACb,QAAKA,GAEEhL,EAAKilB,eAAeja,EAAQmB,UAnZnCnM,EAAKonB,QAAU1jB,IAAM+M,YACrBzQ,EAAKunB,cAAgB7jB,IAAM+M,YAE3BzQ,EAAKoC,MAAQ,CACT6b,MAAO,GACP0G,cAAe,GACfmD,YAAa,GACbC,oBAAqB,IAhBV/nB,8EAXFgG,GACb,MAAO,CACH2iB,gBAAiB,GAGjBC,sBAAuB,CACnBtiB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,iEA0BvF,OAAO,yCAGI1c,GACX,MAAM,IAAI2c,MAAM,4FAGJ9d,GAAS,IACb0Z,EAAmBvkB,KAAKyC,MAAxB8hB,eACApa,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,OACI0D,EAAArB,EAAAC,cAAC0lB,GAAD,CACIxkB,IAAG,WAAAO,OAAawF,EAAb,gBAAAxF,OAAmC/D,GACtCoE,OAAQmF,EACRiW,UAAWxf,EACX4gB,gBAAiBrX,IAAYoa,8CAMrC,MAAM,IAAIoE,MAAM,yFAIhB,MAAM,IAAIA,MAAM,2FAIhB3oB,KAAKuH,cAELuE,KAAauH,GAAG,uBAAwBrT,KAAKslB,wBAC7CxZ,KAAauH,GAAG,uBAAwBrT,KAAKskB,wBAC7CxY,KAAauH,GAAG,mBAAoBrT,KAAKmlB,mEAIzCrZ,KAAapK,eAAe,uBAAwB1B,KAAKslB,wBACzDxZ,KAAapK,eAAe,uBAAwB1B,KAAKskB,wBACzDxY,KAAapK,eAAe,mBAAoB1B,KAAKmlB,qDAkWhD,IAAA5U,EAAAvQ,KAAAwQ,EAC0CxQ,KAAKyC,MAA5CsC,EADHyL,EACGzL,QAASgb,EADZvP,EACYuP,UAAWjP,EADvBN,EACuBM,QAASqJ,EADhC3J,EACgC2J,MADhC0O,EAE8D7oB,KAAKiC,MAAhE6b,EAFH+K,EAEG/K,MAAO0G,EAFVqE,EAEUrE,cAAemD,EAFzBkB,EAEyBlB,YAAaC,EAFtCiB,EAEsCjB,oBACnCP,EAAiBrnB,KAAjBqnB,aAEFnB,EAAWpI,EAAMnZ,OAAO6f,GAAetb,IAAI,SAAAnI,GAAC,OAAIwP,EAAKuY,gBAAgB/nB,KACrEgoB,EAAiBpB,EAAYhjB,OAAOijB,GAAqB1e,IAAI,SAAAnI,GAAC,OAAIwP,EAAKuY,gBAAgB/nB,KAE7F,OACIuD,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC8lB,GAAD,CACIrF,MAAO3jB,KAAKipB,YACZ1jB,QAASvF,KAAK+a,kBACdjK,QAASA,EACTsS,SAAUpjB,KAAKkpB,YAAclpB,KAAKkjB,aAAe,KACjDG,cAAerjB,KAAKsoB,oBAExBhkB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKinB,QACV9jB,UAAWkC,IAAW,oBAAqBN,EAAQyjB,iBACnDW,SAAUnpB,KAAKgnB,aACfzI,MAAO,CAAEwB,UAAW5F,EAAQ4F,EAAY,OACvCmG,GAEJrC,QAAQwD,IACL/iB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKonB,cACVjkB,UAAWkC,IAAW,2BAA4BN,EAAQ0jB,uBAC1DU,SAAUnpB,KAAKmnB,oBACd4B,WAxcKxlB,IAAMC,YCN9B4lB,kMACapd,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,iEAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,qBAZUwZ,KAgB3BiF,GAAaC,UAAY,CACrBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBH,GAAalT,aAAe,CACxBiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAAWue,GAAgBwF,WAC3BnX,cAGWV,CAAQsX,IClCjBQ,kMACa5d,GACX,OAAOA,GAAgC,oBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,oEAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,yBAZawZ,KAgB9ByF,GAAgBP,UAAY,CACxBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBK,GAAgB1T,aAAe,CAC3BiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAAWue,GAAgBwF,WAC3BnX,cAGWV,CAAQ8X,IClCjBC,kMACa7d,GACX,OAAOA,GAAgC,gBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,+DAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,qBAZSwZ,KAgB1B0F,GAAYR,UAAY,CACpBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBM,GAAY3T,aAAe,CACvBiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAAWue,GAAgBwF,WAC3BnX,cAGWV,CAAQ+X,8CC9BjBC,uBACF,SAAAA,EAAYrnB,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA8pB,GAAAhqB,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAgqB,GAAA3pB,KAAAH,KACVyC,0EAGD,IAAAqC,EACsB9E,KAAKyC,MAAxBsC,EADHD,EACGC,QAAS2G,EADZ5G,EACY4G,MAEjB,OACIpH,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQ2a,eAAgBna,QAASmG,GACpDpH,EAAArB,EAAAC,cAACsT,GAAAvT,EAAD,OAEJqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAhB,yBAdmBI,IAAMC,YAqB9BoC,OA3BA,CACX8Z,eAAgB,CACZhJ,OAAQ,sBAyBD9Q,CAAmBkkB,ICzB5BC,sNACF9nB,MAAQ,CACJoC,MAAO,KAGX2lB,aAAe,SAACvb,EAAOpK,GACnBxE,EAAK6C,SAAS,CAAE2B,mFAGX,IAAAS,EACsB9E,KAAKyC,MAAxBqO,EADHhM,EACGgM,QAASqJ,EADZrV,EACYqV,MACT9V,EAAUrE,KAAKiC,MAAfoC,MAEF2H,EACF1H,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC+mB,GAAD,CAA0Bve,MAAOoF,IACjCxM,EAAArB,EAAAC,cAACgnB,GAAAjnB,EAAD,CACIoB,MAAOA,EACP+T,SAAUpY,KAAKgqB,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACTjmB,EAAArB,EAAAC,cAACsnB,GAAAvnB,EAAD,CAAK8f,MAAM,QAAQxE,MAAO,CAAEyE,SAAU,UACtC1e,EAAArB,EAAAC,cAACsnB,GAAAvnB,EAAD,CAAK8f,MAAM,OAAOxE,MAAO,CAAEyE,SAAU,UACrC1e,EAAArB,EAAAC,cAACsnB,GAAAvnB,EAAD,CAAK8f,MAAM,QAAQxE,MAAO,CAAEyE,SAAU,UACtC1e,EAAArB,EAAAC,cAACsnB,GAAAvnB,EAAD,CAAK8f,MAAM,QAAQxE,MAAO,CAAEyE,SAAU,YAKlD,OAAO7I,EAAQ7V,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAAc1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB6I,UAhC7CzI,IAAMC,YA2ChCumB,GAAY7T,aAAe,CACvBiE,OAAO,EACP4F,UAAW,GAGAgK,mBCtBTU,uBACF,SAAAA,EAAYhoB,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyqB,IACf5qB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2qB,GAAAtqB,KAAAH,KAAMyC,KAwBVioB,wBAA0B,SAAAlqB,GAAU,IAAAqO,EACChP,EAAKoC,MAA9BoK,EADwBwC,EACxBxC,UAAWse,EADa9b,EACb8b,UACXC,EAAWpqB,EAAXoqB,OAEJve,GAAaA,EAAUJ,OAASI,EAAUJ,MAAMrL,KAAOgqB,EACvD/qB,EAAKuO,cACEuc,GAAaA,EAAU1e,OAAS0e,EAAU1e,MAAMrL,KAAOgqB,GAC9D/qB,EAAKuO,eAhCMvO,EAoCnBqgB,kBAAoB,SAAAzR,GAChB5O,EAAKsgB,uBAAuB1R,GADH,IAAA3J,EAGKjF,EAAK4C,MAA3BuC,EAHiBF,EAGjBE,OAAQob,EAHStb,EAGTsb,UAEhB7E,aAASvW,EAAQob,IAzCFvgB,EA4CnBwgB,cAAgB,SAAA5R,GACZ5O,EAAKsgB,uBAAuB1R,GADP,IAAAxD,EAGSpL,EAAK4C,MAA3BuC,EAHaiG,EAGbjG,OAAQob,EAHKnV,EAGLmV,UAEhBE,aAAgBtb,EAAQ,CAACob,KAjDVvgB,EAoDnB0gB,aAAe,SAAA9R,GACX5O,EAAKsgB,uBAAuB1R,GADR,IAAArC,EAGUvM,EAAK4C,MAA3BuC,EAHYoH,EAGZpH,OAAQob,EAHIhU,EAGJgU,UAEVvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAND,IAQZ2V,EAAiC3V,EAAjC2V,6BAER3gB,EAAK6C,SAAS,CACV+d,kBAAkB,EAClBC,wBAAyBF,EACzBG,OAAQH,KAjEG3gB,EAqEnB+gB,kBArEmB,eAAAC,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqEC,SAAAC,EAAM8G,GAAN,IAAAqS,EAAAC,EAAA,OAAAtZ,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZmG,IACAA,EAAME,iBACNF,EAAMuS,mBAEcnhB,EAAKoC,MAArBgf,YAGJphB,EAAK6C,SAAS,CAAEue,aAAa,KAEvBH,EAAOrS,EAAMyS,QACbH,EAAMtS,EAAM0S,QAElBthB,EAAK6C,SAAS,CACVue,aAAa,EACbH,OACAC,SAhBQ,wBAAA3Y,EAAAwB,SAAAjC,MArED,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EA0FnBsgB,uBAAyB,SAAA1R,GACjBA,GACAA,EAAMuS,kBAGVnhB,EAAK6C,SAAS,CAAEue,aAAa,KA/FdphB,EAkGnBwhB,mBAAqB,WACjBxhB,EAAK6C,SAAS,CAAEie,QAAS9gB,EAAKoC,MAAM0e,UAnGrB9gB,EAsGnByhB,kBAAoB,WAChBzhB,EAAK6C,SAAS,CAAE+d,kBAAkB,KAvGnB5gB,EA0GnB0hB,qBAAuB,WAAM,IAAA/Q,EACK3Q,EAAK4C,MAA3BuC,EADiBwL,EACjBxL,OAAQob,EADS5P,EACT4P,UACRO,EAAW9gB,EAAKoC,MAAhB0e,OAER9gB,EAAKyhB,oBAEL/f,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnF,EACT6I,YAAa,CAACuS,GACdO,OAAQA,KApHG,IAGP1U,EAA+BxJ,EAA/BwJ,MAAOoB,EAAwB5K,EAAxB4K,KAAMwd,EAAkBpoB,EAAlBooB,cAHN,OAKfhrB,EAAKoC,MAAQ,CACTgf,aAAa,EACbH,KAAM,EACNC,IAAK,EACLN,kBAAkB,EAClBE,QAAQ,EAERtU,UAAWye,aAAQ7e,EAAMC,MAAOmB,GAChCsd,UAAWG,aAAQ7e,EAAMC,MAAO2e,IAbrBhrB,mFAkBf4J,KAAU4J,GAAG,wBAAyBrT,KAAK0qB,wEAI3CjhB,KAAU/H,eAAe,wBAAyB1B,KAAK0qB,0DAkGlD,IAAAvP,EACwEnb,KAAKyC,MAA1EuC,EADHmW,EACGnW,OAAQob,EADXjF,EACWiF,UAAWrb,EADtBoW,EACsBpW,QAAS6c,EAD/BzG,EAC+ByG,UAAWrD,EAD1CpD,EAC0CoD,MAAOiD,EADjDrG,EACiDqG,gBAAiB7W,EADlEwQ,EACkExQ,EADlE8F,EAE8EzQ,KAAKiC,MAAhF0oB,EAFHla,EAEGka,UAAWte,EAFdoE,EAEcpE,UAAW4U,EAFzBxQ,EAEyBwQ,YAAaH,EAFtCrQ,EAEsCqQ,KAAMC,EAF5CtQ,EAE4CsQ,IAAKN,EAFjDhQ,EAEiDgQ,iBAAkBE,EAFnElQ,EAEmEkQ,OAElE9V,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KALhB,IAOGkB,EAAiFlB,EAAjFkB,iBAAkB0V,EAA+D5W,EAA/D4W,6BAA8BjB,EAAiC3V,EAAjC2V,6BAGxD,IAAKnU,EAAW,OAAO,KAEvB,IAAM0e,EAAMC,YAAO3e,EAAUJ,OACvBgf,EAAWD,YAAOL,EAAYA,EAAU1e,MAAQ,MACpCif,aAAmBP,GAErC,OACIrmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eAAeob,MAAOA,EAAOhZ,QAASqc,EAAWF,cAAe1hB,KAAK4gB,mBAChFtc,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,uBAAwBN,EAAQomB,oBAAqB5M,MAAO,CAAC6M,gBAAe,OAAAzmB,OAASomB,GAAOE,EAAhB,QACvG3mB,EAAArB,EAAAC,cAAC2e,GAAA5e,EAAD,CACI4N,KAAMoQ,EACNnQ,QAAS9Q,KAAKmgB,uBACd2B,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKD,QACvBkB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAhZ,GAAC,OAAIA,EAAE4X,mBACpBzb,QAAS,SAAA6D,GAAC,OAAIA,EAAE4X,oBAChB1c,EAAArB,EAAAC,cAACmf,GAAApf,EAAD,CAAU8B,QAAS,CAAEud,KAAMvd,EAAQwd,eAC9Bf,GAAmBld,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKkgB,mBAAoBvV,EAAE,gBACjEoB,GAAoBzH,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKqgB,eAAgB1V,EAAE,aAC7D8W,GAAgCjB,IAC9Blc,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKugB,cAAe5V,EAAE,aAIrDrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM4P,EACN3P,QAAS9Q,KAAKshB,kBACdvQ,kBAAgB,sBAChBxL,QAAS,SAAA6D,GAAC,OAAIA,EAAE4X,oBAChB1c,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAhB,WACA0D,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KAEU,8CAGTud,GACGlc,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACI4f,QACIve,EAAArB,EAAAC,cAAC4f,GAAA7f,EAAD,CAAUoV,QAASsI,EAAQvI,SAAUpY,KAAKqhB,mBAAoB5V,MAAM,YAExEsX,MACI1M,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKshB,kBAAmB7V,MAAM,WAA/C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuhB,qBAAsB9V,MAAM,WAAlD,gBA/LElI,IAAMC,YAqNhCinB,GAAYvU,aAAe,CACvB7I,KAAMge,IACNR,cAAeS,KAGnB,IAKexZ,GALCC,YACZnM,IAjOW,SAAAC,GAAK,MAAK,CACrBslB,mBAAoB,CAChBI,gBAAwC,SAAvB1lB,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWC,MAAQP,EAAME,QAAQI,WAAWuiB,WA+N5F,CAAEriB,WAAW,IAChCmM,cAGWV,CAAQ2Y,ICnOjBe,kMACaxf,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,iEAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,uDAGGE,GAAS,IACb0Z,EAAmBvkB,KAAKyC,MAAxB8hB,eACApa,EAAyBU,EAAzBV,QAAS6B,EAAgBnB,EAAhBmB,QAASpL,EAAOiK,EAAPjK,GAE1B,OACI0D,EAAArB,EAAAC,cAACuoB,GAAD,CACIrnB,IAAG,WAAAO,OAAawF,EAAb,gBAAAxF,OAAmC/D,GACtCoE,OAAQmF,EACRiW,UAAWxf,EACXqL,MAAOD,EAAQC,MACf2V,UAAW,kBAAMA,aAAUzX,EAASvJ,GAAI,IACxC4gB,gBAAiBrX,IAAYoa,WA1BlBJ,KA+B3BqH,GAAanC,UAAY,CACrBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBiC,GAAatV,aAAe,CACxBiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAjEW,SAAAC,GAAK,MAAK,CACrB2iB,gBAAiB,CACbvW,QAAS,iBACTI,QAAS,OACTqZ,SAAU,OACVC,eAAgB,aAChBC,WAAY,aACZC,aAAc,cAElBpD,sBAAuB,CACnBtiB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,UAC/EzW,QAAS,iBACTI,QAAS,OACTqZ,SAAU,OACVC,eAAgB,aAChBC,WAAY,aACZC,aAAc,iBAkDlBrZ,cAGWV,CAAQ0Z,IC7CjBM,uBACF,SAAAA,EAAYrpB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA8rB,IACfjsB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAgsB,GAAA3rB,KAAAH,KAAMyC,KAmBVspB,iCAAmC,SAAAvrB,GAAU,IACjCgN,EAAc3N,EAAK4C,MAAMupB,MAAzBxe,UACAod,EAAWpqB,EAAXoqB,OAEHpd,GAEDA,EAAUvB,OAASuB,EAAUvB,MAAMrL,KAAOgqB,GAC1C/qB,EAAKuO,eA3BMvO,EA+BnBqgB,kBAAoB,SAAAzR,GAChB5O,EAAKsgB,uBAAuB1R,GADH,IAAA3J,EAGKjF,EAAK4C,MAA3BuC,EAHiBF,EAGjBE,OAAQob,EAHStb,EAGTsb,UAEhB7E,aAASvW,EAAQob,IApCFvgB,EAuCnBwgB,cAAgB,SAAA5R,GACZ5O,EAAKsgB,uBAAuB1R,GADP,IAAAxD,EAGSpL,EAAK4C,MAA3BuC,EAHaiG,EAGbjG,OAAQob,EAHKnV,EAGLmV,UAEhBE,aAAgBtb,EAAQ,CAACob,KA5CVvgB,EA+CnB0gB,aAAe,SAAA9R,GACX5O,EAAKsgB,uBAAuB1R,GADR,IAAArC,EAGUvM,EAAK4C,MAA3BuC,EAHYoH,EAGZpH,OAAQob,EAHIhU,EAGJgU,UAEVvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAND,IAQZ2V,EAAiC3V,EAAjC2V,6BAER3gB,EAAK6C,SAAS,CACV+d,kBAAkB,EAClBC,wBAAyBF,EACzBG,OAAQH,KA5DG3gB,EAgEnB+gB,kBAhEmB,eAAAC,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAgEC,SAAAC,EAAM8G,GAAN,IAAAqS,EAAAC,EAAA,OAAAtZ,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZmG,IACAA,EAAME,iBACNF,EAAMuS,mBAEcnhB,EAAKoC,MAArBgf,YAGJphB,EAAK6C,SAAS,CAAEue,aAAa,KAEvBH,EAAOrS,EAAMyS,QACbH,EAAMtS,EAAM0S,QAElBthB,EAAK6C,SAAS,CACVue,aAAa,EACbH,OACAC,SAhBQ,wBAAA3Y,EAAAwB,SAAAjC,MAhED,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAqFnBsgB,uBAAyB,SAAA1R,GACjBA,GACAA,EAAMuS,kBAGVnhB,EAAK6C,SAAS,CAAEue,aAAa,KA1FdphB,EA6FnBwhB,mBAAqB,WACjBxhB,EAAK6C,SAAS,CAAEie,QAAS9gB,EAAKoC,MAAM0e,UA9FrB9gB,EAiGnByhB,kBAAoB,WAChBzhB,EAAK6C,SAAS,CAAE+d,kBAAkB,KAlGnB5gB,EAqGnB0hB,qBAAuB,WAAM,IAAA/Q,EACK3Q,EAAK4C,MAA3BuC,EADiBwL,EACjBxL,OAAQob,EADS5P,EACT4P,UACRO,EAAW9gB,EAAKoC,MAAhB0e,OAER9gB,EAAKyhB,oBAEL/f,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnF,EACT6I,YAAa,CAACuS,GACdO,OAAQA,KA5GZ9gB,EAAKoC,MAAQ,CACTgf,aAAa,EACbH,KAAM,EACNC,IAAK,EACLN,kBAAkB,EAClBE,QAAQ,GARG9gB,mFAaf4J,KAAU4J,GAAG,iCAAkCrT,KAAK+rB,iFAIpDtiB,KAAU/H,eAAe,iCAAkC1B,KAAK+rB,mEAkG3D,IAAA5Q,EACwEnb,KAAKyC,MAA1EuC,EADHmW,EACGnW,OAAQob,EADXjF,EACWiF,UAAWrb,EADtBoW,EACsBpW,QAAS6c,EAD/BzG,EAC+ByG,UAAWrD,EAD1CpD,EAC0CoD,MAAOiD,EADjDrG,EACiDqG,gBAAiB7W,EADlEwQ,EACkExQ,EADlEshB,EAEiDjsB,KAAKyC,MAAMupB,MAAzDxe,EAFHye,EAEGze,UAAiC0e,GAFpCD,EAEcD,MAFdC,EAEqB3e,MAFrB2e,EAE4B1e,OAF5B0e,EAEoCC,UAFpCrd,EAGwD7O,KAAKiC,MAA1Dgf,EAHHpS,EAGGoS,YAAaH,EAHhBjS,EAGgBiS,KAAMC,EAHtBlS,EAGsBkS,IAAKN,EAH3B5R,EAG2B4R,iBAAkBE,EAH7C9R,EAG6C8R,OAE5C9V,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KANhB,IAQGkB,EAAiFlB,EAAjFkB,iBAAkB0V,EAA+D5W,EAA/D4W,6BAA8BjB,EAAiC3V,EAAjC2V,6BAGlDyK,EAAWD,YAAOxd,EAAYA,EAAUvB,MAAQ,MAChDkgB,EAAYjB,aAAmB1d,EAAW4e,KAEhD,OACI9nB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eAAeob,MAAOA,EAAOhZ,QAASqc,GACjDtd,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,uBAAwB,CAAEgnB,gBAAiBF,IAAc5N,MAAO,CAAC6M,gBAAe,OAAAzmB,OAASsmB,EAAT,QAC3G3mB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qBAAqBmpB,aAAkBJ,KAE1D5nB,EAAArB,EAAAC,cAAC2e,GAAA5e,EAAD,CACI4N,KAAMoQ,EACNnQ,QAAS9Q,KAAKmgB,uBACd2B,gBAAgB,iBAChBC,eAAgB,CAAEhB,MAAKD,QACvBkB,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBE,YAAa,SAAAhZ,GAAC,OAAIA,EAAE4X,mBACpBzb,QAAS,SAAA6D,GAAC,OAAIA,EAAE4X,oBAChB1c,EAAArB,EAAAC,cAACmf,GAAApf,EAAD,CAAU8B,QAAS,CAAEud,KAAMvd,EAAQwd,eAC9Bf,GAAmBld,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKkgB,mBAAoBvV,EAAE,gBACjEoB,GAAoBzH,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKqgB,eAAgB1V,EAAE,aAC7D8W,GAAgCjB,IAC9Blc,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKugB,cAAe5V,EAAE,aAIrDrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM4P,EACN3P,QAAS9Q,KAAKshB,kBACdvQ,kBAAgB,sBAChBxL,QAAS,SAAA6D,GAAC,OAAIA,EAAE4X,oBAChB1c,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAhB,WACA0D,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KAEU,8CAGTud,GACGlc,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACI4f,QACIve,EAAArB,EAAAC,cAAC4f,GAAA7f,EAAD,CAAUoV,QAASsI,EAAQvI,SAAUpY,KAAKqhB,mBAAoB5V,MAAM,YAExEsX,MACI1M,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKshB,kBAAmB7V,MAAM,WAA/C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuhB,qBAAsB9V,MAAM,WAAlD,gBA3LElI,IAAMC,YAiNhCsoB,GAAY5V,aAAe,CACvB7I,KAAMge,IACNR,cAAeS,KAGnB,IAKexZ,GALCC,YACZnM,IA7NW,SAAAC,GAAK,MAAK,CACrBslB,mBAAoB,KA4ND,CAAE9kB,WAAW,IAChCmM,cAGWV,CAAQga,IC/NjBS,kMACavgB,GACX,OAAOA,GAAgC,iBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,iEAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,uDAGGE,GAAS,IACb0Z,EAAmBvkB,KAAKyC,MAAxB8hB,eACApa,EAAyBU,EAAzBV,QAAS6B,EAAgBnB,EAAhBmB,QAASpL,EAAOiK,EAAPjK,GAE1B,OACI0D,EAAArB,EAAAC,cAACspB,GAAD,CACIpoB,IAAG,WAAAO,OAAawF,EAAb,gBAAAxF,OAAmC/D,GACtCoE,OAAQmF,EACRiW,UAAWxf,EACXorB,MAAOhgB,EAAQggB,MACfpK,UAAW,kBAAMA,aAAUzX,EAASvJ,GAAI,IACxC4gB,gBAAiBrX,IAAYoa,WA1BlBJ,KA+B3BoI,GAAalD,UAAY,CACrBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBgD,GAAarW,aAAe,CACxBiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAjEW,SAAAC,GAAK,MAAK,CACrB2iB,gBAAiB,CACbvW,QAAS,iBACTI,QAAS,OACTqZ,SAAU,OACVC,eAAgB,aAChBC,WAAY,aACZC,aAAc,cAElBpD,sBAAuB,CACnBtiB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,UAC/EzW,QAAS,iBACTI,QAAS,OACTqZ,SAAU,OACVC,eAAgB,aAChBC,WAAY,aACZC,aAAc,iBAkDlBrZ,cAGWV,CAAQya,ICvEjBE,kMACazgB,GACX,OAAOA,GAAgC,qBAArBA,EAAQ,mDAI1B,MAAO,CAAE1J,QAAS,qEAMlB,OAAOqI,EAFO3K,KAAKyC,MAAXkI,GAEC,kDAIT,OAAO,SAhBgBwZ,KAoB/BsI,GAAiBpD,UAAY,CACzBrkB,OAAQskB,KAAUC,OAAOC,WACzBjF,eAAgB+E,KAAUC,OAC1BzY,QAASwY,KAAUG,KAAKD,WACxBrP,MAAOmP,KAAUI,KACjB3J,UAAWuJ,KAAUC,QAGzBkD,GAAiBvW,aAAe,CAC5BiE,OAAO,EACP4F,UAAW,GAGf,IAKejO,GALCC,YACZnM,IAAWue,GAAgBwF,WAC3BnX,cAGWV,CAAQ2a,IClBjBC,uBACF,SAAAA,EAAYjqB,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0sB,IACf7sB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4sB,GAAAvsB,KAAAH,KAAMyC,KA4CVkqB,qBAAuB,SAAAnsB,GAAU,IACrB2Z,EAAUta,EAAK4C,MAAf0X,MACAnV,EAAWnF,EAAKoC,MAAhB+C,OAEJmV,GACAnV,IAAWxE,EAAOosB,aAEtB/sB,EAAKgtB,aAAe,KACpBhtB,EAAKitB,gBAAkB,KACvBjtB,EAAKktB,YAAc,KACnBltB,EAAKmtB,aAAe,KACpBntB,EAAKotB,aAAe,KACpBptB,EAAKqtB,iBAAmB,KAExBrtB,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOosB,WACfrI,eAAgB,EAChB4I,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB/R,SAAUxH,KAAUwZ,YAAYptB,EAAOosB,YACvC3Q,iBAAkB,SAxEPpc,EA4EnB0H,YAAc,SAAAvC,GACVnF,EAAKguB,iBAAiB7oB,GACtBnF,EAAKiuB,qBAAqB9oB,IA9EXnF,EAiFnBguB,iBAjFmB,eAAAhN,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiFA,SAAAC,EAAM3C,GAAN,IAAA4W,EAAA,OAAAnU,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQylB,aAAgB/oB,GADxB,UACT4W,EADSxT,EAAAiB,KAEf+K,KAAU4Z,YAAYhpB,EAAQ4W,GAE1B5W,IAAWnF,EAAKoC,MAAM+C,OAJX,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,iBAMfnK,EAAK6C,SAAS,CAAEkZ,aAND,wBAAAxT,EAAAwB,SAAAjC,MAjFA,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EA0FnBiuB,qBA1FmB,eAAA/lB,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA0FI,SAAAmC,EAAM7E,GAAN,IAAAuP,EAAAG,EAAAP,EAAAyH,EAAA,OAAAnU,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACnB4F,QAAQC,IAAI,iCACPlE,YAAajF,GAFC,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAIbuK,EAAWkB,KAAgBhB,YAAYwZ,YAAgBjpB,IAJ1C,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,oBAOmB0K,EAAmBH,EAAjD2Z,6BAPW,CAAAnkB,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,wBAAAD,EAAAzB,KAAA,GAUA/G,KAAgBc,KAAK,CACpCC,QAAS,uBACToS,iBACA3L,OAAO,IAbQ,WAUboL,EAVapK,EAAAV,KAAA,CAAAU,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,yBAkBnBkE,QAAQC,IAAI,qCAAsCgG,GAlB/BpK,EAAAzB,KAAA,GAmBIylB,aAAgB5Z,EAAKvT,IAnBzB,WAmBbgb,EAnBa7R,EAAAV,KAoBnB+K,KAAU4Z,YAAY7Z,EAAKvT,GAAIgb,GAE3B/b,EAAKoC,MAAM+C,SAAWA,EAtBP,CAAA+E,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,kBAwBnBnK,EAAK6C,SAAS,CAAE6hB,eAAgBpQ,EAAKvT,GAAIqb,iBAAkB7H,KAAUwZ,YAAYzZ,EAAKvT,MAxBnE,yBAAAmJ,EAAAH,SAAAC,MA1FJ,gBAAAkd,GAAA,OAAAhf,EAAA/D,MAAAhE,KAAAiE,YAAA,GAAApE,EAqHnBsuB,sBAAwB,WACpBtuB,EAAK6C,SAAS,CAAE8qB,iBAAiB,KAtHlB3tB,EAyHnBuuB,uBAAyB,WACrBvuB,EAAK6C,SAAS,CAAE8qB,iBAAiB,KA1HlB3tB,EA6HnBwuB,wBAA0B,WACtBxuB,EAAK6C,SAAS,CAAE0qB,mBAAmB,KA9HpBvtB,EAiInByuB,0BAA4B,WACxBzuB,EAAK6C,SAAS,CAAE0qB,mBAAmB,KAlIpBvtB,EAqInB0uB,uBAAyB,WAAM,IACnBpU,EAAUta,EAAK4C,MAAf0X,MACeta,EAAKoC,MAApBkrB,WAGJttB,EAAK6C,SAAS,CAAEyqB,WAAY,OACrBhT,EACP5Y,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,IAGZmG,IAAiBqjB,6BAA4B,IAjJlC3uB,EAqJnB4uB,0BAA4B,WACxB5uB,EAAK6C,SAAS,CAAE4qB,qBAAqB,KAtJtBztB,EAyJnB6uB,2BAA6B,WACzB7uB,EAAK6C,SAAS,CAAE4qB,qBAAqB,KA1JtBztB,EA6JnB8uB,uBAAyB,WACrB9uB,EAAK6C,SAAS,CAAE2qB,kBAAkB,KA9JnBxtB,EAiKnB+uB,wBAA0B,WACtB/uB,EAAK6C,SAAS,CAAE2qB,kBAAkB,KAlKnBxtB,EAqKnBgvB,2BAA6B,WACzBhvB,EAAK6C,SAAS,CAAEirB,sBAAsB,KAtKvB9tB,EAyKnBivB,4BAA8B,WAC1BjvB,EAAK6C,SAAS,CAAEirB,sBAAsB,KA1KvB9tB,EA6KnBkvB,sBAAwB,WACpBlvB,EAAK6C,SAAS,CAAE6qB,iBAAiB,KA9KlB1tB,EAiLnBmvB,uBAAyB,WACrBnvB,EAAK6C,SAAS,CAAE6qB,iBAAiB,KAlLlB1tB,EAqLnBovB,uBAAyB,WACrBpvB,EAAK6C,SAAS,CAAE+qB,kBAAkB,KAtLnB5tB,EAyLnBqvB,wBAA0B,WACtBrvB,EAAK6C,SAAS,CAAE+qB,kBAAkB,KA1LnB5tB,EA6LnBsvB,uBAAyB,WACrBtvB,EAAK6C,SAAS,CAAEgrB,kBAAkB,KA9LnB7tB,EAiMnBuvB,wBAA0B,WACtBvvB,EAAK6C,SAAS,CAAEgrB,kBAAkB,KA/LlCxf,QAAQC,IAAI,6BAEZtO,EAAKwvB,WAAa9rB,IAAM+M,YALT,IAOP6J,EAAU1X,EAAV0X,MACAnV,EAAyBmG,IAAzBnG,OAAQsqB,EAAiBnkB,IAAjBmkB,aARD,OAUfzvB,EAAKoC,MAAQ,CACT+C,OAAQmV,EAAQmV,EAAetqB,EAC/Buf,eAAgB,EAChB4I,WAAY,KACZC,mBAAmB,EACnBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,EAClBC,sBAAsB,EACtB/R,SAAU,KACVK,iBAAkB,MAvBPpc,mFA4BfqO,QAAQC,IAAI,0CACZnO,KAAKuH,YAAYvH,KAAKiC,MAAM+C,QAE5BmG,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,qEAI/CxhB,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,iEAG5C9pB,EAAWC,EAAWC,GAAU,IACvCiC,EAAWhF,KAAKiC,MAAhB+C,OACJA,IAAWlC,EAAUkC,QACrBhF,KAAKuH,YAAYvC,oCA6JrBkJ,QAAQC,IAAI,8BAA+BnO,KAAKiC,OAD3C,IAAA6C,EAEiC9E,KAAKyC,MAAnCsC,EAFHD,EAEGC,QAAS5B,EAFZ2B,EAEY3B,UAAWgX,EAFvBrV,EAEuBqV,MAFvBtL,EAiBD7O,KAAKiC,MAbL+C,EAJC6J,EAID7J,OACA4W,EALC/M,EAKD+M,SACA2I,EANC1V,EAMD0V,eACAtI,EAPCpN,EAODoN,iBACAkR,EARCte,EAQDse,WACAE,EATCxe,EASDwe,iBACAC,EAVCze,EAUDye,oBACAC,EAXC1e,EAWD0e,gBACAC,EAZC3e,EAYD2e,gBACAC,EAbC5e,EAaD4e,iBACAC,EAdC7e,EAcD6e,iBACAC,EAfC9e,EAeD8e,qBACAP,EAhBCve,EAgBDue,kBAGE1U,EAAgB1T,GAAUmoB,EAC1BpN,EAAY/f,KAAKqvB,YAAcrvB,KAAKqvB,WAAW5iB,QAAUzM,KAAKqvB,WAAW5iB,QAAQiP,mBAAqB,EAExG1P,EAAU,KAiHd,OAhHIwhB,EACAxhB,EACI1H,EAAArB,EAAAC,cAACqsB,GAAD,CACIvqB,OAAQ0T,EACRyB,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAKouB,yBAGff,GACPrtB,KAAK6sB,aAAe7sB,KAAK6sB,cACrBvoB,EAAArB,EAAAC,cAACssB,GAAD,CACIxqB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAK4uB,0BAItB5iB,EAAUhM,KAAK6sB,cACRS,GACPttB,KAAK8sB,gBAAkB9sB,KAAK8sB,iBACxBxoB,EAAArB,EAAAC,cAACusB,GAAD,CACIzqB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAK0uB,6BAItB1iB,EAAUhM,KAAK8sB,iBACRS,GACPvtB,KAAK+sB,YAAc/sB,KAAK+sB,aACpBzoB,EAAArB,EAAAC,cAACwsB,GAAD,CACI1qB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAKgvB,yBAItBhjB,EAAUhM,KAAK+sB,aACRU,GACPztB,KAAKgtB,aAAehtB,KAAKgtB,cACrB1oB,EAAArB,EAAAC,cAACysB,GAAD,CACI3qB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAKkvB,0BAItBljB,EAAUhM,KAAKgtB,cACRU,GACP1tB,KAAKitB,aAAejtB,KAAKitB,cACrB3oB,EAAArB,EAAAC,cAAC0sB,GAAD,CACI5qB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAKovB,0BAItBpjB,EAAUhM,KAAKitB,cACRU,GACP3tB,KAAKktB,iBAAmBltB,KAAKktB,kBACzB5oB,EAAArB,EAAAC,cAAC2sB,GAAD,CACI7qB,OAAQ0T,EACR6L,eAAgBA,EAChBpK,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAK8uB,8BAItB9iB,EAAUhM,KAAKktB,kBAEflhB,EADOohB,EAEH9oB,EAAArB,EAAAC,cAAC4sB,GAAD,CACI9qB,OAAQ0T,EACRyB,MAAOA,EACP4F,UAAWA,EACXjP,QAAS9Q,KAAKsuB,4BAKlBhqB,EAAArB,EAAAC,cAAC6sB,GAAD,CACI5e,IAAKnR,KAAKqvB,WACVrqB,OAAQ0T,EACRyB,MAAOA,EACP/D,WAAY+W,IAAenoB,EAC3B4W,SAAUA,EACVK,iBAAkBA,EAClBE,oBAAqBnc,KAAKquB,wBAC1BjS,mBAAoBpc,KAAK2uB,uBACzBtS,sBAAuBrc,KAAKyuB,0BAC5BjS,kBAAmBxc,KAAKmuB,sBACxB7R,kBAAmBtc,KAAK+uB,sBACxBxS,mBAAoBvc,KAAKivB,uBACzBxS,mBAAoBzc,KAAKmvB,uBACzBzS,uBAAwB1c,KAAK6uB,2BAC7B/d,QAAS9Q,KAAKuuB,yBAKnBpU,EACH7V,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,GAEH1H,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,CAAEkqB,gBAAiB7V,GAAShX,IAAa6I,UAhV9EzI,IAAMC,YA2V7BkpB,GAASxW,aAAe,CACpB/S,UAAW,KACX4B,QAAS,KACToV,OAAO,GAGIvU,WAAW2M,IAAX3M,CAAwB8mB,IC7WjCuD,4LACO,IAAAnrB,EACoD9E,KAAKyC,MAA7CuC,GADZF,EACGC,QADHD,EACYE,QAAQE,EADpBJ,EACoBI,SAAU6Q,EAD9BjR,EAC8BiR,kBAE7B5Q,EAAaC,YAAkBJ,EAAQ+Q,GAE7C,OACIzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUA,EAAU6Q,kBAAmBA,EAAmBma,YAAU,IAC9F5rB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBgC,WAT3B5B,IAAM4sB,gBAqB5BF,GAAQ/Z,aAAe,CACnBH,mBAAmB,GAGRnQ,WAlCA,CACXwqB,eAAgB,CACZ9d,SAAU,WACV+d,MAAO,EACPC,OAAQ,EACRC,OAAQ,IA6BD3qB,CAAmBqqB,IC3B5BO,4LACO,IAAA1rB,EACgC9E,KAAKyC,MAAlCuC,EADHF,EACGE,OAAQO,EADXT,EACWS,QAASR,EADpBD,EACoBC,QAEzB,OACIT,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASA,GACnDjB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,gBAXrBzB,IAAM4sB,gBA0BvBvqB,OAhCA,CACX8R,SAAU,CACNzF,QAAS,IA8BFrM,CAAmB4qB,ICV5BC,uBACF,SAAAA,EAAYhuB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAywB,IACf5wB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2wB,GAAAtwB,KAAAH,KAAMyC,KAkCVkqB,qBAAuB,SAAAnsB,GAAU,IACrBosB,EAA+BpsB,EAA/BosB,WAAY8D,EAAmBlwB,EAAnBkwB,eAEpB7wB,EAAK6C,SAAS,CACVkqB,WAAYA,EACZ8D,eAAgBA,KArCpB7wB,EAAKoC,MAAQ,CACT2qB,WAAYzhB,IAAiBwN,YAC7B+X,eAAgB,MALL7wB,qFASGsT,EAAWC,GAAW,IAAAtO,EACd9E,KAAKyC,MAAvBuC,EADgCF,EAChCE,OAAQa,EADwBf,EACxBe,MAEhB,OAAIuN,EAAUwZ,aAAe5nB,IAIzBoO,EAAUsd,iBAAmB1rB,GAI7BmO,EAAUtN,QAAUA,+CAQxBsF,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,qEAI/CxhB,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,uDAYtD,IAAAgE,EAAA1lB,EACgCjL,KAAKyC,MAAlCuC,EADHiG,EACGjG,OAAQO,EADX0F,EACW1F,QAASR,EADpBkG,EACoBlG,QACnB6rB,EAAiB5wB,KAAKiC,MAAM2qB,WAE5BpS,EAAWtQ,YAAgBlF,GAC3B6rB,EAAeC,YAAyB9rB,GAC1C+rB,EAAoB,GAKxB,OAJIF,EAAe,IACfE,EAAqC,IAAjBF,EAAqB,iBAArB,KAAAlsB,OAA6CksB,EAA7C,iBAIpBvsB,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAAC1S,QAAS,CAAEud,KAAMvd,EAAQ2S,UAAYnS,QAASA,GAC3DjB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,qBAADsrB,EAAA,GAAA7wB,OAAAyT,GAAA,EAAAzT,CAAA6wB,EAChB5rB,EAAQisB,sBAAwBhsB,IAAW4rB,GAD3B9wB,OAAAyT,GAAA,EAAAzT,CAAA6wB,EAEjB,oBAAqB3rB,IAAW4rB,GAFfD,KAIrBrsB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACXmB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAEksB,aAAclsB,EAAQksB,iBAElE3sB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQmsB,0BAArD,IACM1W,EACDuW,cAvEHxtB,IAAMC,YAsFrBoC,OAzGA,SAAAC,GAAK,MAAK,CACrB6R,SAAU,CACNzF,QAAS,GAEbgf,aAAc,CACVxlB,MAAO5F,EAAME,QAAQC,QAAQC,MAEjC+qB,sBAAuB,CACnBvlB,MAAO,OACP8f,gBAAiB1lB,EAAME,QAAQC,QAAQC,KACvCkrB,kBAAmB,CACf1lB,MAAO,SAGfylB,wBAAyB,CACrBzlB,MAAO5F,EAAME,QAAQuG,KAAKoH,aA0FA,CAAErN,WAAW,GAAhCT,CAAwC6qB,ICjFjDW,uBACF,SAAAA,EAAY3uB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAoxB,IACfvxB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAsxB,GAAAjxB,KAAAH,KAAMyC,KAkCVkqB,qBAAuB,SAAAnsB,GACnBX,EAAK6C,SAAL5C,OAAAkS,EAAA,EAAAlS,CAAA,GACOU,KAlCPX,EAAKoC,MAAQ,CACT2qB,WAAYzhB,IAAiBwN,YAC7B0Y,cAAelmB,IAAiBmmB,gBALrBzxB,qFASGsT,EAAWC,GAAW,IAAAtO,EACH9E,KAAKyC,MAAlCuC,EADgCF,EAChCE,OAAQob,EADwBtb,EACxBsb,UAAWva,EADaf,EACbe,MAE3B,OAAIuN,EAAUwZ,aAAe5nB,GAAUoO,EAAUie,gBAAkBjR,IAI/DhN,EAAUsd,iBAAmB1rB,GAAUoO,EAAUme,oBAAsBnR,GAIvEjN,EAAUtN,QAAUA,+CAQxBsF,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,qEAI/CxhB,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,uDAStD,IAAA1hB,EAC0DjL,KAAKyC,MAA5DuC,EADHiG,EACGjG,OAAQob,EADXnV,EACWmV,UAAWoR,EADtBvmB,EACsBumB,WAAYjsB,EADlC0F,EACkC1F,QAASR,EAD3CkG,EAC2ClG,QAAS4F,EADpDM,EACoDN,EACnDimB,EAAiB5wB,KAAKiC,MAAM2qB,WAC5B6E,EAAoBzxB,KAAKiC,MAAMovB,cAC/BxmB,EAAUiB,KAAahF,IAAI9B,EAAQob,GAEjCmG,EAAmB1b,EAAnB0b,eAEFmL,EAAOC,YAAe9mB,GACtB+mB,EAAaC,YAAqBhnB,GAClCinB,EAAiBC,YAAyBlnB,GAC1CmB,EAAUgmB,aAAWnnB,EAASF,IAAM,OACpC1F,EAAWD,IAAW4rB,GAAkBxQ,IAAcqR,EAEtDQ,EAAO1L,GAAkBiL,EAAaltB,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQ2T,IAAqBjiB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAErG,OACIV,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CAAUwU,QAAM,EAACtU,UAAW4B,EAAQ2S,SAAUnS,QAASA,GACnDjB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,gBADiBvF,OAAAyT,GAAA,EAAAzT,CAAA,GAEdiF,EAAQmtB,mBAAqBjtB,GAChC,CAAEktB,oBAAqBltB,KAE1BgtB,EACD3tB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBACVquB,GAAcM,EACXxtB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgB2uB,GAE/BxtB,EAAArB,EAAAC,cAAC8S,GAAA,EAAD,CAAahR,OAAQA,EAAQD,QAAS,CAAEksB,aAAclsB,EAAQksB,gBAElE3sB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,cAAeN,EAAQqtB,uBAAwBV,IAE9EptB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQqtB,uBAE7C9tB,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,MACMmY,GAAcI,GACZttB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyByuB,EAAzC,MAEH5lB,eAnFdzI,IAAMC,YA2GlBsO,GALCC,YACZnM,IA1HW,SAAAC,GAAK,MAAK,CACrB6R,SAAU,CACNzF,QAAS,GAEbmgB,qBAAsB,CAClB3mB,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9Bud,aAAc,CACVxlB,MAAO5F,EAAME,QAAQC,QAAQC,MAEjCisB,mBAAoB,CAChBzmB,MAAO,OACP8f,gBAAiB1lB,EAAME,QAAQC,QAAQC,KACvCkrB,kBAAmB,CACf1lB,MAAO,WA4GI,CAAEpF,WAAW,IAChCmM,cAGWV,CAAQsf,WCzGRxrB,WA/BA,SAAAC,GAAK,MAAK,CACrBwsB,cAAe,CACXlsB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQusB,KAAK,KAAO,aAAe,UACrF7mB,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAAe,WAEvFusB,qBAAsB,CAClB9mB,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAAe,aAyBzD,CAAEK,WAAW,GAAhCT,CArBf,SAAuBnD,GAAO,IAClBiL,EAAuCjL,EAAvCiL,QAAS8kB,EAA8B/vB,EAA9B+vB,QAASjtB,EAAqB9C,EAArB8C,QAASR,EAAYtC,EAAZsC,QAEnC,OACIT,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQstB,gBACjD/tB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBuK,GACtCmW,QAAQ2O,IACLluB,EAAArB,EAAAC,cAAA,KAAGC,UAAW4B,EAAQwtB,qBAAsBhtB,QAASA,GAChDitB,MCefC,uBACF,SAAAA,EAAYhwB,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyyB,IACf5yB,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2yB,GAAAtyB,KAAAH,KAAMyC,KA6CViwB,yBAA2B,SAAAlyB,GAAU,IAG3BmyB,EAFWnyB,EAAT8L,KAEiByC,OAEpB4jB,EAGD9yB,EAAKyP,WAAWqjB,GAFhB9yB,EAAK0H,eApDM1H,EA0DnB+yB,oBAAsB,SAAAC,GAIlB,IAHA,IAAMC,EAAM,GACN5pB,EAAM,IAAIlC,IAEPE,EAAI,EAAGA,EAAI2rB,EAAQlsB,OAAQO,IAAK,CACrC,IAAI1E,EAASqwB,EAAQ3rB,IAAM2rB,EAAQ3rB,GAAGsC,SACtC,GAAIhH,EACA,IAAK,IAAIuwB,EAAI,EAAGA,EAAIvwB,EAAOmE,OAAQosB,IAC1B7pB,EAAI/B,IAAI3E,EAAOuwB,MAChB7pB,EAAI+E,IAAIzL,EAAOuwB,GAAIvwB,EAAOuwB,IAC1BD,EAAInqB,KAAKnG,EAAOuwB,KAUhC,OAJAD,EAAI/U,KAAK,SAAC9a,EAAG+vB,GACT,OAAOC,aAAa7e,KAAUtN,IAAIksB,GAAGE,MAAO9e,KAAUtN,IAAI7D,GAAGiwB,SAG1DJ,GA9EQjzB,EAiFnByP,WAjFmB,eAAAuR,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiFN,SAAAC,EAAM2E,GAAN,IAAA6mB,EAAAxzB,EAAAqF,EAAAkD,EAAAN,EAAAwrB,EAAApkB,EAAAqkB,EAAApkB,EAAAqkB,EAAAT,EAAAU,EAAA5oB,EAAA2E,EAAAkkB,EAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5N,EAAAje,EAAA2V,EAAA1W,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTzI,EAAKszB,UAAY,IAAIY,KACrBl0B,EAAKyM,KAAOA,EACN6mB,EAAYtzB,EAAKszB,UACnBxzB,EAAQ,KAEJqF,EAAWnF,EAAK4C,MAAhBuC,OACAkD,EAAkBrI,EAAKoC,MAAvBiG,cAEHlD,EATI,CAAAoD,EAAAE,KAAA,gBAUCV,EAAW,GACXwrB,EAAe7xB,KAAgBc,KAAK,CACtCC,QAAS,cACTgkB,MAAOha,EACP5D,MAAO,MAEXd,EAASe,KAAKyqB,IAERpkB,EAAY3H,EAAciF,KACf0C,IAAc1C,IACrB+mB,EAAoB9xB,KAAgBc,KAAK,CAC3CC,QAAS,cACTgkB,MAAOtX,EACPtG,MAAO,MAEXd,EAASe,KAAK0qB,KAGZpkB,EAAexI,EAAiB6F,KAClB2C,IAAiB3C,IAC3BgnB,EAAuB/xB,KAAgBc,KAAK,CAC9CC,QAAS,cACTgkB,MAAOrX,EACPvG,MAAO,MAEXd,EAASe,KAAK2qB,IAnCblrB,EAAAE,KAAA,GAsCiBU,QAAQC,IAAIrB,EAASsB,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UAtC5D,WAsCCypB,EAtCDzqB,EAAAiB,KAuCCkqB,EAAQ1zB,EAAK+yB,oBAAoBC,GAEnCM,IAActzB,EAAKszB,UAzClB,CAAA/qB,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,qBA6CD9B,IACQyC,EAAM9K,EAAK4C,MAAXkI,EAEF2E,EAAahD,EAAKuS,gBAClB2U,EAAuB,CAAC,iBAAkB7oB,EAAE,iBAAiBkU,gBAG1C/d,KAAK,SAAA+b,GAAE,OAAIA,EAAGmX,SAAS1kB,MAC3CN,GAAawkB,EAAqB1yB,KAAK,SAAA+b,GAAE,OAAIA,EAAGmX,SAAShlB,EAAU6P,mBAEpE0U,EAAMU,OAAO,EAAG,EAAG/rB,EAActH,KAIzCf,EAAK6C,SAAS,CACVqe,IAAK,KACLmT,cAAe,KACfX,MAAOA,IAGX5zB,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAAO4zB,MAGxBZ,GADIA,EAAcrmB,EAAKyC,QACGolB,WAAW,KAAOxB,EAAYyB,OAAO,GAAKzB,GACpDhsB,QAAU0tB,MAtErB,CAAAjsB,EAAAE,KAAA,gBAuEKmrB,EAAiB,GAEjBC,EAAgBnyB,KAAgBc,KAAK,CACvCC,QAAS,oBACTgkB,MAAOqM,IAEXc,EAAe9qB,KAAK+qB,GAEhB1kB,IAEA2kB,GADIA,EAAmB3kB,EAAUD,QACGolB,WAAW,KAAOR,EAAiBS,OAAO,GAAKT,GAC9DhtB,QAAU0tB,MAAuBV,IAAqBhB,IACjEiB,EAAqBryB,KAAgBc,KAAK,CAC5CC,QAAS,oBACTgkB,MAAOqN,IAEXF,EAAe9qB,KAAKirB,IAvF3BxrB,EAAAE,KAAA,GA2F2BU,QAAQC,IAAIwqB,EAAevqB,IAAI,SAAAnI,GAAC,OAAIA,EAAEoI,MAAM,SAAAC,GAAC,OAAI,UA3F5E,WA2FKyqB,EA3FLzrB,EAAAiB,KA4FKyqB,EAASj0B,EAAK+yB,oBAAoBiB,GAEpCV,IAActzB,EAAKszB,UA9FtB,CAAA/qB,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,kBAkGDnK,EAAK6C,SAAS,CACVoxB,WAGJn0B,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAAOm0B,GAvGvB1rB,EAAAE,KAAA,iBAyGDzI,EAAK6C,SAAS,CACVoxB,OAAQ,OA1GX,WA+GL5N,EAAW,IACXlhB,EAhHK,CAAAoD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAiHY/G,KAAgBc,KAAK,CAClCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAOha,EACPia,eAAgB,EAChBC,gBAAiB,EACjBC,OAAQ,EACR/d,MAAO,GACPyG,OAAQ,OAzHP,QAiHL+W,EAjHK9d,EAAAiB,KAAAjB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GA4HY/G,KAAgBc,KAAK,CAClCC,QAAS,iBACTgkB,MAAOha,EACPgoB,YAAa,EACb7rB,eAAgB,EAChB8rB,kBAAmB,EACnB7rB,MAAO,KAlIN,QA4HLwd,EA5HK9d,EAAAiB,KAAA,WAsITyC,KAAa8a,SAASV,EAASA,UAE3BiN,IAActzB,EAAKszB,UAxId,CAAA/qB,EAAAE,KAAA,gBAAAF,EAAA4B,OAAA,kBAkJT,IANAnK,EAAK6C,SAAS,CACVwjB,aAGEje,EAAQ,IAAIjB,IACZ4W,EAAQ,IAAI5W,IACTE,EAAI,EAAGA,EAAIgf,EAASA,SAASvf,OAAQO,IAC1Ce,EAAMgG,IAAIiY,EAASA,SAAShf,GAAGiD,QAAS+b,EAASA,SAAShf,GAAGiD,SACzD+b,EAASA,SAAShf,GAAGqf,gBACrB3I,EAAM3P,IAAIiY,EAASA,SAAShf,GAAGqf,eAAgBL,EAASA,SAAShf,GAAGqf,gBAI5E5mB,EAAQ8J,KAAUC,WAClBC,YAAiBhK,EAADG,OAAAmlB,GAAA,EAAAnlB,CAAYmI,EAAMusB,SAClCna,YAAiB1a,EAADG,OAAAmlB,GAAA,EAAAnlB,CAAY8d,EAAM4W,SA3JzB,yBAAApsB,EAAAwB,SAAAjC,MAjFM,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EA+OnB0H,YA/OmBzH,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA+OL,SAAAmC,IAAA,IAAA4qB,EAAAC,EAAA5sB,EAAAE,EAAA8f,EAAA/G,EAAAmT,EAAAhsB,EAAAvI,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,WACSzI,EAAK4C,MAAhBuC,OADE,CAAA+E,EAAAzB,KAAA,eAGNzI,EAAK6C,SAAS,CACVqe,IAAK,KACLmT,cAAe,KACfX,MAAO,KACPO,OAAQ,KACR5N,SAAU,OARRnc,EAAAC,OAAA,wBAcJyqB,EAAalzB,KAAgBc,KAAK,CACpCC,QAAS,cACTqyB,SAAU,CAAEryB,QAAS,wBACrBoG,MAAO,KACRS,MAAM,WACL,MAAO,CAAE7G,QAAS,QAASkH,SAAU,MAGnCkrB,EAAuBnzB,KAAgBc,KAAK,CAC9CC,QAAS,cACTgkB,MAAO,GACP5d,MAAO,MACRS,MAAM,WACL,MAAO,CAAE7G,QAAS,QAASkH,SAAU,MAGnC1B,EAAuBvG,KAAgBc,KAAK,CAC9CC,QAAS,oBACTsG,QAASC,KAAUC,UACnBC,OAAO,IACRI,MAAM,SAAAyrB,MAlCC7qB,EAAAzB,KAAA,EAoCwCU,QAAQC,IAAI,CAC1DwrB,EACAC,EACA5sB,IAvCM,OAAAE,EAAA+B,EAAAV,KAAAye,EAAAhoB,OAAAwJ,EAAA,EAAAxJ,CAAAkI,EAAA,GAoCH+Y,EApCG+G,EAAA,GAoCEoM,EApCFpM,EAAA,GAoCiB5f,EApCjB4f,EAAA,GA0CVjoB,EAAK6C,SAAS,CACVqe,IAAKA,EACLmT,cAAeA,EACfhsB,cAAeA,EACfqrB,MAAO,KACPO,OAAQ,KACR5N,SAAU,OAGRvmB,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAAOohB,EAAIvX,UAC5BG,YAAiBhK,EAAOu0B,EAAc1qB,UArD5B,yBAAAO,EAAAH,SAAAC,MA/OKhK,EAuSnBg1B,oBAvSmB/0B,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAuSG,SAAA8f,IAAA,IAAAvf,EAAAf,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,cAAAof,EAAApf,KAAA,EACE/G,KAAgBc,KAAK,CACrCC,QAAS,WACTkG,aAAc,sBACdC,eAAgB,EAChBC,MAAO,KALO,OAQlB,IAPMT,EADYyf,EAAAre,KAQTnC,EAAIe,EAAMuB,SAAS7C,OAAS,EAAGO,GAAK,EAAGA,IAC5C3F,KAAgBc,KAAK,CACjBC,QAAS,uBACT6H,QAASlC,EAAMuB,SAAStC,KAXd,wBAAAwgB,EAAA9d,SAAA4d,MAvSH3nB,EAuTnBi1B,yBAA2B,SAAArmB,GACvBA,EAAMuS,kBAENzf,KAAgBc,KAAK,CACjBC,QAAS,4BAGbzC,EAAK6C,SAAS,CAAEwxB,cAAe,QA9ThBr0B,EAiUnBk1B,oBAAsB,SAAC/vB,EAAQob,EAAW4U,EAAaC,GAAa,IACxDC,EAAoBr1B,EAAK4C,MAAzByyB,gBAEJF,GACAzzB,KAAgBc,KAAK,CACjBC,QAAS,uBACT6H,QAASnF,IAIjBkwB,EAAgBlwB,EAAQob,EAAW6U,IA3UpBp1B,EA8UnBmnB,aAAe,WACX,IAAMnL,EAAOhc,EAAKonB,QAAQxa,QAEtBoP,EAAKZ,UAAYY,EAAKE,eAAiBF,EAAKC,cAC5Cjc,EAAKs1B,kBAlVMt1B,EAsVnBu1B,UAAY,SAAAlP,GACR,IAAMvf,EAASuf,EAAWA,EAASA,SAASvf,OAAS,EAMrD,MAAO,CACH2tB,YALe3tB,EAAS,EAAIuf,EAASA,SAASvf,EAAS,GAAG+qB,KAAO,EAMjEjpB,eALiB9B,EAAS,EAAIuf,EAASA,SAASvf,EAAS,GAAGwD,QAAU,EAMtEoqB,kBALoB5tB,EAAS,EAAIuf,EAASA,SAASvf,EAAS,GAAG/F,GAAK,IA3VzDf,EAoWnBw1B,eAAiB,SAACnP,EAAU1jB,GACxB,OAAKA,GACAA,EAAO0jB,SAASvf,OAEhBuf,GACAA,EAASA,SAASvf,OAEhB,CACHggB,YAAankB,EAAOmkB,YACpBT,SAAUA,EAASA,SAASvhB,OAAOnC,EAAO0jB,WALxB1jB,EAHF0jB,GArWLrmB,EAiXnBs1B,eAjXmBr1B,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiXF,SAAAqgB,IAAA,IAAA/iB,EAAAmuB,EAAAjN,EAAAO,EAAAjkB,EAAAyF,EAAA2V,EAAA1W,EAAAvH,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA8f,GAAA,cAAAA,EAAA5f,KAAA4f,EAAA3f,MAAA,WACTzI,EAAK+lB,QADI,CAAAqC,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,oBAGLhF,EAAWnF,EAAK4C,MAAhBuC,OAEFmuB,EAAYtzB,EAAKszB,UAEfjN,EAAarmB,EAAKoC,MAAlBikB,SAEFO,EAAS5mB,EAAKu1B,UAAUlP,GAE9BrmB,EAAK+lB,SAAU,EACXpjB,EAAS,IACTwC,EAbS,CAAAijB,EAAA3f,KAAA,gBAAA2f,EAAA3f,KAAA,GAcM/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAOzmB,EAAKyM,KACZia,eAAgB,EAChBC,gBAAiBC,EAAO8N,kBACxB7rB,MAAO,GACPyG,OAAQ,OArBH,QAcT3M,EAdSylB,EAAA5e,KAAA4e,EAAA3f,KAAA,wBAAA2f,EAAA3f,KAAA,GAwBM/G,KAAgBc,KAAhBvC,OAAAkS,EAAA,EAAAlS,CAAA,CACXwC,QAAS,iBACTgkB,MAAOzmB,EAAKyM,MACTma,EAHQ,CAIX/d,MAAO,MA5BF,QAwBTlG,EAxBSylB,EAAA5e,KAAA,WA+BbxJ,EAAK+lB,SAAU,EAEf0P,aAAwB9yB,EAAQ0jB,EAAWA,EAASA,SAAW,IAC/Dpa,KAAa8a,SAASpkB,EAAO0jB,UAEzBiN,IAActzB,EAAKszB,UApCV,CAAAlL,EAAA3f,KAAA,gBAAA2f,EAAAje,OAAA,kBA8Cb,IANAnK,EAAK6C,SAAS,CACVwjB,SAAUrmB,EAAKw1B,eAAenP,EAAU1jB,KAGtCyF,EAAQ,IAAIjB,IACZ4W,EAAQ,IAAI5W,IACTE,EAAI,EAAGA,EAAI1E,EAAO0jB,SAASvf,OAAQO,IACxCe,EAAMgG,IAAIzL,EAAO0jB,SAAShf,GAAGiD,QAAS3H,EAAO0jB,SAAShf,GAAGiD,SACrD3H,EAAO0jB,SAAShf,GAAGqf,gBACnB3I,EAAM3P,IAAIzL,EAAO0jB,SAAShf,GAAGqf,eAAgB/jB,EAAO0jB,SAAShf,GAAGqf,gBAIlE5mB,EAAQ8J,KAAUC,WACxBC,YAAiBhK,EAADG,OAAAmlB,GAAA,EAAAnlB,CAAYmI,EAAMusB,SAClCna,YAAiB1a,EAADG,OAAAmlB,GAAA,EAAAnlB,CAAY8d,EAAM4W,SAvDrB,yBAAAvM,EAAAre,SAAAme,MAjXEloB,EA2anB01B,qBAAuB,SAAA9mB,GACnBA,EAAMuS,mBA5aSnhB,EA+anB0K,YAAc,YAGVuG,EAFoBjR,EAAK4C,MAAjBqO,YA7aRjR,EAAKonB,QAAU1jB,IAAM+M,YAHN,IAAAxL,EAKUjF,EAAK4C,MAAtBuC,EALOF,EAKPE,OAAQsH,EALDxH,EAKCwH,KALD,OAOfzM,EAAKoC,MAAQ,CACTuzB,gBAAiBxwB,EACjBywB,cAAenpB,EAEfyU,IAAK,KACLmT,cAAe,KACfX,MAAO,KACPO,OAAQ,KACR5N,SAAU,MAfCrmB,mFAqCfG,KAAKuH,cAEL4D,IAAiBkI,GAAG,yBAA0BrT,KAAK0yB,yEAInDvnB,IAAiBzJ,eAAe,yBAA0B1B,KAAK0yB,2DA0Y1D,IAAAniB,EAAAvQ,KAAAiL,EACuBjL,KAAKyC,MAAzBsC,EADHkG,EACGlG,QAASC,EADZiG,EACYjG,OADZ6J,EAEmD7O,KAAKiC,MAArD8e,EAFHlS,EAEGkS,IAAKmT,EAFRrlB,EAEQqlB,cAAeX,EAFvB1kB,EAEuB0kB,MAAOO,EAF9BjlB,EAE8BilB,OAAQ5N,EAFtCrX,EAEsCqX,SAErC/R,EAAOC,KAAUtN,IAAI9B,GAErB0wB,EACF3U,GAAOA,EAAIvX,SACLuX,EAAIvX,SAASN,IAAI,SAAAnI,GAAC,OACduD,EAAArB,EAAAC,cAACyyB,GAAD,CAASvxB,IAAKrD,EAAGiE,OAAQjE,EAAGmE,SAAU,kBAAMqL,EAAKwkB,oBAAoBh0B,EAAG,MAAM,GAAO,QAEzF,GAEJ60B,EACF1B,GAAiBA,EAAc1qB,SACzB0qB,EAAc1qB,SAASN,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAC2yB,GAAD,CACIzxB,IAAKrD,EACLiE,OAAQjE,EACRwE,QAAS,kBAAMgL,EAAKwkB,oBAAoBh0B,EAAG,MAAM,GAAM,QAG/D,GAEJ+0B,EAAavC,EACbA,EAAMrqB,IAAI,SAAAnI,GAAC,OACPuD,EAAArB,EAAAC,cAAC2yB,GAAD,CACIzxB,IAAKrD,EACLiE,OAAQjE,EACRwE,QAAS,kBAAMgL,EAAKwkB,oBAAoBh0B,EAAG,MAAM,GAAM,QAG/D,GAEAg1B,EAAcjC,EACdA,EAAO5qB,IAAI,SAAAnI,GAAC,OACRuD,EAAArB,EAAAC,cAAC8yB,GAAD,CAAiB5xB,IAAKrD,EAAGiE,OAAQjE,EAAGwE,QAAS,kBAAMgL,EAAKwkB,oBAAoBh0B,EAAG,MAAM,GAAM,QAE/F,GAEAk1B,EACF/P,GAAYA,EAASA,SACfA,EAASA,SAAShd,IAAI,SAAAnI,GAAC,OACnBuD,EAAArB,EAAAC,cAACgzB,GAAD,CACI9xB,IAAG,GAAAO,OAAK5D,EAAEoJ,QAAP,KAAAxF,OAAkB5D,EAAEH,IACvBoE,OAAQjE,EAAEoJ,QACViW,UAAWrf,EAAEH,GACb4wB,WAAY3N,QAAQ7e,GACpBO,QAAS,kBAAMgL,EAAKwkB,oBAAoBh0B,EAAEoJ,QAASpJ,EAAEH,IAAI,GAAO,QAGxE,GAENu1B,EAAkB,oBAKtB,OAJIjQ,GAAYA,EAASS,cACrBwP,EAA2C,IAAzBjQ,EAASS,YAAoB,kBAA7B,SAAAhiB,OAA0DuhB,EAASS,YAAnE,cAIlBriB,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKinB,QAAS9jB,UAAWkC,IAAWN,EAAQqxB,OAAQ,UAAWjN,SAAUnpB,KAAKgnB,cACnF7S,GACG7P,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAAQ,uBACvBpJ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACib,GAAD,CAAanZ,OAAQA,EAAQ8Q,YAAY,KAE7CxR,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQuxB,sBACnB9qB,aAAW,SACX4W,YAAapiB,KAAKuK,aAClBjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,SAKfyyB,EAAS/uB,OAAS,GACfrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAAQ,WACvBpJ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBgmB,SAAUnpB,KAAKu1B,sBAClDjxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCACduyB,EACDpxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mCAI1ByyB,EAAmBjvB,OAAS,GACzBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAAQ,SAAS8kB,QAAQ,QAAQjtB,QAASvF,KAAK80B,2BAC7Dc,GAGRE,EAAWnvB,OAAS,GACjBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAAQ,uBACtBooB,GAGRC,EAAYpvB,OAAS,GAClBrC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAAQ,kBACtBqoB,GAGR7P,GACG5hB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACmzB,GAAD,CAAe3oB,QAASyoB,IACvBF,uDA7gBWxzB,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuzB,iBAAmB/yB,EAAM6J,OAASrK,EAAMwzB,cACxD,CACHD,gBAAiB/yB,EAAMuC,OACvBywB,cAAehzB,EAAM6J,KAErByU,IAAK,KACLmT,cAAe,KACfX,MAAO,KACPO,OAAQ,KACR5N,SAAU,MAIX,YAlCM3iB,IAAMC,YAqjBZsO,GALCC,YACZnM,IA7jBW,SAAAC,GAAK,MAAK,CACrBywB,sBAAuB,CACnB5f,OAAQ,kBAEZgB,SAAU,CACNzF,QAAS,OAEbmkB,OAAQ,CACJjwB,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,aAqjBhE,CAAEriB,WAAW,IAChCmM,cAGWV,CAAQ2gB,8RCphBjB8D,eACF,SAAAA,EAAY9zB,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAu2B,IACf12B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAy2B,GAAAp2B,KAAAH,KAAMyC,KASVunB,aAAe,SAAAvb,GACX5O,EAAK6C,SAAS,CAAE2R,KAAM5F,EAAM+nB,OAAOnyB,QAEnC8G,IAAiBlK,KAAK,4BAA6B,CAC/CoT,KAAM5F,EAAM+nB,OAAOnyB,MACnB2B,QAASnG,EAAK42B,SAAS52B,EAAKoC,MAAMwJ,UAfvB5L,EAmBnB62B,mBAAqB,SAAAjoB,GACjB5O,EAAK6C,SAAS,CAAE+I,MAAOgD,EAAM+nB,OAAOnyB,QAEpC8G,IAAiBlK,KAAK,4BAA6B,CAC/CoT,KAAMxU,EAAKoC,MAAMoS,KACjBrO,QAASnG,EAAK42B,SAAShoB,EAAM+nB,OAAOnyB,UAxBzBxE,EA4BnB82B,eAAiB,SAAAtyB,GACb,OAAQA,GACJ,KAAKuyB,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQr3B,EAiDnB42B,SAAW,SAAApyB,GACP,OAAQA,GACJ,IAAK,MACD,OAAOuyB,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQr3B,EAsEnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KAvEPhR,EA0EnBgR,KAAO,WACHhR,EAAK6C,SAAS,CAAEmO,MAAM,KAxEtBhR,EAAKoC,MAAQ,CACT4O,MAAM,EACNwD,KAAMxU,EAAK4C,MAAMoD,MAAME,QAAQsO,KAC/B5I,MAAO5L,EAAK82B,eAAe92B,EAAK4C,MAAMoD,MAAME,QAAQC,QAAQC,OANjDpG,wEA8EV,IACGkF,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEmB7O,KAAKiC,MAArBoS,EAFHxF,EAEGwF,KAAM5I,EAFToD,EAESpD,MAEd,OACInH,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM7Q,KAAKiC,MAAM4O,KACjBC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,qBAChBC,mBAAiB,4BACjB1M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,sBAAhB,cACA0D,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACi0B,GAAAl0B,EAAD,CAAa6W,UAAU,WAAW3W,UAAW4B,EAAQqyB,aACjD9yB,EAAArB,EAAAC,cAACm0B,GAAAp0B,EAAD,CAAWq0B,SAAO,EAACxd,UAAU,UAA7B,SAGAxV,EAAArB,EAAAC,cAACq0B,GAAAt0B,EAAD,CACIuI,aAAW,QACXgsB,KAAK,SACLr0B,UAAW4B,EAAQ0yB,MACnBpzB,MAAOgQ,EACP+D,SAAUpY,KAAKgqB,cACf1lB,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CAAkBoB,MAAM,QAAQwe,QAASve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CAAOwI,MAAM,YAAcsX,MAAM,UAC1Eze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CAAkBoB,MAAM,OAAOwe,QAASve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CAAOwI,MAAM,YAAcsX,MAAM,WAGjFze,EAAArB,EAAAC,cAACi0B,GAAAl0B,EAAD,CAAa6W,UAAU,WAAW3W,UAAW4B,EAAQqyB,aACjD9yB,EAAArB,EAAAC,cAACm0B,GAAAp0B,EAAD,CAAWq0B,SAAO,EAACxd,UAAU,UAA7B,UAGAxV,EAAArB,EAAAC,cAACq0B,GAAAt0B,EAAD,CACIuI,aAAW,SACXgsB,KAAK,UACLr0B,UAAW4B,EAAQ0yB,MACnBpzB,MAAOoH,EACP2M,SAAUpY,KAAK02B,oBACfpyB,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,MACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQ4yB,QACdtf,QAAStT,EAAQsT,WAI7B0K,MAAM,QAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,SACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQ6yB,WACdvf,QAAStT,EAAQsT,WAI7B0K,MAAM,WAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,QACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQ8yB,UACdxf,QAAStT,EAAQsT,WAI7B0K,MAAM,UAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,QACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQ+yB,UACdzf,QAAStT,EAAQsT,WAI7B0K,MAAM,UAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,OACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQgzB,SACd1f,QAAStT,EAAQsT,WAI7B0K,MAAM,SAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,SACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQizB,WACd3f,QAAStT,EAAQsT,WAI7B0K,MAAM,WAEVze,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACIoB,MAAM,aACNwe,QACIve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CACI8B,QAAS,CACLud,KAAMvd,EAAQkzB,eACd5f,QAAStT,EAAQsT,WAI7B0K,MAAM,2BAtMZxf,IAAMC,WAkNjBoC,OAtQA,SAAAC,GAAK,MAAK,CACrBuxB,YAAa,CACT1gB,OAA6B,EAArB7Q,EAAMqM,QAAQC,MAE1BslB,MAAO,CACH/gB,OAAM,GAAA/R,OAAKkB,EAAMqM,QAAQC,KAAnB,SAEVwlB,QAAS,CACLlsB,MAAOmrB,KAAI,KACXsB,YAAa,CACTzsB,MAAOmrB,KAAI,OAGnBgB,WAAY,CACRnsB,MAAOorB,KAAO,KACdqB,YAAa,CACTzsB,MAAOorB,KAAO,OAGtBgB,UAAW,CACPpsB,MAAOqrB,KAAM,KACboB,YAAa,CACTzsB,MAAOqrB,KAAM,OAGrBgB,UAAW,CACPrsB,MAAOsrB,KAAM,KACbmB,YAAa,CACTzsB,MAAOsrB,KAAM,OAGrBgB,SAAU,CACNtsB,MAAOurB,KAAK,KACZkB,YAAa,CACTzsB,MAAOurB,KAAK,OAGpBgB,WAAY,CACRvsB,MAAOwrB,KAAO,KACdiB,YAAa,CACTzsB,MAAOwrB,KAAO,OAGtBgB,eAAgB,CACZxsB,MAAOyrB,KAAW,KAClBgB,YAAa,CACTzsB,MAAOyrB,KAAW,OAG1B7e,QAAS,KAqNqB,CAAEhS,WAAW,GAAhCT,CAAwC2wB,cCjQjD4B,eACF,SAAAA,EAAY11B,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAm4B,IACft4B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAq4B,GAAAh4B,KAAAH,KAAMyC,KAWVunB,aAAe,SAAAvb,GACX5O,EAAK6C,SAAS,CAAE01B,SAAU3pB,EAAM+nB,OAAOnyB,QAEvC9C,KAAgBiJ,aAAa,CAAElI,QAAS,6BAA8B81B,SAAU3pB,EAAM+nB,OAAOnyB,SAf9ExE,EAkBnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KAnBPhR,EAsBnBgR,KAAO,WACHhR,EAAK6C,SAAS,CAAEmO,MAAM,KAvBP,IAGPwnB,EAAS51B,EAAT41B,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMfv4B,EAAKoC,MAAQ,CACT4O,MAAM,EACNunB,SAAUA,GAAY,MARXv4B,wEA0BV,IAAAiF,EACkB9E,KAAKyC,MAAXkI,GADZ7F,EACGC,QADHD,EACY6F,GADZkE,EAEsB7O,KAAKiC,MAAxB4O,EAFHhC,EAEGgC,KAAMunB,EAFTvpB,EAESupB,SAGRE,GAFOC,KAAkB9tB,MAAQ,CAAE+tB,eAAgB,KAElCA,eAAetvB,IAAI,SAAAnI,GAAC,OACvCuD,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACImB,IAAKrD,EAAEH,GACPyD,MAAOtD,EAAEH,GACTiiB,QAASve,EAAArB,EAAAC,cAACw0B,GAAAz0B,EAAD,CAAOwI,MAAM,YACtBsX,MAAK,GAAApe,OAAK5D,EAAEy2B,KAAP,SAAA7yB,OAAmB5D,EAAE03B,YAArB,SAIb,OACIn0B,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAMA,EACNC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,wBAChBC,mBAAiB,+BACjB1M,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,yBAAyB+J,EAAE,aAC3CrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACi0B,GAAAl0B,EAAD,CAAa6W,UAAU,YACnBxV,EAAArB,EAAAC,cAACq0B,GAAAt0B,EAAD,CACIuI,aAAW,WACXgsB,KAAK,YACLnzB,MAAO+zB,EACPhgB,SAAUpY,KAAKgqB,cACdsO,aAxDA/0B,IAAMC,WA0EpBsO,GAPCC,YACZsN,cACA7M,cACA5M,IA/EW,SAAAC,GAAK,MAAK,CACrBuxB,YAAa,CACT1gB,OAA6B,EAArB7Q,EAAMqM,QAAQC,MAE1BslB,MAAO,CACH/gB,OAAM,GAAA/R,OAAKkB,EAAMqM,QAAQC,KAAnB,WA0ES,CAAE9L,WAAW,IAChCmZ,cAGW1N,CAAQqmB,IC3EjBO,WAAmB,CACrBzW,SAAU,SACVC,WAAY,SAGVyW,eACF,SAAAA,EAAYl2B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA24B,IACf94B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA64B,GAAAx4B,KAAAH,KAAMyC,KAgBVm2B,2BAA6B,SAAAp4B,GACzBX,EAAK6C,SAAS,CAAEm2B,mBAAoBr4B,EAAOC,uBAlB5BZ,EAqBnBi5B,eAAiB,SAAArqB,GAAS,IACdoqB,EAAuBh5B,EAAKoC,MAA5B42B,mBACHE,aAAqBF,IAE1Bh5B,EAAK6C,SAAS,CAAEs2B,SAAUvqB,EAAMwqB,iBAzBjBp5B,EA4BnBq5B,gBAAkB,WACdr5B,EAAK6C,SAAS,CAAEs2B,SAAU,QA7BXn5B,EAgCnBs5B,aAAe,WACXt5B,EAAKq5B,kBAELr5B,EAAK4C,MAAM22B,YAnCIv5B,EAsCnBw5B,mBAtCmBv5B,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAsCE,SAAAC,IAAA,IAAAnF,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBzI,EAAKq5B,kBADY9wB,EAAAE,KAAA,EAGIgxB,MAAK,GAAA30B,OAAI40B,KAAJ,kBAAA50B,OAAmC60B,OAH5C,OAGXh3B,EAHW4F,EAAAiB,KAIjB6E,QAAQC,IAAI,cAAe3L,GAJV,wBAAA4F,EAAAwB,SAAAjC,MAtCF9H,EA8CnB45B,iBAAmB,SAAAhrB,GACf5O,EAAKq5B,kBAELr5B,EAAK65B,YAAY7oB,QAjDFhR,EAoDnB85B,eAAiB,SAAAlrB,GACb5O,EAAKq5B,kBAELr5B,EAAK+5B,eAAe/oB,QAvDLhR,EA0DnBg6B,OAAS,SAAA1oB,GACLjD,QAAQC,IAARrO,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,KACAA,EAAK+5B,eAAiBzoB,GAzDtBtR,EAAKoC,MAAQ,CACT42B,mBAAoB1tB,IAAiB2uB,wBACrCd,SAAU,MALCn5B,mFAUfsL,IAAiBkI,GAAG,2BAA4BrT,KAAK44B,2EAIrDztB,IAAiBzJ,eAAe,2BAA4B1B,KAAK44B,6DAiD5D,IAAAroB,EAAAvQ,KAAA8E,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAEoC7O,KAAKiC,MAAtC+2B,EAFHnqB,EAEGmqB,SAAUH,EAFbhqB,EAEagqB,mBAEZkB,EAAkBhB,aAAqBF,GACzCv0B,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC82B,GAAA/2B,EAAD,CACIrC,GAAG,YACHo4B,SAAUA,EACVnoB,KAAMgT,QAAQmV,GACdloB,QAAS9Q,KAAKk5B,gBACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBnY,aAAc0W,IACdp0B,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKq5B,oBAAqB1uB,EAAE,mBAC/CrG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKy5B,kBAAmB9uB,EAAE,eAC7CrG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK25B,gBAAiBhvB,EAAE,aAC3CrG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKm5B,cAAexuB,EAAE,aAGjD,KAEJ,OACIrG,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIm3B,YAAWpB,EAAW,cAAgB,KACtCqB,gBAAc,OACdl3B,UAAW4B,EAAQu1B,eACnB9uB,aAAW,OACXjG,QAASvF,KAAK84B,gBACdx0B,EAAArB,EAAAC,cAACq3B,GAAAt3B,EAAD,OAEH82B,EACDz1B,EAAArB,EAAAC,cAACs3B,GAAD,CAAaC,SAAU,SAAAtpB,GAAG,OAAKZ,EAAKmpB,YAAcvoB,KAClD7M,EAAArB,EAAAC,cAACw3B,GAAD,CAAgBvpB,IAAK,SAAAA,GAAG,OAAKZ,EAAKqpB,eAAiBzoB,aAnGtC5N,IAAMC,WA8GpBsO,GALCC,YACZS,cACA5M,IAzHW,CACX00B,eAAgB,CACZ5jB,OAAQ,qBAEZikB,iBAAkB,CACdjkB,OAAQ,mBAoHO,CAAErQ,WAAW,IAGrByL,CAAQ6mB,IC1GjBiC,uBACF,SAAAA,EAAYn4B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA46B,IACf/6B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA86B,GAAAz6B,KAAAH,KAAMyC,KA4BVm2B,2BAA6B,SAAAp4B,GACzBX,EAAK6C,SAAS,CAAEm2B,mBAAoBr4B,EAAOC,uBA9B5BZ,EAiCnBs5B,aAAe,WACXt5B,EAAK6C,SAAS,CAAEmO,MAAM,KAlCPhR,EAqCnBg7B,WAAa,WACTh7B,EAAK0K,cACLhJ,KAAgBu5B,UAvCDj7B,EA0CnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEmO,MAAM,KA3CPhR,EA8CnBqjB,aAAe,WAAM,IAAApe,EACgBjF,EAAK4C,MAA9B2gB,EADSte,EACTse,SAAUE,EADDxe,EACCwe,WACVuV,EAAuBh5B,EAAKoC,MAA5B42B,mBACHE,aAAqBF,IAE1BzV,GAAUE,IAnDKzjB,EAsDnB0jB,cAAgB,SAAA9U,GACU,KAAlBA,EAAMC,SACND,EAAME,kBAxDK9O,EA4DnB2jB,YAAc,WACV,IAAMlV,EAAYzO,EAAKk7B,YAAYtuB,QAAQ6B,UACrCC,EAAY1O,EAAKk7B,YAAYtuB,QAAQ8B,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC1O,EAAKk7B,YAAYtuB,QAAQ8B,UAAY,IAGzCpD,IAAiBlK,KAAK,yBAA0B,CAAEqL,KAAMgC,KApEzCzO,EAuEnB4jB,YAAc,SAAAhV,GACV,IAAMe,EAAYf,EAAMgB,cAAcC,QAAQ,cAC1CF,IACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,KAxE9C3P,EAAKk7B,YAAcx3B,IAAM+M,YAEzBzQ,EAAKoC,MAAQ,CACT42B,mBAAoB1tB,IAAiB2uB,wBACrCjpB,MAAM,GAPKhR,kFAWAgD,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvQ,KAC3CA,KAAKyC,MAAM6gB,YAActjB,KAAKyC,MAAM6gB,aAAezgB,EAAUygB,YAC7DlT,WAAW,WACHG,EAAKwqB,YAAYtuB,SACjB8D,EAAKwqB,YAAYtuB,QAAQ4D,SAE9BqT,iDAKPvY,IAAiBkI,GAAG,2BAA4BrT,KAAK44B,2EAIrDztB,IAAiBzJ,eAAe,2BAA4B1B,KAAK44B,6DAqD5D,IAAA3tB,EACuCjL,KAAKyC,MAAzCsC,EADHkG,EACGlG,QAASQ,EADZ0F,EACY1F,QAAS+d,EADrBrY,EACqBqY,WAAY3Y,EADjCM,EACiCN,EAC9BkG,EAAS7Q,KAAKiC,MAAd4O,KAEFmqB,EAAsBnqB,EACxBvM,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CAAQxY,mBAAoB,EAAG5R,KAAMA,EAAMC,QAAS9Q,KAAKuK,YAAawG,kBAAgB,qBAClFzM,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CAAar6B,GAAG,qBAAqB+J,EAAE,YACvCrG,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,KACI32B,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CAAmB93B,UAAW4B,EAAQm2B,YAAavwB,EAAE,sBAEzDrG,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,KACI32B,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CAAQ11B,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CAAQ11B,QAASvF,KAAK66B,WAAYpvB,MAAM,WACnCd,EAAE,SAIf,KAEJ,OACIrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACTmgB,EASEhf,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OACItC,GAAG,yBACHuQ,IAAKnR,KAAK+6B,YACVzpB,YAAa3G,EAAE,UACfvG,IAAK2vB,OACL3iB,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvR,KAAKujB,cAChB/R,QAASxR,KAAKwjB,YACd/R,QAASzR,KAAKyjB,gBAnB1Bnf,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACi4B,GAAD,CAAgB/B,SAAUp5B,KAAKm5B,eAC9B6B,EACD12B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCAAoCoC,QAASA,GACxDjB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBwH,EAAE,cAoBvDrG,EAAArB,EAAAC,cAAC+3B,GAAA,EAAD,CACI93B,UAAW4B,EAAQq2B,iBACnB5vB,aAAYb,EAAE,UACdyX,YAAapiB,KAAKkjB,cAClB5e,EAAArB,EAAAC,cAAC6gB,GAAA9gB,EAAD,CAAe4N,KAAMyS,EAAYU,KAAM1f,EAAArB,EAAAC,cAAC+gB,GAAAhhB,EAAD,MAAgBihB,SAAU5f,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,iBApIzDM,IAAMC,YAuJnBsO,GALCC,YACZS,cACA5M,IA7JW,CACXw1B,iBAAkB,CACd1kB,OAAQ,kBAEZwkB,WAAY,CACR1c,WAAY,cA2JL1M,CAAQ8oB,cCxKjBS,eACF,SAAAA,EAAY54B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAq7B,IACfx7B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAu7B,GAAAl7B,KAAAH,KAAMyC,KAeV64B,kCAAoC,WAChCz7B,EAAK6C,SAAS,CAAE64B,qBAAqB,KAjBtB17B,EAoBnB27B,aAAe,WACP37B,EAAK47B,UAET57B,EAAK47B,SAAU,EACfrrB,WAAW,WACPtO,OAAO45B,SAASC,UACjB,OAvBH97B,EAAKoC,MAAQ,CACTs5B,qBAAqB,GAJV17B,mFASfsL,IAAiBkI,GAAG,kCAAmCrT,KAAKs7B,kFAI5DnwB,IAAiBzJ,eAAe,kCAAmC1B,KAAKs7B,oEAgBnE,IACGC,EAAwBv7B,KAAKiC,MAA7Bs5B,oBACAx2B,EAAY/E,KAAKyC,MAAjBsC,QAEFiH,EAAUuvB,EACZj3B,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQ+U,QAAQ,YAAYvM,MAAM,UAAUtI,UAAW4B,EAAQud,KAAM/c,QAASvF,KAAKw7B,cAAnF,UAGA,KAEJ,OAAOl3B,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAGrN,UAxCQzI,IAAMC,WA4CjBoC,OAvDA,CACX0c,KAAM,CACF5L,OAAQ,EACRzE,QAAS,OACT3E,MAAO,OACPsuB,aAAc,EACdnwB,MAAO,QACPowB,UAAW,SAgDJj2B,CAAmBy1B,IC3C5BS,uBACF,SAAAA,EAAYr5B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA87B,IACfj8B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAg8B,GAAA37B,KAAAH,KAAMyC,KA4CVs5B,0BAA4B,SAAAv7B,GACxBX,EAAKuO,eA9CUvO,EAiDnBm8B,oCAAsC,SAAAx7B,GAClCX,EAAK6C,SAAS,CACVu5B,qBAAsB9wB,IAAiB8wB,wBAnD5Bp8B,EAuDnBq8B,yBAA2B,SAAA17B,GACvBX,EAAK6C,SAAS,CACV4gB,YAAY,EACZ6Y,aAAc37B,EAAOwE,OACrBsK,WAAY,QA3DDzP,EA+DnBkb,kBAAoB,WAChBlb,EAAKu8B,YAAY3vB,QAAQ4vB,eAhEVx8B,EAmEnBqjB,aAAe,SAAAoZ,GACXz8B,EAAK6C,SAAS,CACV4gB,WAAYgZ,EACZH,aAAc,EACd7sB,WAAY,QAvEDzP,EA2EnBk1B,oBAAsB,SAAC/vB,EAAQob,EAAWkD,GACtC/H,aAASvW,EAAQob,GAEjB,IAAM+b,EAAe7Y,EAAazjB,EAAKoC,MAAMk6B,aAAe,EACtD7sB,EAAagU,EAAazjB,EAAKoC,MAAMqN,WAAa,KAExDzP,EAAK6C,SAAS,CACV4gB,WAAYA,EACZ6Y,aAAcA,EACd7sB,WAAYA,KApFDzP,EAwFnB0K,YAAc,WACV1K,EAAK6C,SAAS,CACV4gB,YAAY,EACZ6Y,aAAc,EACd7sB,WAAY,QA5FDzP,EAgGnB08B,uBAAyB,SAAAjwB,GACrBzM,EAAK6C,SAAS,CACV4M,WAAYhD,KA/FhBzM,EAAKu8B,YAAc74B,IAAM+M,YAEzBzQ,EAAKoC,MAAQ,CACTg6B,qBAAsB9wB,IAAiB8wB,qBACvC3Y,YAAY,EACZ6Y,aAAc,EACd7sB,WAAY,MATDzP,qFAaGsT,EAAWC,GAC7B,OAAIA,EAAU6oB,uBAAyBj8B,KAAKiC,MAAMg6B,uBAI9C7oB,EAAUkQ,aAAetjB,KAAKiC,MAAMqhB,aAIpClQ,EAAU+oB,eAAiBn8B,KAAKiC,MAAMk6B,cAItC/oB,EAAU9D,aAAetP,KAAKiC,MAAMqN,yDAQxCnE,IAAiBkI,GAAG,oCAAqCrT,KAAKg8B,qCAC9D7wB,IAAiBkI,GAAG,yBAA0BrT,KAAKk8B,0BACnD/wB,IAAiBkI,GAAG,0BAA2BrT,KAAK+7B,0EAIpD5wB,IAAiBzJ,eAAe,oCAAqC1B,KAAKg8B,qCAC1E7wB,IAAiBzJ,eAAe,yBAA0B1B,KAAKk8B,0BAC/D/wB,IAAiBzJ,eAAe,0BAA2B1B,KAAK+7B,4DA4D3D,IACGh3B,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEkE7O,KAAKiC,MAApEg6B,EAFHptB,EAEGotB,qBAAsB3Y,EAFzBzU,EAEyByU,WAAY6Y,EAFrCttB,EAEqCstB,aAAc7sB,EAFnDT,EAEmDS,WAExD,OACIhL,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQe,YAAa,UAAW,CAClD02B,uBAAwBP,KAE5B33B,EAAArB,EAAAC,cAACu5B,GAAD,CACInZ,WAAYA,EACZ/d,QAASvF,KAAK+a,kBACdqI,SAAUpjB,KAAKkjB,aACfwZ,mBAAoB18B,KAAKu8B,yBAE7Bj4B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAACy5B,GAAA,EAAD,CAAaxrB,IAAKnR,KAAKo8B,cACtB9Y,GACGhf,EAAArB,EAAAC,cAAC05B,GAAD,CACI53B,OAAQm3B,EACR7vB,KAAMgD,EACN4lB,gBAAiBl1B,KAAK+0B,oBACtBjkB,QAAS9Q,KAAKuK,eAI1BjG,EAAArB,EAAAC,cAAC25B,GAAD,cAjIMr5B,cAuIPoC,OA3IA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbyS,YAAY1M,KA0IJD,CAAmBk2B,IC/H5BgB,sNACF76B,MAAQ,CACJ+C,OAAQmG,IAAiBmkB,gBAiB7ByN,+BAAiC,SAAAv8B,GAAU,IAC/BwE,EAAWxE,EAAXwE,OAERnF,EAAK6C,SAAS,CAAEsC,cAGpBuF,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,OAAQ,0FAvBMmO,EAAWC,EAAW4pB,GAAa,IAC7Ch4B,EAAWhF,KAAKiC,MAAhB+C,OAER,OAAOoO,EAAUpO,SAAWA,8CAI5BmG,IAAiBkI,GAAG,2BAA4BrT,KAAK+8B,+EAIrD5xB,IAAiBzJ,eAAe,2BAA4B1B,KAAK+8B,iEAgB5D,IACGh4B,EAAY/E,KAAKyC,MAAjBsC,QACAC,EAAWhF,KAAKiC,MAAhB+C,OACR,OAAKA,EAGDV,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACI4N,MAAI,EACJ4R,mBAAoB,EACpB3R,QAAS9Q,KAAKuK,YACdxF,QAAS,CAAEud,KAAMvd,EAAQk4B,WAAYC,UAAWn4B,EAAQo4B,cAAe/2B,MAAOrB,EAAQq4B,YACtF94B,EAAArB,EAAAC,cAACm6B,GAAD,CAAUl6B,UAAW4B,EAAQu4B,aAAct4B,OAAQA,EAAQmV,OAAK,KARpD,YAnCC5W,IAAMC,YAmDpBoC,OAnEA,SAAAC,GAAK,MAAK,CACrBy3B,aAAc,CACVhwB,MAAO,KAEX6vB,cAAe,CACXvR,WAAY,SAEhBqR,WAAY,CACRxxB,MAAO5F,EAAME,QAAQuG,KAAKtG,QAC1BuqB,OAAQ1qB,EAAM0qB,OAAOgN,OAEzBH,UAAW,CACP9vB,MAAO,OAuDA1H,CAAmBk3B,6GCrD5BU,8MACFv7B,MAAQ,CACJ+2B,SAAU,QAGdyE,gBAAkB,SAAAhvB,GACd5O,EAAK6C,SAAS,CAAEs2B,SAAUvqB,EAAMwqB,mBAGpCC,gBAAkB,WACdr5B,EAAK6C,SAAS,CAAEs2B,SAAU,UAG9B0E,kBAAoB,WAChB79B,EAAKq5B,kBADiB,IAGdyE,EAAkB99B,EAAK4C,MAAvBk7B,cACHA,GAELvtB,WAAW,kBAAMutB,KAAiBC,QAGtCC,qBAAuB,WACnBh+B,EAAKq5B,kBADoB,IAGjB4E,EAAqBj+B,EAAK4C,MAA1Bq7B,iBACHA,GAEL1tB,WAAW,kBAAM0tB,KAAoBF,QAGzCG,iBAAmB,WACfl+B,EAAKq5B,kBADgB,IAGb8E,EAAiBn+B,EAAK4C,MAAtBu7B,aACHA,GAELA,6EAGK,IAAAl5B,EAC0B9E,KAAKyC,MAA5BsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EAAG3F,EADfF,EACeE,OACZg0B,EAAah5B,KAAKiC,MAAlB+2B,SAER,OACI10B,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WACnBzyB,aAAW,SACXqF,KAAMgT,QAAQmV,GACdzzB,QAASvF,KAAKy9B,iBACdn5B,EAAArB,EAAAC,cAACg7B,GAAAj7B,EAAD,CAAgBE,UAAU,0BAE9BmB,EAAArB,EAAAC,cAAC82B,GAAA/2B,EAAD,CACIrC,GAAG,cACHo4B,SAAUA,EACVnoB,KAAMgT,QAAQmV,GACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBnY,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBpR,QAAS9Q,KAAKk5B,iBACd50B,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK09B,kBAAmBS,UAAWC,YAAcp5B,IAChEV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC4b,GAAA7b,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,kBAE7BrG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK69B,qBAAsBM,UAAWE,YAAiBr5B,IACtEV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAAC8b,GAAA/b,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,sBAE3B0L,YAAcrR,IACZV,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK+9B,iBAAkBI,UAAWG,YAAat5B,IAC9DV,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACq7B,GAAAt7B,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,oBAtF1BpH,IAAMC,WA2GlBsO,GALCC,YACZnM,IA7GW,CACXq4B,WAAY,CACRvnB,OAAQ,UA2GO,CAAErQ,WAAW,IAChCmM,cAGWV,CAAQ0rB,cCnIhB,SAASgB,GAAUC,GAAqB,IAAfC,EAAez6B,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,IAAAA,UAAA,GAC3C,GAAKw6B,EAAL,CAEA,GAAIC,GAASD,EAAKE,YAAcF,EAAKE,WAAWh4B,OAAS,EAAG,CACxD,IAAMi4B,EAAWH,EAAKE,WAAWF,EAAKE,WAAWh4B,OAAS,GACpDk4B,EAAQlvB,SAASmvB,cACvBD,EAAME,SAASH,EAAUA,EAASj4B,QAClCk4B,EAAMG,UAAS,GAEf,IAAMC,EAAYn9B,OAAOo9B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBJ,EAAKxjB,UAAYwjB,EAAK3iB,aAG1B2iB,EAAKpuB,SCfT,IAAMmkB,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGF6K,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPp2B,GACN,MAA0C,qBAA5BpJ,KAAKs/B,QAAQl2B,EAAEsF,UAEjC+wB,eANiB,SAMFr2B,GACX,MAA+C,qBAAjCpJ,KAAKu/B,aAAan2B,EAAEsF,WAI1C2wB,GAAMC,QAAQ9K,KAAqB,EACnC6K,GAAMC,QAAQ9K,KAAiB,EAC/B6K,GAAMC,QAAQ9K,KAAgB,EAC9B6K,GAAMC,QAAQ9K,KAAe,EAC7B6K,GAAMC,QAAQ9K,KAAkB,EAEhC6K,GAAME,aAAa/K,KAAmB,EACtC6K,GAAME,aAAa/K,KAAqB,EACxC6K,GAAME,aAAa/K,KAAqB,EACxC6K,GAAME,aAAa/K,KAAsB,aCFnCkL,eACF,SAAAA,EAAYj9B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA0/B,IACf7/B,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA4/B,GAAAv/B,KAAAH,KAAMyC,KASVk9B,QAAU,WACN,OAAO9/B,EAAK+/B,cAAcnzB,QAAQ6B,WAXnBzO,EAcnBwQ,MAAQ,WAAmB,IAAlBquB,EAAkBz6B,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,IAAAA,UAAA,GAGvBu6B,GAFa3+B,EAAK+/B,cAAcnzB,QAEhBiyB,IAjBD7+B,EAoBnB0gB,aAAe,WAAM,IAAAzb,EACYjF,EAAK4C,MAA1Bo9B,EADS/6B,EACT+6B,OAAQC,EADCh7B,EACDg7B,SACXD,GACAC,GAELA,EAASD,EAAOj/B,KAzBDf,EA4BnBkgC,YAAc,SAAAtxB,GAAS,IACXoxB,EAAWhgC,EAAK4C,MAAhBo9B,OAERpxB,EAAME,iBAEN,IAAM8vB,EAAO5+B,EAAK+/B,cAAcnzB,QAC1B9F,EAAS83B,EAAKuB,QAAQr5B,OAEtB2F,GADYmyB,EAAKuB,QAAQC,UAClBpgC,EAAK8/B,WAElB9/B,EAAK6C,SAAS,CACVw9B,aAAcv5B,EAAS2F,EAAK3F,SAGhCpF,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT1B,GAAIi/B,EAAOj/B,GACX0L,UA7CWzM,EAiDnB0jB,cAAgB,SAAA9U,GACZ,IAAMgwB,EAAO5+B,EAAK+/B,cAAcnzB,QAC1BwzB,EAAYxB,EAAKuB,QAAQC,UAEzBt5B,EADY9G,EAAK8/B,UACEh5B,OAErBw5B,GAAe,EACblB,EAAYn9B,OAAOo9B,eACnBM,EAAYH,GAAMG,UAAU/wB,GAC5BgxB,EAAiBJ,GAAMI,eAAehxB,GAM5C,OAJIwwB,IACAkB,IAAiBlB,EAAUmB,YAGvB3xB,EAAMrK,KACV,IAAK,YAED,IADavE,EAAK8/B,UACP,KAAA10B,EACsBpL,EAAK4C,MAA1Bo9B,EADD50B,EACC40B,OAAQC,EADT70B,EACS60B,SAMhB,OALIA,GACAA,EAASD,EAAOj/B,IAAI,GAGxB6N,EAAME,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAvC,EACsBvM,EAAK4C,MAA7Bo9B,EADEzzB,EACFyzB,OAAQQ,EADNj0B,EACMi0B,YAMhB,OALIR,GAAUQ,GACVA,EAAYR,EAAOj/B,IAGvB6N,EAAME,kBACC,EAEX,IAAK,UACD,IAAMswB,EAAYn9B,OAAOo9B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMC,EAAa9B,EAAKE,YAAcF,EAAKE,WAAWh4B,OAAS,EAAI83B,EAAKE,WAAW,GAAK,KAExF,IAAK4B,GAAetB,EAAUuB,aAAeD,IAAetB,EAAUwB,aAAe,KAAAjwB,EACjD3Q,EAAK4C,MAA7Bo9B,EADyErvB,EACzEqvB,OAAQa,EADiElwB,EACjEkwB,YAMhB,OALIA,GACAA,EAAYb,EAAOj/B,IAGvB6N,EAAME,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMswB,EAAYn9B,OAAOo9B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMK,EACFlC,EAAKE,YAAcF,EAAKE,WAAWh4B,OAAS,EAAI83B,EAAKE,WAAWF,EAAKE,WAAWh4B,OAAS,GAAK,KAElG,IAAKg6B,GAAc1B,EAAUuB,aAAeG,GAAa1B,EAAUwB,eAAiBE,EAAUh6B,OAAS,KAAAwU,EACnEtb,EAAK4C,MAA7Bo9B,EAD2F1kB,EAC3F0kB,OAAQQ,EADmFllB,EACnFklB,YAMhB,OALIA,GACAA,EAAYR,EAAOj/B,IAGvB6N,EAAME,kBACC,GAOnB,SAAI6wB,IAAaC,OAIb94B,GAAUs5B,IAAcE,KACxB1xB,EAAME,kBACC,KAvII9O,EA6InB4jB,YAAc,SAAAhV,GACVA,EAAME,iBAEN,IACMsxB,EADOpgC,EAAK+/B,cAAcnzB,QACTuzB,QAAQC,UAEzBhB,EAAYn9B,OAAOo9B,eACnB0B,EAAkB3B,EAAYA,EAAUmB,WAAa,GAErD9xB,EAAYzO,EAAK8/B,UACvB,KAAIrxB,EAAU3H,OAASs4B,EAAUt4B,QAAUs5B,GAA3C,CAEA,IAAIY,EAAYpyB,EAAMgB,cAAcC,QAAQ,cACvCmxB,IAELA,EAAYA,EAAUC,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDxyB,EAAU3H,OAASi6B,EAAgBj6B,OAASk6B,EAAUl6B,OAASs5B,IAC/DY,EAAYA,EAAUzM,OAAO,EAAG6L,EAAY3xB,EAAU3H,OAASi6B,EAAgBj6B,SAEnFgJ,SAASC,YAAY,cAAc,EAAOixB,MA9J1ChhC,EAAK+/B,cAAgBr8B,IAAM+M,YAE3BzQ,EAAKoC,MAAQ,CACTi+B,aAAca,KANHlhC,wEAoKV,IAAAyb,EACkBtb,KAAKyC,MAApBsC,EADHuW,EACGvW,QAAS4F,EADZ2Q,EACY3Q,EACTu1B,EAAiBlgC,KAAKiC,MAAtBi+B,aAER,OACI57B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAK4/B,cACVh/B,GAAG,0BACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,UACfq2B,cAAaC,IACbC,kBAAiBH,IACjBI,QAASnhC,KAAK+/B,YACdxuB,UAAWvR,KAAKujB,cAChB9R,QAASzR,KAAKyjB,cAElBnf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQk5B,WAAY14B,QAASvF,KAAKugB,cACrDjc,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAWm+B,SAAS,YAG5B98B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mCAADvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAwCiF,EAAQe,aAAc,MACvFo6B,GAAgBe,IAAqBI,KAClC/8B,EAAArB,EAAAC,cAACo+B,GAAA,EAAD,CACIC,MAAM,SACNp+B,UAAW4B,EAAQy8B,YACnB/1B,MAAOy0B,GAAgB,EAAI,gBAAkB,QAC7CloB,QAAQ,aACPkoB,WAnMM38B,IAAMC,WAyNtBsO,GAPCC,YACZsN,cACAzZ,IAlOW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBm+B,WAAY,CACRhsB,QAAS,GAEbuvB,YAAa,CACTlvB,SAAU,WACV+d,MAAO,GACPC,OAAQ,EACRtN,SAAU,GACVye,WAAY,SAEblvB,YAAY1M,MAwNf2M,cACAgN,cAGW1N,CAAQ4tB,ICtPhB,SAASgC,GAAYC,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAASj7B,QAAUm7B,IAXrBC,CAAgBH,GAAW,OAAO,EAEvC,IAAMI,EAAmBH,EAAQ1yB,OAAO,SAAApO,GAAC,OAAI8iB,QAAQ9iB,EAAEuL,QACvD,QAAI01B,EAAiBr7B,QAAU,IAExBq7B,EAAiBC,MAAMC,IASlC,SAASA,GAAcrC,GACnB,QAAKA,MACAA,EAAOvzB,MAELuzB,EAAOvzB,KAAK3F,QAAUs6B,SCoG3BthC,GAAQ,gBAxHV,SAAAwiC,IAAc,IAAAtiC,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmiC,IACVtiC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqiC,GAAAhiC,KAAAH,QAQJI,MAAQ,WACJP,EAAK8hC,KAAO,MAVF9hC,EAadU,SAAW,SAAAC,GACP,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBC,EAAwBD,EAAxBC,oBACR,IAAKA,EAAqB,MAE1B,OAAQA,EAAoB,UACxB,IAAK,2BACDZ,EAAKO,WArBXP,EAiCdqB,eAAiB,SAAAV,GACb,OAAQA,EAAO,UACX,IAAK,sBACDX,EAAKoO,IAAI,CACLrN,GAAImzB,KAAKqO,MACTR,SAAU,GACVC,QAAS,KAGbhiC,EAAKoB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBohC,EAAaphC,EAAbohC,SAER/hC,EAAKmB,OAAOnB,EAAK8hC,KAAM,CAAEC,aAEzB/hC,EAAKoB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnBI,EAAaJ,EAAbI,GAAI0L,EAAS9L,EAAT8L,KACJu1B,EAAYhiC,EAAK8hC,KAAjBE,QAERhiC,EAAKmB,OAAOnB,EAAK8hC,KAAM,CAAEE,QAASA,EAAQ34B,IAAI,SAAAnI,GAAC,OAAKA,EAAEH,KAAOA,EAATd,OAAAkS,EAAA,EAAAlS,CAAA,GAAmBiB,EAAnB,CAAsBuL,SAAtBxM,OAAAkS,EAAA,EAAAlS,CAAA,GAAoCiB,OAExFlB,EAAKoB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBq/B,EAAWr/B,EAAXq/B,OACAgC,EAAYhiC,EAAK8hC,KAAjBE,QAERhiC,EAAKmB,OAAOnB,EAAK8hC,KAAM,CAAEE,QAAO,GAAAl9B,OAAA7E,OAAAmlB,GAAA,EAAAnlB,CAAM+hC,GAAN,CAAehC,MAC/ChgC,EAAKoB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzBI,EAAOJ,EAAPI,GACAihC,EAAYhiC,EAAK8hC,KAAjBE,QAERhiC,EAAKmB,OAAOnB,EAAK8hC,KAAM,CAAEE,QAASA,EAAQ1yB,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOA,MAC/Df,EAAKoB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDX,EAAKoO,IAAI,MAETpO,EAAKoB,KAAK,yBAA0BT,KAjFlCX,EAyFdyB,iBAAmB,WACfC,KAAgBC,YAAY,SAAU3B,EAAKU,UAC3CgB,KAAgBC,YAAY,eAAgB3B,EAAKqB,iBA3FvCrB,EA8Fd4B,oBAAsB,WAClBF,KAAgBG,eAAe,SAAU7B,EAAKU,UAC9CgB,KAAgBG,eAAe,eAAgB7B,EAAKqB,iBA7FpDrB,EAAKO,QAELP,EAAKyB,mBACLzB,EAAK8B,gBAAgBC,KANX/B,sEAmGPwiC,EAASC,GACZtiC,KAAKiO,IAAInO,OAAOkB,OAAO,GAAIqhC,EAASC,gCAGpCX,GACA3hC,KAAK2hC,KAAOA,gDAIZ,IAAK3hC,KAAK2hC,KAAM,OAAO,KACvB,IAAKD,GAAY1hC,KAAK2hC,MAAO,OAAO,KAFlB,IAAAY,EAGYviC,KAAK2hC,KAEnC,MAAO,CACHr/B,QAAS,mBACTs/B,SAPcW,EAGVX,SAKJC,QARcU,EAGAV,QAKG1yB,OAAO,SAAApO,GAAC,OAAI8iB,QAAQ9iB,EAAEuL,QAAOpD,IAAI,SAAAnI,GAAC,OAAIA,EAAEuL,qBApH7CzK,eA0HxBC,OAAO6/B,KAAOhiC,GACCA,UC3ET6iC,uBACF,SAAAA,EAAY//B,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAwiC,IACf3iC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA0iC,GAAAriC,KAAAH,KAAMyC,KA8BVggC,0BAA4B,SAAAjiC,GAAU,IAC1BmhC,EAASQ,GAATR,KAER9hC,EAAK6C,SAAS,CACVggC,SAAS,EACTxC,aAAcyC,IACdhB,UArCW9hC,EAyCnB+iC,+BAAiC,SAAApiC,GAAU,IAC/BmhC,EAASQ,GAATR,KAEFlD,EAAO5+B,EAAKgjC,YAAYp2B,QACxB9F,EAAS83B,EAAKuB,QAAQr5B,OACtB2H,EAAYmwB,EAAKnwB,UAEvBzO,EAAK6C,SAAS,CACVw9B,aAAcv5B,EAAS2H,EAAU3H,OACjCg7B,UAlDW9hC,EAsDnBijC,uBAAyB,SAAAtiC,GAAU,IACvBmhC,EAASQ,GAATR,KAER9hC,EAAK6C,SAAS,CAAEi/B,UAzDD9hC,EA4DnBkjC,gCAAkC,SAAAviC,GAAU,IAChCmhC,EAASQ,GAATR,KAER9hC,EAAK6C,SAAS,CAAEi/B,QAAQ,WACpBvxB,WAAW,WACMvQ,EAAKmjC,cAAcl8B,IAAI66B,EAAKE,QAAQl7B,OAAS,GAErD0J,OAAM,QAnEJxQ,EAkFnB0jB,cAAgB,SAAA9U,GACZ,IAAMgwB,EAAO5+B,EAAKgjC,YAAYp2B,QACxBwzB,EAAYxB,EAAKuB,QAAQC,UAEzBt5B,EADY83B,EAAKnwB,UACE3H,OAErBw5B,GAAe,EACblB,EAAYn9B,OAAOo9B,eACnBM,EAAYH,GAAMG,UAAU/wB,GAC5BgxB,EAAiBJ,GAAMI,eAAehxB,GAM5C,OAJIwwB,IACAkB,IAAiBlB,EAAUmB,YAGvB3xB,EAAMrK,KACV,IAAK,QACD,IAAKqK,EAAMw0B,SAIP,OAHApjC,EAAKqjC,sBAAsB,GAE3Bz0B,EAAME,kBACC,EAGX,MAEJ,IAAK,YACD,IAAMswB,EAAYn9B,OAAOo9B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAUqB,YAAa,MAE5B,IAAMK,EACFlC,EAAKE,YAAcF,EAAKE,WAAWh4B,OAAS,EAAI83B,EAAKE,WAAWF,EAAKE,WAAWh4B,OAAS,GAAK,KAElG,IAAKg6B,GAAc1B,EAAUuB,aAAeG,GAAa1B,EAAUwB,eAAiBE,EAAUh6B,OAI1F,OAHA9G,EAAKqjC,sBAAsB,GAE3Bz0B,EAAME,kBACC,EAOnB,SAAI6wB,IAAaC,OAIb94B,GAAUs5B,IAAcE,KACxB1xB,EAAME,kBACC,KArII9O,EA2InB4jB,YAAc,SAAAhV,GACVA,EAAME,iBAEN,IAAM8vB,EAAO5+B,EAAKgjC,YAAYp2B,QACxBwzB,EAAYxB,EAAKuB,QAAQC,UAEzBhB,EAAYn9B,OAAOo9B,eACnB0B,EAAkB3B,EAAYA,EAAUmB,WAAa,GAErD9xB,EAAYmwB,EAAKnwB,UACvB,KAAIA,EAAU3H,OAASs4B,EAAUt4B,QAAUs5B,GAA3C,CAEA,IAAIY,EAAYpyB,EAAMgB,cAAcC,QAAQ,cACvCmxB,IAEDvyB,EAAU3H,OAASi6B,EAAgBj6B,OAASk6B,EAAUl6B,OAASs5B,IAC/DY,EAAYA,EAAUzM,OAAO,EAAG6L,EAAY3xB,EAAU3H,OAASi6B,EAAgBj6B,SAEnFgJ,SAASC,YAAY,cAAc,EAAOixB,MA7J3BhhC,EAgKnBkgC,YAAc,SAAAtxB,GACVA,EAAME,iBAEN,IAAM8vB,EAAO5+B,EAAKgjC,YAAYp2B,QAGxB6B,EAAYmwB,EAAKnwB,UAGL,SAFAmwB,EAAKlwB,YAGnBkwB,EAAKnwB,UAAY,IAOrB/M,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACTs/B,SAAUtzB,KAnLCzO,EAuLnBsjC,gBAAkB,WAAM,IACZxB,EAAS9hC,EAAKoC,MAAd0/B,KACR,GAAKA,KAEeA,EAAZE,QACIl7B,QAAUy8B,KAAtB,CAEA,IAAMvD,EAAS,CACXj/B,GAAImzB,KAAKqO,MACT91B,KAAM,IAGV/K,KAAgBiJ,aAAa,CACzBlI,QAAS,4BACTu9B,aArMWhgC,EAyMnBwjC,mBAAqB,SAACziC,GAA0BqD,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,IAAAA,UAAA,GAExCpE,EAAKyjC,wBAAwB1iC,GAE7Bf,EAAK0gB,aAAa3f,IA7MPf,EAiNnB0gB,aAAe,SAAA3f,GACXW,KAAgBiJ,aAAa,CACzBlI,QAAS,+BACT1B,QApNWf,EAwNnByjC,wBAA0B,SAAA1iC,GAAM,IACpB+gC,EAAS9hC,EAAKoC,MAAd0/B,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBE,EAAYF,EAAZE,QAEFjd,EAAQid,EAAQhd,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOA,IACxC2iC,EAAY3e,EAAQ,EACtB4e,GAAe,EACVt8B,EAAI0d,EAAO1d,EAAI26B,EAAQl7B,OAAQO,IAAK,CAEzC,GADiB26B,EAAQ36B,GAAjBoF,KACE,CACNk3B,GAAe,EACf,OAIJA,GACA3jC,EAAKwjC,mBAAmBziC,GAG5B,IAAM6iC,EAAW5jC,EAAKmjC,cAAcl8B,IAAIy8B,GACxC,GAAKE,EAOLA,EAASpzB,OAAM,QAJXmuB,GAFgB3+B,EAAKgjC,YAAYp2B,SAEd,KAjPR5M,EAwPnB6jC,sBAAwB,SAAA9iC,GAAM,IAClB+gC,EAAS9hC,EAAKoC,MAAd0/B,KACR,GAAKA,EAAL,CAF0B,IAOpB4B,EAHc5B,EAAZE,QAEchd,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOA,IACpB,EAEpB6iC,EAAW5jC,EAAKmjC,cAAcl8B,IAAIy8B,GACxC,GAAKE,EAOLA,EAASpzB,OAAM,QAJXmuB,GAFgB3+B,EAAKgjC,YAAYp2B,SAEd,KArQR5M,EA4QnBqjC,sBAAwB,SAAAtiC,GAAM,IAClB+gC,EAAS9hC,EAAKoC,MAAd0/B,KACR,GAAKA,EAAL,CAF0B,IAIlBE,EAAYF,EAAZE,QAEFjd,EAAQid,EAAQhd,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOA,IACxC+iC,EAAY/e,EAAQ,EAEpBgf,EAAW/jC,EAAKmjC,cAAcl8B,IAAI68B,GACxC,GAAKC,EAULA,EAASvzB,MAAMuzB,GAAU,OAVzB,CACI,IAAMt3B,EAAOsY,GAAS,GAAKA,EAAQid,EAAQl7B,OAASk7B,EAAQjd,GAAOtY,KAAO,GAC1E,GAAIu1B,EAAQl7B,SAAW2F,EACnB,OAGJzM,EAAKsjC,qBA5RMtjC,EAmSnBgkC,QAAU,WAAM,IACJlC,EAAS9hC,EAAKoC,MAAd0/B,KACR,GAAKA,EAAL,CAFY,IAIJE,EAAYF,EAAZE,QAEFiC,EAAWV,IAAyBvB,EAAQl7B,OAElD,OAAIm9B,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAAn/B,OAAsBy+B,IAAyBvB,EAAQl7B,OAAvD,oBAlTe9G,EAqTnB0K,YAAc,YF9UX,SAAqBo3B,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,QAAID,GAEGC,EAAQ/gC,KAAK,SAAAC,GAAC,OAAI8iB,QAAQ9iB,EAAEuL,QE2U3By3B,CAFalkC,EAAKoC,MAAd0/B,MAKJ9hC,EAAKmkC,yBAFLnkC,EAAK6C,SAAS,CAAEggC,SAAS,KAzTd7iC,EA+TnBsM,WAAa,WAAM,IACP83B,EAAWpkC,EAAK4C,MAAhBwhC,OAEFC,EAAmB/B,GAAUgC,sBAC9BD,IAELD,EAAOC,GAEPrkC,EAAKmkC,2BAvUUnkC,EA0UnBukC,wBAA0B,WACtBvkC,EAAK6C,SAAS,CAAEggC,SAAS,KA3UV7iC,EA8UnBmkC,uBAAyB,WACrBnkC,EAAKukC,0BAEL7iC,KAAgBiJ,aAAa,CACzBlI,QAAS,4BA/UbzC,EAAKgjC,YAAct/B,IAAM+M,YACzBzQ,EAAKmjC,cAAgB,IAAIh8B,IAEzBnH,EAAKoC,MAAQ,CACT0/B,KAAM,KACNe,SAAS,EACTxC,aAAcyC,KATH9iC,mFAcfsiC,GAAU9uB,GAAG,yBAA0BrT,KAAK8iC,wBAC5CX,GAAU9uB,GAAG,+BAAgCrT,KAAK8iC,wBAClDX,GAAU9uB,GAAG,sBAAuBrT,KAAKyiC,2BACzCN,GAAU9uB,GAAG,4BAA6BrT,KAAK+iC,iCAC/CZ,GAAU9uB,GAAG,yBAA0BrT,KAAK8iC,wBAC5CX,GAAU9uB,GAAG,2BAA4BrT,KAAK4iC,+EAI9CT,GAAUzgC,eAAe,yBAA0B1B,KAAK8iC,wBACxDX,GAAUzgC,eAAe,+BAAgC1B,KAAK8iC,wBAC9DX,GAAUzgC,eAAe,sBAAuB1B,KAAKyiC,2BACrDN,GAAUzgC,eAAe,4BAA6B1B,KAAK+iC,iCAC3DZ,GAAUzgC,eAAe,yBAA0B1B,KAAK8iC,wBACxDX,GAAUzgC,eAAe,2BAA4B1B,KAAK4iC,2EA4C3C//B,EAAWC,EAAWC,GAAU,IAAAwN,EAAAvQ,KAC9BA,KAAKiC,MAAd0/B,OAEK7+B,EAAU6+B,MACnBvxB,WAAW,WACPouB,GAAUjuB,EAAKsyB,YAAYp2B,SAAS,IACrC,oCAwQF,IAAAqT,EAAA9f,KAAA8E,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAEmC7O,KAAKiC,MAArCi+B,EAFHrxB,EAEGqxB,aAAcwC,EAFjB7zB,EAEiB6zB,QAASf,EAF1B9yB,EAE0B8yB,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAME,EAAUF,EAAOA,EAAKE,QAAU,GAEtC7hC,KAAKgjC,cAAcqB,QACnB,IAAMvmB,EAAQ+jB,EAAQ34B,IAAI,SAACnI,EAAGmG,GAAJ,OACtB5C,EAAArB,EAAAC,cAACohC,GAAD,CACInzB,IAAK,SAAA0L,GAAE,OAAIiD,EAAKkjB,cAAc/0B,IAAI/G,EAAG2V,IACrCzY,IAAKrD,EAAEH,GACPi/B,OAAQ9+B,EACR++B,SAAUhgB,EAAKujB,mBACf3C,YAAa5gB,EAAK4jB,sBAClBrD,YAAavgB,EAAKojB,0BAIpBqB,EAAenB,IAAyBvB,EAAQl7B,OAAS,EACzDrG,EAAON,KAAK6jC,UAElB,OACIv/B,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQk4B,WACnBpsB,MAAI,EACJ4R,mBAAoB,EACpB3R,QAAS9Q,KAAKuK,YACdwG,kBAAgB,gBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,gBAAgB+J,EAAE,YAClCrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,CAAe8B,QAAS,CAAEud,KAAMvd,EAAQy/B,cACpClgC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,qCACXmB,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,YAAYuG,MAAO,CAAEkmB,SAAU,IAC9D95B,EAAE,aAENu1B,GAAgB4B,IAAuB4C,KACpCpgC,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAOy0B,GAAgB,EAAI,gBAAkB,QAASloB,QAAQ,aACrEkoB,IAIb57B,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAK6iC,YACVjiC,GAAG,8BACHwQ,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa3G,EAAE,gBACfq2B,cAAac,IACbZ,kBAAiByB,IACjBlxB,QAASzR,KAAKyjB,YACdlS,UAAWvR,KAAKujB,cAChB4d,QAASnhC,KAAK+/B,cAElBz7B,EAAArB,EAAAC,cAACwb,GAAAzb,EAAD,CAASE,UAAW4B,EAAQ4/B,cAC5BrgC,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAYwI,MAAM,UAAUuM,QAAQ,aAC/BrN,EAAE,gBAEPrG,EAAArB,EAAAC,cAAC2W,GAAA5W,EAAD,CAAM8B,QAAS,CAAEud,KAAMvd,EAAQ6/B,WAC1B9mB,EACAymB,GACGjgC,EAAArB,EAAAC,cAACsU,GAAAvU,EAAD,CACIgC,UAAU,EACV9B,UAAW4B,EAAQ2S,SACnBD,QAAM,EACNlS,QAASvF,KAAKmjC,iBACd7+B,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc4hC,mBAAiB,EAAC7+B,QAAS2E,EAAE,mBAIvDrG,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,KAAa3C,IAEjBgE,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKuK,aACjCI,EAAE,WAEN+2B,GAAYC,IACTr9B,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKmM,YACjCxB,EAAE,WAKnBrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQk4B,WACnBpsB,KAAM6xB,EACNjgB,mBAAoB,EACpB3R,QAAS9Q,KAAKokC,wBACdrzB,kBAAgB,gBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,gBAAgB+J,EAAE,yBAClCrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,CAAe8B,QAAS,CAAEud,KAAMvd,EAAQy/B,cAAgB75B,EAAE,wBAC1DrG,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKokC,yBACjCz5B,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKgkC,wBACjCr5B,EAAE,iBAvbApH,IAAMC,YA2ctBsO,GAPCC,YACZsN,cACAzZ,IA3dW,SAAAC,GAAK,MAAK,CACrBo3B,WAAY,CACRxxB,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9Bw+B,YAAa,CACTl3B,MAAO,KAEXq3B,YAAa,CACTjuB,OAAQ,aAEZkuB,SAAU,CACNluB,OAAQ,WAEZgB,SAAU,CACNzF,QAAS,YACTxG,MAAO,UACP8B,OAAQ,IAEZu3B,eAAgB,MA0chBtyB,cACAgN,cAGW1N,CAAQ0wB,yBCjbRuC,sNA/CXra,wBAA0B,SAAAlqB,GAAU,IAAAsE,EACSjF,EAAK4C,MAAtCuC,EADwBF,EACxBE,OAAQob,EADgBtb,EAChBsb,UAAW/T,EADKvH,EACLuH,UAC3B,GAAKA,EAAL,CAFgC,IAIxBJ,EAAUI,EAAVJ,MACHA,GAEDzL,EAAOwE,SAAWA,GAAUxE,EAAO4f,YAAcA,GAAa5f,EAAOoqB,SAAW3e,EAAMrL,IACtFf,EAAKuO,mGA3BT3E,KAAU4J,GAAG,qCAAsCrT,KAAK0qB,yBACxDjhB,KAAU4J,GAAG,iCAAkCrT,KAAK0qB,yBACpDjhB,KAAU4J,GAAG,oCAAqCrT,KAAK0qB,yBACvDjhB,KAAU4J,GAAG,wBAAyBrT,KAAK0qB,yBAC3CjhB,KAAU4J,GAAG,mCAAoCrT,KAAK0qB,yBACtDjhB,KAAU4J,GAAG,iCAAkCrT,KAAK0qB,yBACpDjhB,KAAU4J,GAAG,qCAAsCrT,KAAK0qB,wEAIxDjhB,KAAU/H,eAAe,qCAAsC1B,KAAK0qB,yBACpEjhB,KAAU/H,eAAe,iCAAkC1B,KAAK0qB,yBAChEjhB,KAAU/H,eAAe,oCAAqC1B,KAAK0qB,yBACnEjhB,KAAU/H,eAAe,wBAAyB1B,KAAK0qB,yBACvDjhB,KAAU/H,eAAe,mCAAoC1B,KAAK0qB,yBAClEjhB,KAAU/H,eAAe,iCAAkC1B,KAAK0qB,yBAChEjhB,KAAU/H,eAAe,qCAAsC1B,KAAK0qB,0DAe/D,IAAAzf,EACoCjL,KAAKyC,MAAtCuC,EADHiG,EACGjG,OAAQob,EADXnV,EACWmV,UAAW/T,EADtBpB,EACsBoB,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGJ,EAAUI,EAAVJ,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM8e,EAAMC,YAAO/e,GACbkgB,EAAYjB,aAAmBjf,GAC/B+4B,EAAcC,aAAajgC,EAAQob,GAEzC,OACI9b,EAAArB,EAAAC,cAAA,OAAKC,UAAU,cACXmB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,mBACA,CAAE6/B,yBAA0BF,GAC5B,CAAEG,4BAA6Bpa,GAC/B,CAAEsB,gBAAiBF,IAEvBiZ,WAAW,EACXra,IAAKA,EACLsa,IAAI,aAvDA9hC,IAAMC,YCWxB8hC,sNASFC,mBAAqB,SAAA/iC,GAAU,IAAAsC,EACGjF,EAAK4C,MAA3BuC,EADmBF,EACnBE,OAAQob,EADWtb,EACXsb,UAEZpb,IAAWxC,EAAO2H,SAAWiW,IAAc5d,EAAO5B,IAClDf,EAAKuO,iBAIbyF,YAAc,SAAApF,GACVA,EAAMuS,qBAGVwkB,WAAa,SAAA/2B,GACTA,EAAMuS,kBADY,IAAA/V,EAGqBpL,EAAK4C,MAApCuC,EAHUiG,EAGVjG,OAAQob,EAHEnV,EAGFmV,UAAW7a,EAHT0F,EAGS1F,QAErBsF,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,OAAKvV,EACD46B,aAAiB56B,GAAiB,MAEtC0Q,aAASvW,EAAQob,GAAW,QACxB7a,GAASA,MAJQ,yFAzBrBuG,KAAauH,GAAG,mBAAoBrT,KAAKulC,mEAIzCz5B,KAAapK,eAAe,mBAAoB1B,KAAKulC,qDA4BhD,IAAAn5B,EACqCpM,KAAKyC,MAAvCsC,EADHqH,EACGrH,QAAS4F,EADZyB,EACYzB,EAAG3F,EADfoH,EACepH,OAAQob,EADvBhU,EACuBgU,UAEtBvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GAErCuD,EAAS9Y,EAAiB66B,aAAS76B,GAAhB,KACnBmB,EAAWnB,EAAyBmnB,aAAWnnB,EAASF,GAAnCA,EAAE,WACrB0B,EAAYs5B,aAAkB3gC,EAAQob,GAO5C,OALIqlB,aAAiB56B,KACjB8Y,EAAQ,KACR3X,EAAUrB,EAAE,mBAIZrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,QAAQif,YAAapiB,KAAKwlC,WAAYjgC,QAASvF,KAAK6T,aAC/DvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBN,EAAQ6gC,yBAClDv5B,GAAa/H,EAAArB,EAAAC,cAAC2iC,GAAD,CAAW7gC,OAAQA,EAAQob,UAAWA,EAAW/T,UAAWA,IAC1E/H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACVwgB,GACGrf,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,sBAAuBN,EAAQ+gC,kBAAmBniB,GAEjFrf,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,yBAA0BN,EAAQghC,uBACxD/5B,aA1DTzI,IAAMC,YA8EXsO,GALCC,YACZnM,IAjFW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBimC,qBAAsB,CAClBt6B,MAAO5F,EAAME,QAAQuG,KAAKoH,YAE3BsyB,YAAangC,KA6EG,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQwzB,IC9EjBW,sNACF17B,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,oBACT0C,OAAQnF,EAAK4C,MAAMuC,OACnBob,UAAW,6EAIV,IAAAtb,EACkC9E,KAAKyC,MAApCsC,EADHD,EACGC,QAASC,EADZF,EACYE,OAAQob,EADpBtb,EACoBsb,UACzB,OAAKpb,GACAob,EAGD9b,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACgjC,GAAAjjC,EAAD,CAAWE,UAAW4B,EAAQohC,aAElC7hC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCACXmB,EAAArB,EAAAC,cAACkjC,GAAD,CAAOphC,OAAQA,EAAQob,UAAWA,KAEtC9b,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQua,gBAAiB9T,aAAW,QAAQjG,QAASvF,KAAKuK,aAC7EjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,SAbI,YAXCM,IAAMC,YAqCpBoC,OA/CA,SAAAC,GAAK,MAAK,CACrBsgC,UAAW,CACPl0B,QAAS,GACTxG,MAAO5F,EAAME,QAAQC,QAAQC,MAEjCqZ,gBAAiB,CACb5I,OAAQ,KAyCD9Q,CAAmBqgC,IC1BnBI,cA3BX,SAAAA,EAAYrhC,GAASlF,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAqmC,GACjBrmC,KAAKgF,OAASA,EACdhF,KAAKsmC,WAAa,2DAGZt7B,GACN,GAAKhL,KAAKgF,OAAV,CAEA,GAAIhF,KAAKsmC,YAActmC,KAAKsmC,WAAW,WAAat7B,EAAO,SAAU,CACjE,IAAIo3B,EAAM,IAAIrO,KAEd,GADAqO,EAAImE,WAAWnE,EAAIoE,aAAeC,MAC9BzmC,KAAK0mC,gBAAkB1mC,KAAK0mC,eAAiBtE,EAC7C,OAIRpiC,KAAKsmC,WAAat7B,EAClBhL,KAAK0mC,eAAiB,IAAI3S,KAE1BxyB,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnK,KAAKgF,OACdgG,OAAQA,wBCKd27B,WAAoBpjC,IAAMqjC,KAAK,kBAAM59B,QAAAC,IAAA,CAAA49B,EAAAz9B,EAAA,GAAAy9B,EAAAz9B,EAAA,KAAA7G,KAAAskC,EAAAC,KAAA,cAYrCC,eACF,SAAAA,EAAYtkC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA+mC,IACflnC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAinC,GAAA5mC,KAAAH,KAAMyC,KAgEVukC,0BAA4B,SAAAxmC,GAAU,IACjBymC,EAASzmC,EAAlBuB,QACR,GAAKklC,EAAL,CAFkC,IAI1BllC,EAAsCklC,EAAtCllC,QAASyL,EAA6By5B,EAA7Bz5B,UAAWF,EAAkB25B,EAAlB35B,MAAOC,EAAW05B,EAAX15B,OACnC,GAAKxL,EAAL,CAEAlC,EAAKqnC,cAAcz6B,QAAQ6B,UAAY,KACvCzO,EAAKqnC,cAAcz6B,QAAQ06B,YAAc,KACzCtnC,EAAK0O,UAAY,KAEjB,IAAMvC,EAAU,CACZ1J,QAAS,sBACTP,QAAS,CACLO,QAAS,cACT1B,GAAImB,EAAQnB,IAEhB0M,QACAC,UAGJ,GAAIC,EAAW,KACI45B,EAAmD55B,EAA1DF,MAA+B+5B,EAA2B75B,EAAnCD,OAAyBtB,EAAUuB,EAAVvB,MAExDD,EAAQwB,UAAY,CAChBA,UAAW,CACPlL,QAAS,cACT1B,GAAIqL,EAAMrL,IAEd0M,MAAO85B,EACP75B,OAAQ85B,GAIhBxnC,EAAKynC,eAAet7B,GAAS,EAAM,SAAAxJ,MAEnCjB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,UAvGKT,EA2GnB0nC,oBAAsB,SAAA/mC,GAAU,IACZkY,EAAkB7Y,EAAKoC,MAA/B+C,OACAA,EAAsBxE,EAAtBwE,OAAQob,EAAc5f,EAAd4f,UAEZ1H,IAAkB1T,IAItBnF,EAAK6C,SAAS,CAAE8kC,iBAAkBpnB,IAE9BA,GACAvgB,EAAK4nC,kBAtHM5nC,EA0HnB8sB,qBAAuB,SAAAnsB,GACAX,EAAKoC,MAAhB+C,SACOxE,EAAOosB,aAEtB/sB,EAAK0O,UAAY,KACjB1O,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOosB,WACf4a,iBAAkBE,YAA6BlnC,EAAOosB,YACtD+a,iBAAiB,MAlIN9nC,EAsInB+nC,SAAW,WAAM,IACL5iC,EAAWnF,EAAKoC,MAAhB+C,OAEF6iC,EAAUhoC,EAAKqnC,cAAcz6B,QAE7Bq7B,EAAQC,YAAa/iC,GACvB8iC,GACAD,EAAQv5B,UAAYw5B,EAAMx7B,KAC1BzM,EAAK0O,UAAYu5B,EAAMx7B,OAEvBu7B,EAAQv5B,UAAY,KACpBzO,EAAK0O,UAAY,OAjJN1O,EAsKnB4nC,cAAgB,WACZr3B,WAAW,WACP,GAAIvQ,EAAKqnC,cAAcz6B,QAAS,CAC5B,IAAMo7B,EAAUhoC,EAAKqnC,cAAcz6B,QAEnC,GAAIo7B,EAAQlJ,WAAWh4B,OAAS,EAAG,CAC/B,IAAMk4B,EAAQlvB,SAASmvB,cACvBD,EAAME,SAAS8I,EAAQlJ,WAAW,GAAIkJ,EAAQlJ,WAAW,GAAGh4B,QAC5Dk4B,EAAMG,UAAS,GAEf,IAAMC,EAAYn9B,OAAOo9B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBgJ,EAAQx3B,UAEb,MAtLYxQ,EAyLnBmoC,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9BjjC,EAAyBijC,EAAzBjjC,OAAQkjC,EAAiBD,EAAjBC,aACXljC,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,sBACT6H,QAASnF,EACTmjC,cAAeD,MAlMJroC,EAsMnBuoC,uBAAyB,SAACpjC,EAAQwiC,GAC9B,IAAIrzB,EAAOC,KAAUtN,IAAI9B,GACzB,GAAKmP,EAAL,CACA,IAAMk0B,EAAWxoC,EAAKyoC,eAElBC,EAAgB,GAChBC,EAA2B,EACvBL,EAAkBh0B,EAAlBg0B,cACR,GAAIA,GAAiBA,EAAcM,oBAAsBN,EAAcM,mBAAmBn8B,KAAM,KACpFO,EAA4Cs7B,EAA5Ct7B,oBAAqB47B,EAAuBN,EAAvBM,mBAE7BD,EAA2B37B,EACvB47B,GAAsBA,EAAmBn8B,OACzCi8B,EAAgBE,EAAmBn8B,KAAKA,MAIhD,OAAI+7B,IAAaE,GAAiBf,IAAqBgB,EAgB5C,CAAExjC,OAAQA,EAAQkjC,aAfJ,CACjB5lC,QAAS,eACTuK,oBAAqB26B,EACrBiB,mBAAoB,CAChBnmC,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAM+7B,EACNn7B,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQvN,EA6OnB6oC,aAAe,WACX,IAAIp8B,EAAOzM,EAAKyoC,eAOhB,GALAzoC,EAAKqnC,cAAcz6B,QAAQ6B,UAAY,KACvCzO,EAAKqnC,cAAcz6B,QAAQ06B,YAAc,KACzCtnC,EAAK0O,UAAY,KACjB1O,EAAKkgC,cAEAzzB,GACAA,EAAKyC,OAAV,CAEA,IAAM/C,EAAU,CACZ1J,QAAS,mBACTgK,KAAM,CACFhK,QAAS,gBACTgK,KAAMA,EACNY,SAAU,MAEdC,0BAA0B,EAC1BC,aAAa,GAGjBvN,EAAKynC,eAAet7B,GAAS,EAAO,SAAAxJ,QAnQrB3C,EAsQnBk+B,iBAAmB,WACfx8B,KAAgBiJ,aAAa,CACzBlI,QAAS,yBAxQEzC,EA4QnB69B,kBAAoB,WACX79B,EAAK8oC,gBAEV9oC,EAAK8oC,eAAel8B,QAAQm8B,SA/Qb/oC,EAkRnBgpC,0BAA4B,WACxB,IAAIC,EAAQjpC,EAAK8oC,eAAel8B,QAAQq8B,MACnB,IAAjBA,EAAMniC,SAEVoiC,MAAMC,KAAKF,GAAOn8B,QAAQ,SAAAs8B,GACtBC,aAAcD,EAAM,SAAAzmC,GAChB3C,EAAKspC,gBAAgB3mC,OAI7B3C,EAAK8oC,eAAel8B,QAAQpI,MAAQ,KA5RrBxE,EA+RnBg+B,qBAAuB,WACdh+B,EAAKupC,mBAEVvpC,EAAKupC,kBAAkB38B,QAAQm8B,SAlShB/oC,EAqSnBwpC,6BAA+B,WAC3B,IAAIP,EAAQjpC,EAAKupC,kBAAkB38B,QAAQq8B,MACtB,IAAjBA,EAAMniC,SAEVoiC,MAAMC,KAAKF,GAAOn8B,QAAQ,SAAAs8B,GACtBppC,EAAKypC,mBAAmBL,KAG5BppC,EAAKupC,kBAAkB38B,QAAQpI,MAAQ,KA7SxBxE,EA2TnB2jB,YAAc,WAAM,IACRxe,EAAWnF,EAAKoC,MAAhB+C,OAER,IAAI2Y,YAAS3Y,GAAb,CAEA,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAAL,CAEA,IAAM7F,EAAYzO,EAAKqnC,cAAcz6B,QAAQ6B,UACvCC,EAAY1O,EAAKqnC,cAAcz6B,QAAQ8B,UAM7C,GAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE1O,EAAKqnC,cAAcz6B,QAAQ8B,UAAY,IAGtCD,GAEiB6F,EAAKkyB,sBAAwBlyB,EAAKkyB,oBAAsB,IAAIA,GAAoBlyB,EAAKvT,MAE7F2oC,UAAU,CAAEjnC,QAAS,wBA9UpBzC,EAiVnB0jB,cAAgB,SAAAna,GACMvJ,EAAKqnC,cAAcz6B,QAAQ6B,UAA7C,IACMC,EAAY1O,EAAKqnC,cAAcz6B,QAAQ8B,UAC7C1O,EAAK0O,UAAYA,EAEH,UAAVnF,EAAEhF,KAAoBgF,EAAE65B,WACxB75B,EAAEuF,iBACF9O,EAAK6oC,iBAxVM7oC,EA4VnBspC,gBAAkB,SAAAF,GACd,GAAKA,EAAL,CAEA,IAAMj9B,EAAU,CACZ1J,QAAS,oBACT2J,MAAO,CAAE3J,QAAS,gBAAiBk1B,KAAMyR,EAAKzR,KAAMgS,KAAMP,GAC1D37B,MAAO27B,EAAKQ,WACZl8B,OAAQ07B,EAAKS,aAGjB7pC,EAAKynC,eAAet7B,GAAS,EAAM,SAAAxJ,GAC/B,IAAMmnC,EAAgB79B,KAAahF,IAAItE,EAAO2H,QAAS3H,EAAO5B,IACzC,MAAjB+oC,GACA9pC,EAAK+pC,qBAAqBD,EAAeV,GAG7Cx/B,KAAUogC,WAAWrnC,EAAOwJ,QAAQC,MAAMC,MAAM,GAAGD,MAAMrL,GAAI4B,OA5WlD3C,EAgXnBiqC,eAAiB,SAAAnI,GACb9hC,EAAKynC,eAAe3F,GAAM,EAAM,eAjXjB9hC,EAoXnBypC,mBAAqB,SAAAL,GACjB,GAAKA,EAAL,CAEA,IAAMj9B,EAAU,CACZ1J,QAAS,uBACTqN,SAAU,CAAErN,QAAS,gBAAiBk1B,KAAMyR,EAAKzR,KAAMgS,KAAMP,IAGjEppC,EAAKynC,eAAet7B,GAAS,EAAM,SAAAxJ,GAAM,OAAIiH,KAAUogC,WAAWrnC,EAAOwJ,QAAQ2D,SAASA,SAAS/O,GAAI4B,OA5XxF3C,EA+XnB4jB,YAAc,SAAAhV,GAIV,IAHA,IAAMqP,GAASrP,EAAMgB,eAAiBhB,EAAMs7B,cAAct6B,eAAeqO,MAEnEgrB,EAAQ,GACL5hC,EAAI,EAAGA,EAAI4W,EAAMnX,OAAQO,IACQ,IAAlC4W,EAAM5W,GAAG8iC,KAAK/5B,QAAQ,SACtB64B,EAAMngC,KAAKmV,EAAM5W,GAAG+iC,aAI5B,GAAInB,EAAMniC,OAAS,EAKf,OAJA8H,EAAME,iBAEN9O,EAAKipC,MAAQA,OACbjpC,EAAK6C,SAAS,CAAEilC,iBAAiB,IAIrC,IAAMn4B,EAAYf,EAAMgB,cAAcC,QAAQ,cAC9C,OAAIF,GACAf,EAAME,iBACNgB,SAASC,YAAY,cAAc,EAAOJ,QAC1C3P,EAAK0O,UAAYiB,SAHrB,GAlZe3P,EA0ZnBqqC,oBAAsB,WAClBrqC,EAAKsqC,mBAEL,IAAMrB,EAAQjpC,EAAKipC,MACdA,GACAA,EAAMniC,SAEXmiC,EAAMn8B,QAAQ,SAAAs8B,GACVppC,EAAKypC,mBAAmBL,KAG5BppC,EAAKipC,MAAQ,OAraEjpC,EAwanBsqC,iBAAmB,WACftqC,EAAK6C,SAAS,CAAEilC,iBAAiB,KAzalB9nC,EA4anB+pC,qBAAuB,SAAC/+B,EAASu/B,GAC7B,GAAIv/B,GAAWA,EAAQw/B,eAAoD,+BAAnCx/B,EAAQw/B,cAAc,UACtDx/B,EAAQmB,SAAwC,iBAA7BnB,EAAQmB,QAAQ,UAA+BnB,EAAQmB,QAAQC,MAAO,CACzF,IAAIoB,EAAOyd,aAAQjgB,EAAQmB,QAAQC,MAAMC,MAAOmf,KAChD,IAAKhe,EAAM,OAEX,IAAI47B,EAAO57B,EAAKpB,MACZg9B,GAAQA,EAAK1V,OAAS0V,EAAK1V,MAAM+W,2BAA6BrB,EAAKmB,OACnEnB,EAAKmB,KAAOA,EACZ3gC,KAAU8gC,gBAAgB1/B,EAAQV,QAASU,EAAQjK,GAAIqoC,EAAKroC,OArbzDf,EA2bnBynC,eA3bmB,eAAAzmB,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA2bF,SAAAC,EAAOqE,EAASw+B,EAAYhlB,GAA5B,IAAA3W,EAAA7J,EAAAwiC,EAAAhlC,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuG,EACwBhP,EAAKoC,MAAlC+C,EADK6J,EACL7J,OAAQwiC,EADH34B,EACG24B,iBAEXxiC,EAHQ,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,oBAIRgC,EAJQ,CAAA5D,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOH6C,IAAiBs/B,sBAAjB,mCAAA9lC,OAA0EK,IAPvE,cAAAoD,EAAAE,KAAA,GASU/G,KAAgBc,KAAK,CACpCC,QAAS,cACT6H,QAASnF,EACT6H,oBAAqB26B,EACrBv6B,sBAAuBjB,IAblB,QASLxJ,EATK4F,EAAAiB,KAgBTxJ,EAAK6C,SAAS,CAAE8kC,iBAAkB,GAAK,WACnC,GAAIgD,EAAY,CACZ,IAAME,EAAsB7qC,EAAKuoC,uBAC7BvoC,EAAKoC,MAAM+C,OACXnF,EAAKoC,MAAMulC,kBAEf3nC,EAAKmoC,oBAAoB0C,MAKjCnpC,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAASnF,EACT6I,YAAa,CAACrL,EAAO5B,MAGzB4kB,EAAShjB,GAjCA4F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuiC,GAAAviC,EAAA,SAmCTwiC,MAAM,qBAAuBC,KAAKC,UAAL1iC,EAAAuiC,KAnCpB,yBAAAviC,EAAAwB,SAAAjC,EAAA,kBA3bE,gBAAAyZ,EAAA2F,EAAAc,GAAA,OAAAhH,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAkenBkrC,kBAAoB,SAAA7oC,GACXA,IAELrC,EAAKqnC,cAAcz6B,QAAQ6B,WAAapM,EAAM8oC,OAC9CnrC,EAAKkgC,gBAteUlgC,EAyenBkgC,YAzemB,eAAAh4B,EAAAjI,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAyeL,SAAAmC,EAAM4E,GAAN,IAAAH,EAAAq8B,EAAAM,EAAAC,EAAAC,EAAAhqC,EAAA,OAAAsG,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,WACJgG,EAAYzO,EAAKqnC,cAAcz6B,QAAQ6B,cAC3BA,EAAU3H,OAAS,IAF3B,CAAAoD,EAAAzB,KAAA,eAGW1I,KAATU,MAEJiB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,OAPRyJ,EAAAC,OAAA,oBAcJ2gC,EAAKS,YAAYhJ,MACjB6I,EAAQI,OACVH,EAAQD,EAAMK,KAAKh9B,GACjB68B,EAAKC,YAAYhJ,MACvBl0B,QAAQC,IAAI,YAAcg9B,EAAKR,GAAM,KAAMO,GACtCA,GAAS58B,IAAc48B,EAAM,GAnBxB,CAAAnhC,EAAAzB,KAAA,gBAoBW1I,KAATU,MAEJiB,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,OAxBRyJ,EAAAC,OAAA,kBA+BJ7I,EAAY4yB,KAAKqO,MACvB7gC,KAAgBc,KAAK,CACjBC,QAAS,cACTJ,MAAOgpC,EAAM,GACbxiC,MAAO,MACRnG,KAAK,SAAAlB,GACJE,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACThC,KAAM,CACFa,YACAe,MAAOgpC,EAAM,GACb7pC,gBAKZE,KAAgBc,KAAK,CACjBC,QAAS,iBACTJ,MAAOgpC,EAAM,GACbxiC,MAAO,MACRnG,KAAK,SAAAlB,GACJE,KAAgBiJ,aAAa,CACzBlI,QAAS,iCACThC,KAAM,CACFa,YACAe,MAAOgpC,EAAM,GACb7pC,gBAzDF,yBAAA0I,EAAAH,SAAAC,MAzeK,gBAAAqe,GAAA,OAAAngB,EAAA/D,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAKupC,kBAAoB7lC,IAAM+M,YAC/BzQ,EAAK8oC,eAAiBplC,IAAM+M,YAC5BzQ,EAAKqnC,cAAgB3jC,IAAM+M,YAE3B,IAAMtL,EAASmG,IAAiBwN,YAPjB,OASf9Y,EAAK0O,UAAY,KACjB1O,EAAKoC,MAAQ,CACT+C,OAAQA,EACRwiC,iBAAkBE,YAA6B1iC,GAC/C2iC,iBAAiB,GAbN9nC,qFAiBGsT,EAAWC,GAAW,IAAAtO,EACnB9E,KAAKyC,MAAlBoD,EADgCf,EAChCe,MAAO8E,EADyB7F,EACzB6F,EADyB8F,EAEczQ,KAAKiC,MAAnD+C,EAFgCyL,EAEhCzL,OAAQwiC,EAFwB/2B,EAExB+2B,iBAAkBG,EAFMl3B,EAENk3B,gBAElC,OAAIx0B,EAAUtN,QAAUA,IAIpBsN,EAAUxI,IAAMA,IAIhByI,EAAUpO,SAAWA,IAIrBoO,EAAUo0B,mBAAqBA,GAI/Bp0B,EAAUu0B,kBAAoBA,iDAUlCx8B,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,sBAC/C7gB,KAAauH,GAAG,oBAAqBrT,KAAKunC,qBAC1C3nC,KAAayT,GAAG,0BAA2BrT,KAAKgnC,2BAEhDhnC,KAAKynC,gBACLznC,KAAK4nC,WACL5nC,KAAK+/B,6DAIL,IAAM2K,EAAsB1qC,KAAKooC,uBAAuBpoC,KAAKiC,MAAM+C,OAAQhF,KAAKiC,MAAMulC,kBACtFxnC,KAAKgoC,oBAAoB0C,GAEzBv/B,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,sBAC3D7gB,KAAapK,eAAe,oBAAqB1B,KAAKunC,qBACtD3nC,KAAa8B,eAAe,0BAA2B1B,KAAKgnC,sEAuF7CnkC,EAAWC,EAAWC,GAErC/C,KAAKgoC,oBAAoBjlC,GAErBD,EAAUkC,SAAWhF,KAAKiC,MAAM+C,SAChChF,KAAKynC,gBACLznC,KAAK4nC,WACL5nC,KAAK+/B,+DAIWl9B,EAAWC,GAC/B,OAAIA,EAAUkC,SAAWhF,KAAKiC,MAAM+C,OAAe,KAE5ChF,KAAKooC,uBAAuBtlC,EAAUkC,OAAQlC,EAAU0kC,yDA8I/D,IAAIl5B,EAAYtO,KAAKknC,cAAcz6B,QAAQ6B,UACvCC,EAAYvO,KAAKknC,cAAcz6B,QAAQ8B,UAM3C,OAJID,GAA2B,OAAdA,GAAsBC,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEvO,KAAKknC,cAAcz6B,QAAQ8B,UAAY,IAGpCD,mCAgPF,IAAArD,EACkBjL,KAAKyC,MAApBsC,EADHkG,EACGlG,QAAS4F,EADZM,EACYN,EADZ4a,EAEiDvlB,KAAKiC,MAAnD+C,EAFHugB,EAEGvgB,OAAQwiC,EAFXjiB,EAEWiiB,iBAAkBG,EAF7BpiB,EAE6BoiB,gBAE5B37B,EAA6B,OAAnBhM,KAAKuO,UAAqBvO,KAAKuO,UAAY,KAE3D,OACIjK,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,aAC5CxB,EAAArB,EAAAC,cAACqoC,GAAD,CAAgBvmC,OAAQA,EAAQob,UAAWonB,IAC3CljC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAACoB,EAAArB,EAAMuoC,SAAP,CACIC,SACInnC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQk5B,WAAYzyB,aAAW,YAClDlH,EAAArB,EAAAC,cAACwoC,GAAAzoC,EAAD,QAGRqB,EAAArB,EAAAC,cAACyjC,GAAD,CAAmBzhC,SAAUlF,KAAK+qC,sBAG1CzmC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OACItC,GAAG,mBACHuQ,IAAKnR,KAAKknC,cACV9iC,IAAK,IAAI2vB,KACTziB,YAAa3G,EAAE,WACfyG,iBAAe,EACfC,gCAA8B,EAC9BE,UAAWvR,KAAKujB,cAChB/R,QAASxR,KAAKwjB,YACd/R,QAASzR,KAAKyjB,YACd0d,QAASnhC,KAAK+/B,aACb/zB,IAGT1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAKopC,kBACVjmC,UAAU,yBACVkR,KAAK,OACLs3B,SAAS,WACTvzB,SAAUpY,KAAKqpC,+BAEnB/kC,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAK2oC,eACVxlC,UAAU,yBACVkR,KAAK,OACLs3B,SAAS,WACTC,OAAO,UACPxzB,SAAUpY,KAAK6oC,4BAEnBvkC,EAAArB,EAAAC,cAAC2oC,GAAD,CACI7mC,OAAQA,EACR24B,cAAe39B,KAAK09B,kBACpBI,iBAAkB99B,KAAK69B,qBACvBG,aAAch+B,KAAK+9B,mBAMvBz5B,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIwI,MAAM,UACNtI,UAAW4B,EAAQk5B,WACnBzyB,aAAW,OACXjG,QAASvF,KAAK0oC,cACdpkC,EAAArB,EAAAC,cAAC4oC,GAAA7oC,EAAD,WAKdoT,YAAcrR,IAAWV,EAAArB,EAAAC,cAAC6oC,GAAD,CAAkB9H,OAAQjkC,KAAK8pC,iBAC1DxlC,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM82B,EACN72B,QAAS9Q,KAAKmqC,iBACdp5B,kBAAgB,uBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuB+J,EAAE,YACzCrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KACKjD,KAAK8oC,OAAS9oC,KAAK8oC,MAAMniC,OAAS,EAC7B,uCACA,wCAGdrC,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKmqC,iBAAkB1+B,MAAM,WACzCd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKkqC,oBAAqBz+B,MAAM,WAC5Cd,EAAE,iBApoBDnH,aAkpBfsO,GALCC,YACZnM,IAxpBW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBm+B,WAAY,CACRvnB,OAAQ,SAEZ4I,gBAAiB,CACb5I,OAAQ,IAETnE,YAAY1M,KAipBI,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQi1B,yBC9qBjBiF,4LACO,IAAAlnC,EACmC9E,KAAKyC,MAArCsC,EADHD,EACGC,QAASytB,EADZ1tB,EACY0tB,QAASyZ,EADrBnnC,EACqBmnC,UAE1B,OACI3nC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,2BAC5CxB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAACgpC,GAAAjpC,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQ0S,OAAQlS,QAAS0mC,GACvDzZ,YARGjvB,IAAMC,YAgBnBoC,OAxBA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB2X,OAAQ,CACJf,OAAQ,OACRsM,SAAU,UAEXzQ,YAAY1M,KAmBJD,CAAmBomC,ICTnBG,eAjBX,SAAAA,EAAY1pC,GAAO,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmsC,GAAArsC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqsC,GAAAhsC,KAAAH,KACTyC,0EAGD,IAEC+vB,EADcxyB,KAAKiC,MAAjB4U,QACkB,SAAW,OAErC,OACIvS,EAAArB,EAAAC,cAACkpC,GAAD,CACI5Z,QAASA,EACTyZ,UAAWjsC,KAAKiX,oCAZUN,ICoK3B01B,uBA5JX,SAAAA,EAAY5pC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAqsC,IACfxsC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAusC,GAAAlsC,KAAAH,KAAMyC,KAqBV2S,mBAAqB,SAAA5U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OAEJsnC,YAAgBtnC,EAAQxE,EAAO6U,YAAYzU,KAC3Cf,EAAKuO,eA1BMvO,EA8BnByV,mBAAqB,SAAA9U,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OAEJunC,YAAgBvnC,EAAQxE,EAAO+U,WAAW3U,KAC1Cf,EAAKuO,eAlCMvO,EAsCnB2sC,WAAa,WAAM,IACPxnC,EAAWnF,EAAK4C,MAAhBuC,OACHA,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,WACT6H,QAASnF,KA5CEnF,EAgDnB4sC,oBAAsB,WAAM,IAChBznC,EAAWnF,EAAK4C,MAAhBuC,OACHA,GAELzD,KAAgBc,KAAK,CACjBC,QAAS,oBACT6H,QAASnF,EACT0nC,uBAAuB,KAvDZ7sC,qFAIGsT,EAAWC,GAC7B,OAAID,EAAUnO,SAAWhF,KAAKyC,MAAMuC,mDAQpCwP,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,mEAI5Cd,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,qDA8CnD,IACGtQ,EAAWhF,KAAKyC,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,IAAMs4B,EAAan4B,KAAgB1N,IAAIqN,EAAKE,KAAKK,gBACjD,GAAIi4B,GAAcA,EAAW75B,OACzB,OAAQ65B,EAAW75B,OAAO,UACtB,IAAK,gCACD,OAAOxO,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,yBACD,OAAOtoC,EAAArB,EAAAC,cAACkpC,GAAD,CAAe5Z,QAAQ,kBAAkByZ,UAAWjsC,KAAKysC,sBAEpE,IAAK,0BACD,OAAOnoC,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOtoC,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,6BACD,OAAID,EAAW75B,OAAO+5B,UACbF,EAAW75B,OAAOg6B,kBAIhBxoC,EAAArB,EAAAC,cAAC0pC,GAAD,MAHI,KAKJtoC,EAAArB,EAAAC,cAACkpC,GAAD,CAAe5Z,QAAQ,OAAOyZ,UAAWjsC,KAAKwsC,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOloC,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,qBACD,IAAMr3B,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,GAAII,GAAcA,EAAWzC,OACzB,OAAQyC,EAAWzC,OAAO,UACtB,IAAK,gCACD,OAAOxO,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,yBACD,OAAOtoC,EAAArB,EAAAC,cAACkpC,GAAD,CAAe5Z,QAAQ,kBAAkByZ,UAAWjsC,KAAKysC,sBAEpE,IAAK,0BACD,OAAOnoC,EAAArB,EAAAC,cAAC0pC,GAAD,MAEX,IAAK,uBACD,OAAOtoC,EAAArB,EAAAC,cAACkpC,GAAD,CAAe5Z,QAAQ,OAAOyZ,UAAWjsC,KAAKwsC,aAEzD,IAAK,yBACD,OAAIj3B,EAAWw3B,WACJzoC,EAAArB,EAAAC,cAAC8pC,GAAD,CAA6BhoC,OAAQA,IAErCV,EAAArB,EAAAC,cAAC0pC,GAAD,MAGf,IAAK,6BACD,OAAIr3B,EAAWzC,OAAO+5B,UACbt3B,EAAWzC,OAAOg6B,kBAIhBxoC,EAAArB,EAAAC,cAAC0pC,GAAD,MAHI,KAKJtoC,EAAArB,EAAAC,cAACkpC,GAAD,CAAe5Z,QAAQ,OAAOyZ,UAAWjsC,KAAKwsC,cAQ7E,OAAO,YAzJMjpC,IAAMC,+DCyDZypC,uBA7DX,SAAAA,EAAYxqC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAitC,IACfptC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmtC,GAAA9sC,KAAAH,KAAMyC,KAeVyqC,YAAc,WACV,IAAM9K,EAAM,IAAIrO,KACVoZ,EAAUttC,EAAKutC,OAAShL,EACxB/9B,EAAQ,IAAO8oC,EAAUttC,EAAK4C,MAAMkX,QAAW,IAErD9Z,EAAK6C,SAAS,CACVyqC,QAASA,EAAU,EAAIA,EAAU,EACjC9oC,MAAOA,EAAQ,IAAM,IAAMA,IAG3B+9B,GAAOviC,EAAKutC,QACRvtC,EAAKwtC,UACLC,cAAcztC,EAAKwtC,SACnBxtC,EAAKwtC,QAAU,OA1BvBxtC,EAAKoC,MAAQ,CACTkrC,QAASttC,EAAK4C,MAAMkX,QAAU,IAC9BtV,MAAO,GALIxE,mFAUfG,KAAKutC,UAAY,IAAIxZ,KACrB/zB,KAAKotC,OAASptC,KAAKutC,UACnBvtC,KAAKotC,OAAOI,gBAAgBxtC,KAAKotC,OAAOK,kBAAoBztC,KAAKyC,MAAMkX,SACvE3Z,KAAKqtC,QAAUK,YAAY1tC,KAAKktC,YAAa,oDAsBzCltC,KAAKqtC,UACLC,cAActtC,KAAKqtC,SACnBrtC,KAAKqtC,QAAU,uCAId,IAAAx+B,EACsB7O,KAAKiC,MAAxBoC,EADHwK,EACGxK,MAAO8oC,EADVt+B,EACUs+B,QAEf,OACI7oC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BACXmB,EAAArB,EAAAC,cAACo+B,GAAA,EAAD,CAAY71B,MAAM,YAAY0hC,EAAU,KAAMQ,YAElDrpC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAAC0qC,GAAA3qC,EAAD,CAAkBoK,KAAM,GAAIhJ,MAAO,IAAMA,EAAO2T,QAAQ,oBAnD5CzU,IAAMC,YCwBhCk1B,WAAmB,CACrBzW,SAAU,SACVC,WAAY,UAGV2rB,GAAsB,CACxB5rB,SAAU,MACVC,WAAY,SAGV4rB,8MACFC,oBAAsB,SAAA/oC,GAClB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,8CAAA1P,OAA+CwP,EAAKwP,MAApD,KAEJ,IAAK,qBACD,IAAMpO,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWw3B,WAAX,0CAAApoC,OACyCwP,EAAKwP,MAD9C,6CAAAhf,OAEuCwP,EAAKwP,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAAhf,OAAoDS,YAAkBJ,GAAtE,KAIR,OAAO,8EAGF,IAAAF,EACiC9E,KAAKyC,MAAnCqO,EADHhM,EACGgM,QAAS9L,EADZF,EACYE,OAAWgpC,EADvBluC,OAAAmuC,GAAA,EAAAnuC,CAAAgF,EAAA,sBAGL,OACIR,EAAArB,EAAAC,cAAC0N,EAAA3N,EAADnD,OAAAkB,OAAA,CACIyhB,mBAAoB,EACpB3R,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZi9B,GACJ1pC,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuBwE,YAAkBJ,IACzDV,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,CAAmBrC,GAAG,6BACjBZ,KAAK+tC,oBAAoB/oC,MAItCV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAnDUtO,IAAMC,WA4D9B0qC,oLACO,IAAAjjC,EACiCjL,KAAKyC,MAAnCqO,EADH7F,EACG6F,QAAS9L,EADZiG,EACYjG,OAAWgpC,EADvBluC,OAAAmuC,GAAA,EAAAnuC,CAAAmL,EAAA,sBAGL,OACI3G,EAAArB,EAAAC,cAAC0N,EAAA3N,EAADnD,OAAAkB,OAAA,CACIyhB,mBAAoB,EACpB3R,QAAS,kBAAMA,GAAQ,IACvBC,kBAAgB,uBACZi9B,GACJ1pC,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAuBwE,YAAkBJ,IACzDV,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAClBV,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,CAAmBrC,GAAG,6BAAtB,0CAKR0D,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAQrF,MAAM,WAA7C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAAS,kBAAMuL,GAAQ,IAAOrF,MAAM,UAAUoG,WAAS,GAA/D,eAvBatO,IAAMC,WAgCjCm1B,eACF,SAAAA,EAAYl2B,GAAO,IAAA8N,EAAA,OAAAzQ,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA24B,IACfpoB,EAAAzQ,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA64B,GAAAx4B,KAAAH,KAAMyC,KASV0rC,kBAAoB,SAAA1/B,GAChB8B,EAAK7N,SAAS,CAAEs2B,SAAUvqB,EAAMwqB,iBAXjB1oB,EAcnB2oB,gBAAkB,WACd3oB,EAAK7N,SAAS,CAAEs2B,SAAU,QAfXzoB,EAkBnB69B,eAAiB,WACb79B,EAAK2oB,kBACL9oB,WAAW,kBAAMG,EAAK9N,MAAM4rC,mBAAmB,MApBhC99B,EAuBnB+9B,mBAAqB,WACjB/9B,EAAK2oB,kBAEL3oB,EAAK7N,SAAS,CAAE6rC,kBAAkB,KA1BnBh+B,EA6BnBi+B,2BAA6B,SAAAhsC,GAGzB,GAFA+N,EAAK7N,SAAS,CAAE6rC,kBAAkB,IAE7B/rC,EAAL,CAEA,IAAMwC,EAASmG,IAAiBwN,YAE1B81B,EAAU,CACZnsC,QAAS,oBACT6H,QAASnF,EACT0nC,uBAAuB,GAG3Bn8B,EAAKxF,sBAAsB/F,EAAQ,2BAPnB,mBAOwDypC,KA1CzDl+B,EA6CnBm+B,YAAc,WACVn+B,EAAK2oB,kBAEL3oB,EAAK7N,SAAS,CAAEisC,YAAY,KAhDbp+B,EAmDnBq+B,oBAAsB,SAAApsC,GAGlB,GAFA+N,EAAK7N,SAAS,CAAEisC,YAAY,IAEvBnsC,EAAL,CAEA,IAAMwC,EAASmG,IAAiBwN,YAC1B9N,EAAU0F,EAAKs+B,yBAAyB7pC,GACxCypC,EAAUp4B,YAAcrR,GACxB,CAAE1C,QAAS,oBAAqB6H,QAASnF,EAAQ0nC,uBAAuB,GACxE,CAAEpqC,QAAS,YAAa6H,QAASnF,GAEvCuL,EAAKxF,sBAAsB/F,EAAQ,wBAAyB6F,EAAS4jC,KA9DtDl+B,EAiEnBxF,sBAAwB,SAAC/F,EAAQ8pC,EAAkBjkC,EAAS4jC,GACxD,GAAKK,EAAL,CAEA,IAAM1qC,EAAG,GAAAO,OAAMmqC,EAAN,YAAAnqC,OAAiCK,GACpCgG,EAAM,eAAA6V,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAAG,SAAAC,IAAA,OAAAF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAED/G,KAAgBc,KAAKosC,GAFpB,cAAArmC,EAAAC,KAAA,EAIP9G,KAAgBiJ,aAAa,CAAElI,QAASwsC,EAAkB9pC,OAAQA,EAAQ+pC,YAAY,IAJ/E3mC,EAAA4mC,OAAA,2BAAA5mC,EAAAwB,SAAAjC,EAAA,oBAAH,yBAAAkZ,EAAA7c,MAAAhE,KAAAiE,YAAA,GAJwDgrC,EAe/B1+B,EAAK9N,MAAlCyI,EAf4D+jC,EAe5D/jC,gBAf4D+jC,EAe3ClqC,QACzB,GAAKmG,EAAL,CAGIC,IAAiBC,mBAAmBhH,EAAKiH,IAAoCL,EARlE,WACXzJ,KAAgBiJ,aAAa,CAAElI,QAASwsC,EAAkB9pC,OAAQA,EAAQ+pC,YAAY,QAQtFxtC,KAAgBiJ,aAAa,CAAElI,QAASwsC,EAAkB9pC,OAAQA,EAAQ+pC,YAAY,IACtF7jC,EAAgBL,EAAS,CACrBS,iBAAkBD,IAAqC,IACvDL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYmB,IAAI,WAAWqH,MAAM,UAAUtI,UAAU,mBACjDmB,EAAArB,EAAAC,cAACgsC,GAAD,CAAmBv1B,QAAStO,OAEhC/G,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CACImB,IAAI,OACJqH,MAAM,UACN4B,KAAK,QACL9H,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KAJ1D,eA5FGmM,EAwGnB4+B,kBAAoB,SAAAnqC,GAChB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,OAAO,KAClB,IAAKA,EAAKE,KAAM,OAAO,KAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWw3B,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQx8B,EAkInBs+B,yBAA2B,SAAA7pC,GACvB,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,IAAKmP,EAAM,MAAO,eAClB,IAAKA,EAAKE,KAAM,MAAO,eAEvB,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMkB,EAAaE,KAAgB3O,IAAIqN,EAAKE,KAAKc,eACjD,OAAII,EACOA,EAAWw3B,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJPx8B,EAAKtO,MAAQ,CACT+2B,SAAU,KACV2V,YAAY,EACZJ,kBAAkB,GANPh+B,wEA4JV,IACGxL,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAE8C7O,KAAKiC,MAAhD+2B,EAFHnqB,EAEGmqB,SAAU2V,EAFb9/B,EAEa8/B,WAAYJ,EAFzB1/B,EAEyB0/B,iBAExBvpC,EAASmG,IAAiBwN,YAC1By2B,EAAeC,YAAgBrqC,GAC/BsqC,EAAaC,YAAcvqC,GAC3BwqC,EAAiBxvC,KAAKmvC,kBAAkBnqC,GAE9C,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIm3B,YAAWpB,EAAW,cAAgB,KACtCqB,gBAAc,OACdl3B,UAAW4B,EAAQu1B,eACnB9uB,aAAW,OACXjG,QAASvF,KAAKmuC,mBACd7pC,EAAArB,EAAAC,cAACusC,GAAAxsC,EAAD,OAEJqB,EAAArB,EAAAC,cAAC82B,GAAA/2B,EAAD,CACIrC,GAAG,YACHo4B,SAAUA,EACVnoB,KAAMgT,QAAQmV,GACdloB,QAAS9Q,KAAKk5B,gBACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBnY,aAAc0W,GACdvW,gBAAiB0rB,IACjBvpC,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKouC,gBAAxB,aACCgB,GAAgB9qC,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKsuC,oBAAxB,iBAChBgB,GAAcE,GAAkBlrC,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK0uC,aAAcc,IAE3ElrC,EAAArB,EAAAC,cAACwsC,GAAD,CAAiB1qC,OAAQA,EAAQ6L,KAAM89B,EAAY79B,QAAS9Q,KAAK4uC,sBACjEtqC,EAAArB,EAAAC,cAACysC,GAAD,CAAoB3qC,OAAQA,EAAQ6L,KAAM09B,EAAkBz9B,QAAS9Q,KAAKwuC,qCA/L7DjrC,IAAMC,WA0MpBsO,GALCC,YACZnM,IAlTW,SAAAC,GAAK,MAAK,CACrBy0B,eAAgB,CACZ5jB,OAAQ,qBAiTZjE,eAGWX,CAAQ6mB,IC5SjBiX,uBACF,SAAAA,EAAYntC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4vC,IACf/vC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8vC,GAAAzvC,KAAAH,KAAMyC,KAOVotC,aAAe,WACXtuC,KAAgBiJ,aAAa,CAAElI,QAAS,gCATzBzC,EAYnB0gB,aAAe,WACX,IAAIG,GAA0B,EADbovB,GAAA,EAAAC,GAAA,EAAAC,OAAA3pB,EAAA,IAEjB,QAAA4pB,EAAAC,EAAkCpkC,KAAaqkC,cAAcC,SAA7DC,OAAAC,cAAAR,GAAAG,EAAAC,EAAA5nC,QAAAioC,MAAAT,GAAA,EAAuE,KAAA/nC,EAAAkoC,EAAA5rC,MAA5DW,EAA4D+C,EAA5D/C,OAAQob,EAAoDrY,EAApDqY,UACTvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,CACV6V,GAA0B,EAC1B,MAEJ,IAAK7V,EAAQ2V,6BAA8B,CACvCE,GAA0B,EAC1B,QAVS,MAAA8vB,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAcjBnwC,EAAK6C,SAAS,CACV+d,kBAAkB,EAClBC,wBAAyBA,EACzBC,OAAQD,KA7BG7gB,EAiCnB0hB,qBAAuB,WAAM,IAGrB3gB,EAFI+f,EAAW9gB,EAAKoC,MAAhB0e,OAGF7W,EAAa,GAJM4mC,GAAA,EAAAC,GAAA,EAAAC,OAAAvqB,EAAA,IAKzB,QAAAwqB,EAAAC,EAAkChlC,KAAaqkC,cAAcC,SAA7DC,OAAAC,cAAAI,GAAAG,EAAAC,EAAAxoC,QAAAioC,MAAAG,GAAA,EAAuE,KAAA5oB,EAAA+oB,EAAAxsC,MAA5DW,EAA4D8iB,EAA5D9iB,OAAQob,EAAoD0H,EAApD1H,UACfxf,EAAKoE,EACL8E,EAAWnB,KAAKyX,IAPK,MAAAowB,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAUzB/wC,EAAKgwC,eAELtuC,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASvJ,EACTiN,YAAa/D,EACb6W,OAAQA,KAjDG9gB,EAqDnBwhB,mBAAqB,WACjBxhB,EAAK6C,SAAS,CAAEie,QAAS9gB,EAAKoC,MAAM0e,UAtDrB9gB,EAyDnByhB,kBAAoB,WAChBzhB,EAAK6C,SAAS,CAAE+d,kBAAkB,KA1DnB5gB,EA6DnBwgB,cAAgB,WACZ,IAAIzf,EACEkJ,EAAa,GAFDinC,GAAA,EAAAC,GAAA,EAAAC,OAAA5qB,EAAA,IAGlB,QAAA6qB,EAAAC,EAAkCrlC,KAAaqkC,cAAcC,SAA7DC,OAAAC,cAAAS,GAAAG,EAAAC,EAAA7oC,QAAAioC,MAAAQ,GAAA,EAAuE,KAAAK,EAAAF,EAAA7sC,MAA5DW,EAA4DosC,EAA5DpsC,OAAQob,EAAoDgxB,EAApDhxB,UACfxf,EAAKoE,EACL8E,EAAWnB,KAAKyX,IALF,MAAAowB,GAAAQ,GAAA,EAAAC,EAAAT,EAAA,YAAAO,GAAA,MAAAI,EAAAV,QAAAU,EAAAV,SAAA,WAAAO,EAAA,MAAAC,GAQlBpxC,EAAKgwC,eAELvvB,aAAgB1f,EAAIkJ,IAvELjK,EA0EnBwxC,YAAc,WACV,GAAwC,IAApCvlC,KAAaqkC,cAAc9iC,KAA/B,CADgB,IAAAikC,EAGcxlC,KAAaqkC,cAAcC,SAAS9nC,OAAOjE,MAAjEW,EAHQssC,EAGRtsC,OAAQob,EAHAkxB,EAGAlxB,UAEhBvgB,EAAKgwC,eAELtuC,KAAgBiJ,aAAa,CAAElI,QAAS,oBAAqB0C,OAAQA,EAAQob,UAAWA,MA9ExFvgB,EAAKoC,MAAQ,CACTwe,kBAAkB,GAJP5gB,wEAoFV,IAAAiF,EACyB9E,KAAKyC,MAA3BsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EAAG4mC,EADfzsC,EACeysC,MADf1iC,EAEyD7O,KAAKiC,MAA3Dwe,EAFH5R,EAEG4R,iBAAkBC,EAFrB7R,EAEqB6R,wBAAyBC,EAF9C9R,EAE8C8R,OAE7C3b,EAASmG,IAAiBwN,YAE5B64B,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAAtrB,EAAA,IAOL,QAAAurB,EAAAC,EAAkC/lC,KAAaqkC,cAAcC,SAA7DC,OAAAC,cAAAmB,GAAAG,EAAAC,EAAAvpC,QAAAioC,MAAAkB,GAAA,EAAuE,KAAAK,EAAAF,EAAAvtC,MAA5DW,EAA4D8sC,EAA5D9sC,OAAQob,EAAoD0xB,EAApD1xB,UACTvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,CACV2mC,GAAe,EACf,MAEJ,IAAK3mC,EAAQ4W,+BAAiC5W,EAAQ2V,6BAA8B,CAChFgxB,GAAe,EACf,QAfH,MAAAhB,GAAAkB,GAAA,EAAAC,EAAAnB,EAAA,YAAAiB,GAAA,MAAAI,EAAApB,QAAAoB,EAAApB,SAAA,WAAAiB,EAAA,MAAAC,GAmBL,IAAII,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAA7rB,EAAA,IAoBL,QAAA8rB,EAAAC,EAAkCtmC,KAAaqkC,cAAcC,SAA7DC,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA9pC,QAAAioC,MAAAyB,GAAA,EAAuE,KAAAK,EAAAF,EAAA9tC,MAA5DW,EAA4DqtC,EAA5DrtC,OAAQob,EAAoDiyB,EAApDjyB,UACTvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,CACVknC,GAAiB,EACjB,MAEJ,IAAKlnC,EAAQkB,iBAAkB,CAC3BgmC,GAAiB,EACjB,QA5BH,MAAAvB,GAAAyB,GAAA,EAAAC,EAAA1B,EAAA,YAAAwB,GAAA,MAAAI,EAAA3B,QAAA2B,EAAA3B,SAAA,WAAAwB,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVf,GAAeniC,YAAgBpK,GAEpD,OACIV,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,mBAC3CisC,GACGztC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQwtC,WAAYhtC,QAASvF,KAAKqgB,eAChEkxB,GAAS,EAAI5mC,EAAE,WAAf,GAAAhG,OAA+BgG,EAAE,WAAjC,KAAAhG,OAA+C4sC,IAGvDC,GACGltC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQwtC,WAAYhtC,QAASvF,KAAKugB,cAChEgxB,GAAS,EAAI5mC,EAAE,UAAf,GAAAhG,OAA8BgG,EAAE,UAAhC,KAAAhG,OAA6C4sC,IAGrDe,GACGhuC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQwtC,WAAYhtC,QAASvF,KAAKqxC,aAChE1mC,EAAE,UAGXrG,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACfmB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUtI,UAAW4B,EAAQytC,YAAajtC,QAASvF,KAAK6vC,cACjEllC,EAAE,YAGXrG,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM4P,EACN3P,QAAS9Q,KAAKshB,kBACdvQ,kBAAgB,uBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,uBAAhB,WACA0D,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KACe,IAAVsuC,EACK,6CADL,mCAAA5sC,OAEwC4sC,EAFxC,eAIJ7wB,GACGpc,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACI4f,QACIve,EAAArB,EAAAC,cAAC4f,GAAA7f,EAAD,CAAUoV,QAASsI,EAAQvI,SAAUpY,KAAKqhB,mBAAoB5V,MAAM,YAExEsX,MACI1M,YAAcrR,GAAd,cAAAL,OAAsCS,YAAkBJ,IAAY,oBAKpFV,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKshB,kBAAmB7V,MAAM,WAA/C,UAGAnH,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuhB,qBAAsB9V,MAAM,WAAlD,gBAzKIlI,IAAMC,YA4LnBsO,GALCC,YACZnM,IApMW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChByyC,WAAY,CACR77B,OAAQ,mBACRsM,SAAU,SAEdwvB,YAAa,CACT97B,OAAQ,mBACRsM,SAAU,UAEXzQ,YAAY1M,KA2LI,CAAEQ,WAAW,IAChCmM,cAGWV,CAAQ89B,aCjLjB6C,eACF,SAAAA,EAAYhwC,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAyyC,IACf5yC,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2yC,GAAAtyC,KAAAH,KAAMyC,KA8DViwC,8BAAgC,SAAAlyC,GAC5B,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GACDA,EAAKvT,KAAOJ,EAAO2J,SAEvBtK,EAAKuO,eApEUvO,EAuEnB8yC,8BAAgC,SAAAnyC,GAC5BX,EAAK6C,SAAS,CAAEkwC,eAAgB9mC,KAAaqkC,cAAc9iC,QAxE5CxN,EA2EnB8sB,qBAAuB,SAAAnsB,GACnBX,EAAKuO,eA5EUvO,EA+EnBgzC,wBAA0B,SAAAryC,GACtBX,EAAK6C,SAAS,CAAEowC,gBAAiBtyC,EAAOyB,SAhFzBpC,EAmFnB+4B,2BAA6B,SAAAp4B,GACzBX,EAAK6C,SAAS,CAAEm2B,mBAAoBr4B,EAAOC,uBApF5BZ,EAuFnBkzC,kBAAoB,SAAAvyC,GAChB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GACDA,EAAKvT,KAAOJ,EAAO2J,SAEvBtK,EAAKuO,eA5FUvO,EA+FnB8S,mBAAqB,SAAAnS,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aAC5C,GAAKxE,GACAA,EAAKE,KAEV,OAAQF,EAAKE,KAAK,UACd,IAAK,qBACD,IAAME,EAAWC,KAAgBC,YAAYN,EAAKE,KAAKK,gBACvD,GAAIH,GAAYA,EAASI,QACNJ,EAASI,QAAQC,KAAK,SAAA7T,GAAC,OAAIA,EAAE6H,UAAYpI,EAAOoI,WAE3D/I,EAAKuO,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACG+F,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAC7B/I,EAAKuO,gBAvHFvO,EAiInBmzC,uBAAyB,SAAAxyC,GACC2K,IAAiBwN,cAEjBnY,EAAO2J,SACzBtK,EAAKuO,eArIMvO,EAyInBuV,mBAAqB,SAAA5U,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAO6U,YAAYzU,IAEhDf,EAAKuO,eAlJMvO,EAsJnByV,mBAAqB,SAAA9U,GACjB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO+U,WAAW3U,IAE9Cf,EAAKuO,eA/JMvO,EAmKnBoV,2BAA6B,SAAAzU,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKK,iBAAmBlU,EAAOkU,gBAEpC7U,EAAKuO,eA5KMvO,EAgLnBqV,2BAA6B,SAAA1U,GACzB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,GAGDA,EAAKE,MACkB,uBAAvBF,EAAKE,KAAK,UACVF,EAAKE,KAAKc,gBAAkB3U,EAAO2U,eAEnCtV,EAAKuO,eAzLMvO,EA6LnBmV,qBAAuB,SAAAxU,GACnB,IAAM2T,EAAOC,KAAUtN,IAAIqE,IAAiBwN,aACvCxE,KAGDA,EAAKE,MACmB,oBAAvBF,EAAKE,KAAK,UAAyD,mBAAvBF,EAAKE,KAAK,UACvDF,EAAKE,KAAKzL,UAAYpI,EAAOoI,SAE7B/I,EAAKuO,gBAtMMvO,EA0MnBwuC,gBAAkB,WACd,IAAMrpC,EAASmG,IAAiBwN,YACnBvE,KAAUtN,IAAI9B,IAG3BmG,IAAiBqjB,6BAA4B,IA/M9B3uB,EAkNnBozC,iBAAmB,WACf,IAAMjuC,EAASmG,IAAiBwN,YACnBvE,KAAUtN,IAAI9B,IAG3BmG,IAAiB+nC,WAAWluC,IAvNbnF,EA0NnBszC,SAAW,SAAAC,GAGP,OAAOzoC,EAFO9K,EAAK4C,MAAXkI,GAECyoC,GACJtS,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlBjhC,EAAKoC,MAAQ,CACT42B,mBAAoB1tB,IAAiB2uB,wBACrCgZ,gBAAiB3nC,IAAiBkoC,sBALvBxzC,qFASGsT,EAAWC,GAC7B,OAAIA,IAAcpT,KAAKiC,QAInBkR,EAAUtN,QAAU7F,KAAKyC,MAAMoD,OAI/BsN,EAAUxI,IAAM3K,KAAKyC,MAAMkI,+CAQ/BQ,IAAiBkI,GAAG,wBAAyBrT,KAAK6yC,yBAClD1nC,IAAiBkI,GAAG,2BAA4BrT,KAAK44B,4BACrDztB,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,sBAE/C7gB,KAAauH,GAAG,8BAA+BrT,KAAK2yC,+BACpD7mC,KAAauH,GAAG,6BAA8BrT,KAAK2yC,+BAEnDv+B,KAAUf,GAAG,8BAA+BrT,KAAK0yC,+BACjDt+B,KAAUf,GAAG,kBAAmBrT,KAAK+yC,mBACrClqC,KAAUwK,GAAG,mBAAoBrT,KAAK2S,oBACtCyB,KAAUf,GAAG,uBAAwBrT,KAAKgzC,wBAC1CnqC,KAAUwK,GAAG,qBAAsBrT,KAAKgV,sBACxCR,KAAgBnB,GAAG,2BAA4BrT,KAAKiV,4BACpDQ,KAAgBpC,GAAG,2BAA4BrT,KAAKkV,4BACpDV,KAAgBnB,GAAG,mBAAoBrT,KAAKoV,oBAC5CK,KAAgBpC,GAAG,mBAAoBrT,KAAKsV,mEAI5CnK,IAAiBzJ,eAAe,wBAAyB1B,KAAK6yC,yBAC9D1nC,IAAiBzJ,eAAe,2BAA4B1B,KAAK44B,4BACjEztB,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,sBAE3D7gB,KAAapK,eAAe,8BAA+B1B,KAAK2yC,+BAChE7mC,KAAapK,eAAe,6BAA8B1B,KAAK2yC,+BAE/Dv+B,KAAU1S,eAAe,8BAA+B1B,KAAK0yC,+BAC7Dt+B,KAAU1S,eAAe,kBAAmB1B,KAAK+yC,mBACjDlqC,KAAUnH,eAAe,mBAAoB1B,KAAK2S,oBAClDyB,KAAU1S,eAAe,uBAAwB1B,KAAKgzC,wBACtDnqC,KAAUnH,eAAe,qBAAsB1B,KAAKgV,sBACpDR,KAAgB9S,eAAe,2BAA4B1B,KAAKiV,4BAChEQ,KAAgB/T,eAAe,2BAA4B1B,KAAKkV,4BAChEV,KAAgB9S,eAAe,mBAAoB1B,KAAKoV,oBACxDK,KAAgB/T,eAAe,mBAAoB1B,KAAKsV,qDAsKnD,IAAAxQ,EACkB9E,KAAKyC,MAApBsC,EADHD,EACGC,QAAS4F,EADZ7F,EACY6F,EADZkE,EAE2D7O,KAAKiC,MAA7D42B,EAFHhqB,EAEGgqB,mBAAoBia,EAFvBjkC,EAEuBikC,gBAAiBF,EAFxC/jC,EAEwC+jC,eAE7C,GAAIA,EACA,OAAOtuC,EAAArB,EAAAC,cAACowC,GAAD,CAAe/B,MAAOqB,IAGjC,IAAM5tC,EAASmG,IAAiBwN,YAC1BxE,EAAOC,KAAUtN,IAAI9B,GAErBuuC,EAAmBC,YAAqBxuC,GAC1C2e,EAAQ5T,YAAa/K,GAAQ,EAAM2F,GACnCkK,EAAW4+B,YAAgBzuC,GAAQ,GACnC0uC,GAAwB,EAE5B,GAAIZ,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDnvB,EAAQ3jB,KAAKmzC,SAAS,cACtBt+B,EAAW,GACX6+B,GAAwB,EACxB,MACJ,IAAK,mCACD/vB,EAAQ3jB,KAAKmzC,SAAS,uBACtBt+B,EAAW,GACX6+B,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACD/vB,EAAQ3jB,KAAKmzC,SAAS,YACtBt+B,EAAW,GACX6+B,GAAwB,EACxB,MACJ,IAAK,mCACD/vB,EAAQ3jB,KAAKmzC,SAAS,uBACtBt+B,EAAW,GACX6+B,GAAwB,OAG7B,GAAI7a,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACDlV,EAAQ3jB,KAAKmzC,SAAS,eACtBt+B,EAAW,GACX6+B,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACD/vB,EAAQ3jB,KAAKmzC,SAAS,WACtBt+B,EAAW,GACX6+B,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACD/vB,EAAQ3jB,KAAKmzC,SAAS,WACtBt+B,EAAW,GACX6+B,GAAwB,OAIhC/vB,EAAQ3jB,KAAKmzC,SAAS,WACtBt+B,EAAW,GACX6+B,GAAwB,EAG5B,OACIpvC,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,mBAC5CxB,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,gBAAiB,OAAQ8O,EAAO,iBAAmB,kBACzE5O,QAASvF,KAAKquC,iBACd/pC,EAAArB,EAAAC,cAAA,QAAMC,UAAU,yBAAyBwgB,GACxC+vB,GAAyBpvC,EAAArB,EAAAC,cAACywC,GAAA,EAAD,MAC1BrvC,EAAArB,EAAAC,cAAA,QACIC,UAAWkC,IAAW,sBAAuBN,EAAQ6uC,kBAAhC9zC,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQ8uC,wBAA0BN,KAEtC1+B,GAELvQ,EAAArB,EAAAC,cAAA,QAAMC,UAAU,wBAEnBgR,GACG7P,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQ+uC,wBACnBtoC,aAAW,SACXjG,QAASvF,KAAKizC,kBACd3uC,EAAArB,EAAAC,cAAC+gB,GAAAhhB,EAAD,OAEJqB,EAAArB,EAAAC,cAAC6wC,GAAD,CAAgB1F,gBAAiBruC,KAAKquC,2BAvUzC7qC,aAoVNsO,GALCC,YACZS,cACA5M,IA1WW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChB2X,OAAQ,CACJf,OAAQ,QAEZ4jB,eAAgB,CACZ5jB,OAAQ,qBAEZikB,iBAAkB,CACdjkB,OAAQ,kBAEZo9B,wBAAyB,CACrBp9B,OAAQ,kBAEZs9B,eAAgB,CACZt9B,OAAQ,kBAEZk9B,kBAAmB,CACfnoC,MAAO5F,EAAME,QAAQuG,KAAKoH,WAE9BmgC,wBAAyB,CACrBpoC,MAAO5F,EAAME,QAAQC,QAAQ2N,KAAO,eAErCpB,YAAY1M,KAoVI,CAAEQ,WAAW,IAGrByL,CAAQ2gC,yMC9VjBwB,sNACFhyC,MAAQ,CACJ+2B,SAAU,KACV30B,MAAO6vC,KAAYC,OACnBC,UAAWF,KAAYC,OACvBE,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAAh0C,GAAU,IAC1B2zC,EAAuB3zC,EAAvB2zC,OAAQM,EAAej0C,EAAfi0C,gBAEGpuB,IAAfouB,EACA50C,EAAK6C,SAAS,CAAE2B,MAAO8vC,IAEvBt0C,EAAK6C,SAAS,CAAE2B,MAAO8vC,EAAQC,UAAWK,OAIlDC,kBAAoB,SAAA1b,GAChBn5B,EAAK6C,SAAS,CAAEs2B,SAAUA,OAG9B2b,mBAAqB,WAAM,IAAA9lC,EACqBhP,EAAKoC,MAAzCoyC,EADexlC,EACfwlC,SAAUC,EADKzlC,EACLylC,WAAYC,EADP1lC,EACO0lC,UAE1BF,GACAC,GACAC,GAEJ10C,EAAK6C,SAAS,CAAEs2B,SAAU,UAG9B4b,iBAAmB,SAACnmC,EAAOomC,GACvBh1C,EAAK6C,SAAS,CAAE4xC,YAAY,IAExBO,GACAh1C,EAAK60C,kBAAkBjmC,EAAMwqB,kBAIrC6b,iBAAmB,WACfj1C,EAAK6C,SAAS,CAAE4xC,YAAY,GAAS,WACjCz0C,EAAK80C,0BAIbI,sBAAwB,WACpBl1C,EAAK6C,SAAS,CAAE6xC,WAAW,GAAS,WAChC10C,EAAK80C,0BAIbK,iBAAmB,WAAM,IAAAvkC,EACQ5Q,EAAKoC,MAA1BoC,EADaoM,EACbpM,MAAO+vC,EADM3jC,EACN2jC,UACTa,EAAY5wC,EAAQ,EAAI,EAAI+vC,GAAac,IAE/C3zC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT6xC,OAAQc,OAIhBjrB,aAAe,SAACvb,EAAOpK,GAAU,IAAAkhB,EACG1lB,EAAKoC,MAA7BoyC,EADqB9uB,EACrB8uB,SAAUD,EADW7uB,EACX6uB,UAEdC,EACA9yC,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT6xC,OAAQ9vC,IAGZ9C,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTmyC,WAAYpwC,EAAQ,EAAIA,EAAQ+vC,EAChCD,OAAQ9vC,OAKpB8wC,gBAAkB,WAAM,IACZ9wC,EAAUxE,EAAKoC,MAAfoC,MAERxE,EAAK6C,SAAS,CACV2xC,UAAU,EACVD,UAAW/vC,OAInB+wC,cAAgB,WAAM,IAAAvsB,EACWhpB,EAAKoC,MAA1BoC,EADUwkB,EACVxkB,MAAO+vC,EADGvrB,EACHurB,UAEfv0C,EAAK6C,SACD,CACI2xC,UAAU,EACVD,UAAW/vC,EAAQ,EAAIA,EAAQ+vC,GAEnC,WACIv0C,EAAK80C,0BAKjBU,cAAgB,SAAAhxC,GACZ,OAAc,IAAVA,EACOC,EAAArB,EAAAC,cAACoyC,GAAAryC,EAAD,CAAem+B,SAAS,UAG/B/8B,EAAQ,IACDC,EAAArB,EAAAC,cAACqyC,GAAAtyC,EAAD,CAAgBm+B,SAAS,UAGhC/8B,EAAQ,GACDC,EAAArB,EAAAC,cAACsyC,GAAAvyC,EAAD,CAAgBm+B,SAAS,UAG7B98B,EAAArB,EAAAC,cAACuyC,GAAAxyC,EAAD,CAAcm+B,SAAS,8FAlH9B8S,KAAY7gC,GAAG,0BAA2BrT,KAAKw0C,0EAI/CN,KAAYxyC,eAAe,0BAA2B1B,KAAKw0C,4DAiHtD,IAAAjkC,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADH2wC,EAEuB11C,KAAKiC,MAAzB+2B,EAFH0c,EAEG1c,SAAU30B,EAFbqxC,EAEarxC,MACZwM,EAAOgT,QAAQmV,GAErB,OACI10B,EAAArB,EAAAC,cAAA,OACIyyC,aAAc,SAAAvsC,GAAC,OAAImH,EAAKqkC,iBAAiBxrC,GAAG,IAC5CwsC,aAAc51C,KAAK80C,iBACnBv2B,MAAO,CACHjM,SAAU,WACVnM,WAAY,gBAEhB7B,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQk5B,WAAYxyB,MAAM,UAAUlG,QAASvF,KAAKg1C,kBACpEh1C,KAAKq1C,cAAchxC,IAExBC,EAAArB,EAAAC,cAAA,OACIqb,MAAO,CACHjM,SAAU,WACVnM,WAAY,cACZ0vC,WAAYhlC,EAAO,UAAY,SAC/B0f,OAAQ,GAEZolB,aAAc,SAAAvsC,GAAC,OAAImH,EAAKqkC,iBAAiBxrC,GAAG,IAC5CwsC,aAAc51C,KAAK+0C,uBACnBzwC,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQe,YAAaf,EAAQud,MACnD/D,MAAO,CACHu3B,UAAW,EACXC,YAAa,EACbxjC,YAAa,UAEjBjO,EAAArB,EAAAC,cAAC8yC,GAAA/yC,EAAD,CACI8B,QAAS,CAAEm4B,UAAWn4B,EAAQkxC,OAAQC,MAAOnxC,EAAQmxC,OACrDC,IAAK,EACLC,IAAK,EACL/xC,MAAOA,EACP+T,SAAUpY,KAAKgqB,aACfqsB,YAAar2C,KAAKm1C,gBAClBmB,UAAWt2C,KAAKo1C,cAChBnzB,UAAQ,cAxKT1e,IAAMC,YAiLlBoC,OArMA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBm+B,WAAY,CACRhsB,QAAS,GAEbqQ,KAAM,CACFjQ,QAAS,OACT9E,OAAQ,IACRD,MAAO,GACP2E,QAAS,SACT9L,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,WAEnFutB,OAAQ,CACJhkC,QAAS,UAEbikC,MAAO,CACHK,QAAS,IAEVhkC,YAAY1M,KAoLe,CAAEQ,WAAW,GAAhCT,CAAwCquC,8CCtMjDuC,eACF,SAAAA,EAAY/zC,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAw2C,IACf32C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA02C,GAAAr2C,KAAAH,KAAMyC,KAiBVg0C,0BAA4B,SAAAj2C,GAAU,IAC1Bk2C,EAAWl2C,EAAXk2C,OAER72C,EAAK6C,SAAS,CAAEg0C,YArBD72C,EAwBnB82C,aAAe,WAAM,IACTD,EAAW72C,EAAKoC,MAAhBy0C,OAEJE,EAAaF,EACjB,OAAQA,GACJ,KAAKG,KAAWC,KACZF,EAAaC,KAAWE,OACxB,MAEJ,KAAKF,KAAWE,OACZH,EAAaC,KAAWG,WACxB,MAEJ,KAAKH,KAAWG,WACZJ,EAAaC,KAAWC,KAKhCv1C,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTo0C,OAAQE,KA7CG/2C,EAiDnBo3C,QAAU,SAAAP,GACN,OAAQA,GACJ,KAAKG,KAAWC,KAGhB,KAAKD,KAAWE,OACZ,OAAOzyC,EAAArB,EAAAC,cAACg0C,GAAAj0C,EAAD,CAAYm+B,SAAS,UAEhC,KAAKyV,KAAWG,WACZ,OAAO1yC,EAAArB,EAAAC,cAACi0C,GAAAl0C,EAAD,CAAem+B,SAAS,UAEnC,QACI,OAAO98B,EAAArB,EAAAC,cAACg0C,GAAAj0C,EAAD,CAAYm+B,SAAS,YA7DrB,IAGPsV,EAAWxC,KAAXwC,OAHO,OAKf72C,EAAKoC,MAAQ,CACTy0C,UANW72C,mFAWfq0C,KAAY7gC,GAAG,0BAA2BrT,KAAKy2C,0EAI/CvC,KAAYxyC,eAAe,0BAA2B1B,KAAKy2C,4DAmDtD,IACG1xC,EAAY/E,KAAKyC,MAAjBsC,QACA2xC,EAAW12C,KAAKiC,MAAhBy0C,OAER,OACIpyC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WACnBxyB,MAAOirC,IAAWG,KAAWC,KAAO,UAAY,UAChDvxC,QAASvF,KAAK22C,cACb32C,KAAKi3C,QAAQP,WA5EHnzC,IAAMC,WAkFlBoC,OAxFA,CACXq4B,WAAY,CACRhsB,QAAS,IAsFFrM,CAAmB4wC,yBCnF5BY,eACF,SAAAA,EAAY30C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAo3C,IACfv3C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAs3C,GAAAj3C,KAAAH,KAAMyC,KAiBV40C,2BAA6B,SAAA72C,GAAU,IAC3B82C,EAAY92C,EAAZ82C,QAERz3C,EAAK6C,SAAS,CAAE40C,aArBDz3C,EAwBnB03C,cAAgB,WAAM,IACVD,EAAYz3C,EAAKoC,MAAjBq1C,QAER/1C,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACTg1C,SAAUA,KA7BC,IAGPA,EAAYpD,KAAZoD,QAHO,OAKfz3C,EAAKoC,MAAQ,CACTq1C,WANWz3C,mFAWfq0C,KAAY7gC,GAAG,2BAA4BrT,KAAKq3C,2EAIhDnD,KAAYxyC,eAAe,2BAA4B1B,KAAKq3C,6DAkBvD,IACGtyC,EAAY/E,KAAKyC,MAAjBsC,QACAuyC,EAAYt3C,KAAKiC,MAAjBq1C,QAER,OACIhzC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WACnBxyB,MAAQ6rC,EAAsB,UAAZ,UAClB/xC,QAASvF,KAAKu3C,eACdjzC,EAAArB,EAAAC,cAACs0C,GAAAv0C,EAAD,CAAam+B,SAAS,kBA3CV79B,IAAMC,WAiDnBoC,OAvDA,CACXq4B,WAAY,CACRhsB,QAAS,IAqDFrM,CAAmBwxC,IClD5BK,eACF,SAAAA,EAAYh1C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAy3C,IACf53C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA23C,GAAAt3C,KAAAH,KAAMyC,KAiBVi1C,gCAAkC,SAAAl3C,GAAU,IAChCm3C,EAAiBn3C,EAAjBm3C,aAER93C,EAAK6C,SAAS,CAAEi1C,kBArBD93C,EAwBnB+3C,mBAAqB,WAAM,IAGjBC,EAFmBh4C,EAAKoC,MAAtB01C,eAGaG,IAA6BC,IAA2BD,IAE7Ev2C,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACTq1C,aAAcE,KAhCH,IAGPF,EAAiBzD,KAAjByD,aAHO,OAKf93C,EAAKoC,MAAQ,CACT01C,gBANW93C,mFAWfq0C,KAAY7gC,GAAG,gCAAiCrT,KAAK03C,gFAIrDxD,KAAYxyC,eAAe,gCAAiC1B,KAAK03C,kEAqB5D,IACG3yC,EAAY/E,KAAKyC,MAAjBsC,QACA4yC,EAAiB33C,KAAKiC,MAAtB01C,aAER,OACIrzC,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WACnBxyB,MAAOksC,EAAeG,IAA6B,UAAY,UAC/DvyC,QAASvF,KAAK43C,oBACdtzC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BAAf,cA9CiBI,IAAMC,WAoDxBoC,OAzDA,CACXq4B,WAAY,CACRhsB,QAAS,IAuDFrM,CAAmB6xC,ICdnBO,eA7CX,SAAAA,EAAYv1C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAg4C,IACfn4C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAk4C,GAAA73C,KAAAH,KAAMyC,KAiBVw1C,wBAA0B,SAAAz3C,GAAU,IACxB03C,EAAgB13C,EAAhB03C,YAERr4C,EAAK6C,SAAS,CACVw1C,YAAaA,EACbC,kBAAmB7rB,aAAkB8rB,KAAKC,MAAMH,GAAe,OAvBpDr4C,EA2BnBy4C,cAAgB,SAACJ,EAAahsB,GAGHI,aAAkB8rB,KAAKC,MAAMnsB,GAAY,IAKhE,OAJ0BI,aAAkB8rB,KAAKC,MAAMH,GAAe,KA5BtEr4C,EAAKoC,MAAQ,CACTi2C,YAAa,EACbhsB,SAAU,EACVqsB,WAAY14C,EAAKy4C,cAAc,EAAG,IANvBz4C,mFAWfq0C,KAAY7gC,GAAG,wBAAyBrT,KAAKi4C,wEAI7C/D,KAAYxyC,eAAe,wBAAyB1B,KAAKi4C,0DAuBpD,IACGE,EAAsBn4C,KAAKiC,MAA3Bk2C,kBAER,OAAO7zC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KAAG8+B,UA1CC50C,IAAMC,oBCanBg1C,uBACF,SAAAA,EAAY/1C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAw4C,IACf34C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA04C,GAAAr4C,KAAAH,KAAMyC,KA0BVg2C,eAAiB,WACb,IAAM58B,EAAOhc,EAAKonB,QAAQxa,QAC1B,GAAKoP,EAAL,CAFmB,IAIXuE,EAJWtgB,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IAIXugB,UACR,GAAKA,EAAL,CAEA,IAAM6mB,EAAOpnC,EAAK64C,WAAW5xC,IAAIsZ,GACjC,GAAK6mB,EAAL,CAEA,IAAMxI,EAAOka,eAAqB1R,GAC7BxI,IAEL5iB,EAAKZ,UAAYwjB,EAAKma,UAAY,QAxCnB/4C,EAyDnBg5C,kCAAoC,SAAAr4C,GAAU,IAClCs4C,EAASt4C,EAATs4C,KAEJA,EACAj5C,EAAK6C,SACD,CACIq2C,kBAAmBD,GAEvB,WACIj5C,EAAKm5C,YAIbn5C,EAAK6C,SACD,CACIq2C,kBAAmBD,GAEvB,WACIj5C,EAAKo5C,cA3EFp5C,EAiFnBq5C,0BAA4B,SAAA14C,GAAU,IAC1BwE,EAAsBxE,EAAtBwE,OAAQob,EAAc5f,EAAd4f,UAEhBvgB,EAAKmF,OAASA,EACdnF,EAAKugB,UAAYA,GArFFvgB,EAwFnBs5C,mCAAqC,SAAA34C,GAAU,IAAA44C,EAAAt5C,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IACnCmF,EADmCo0C,EACnCp0C,OAAQob,EAD2Bg5B,EAC3Bh5B,UAEZ5f,EAAOwE,SAAWA,GAAUxE,EAAO4f,YAAcA,GACjDvgB,EAAK6C,SAAS,CACV22C,SAAU,QA7FHx5C,EAkGnBy5C,4BAA8B,SAAA94C,GAAU,IAAA+4C,EAAAz5C,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IAC5BmF,EAD4Bu0C,EAC5Bv0C,OAAQob,EADoBm5B,EACpBn5B,UACRi5B,EAAa74C,EAAb64C,SAEJr0C,IAAWq0C,EAASr0C,QAAUob,IAAci5B,EAASj5B,WACrDvgB,EAAK6C,SAAS,CACV22C,SAAUA,KAxGHx5C,EA6GnBm5C,QAAU,WACNQ,aAAa35C,EAAK45C,aAElB55C,EAAK45C,YAAcrpC,WAAW,WAAM,IAAAvB,EACchP,EAAKoC,MAA3Cy3C,EADwB7qC,EACxB6qC,eAAgBX,EADQlqC,EACRkqC,kBACxBl5C,EAAK6C,SAAS,CACVmO,KAAM6oC,GAAkBX,KAE7B,MArHYl5C,EAwHnBo5C,SAAW,WACPO,aAAa35C,EAAK8Z,SAElB9Z,EAAK8Z,QAAUvJ,WAAW,WAAM,IAAAK,EACkB5Q,EAAKoC,MAA3Cy3C,EADoBjpC,EACpBipC,eAAgBX,EADItoC,EACJsoC,kBACxBl5C,EAAK6C,SAAS,CACVmO,KAAM6oC,GAAkBX,KAE7B,MAhIYl5C,EAmInB+0C,iBAAmB,WACf/0C,EAAK6C,SAAS,CACVq2C,mBAAmB,EACnBloC,MAAM,KAtIKhR,EA0InBi1C,iBAAmB,WACfj1C,EAAK6C,SACD,CACIq2C,mBAAmB,GAEvB,WACIl5C,EAAKo5C,cAhJEp5C,EAqJnBmnB,aAAe,WACX,IAAMnL,EAAOhc,EAAKonB,QAAQxa,QACrBoP,IAEkB,IAAnBA,EAAKZ,UACL1Z,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAENuZ,EAAKC,eAAiBD,EAAKZ,UAAYY,EAAKE,cACnDxa,KAAgBiJ,aAAa,CACzBlI,QAAS,oCA5JjBzC,EAAKonB,QAAU1jB,IAAM+M,YACrBzQ,EAAK64C,WAAa,IAAI1xC,IAJP,IAMP6D,EAAsBqpC,KAAtBrpC,QAASwuC,EAAanF,KAAbmF,SANF,OAQfx5C,EAAKmF,OAAS6F,EAAUA,EAAQV,QAAU,EAC1CtK,EAAKugB,UAAYvV,EAAUA,EAAQjK,GAAK,EAExCf,EAAKoC,MAAQ,CACT4O,MAAM,EACN6oC,gBAAgB,EAChBX,mBAAmB,EACnBM,SAAUA,GAfCx5C,kFAmBAgD,EAAWC,EAAWC,GAAU,IACvC8N,EAAS7Q,KAAKiC,MAAd4O,MAEH/N,EAAU+N,MAAQA,GACnB7Q,KAAKy4C,6DAqBTvE,KAAY7gC,GAAG,0BAA2BrT,KAAKk5C,2BAC/ChF,KAAY7gC,GAAG,4BAA6BrT,KAAKs5C,6BACjDpF,KAAY7gC,GAAG,mCAAoCrT,KAAKm5C,oCACxDjF,KAAY7gC,GAAG,kCAAmCrT,KAAK64C,kFAIvD3E,KAAYxyC,eAAe,0BAA2B1B,KAAKk5C,2BAC3DhF,KAAYxyC,eAAe,4BAA6B1B,KAAKs5C,6BAC7DpF,KAAYxyC,eAAe,mCAAoC1B,KAAKm5C,oCACpEjF,KAAYxyC,eAAe,kCAAmC1B,KAAK64C,oEA8G9D,IAAAtoC,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADHwgB,EAGsBvlB,KAAKiC,MAAxB4O,EAHH0U,EAGG1U,KAAMwoC,EAHT9zB,EAGS8zB,SACd,IAAKxoC,EAAM,OAAO,KAClB,IAAKwoC,EAAU,OAAO,KALjB,IAOGnzB,EAAamzB,EAAbnzB,SACR,OAAKA,EACDA,EAASvf,QAAU,EAAU,MAEjC3G,KAAK04C,WAAWrU,QAGZ//B,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mBAAoBN,EAAQud,KAAMvd,EAAQe,cACjExB,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKinB,QACV9jB,UAAU,iBACVwyC,aAAc31C,KAAK40C,iBACnBgB,aAAc51C,KAAK80C,iBACnB3rB,SAAUnpB,KAAKgnB,cACdqyB,EAASnzB,SACLhB,MAAM,GACNy0B,UACAzwC,IAAI,SAAAnI,GAAC,OACFuD,EAAArB,EAAAC,cAAA,OAAKkB,IAAKrD,EAAEH,GAAIuQ,IAAK,SAAA0L,GAAE,OAAItM,EAAKmoC,WAAWzqC,IAAIlN,EAAEH,GAAIic,IAAK1Z,UAAU,iBAC/Dwe,aAAS5gB,EAAG,kBAAM6gB,aAAU7gB,EAAEoJ,QAASpJ,EAAEH,aAnBhD,YA7KP2C,IAAMC,YA0MdoC,OAjNA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBwiB,KAAM,CACFnc,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,YAEhFnW,YAAY1M,KA6MJD,CAAmB4yC,ICvL5BoB,uBACF,SAAAA,EAAYn3C,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA45C,IACf/5C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA85C,GAAAz5C,KAAAH,KAAMyC,KA6EVi1C,gCAAkC,SAAAl3C,GAAU,IAChCm3C,EAAiBn3C,EAAjBm3C,aAEFkC,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,IAELA,EAAOlC,aAAeA,IApFP93C,EAuFnB20C,0BAA4B,SAAAh0C,GAAU,IAC1B2zC,EAAW3zC,EAAX2zC,OAEF0F,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,IAELA,EAAO1F,OAASA,IA7FDt0C,EAgGnBk6C,iCAAmC,SAAAv5C,GAC/BX,EAAKm6C,mBAAqBn2B,QAAQ1Y,IAAiB8uC,qBAjGpCp6C,EAoGnBq6C,+BAAiC,SAAA15C,GAC7BX,EAAKm6C,oBAAqB,GArGXn6C,EAwGnBs6C,+BAAiC,SAAA35C,GAC7BX,EAAKm6C,oBAAqB,GAzGXn6C,EA4GnBu6C,8BAAgC,SAAA55C,GAC5BX,EAAKm6C,oBAAqB,EAE1B,IAAMH,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,GAELA,EAAOQ,SAlHQx6C,EAqHnBy6C,iBAAmB,SAACrR,EAAMp+B,GAAY,IAC1BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjBf,EAAK6C,SACD,CACIqoB,IAAKlrB,EAAK06C,YAAY1vC,IAE1B,WACI,IAAMgvC,EAASh6C,EAAKi6C,SAASrtC,QACzBotC,GACIh6C,EAAKm6C,qBACLH,EAAOQ,QAEP94C,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT0C,OAAQmF,EACRiW,UAAWxf,QArIhBf,EA6InB26C,wBAA0B,SAAAh6C,GAAU,IACxBwE,EAAsBxE,EAAtBwE,OAAQob,EAAc5f,EAAd4f,UACRvV,EAAYhL,EAAKoC,MAAjB4I,QAER,GAAKA,EAAL,CAJgC,IAMxBV,EAAyBU,EAAzBV,QAASvJ,EAAgBiK,EAAhBjK,GAAIoL,EAAYnB,EAAZmB,QACrB,GAAKA,GACDhH,IAAWmF,GAAWiW,IAAcxf,EAExC,OAAQoL,EAAQ,UACZ,IAAK,cAAe,IACRyuC,EAAazuC,EAAbyuC,SACR,GAAIA,EAAU,KACFC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAE3B,GAAIF,EAAO,CACP,IAAMzR,EAAOyR,EAAMA,MACfzR,GACAppC,EAAKy6C,iBAAiBrR,EAAMp+B,GAIpC,GAAI8vC,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAh7C,EAAKy6C,iBAAiBO,EAAOhwC,GAIrC,GAAI+vC,EAAY,KACJ5uB,EAAU4uB,EAAV5uB,MACJA,GACAnsB,EAAKy6C,iBAAiBtuB,EAAOnhB,IAKzC,MAEJ,IAAK,eAAgB,IACT6vC,EAAU1uC,EAAV0uC,MACR,GAAIA,EAAO,CACP,IAAMzR,EAAOyR,EAAMA,MACfzR,GACAppC,EAAKy6C,iBAAiBrR,EAAMp+B,GAIpC,MAEJ,IAAK,mBAAoB,IACb8vC,EAAe3uC,EAAf2uC,WACR,GAAIA,EAAY,KACJE,EAAUF,EAAVE,MACJA,GACAh7C,EAAKy6C,iBAAiBO,EAAOhwC,GAIrC,MAEJ,IAAK,mBAAoB,IACb+vC,EAAe5uC,EAAf4uC,WACR,GAAIA,EAAY,KACJ5uB,EAAU4uB,EAAV5uB,MACJA,GACAnsB,EAAKy6C,iBAAiBtuB,EAAOnhB,OAhN9BhL,EAyNnBy5C,4BAA8B,SAAA94C,GAAU,IAC5B64C,EAAa74C,EAAb64C,SACAr0C,EAAsBq0C,EAAtBr0C,OAAQob,EAAci5B,EAAdj5B,UACRvV,EAAYhL,EAAKoC,MAAjB4I,QAEJA,GAAWA,EAAQV,UAAYnF,GAAU6F,EAAQjK,KAAOwf,GACxDvgB,EAAK6C,SAAS,CAAE22C,SAAUA,KA/Nfx5C,EAmOnBi7C,yBAA2B,SAAAt6C,GACvBX,EAAK6C,SAAS,CACVmI,QAAS,KACTwuC,SAAU,KACV0B,SAAS,EACThwB,IAAK,QAxOMlrB,EA4OnBq5C,0BAA4B,SAAA14C,GAAU,IAC1BwE,EAAsBxE,EAAtBwE,OAAQob,EAAc5f,EAAd4f,UADkBvR,EAEThP,EAAKoC,MAAtB4I,EAF0BgE,EAE1BhE,QAASkgB,EAFiBlc,EAEjBkc,IAEjB,GAAIlgB,GAAWA,EAAQV,UAAYnF,GAAU6F,EAAQjK,KAAOwf,GACxD,GAAI2K,EAAK,CACL,IAAM8uB,EAASh6C,EAAKi6C,SAASrtC,QACzBotC,IACIA,EAAOmB,OACPnB,EAAOoB,OAEPpB,EAAOQ,cAIhB,CACH,IAAMtvB,EAAMlrB,EAAK06C,YAAYrG,KAAYrpC,SACnCkwC,EAAUl3B,QAAQkH,GACPmpB,KAAYmF,SAC7Bx5C,EAAK6C,SACD,CACImI,QAASqpC,KAAYrpC,QACrBwuC,SAAUnF,KAAYmF,SACtB0B,QAASA,EACThwB,IAAKA,GAET,WACI,IAAM8uB,EAASh6C,EAAKi6C,SAASrtC,QACzBotC,IACAA,EAAO3B,YAAcr4C,EAAK0tC,UACtB1tC,EAAKm6C,mBACLH,EAAOQ,QAGAR,EAAOmB,QACdnB,EAAOoB,YA/QZp7C,EAuRnBq7C,WAAa,WACT35C,KAAgBiJ,aAAa,CACzBlI,QAAS,2BAzREzC,EA6RnBs7C,WAAa,WAAM,IACPtwC,EAAYhL,EAAKoC,MAAjB4I,QACHA,GAELtJ,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,MApSRf,EAwSnBu7C,WAAa,WACT75C,KAAgBiJ,aAAa,CACzBlI,QAAS,2BA1SEzC,EA8SnB06C,YAAc,SAAA1vC,GACV,GAAIA,EAAS,KACDmB,EAAYnB,EAAZmB,QACR,GAAIA,EAAS,KACD0uC,EAA4C1uC,EAA5C0uC,MAAOC,EAAqC3uC,EAArC2uC,WAAYC,EAAyB5uC,EAAzB4uC,WAAYH,EAAazuC,EAAbyuC,SAEvC,GAAIC,EAAO,CACP,IAAMzR,EAAOyR,EAAMA,MACnB,GAAIzR,EACA,OAAOje,YAAOie,GAItB,GAAI0R,EAAY,KACJE,EAAUF,EAAVE,MACR,GAAIA,EACA,OAAO7vB,YAAO6vB,GAItB,GAAID,EAAY,KACJ5uB,EAAU4uB,EAAV5uB,MACR,GAAIA,EACA,OAAOhB,YAAOgB,GAItB,GAAIyuB,EAAU,CACV,GAAIA,EAASC,MAAO,CAChB,IAAMzR,EAAOwR,EAASC,MAAMA,MAC5B,GAAIzR,EACA,OAAOje,YAAOie,GAItB,GAAIwR,EAASE,WAAY,KACbE,EAAUJ,EAASE,WAAnBE,MACR,GAAIA,EACA,OAAO7vB,YAAO6vB,GAItB,GAAIJ,EAASG,WAAY,KACb5uB,EAAUyuB,EAASG,WAAnB5uB,MACR,GAAIA,EACA,OAAOhB,YAAOgB,MAOlC,MAAO,IAlWQnsB,EAqWnBw7C,YAAc,WAAqB,IAApBC,IAAoBr3C,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,KAAAA,UAAA,GACvB4G,EAAYhL,EAAKoC,MAAjB4I,QACHA,IAELtJ,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,GACnB06C,SAAUA,IAGdz7C,EAAK6C,SACD,GAKA,WACInB,KAAgBiJ,aAAa,CACzBlI,QAAS,uBACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,GACnB06C,SAAUA,QA3XPz7C,EAiYnB07C,iBAAmB,WACf17C,EAAKw7C,aAAY,IAlYFx7C,EAqYnB0K,YAAc,WACV,IAAMsvC,EAASh6C,EAAKi6C,SAASrtC,QACzBotC,GACAA,EAAOQ,QAGXx6C,EAAKw7C,aAAY,IA3YFx7C,EA8YnB27C,iBAAmB,WAAM,IACb3wC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEA,IAAMgvC,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,IAELh6C,EAAK6C,SAAS,CACVw1C,YAAa2B,EAAO3B,YACpBC,kBAAmB7rB,aAAkB8rB,KAAKC,MAAMwB,EAAO3B,aAAe,MAG1E32C,KAAgBiJ,aAAa,CACzBlI,QAAS,wBACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,GACnBsrB,SAAU2tB,EAAO3tB,SACjBgsB,YAAa2B,EAAO3B,YACpB/2C,UAAW4yB,KAAKqO,WAhaLviC,EAoanB47C,cAAgB,WAAM,IACV5wC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEA,IAAMgvC,EAASh6C,EAAKi6C,SAASrtC,QAC7B,GAAKotC,EAAL,CALkB,IAOVlC,EAAyBzD,KAAzByD,aAAcxD,EAAWD,KAAXC,OAEdhqC,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GACX85C,EAAQgB,aAASvxC,EAASvJ,GAMhC,GAJAi5C,EAAOlC,aAAe+C,EAAQ5C,IAA6BH,EAC3DkC,EAAO1F,OAASA,EAChB0F,EAAO8B,OAAQ,GAEXjB,EAAJ,CAIA,IAAIkB,EAAS,KACT,kBAAmB/B,EACnB+B,EAAS/B,EAAOgC,gBACT,qBAAsBhC,IAC7B+B,EAAS/B,EAAOiC,oBAGfF,GAILr6C,KAAgBiJ,aAAa,CACzBlI,QAAS,iCACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,GACnBg7C,OAAQA,QAvcG/7C,EA2cnBk8C,gBAAkB,WAAM,IACZlxC,EAAYhL,EAAKoC,MAAjB4I,QACR,GAAKA,EAAL,CAEAhL,EAAK6C,SAAS,CACVq4C,SAAS,IAGb,IAAMlB,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,GAELt4C,KAAgBiJ,aAAa,CACzBlI,QAAS,wBACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,GACnBs3C,YAAa2B,EAAO3B,YACpBhsB,SAAU2tB,EAAO3tB,SACjB/qB,UAAW4yB,KAAKqO,UA5dLviC,EAgenBm8C,iBAAmB,WAAM,IACbnxC,EAAYhL,EAAKoC,MAAjB4I,QACHA,IAELhL,EAAK6C,SAAS,CACVq4C,SAAS,IAGEl7C,EAAKi6C,SAASrtC,SAG7BlL,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACT0C,OAAQ6F,EAAQV,QAChBiW,UAAWvV,EAAQjK,OA9eRf,EAkfnB+3C,mBAAqB,WAAM,IAGjBC,EAFmBh4C,EAAKoC,MAAtB01C,eAGaG,IAA6BC,IAA2BD,IAE7Ej4C,EAAK6C,SACD,CACIi1C,aAAcE,GAElB,WACI,IAAMgC,EAASh6C,EAAKi6C,SAASrtC,QACxBotC,IAELA,EAAOlC,aAAeE,KAI9Bt2C,KAAgBiJ,aAAa,CACzBlI,QAAS,gCACTq1C,aAAcE,KAtgBHh4C,EA0gBnBo8C,QAAU,SAACpxC,EAASwuC,GAChB,IAAKxuC,EAAS,OAAO,EACrB,IAAKwuC,IAAaA,EAASnzB,SAASvf,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEXgkB,EAAQy0B,EAASnzB,SAASrB,UAAU,SAAA9jB,GAAC,OAAIA,EAAEoJ,UAAYA,GAAWpJ,EAAEH,KAAOA,IACjF,OAAe,IAAXgkB,GAEGA,EAAQ,EAAIy0B,EAASnzB,SAASvf,QAnhBtB9G,EAshBnBq8C,QAAU,SAACrxC,EAASwuC,GAChB,IAAKxuC,EAAS,OAAO,EACrB,IAAKwuC,IAAaA,EAASnzB,SAASvf,OAAQ,OAAO,EAFtB,IAIrBwD,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEXgkB,EAAQy0B,EAASnzB,SAASrB,UAAU,SAAA9jB,GAAC,OAAIA,EAAEoJ,UAAYA,GAAWpJ,EAAEH,KAAOA,IACjF,OAAe,IAAXgkB,GAEGA,EAAQ,GAAK,GA/hBL/kB,EAkiBnBs8C,sBAAwB,WACpB56C,KAAgBiJ,aAAa,CACzBlI,QAAS,kCACTw2C,MAAM,KAriBKj5C,EAyiBnBu8C,sBAAwB,WACpB76C,KAAgBiJ,aAAa,CACzBlI,QAAS,kCACTw2C,MAAM,KA5iBKj5C,EAgjBnBw8C,iBAAmB,WAAM,IACbxxC,EAAYhL,EAAKoC,MAAjB4I,QACHA,GAEL0Q,aAAS1Q,EAAQV,QAASU,EAAQjK,KAjjBlCf,EAAKi6C,SAAWv2C,IAAM+M,YAHP,IAKPzF,EAAsBqpC,KAAtBrpC,QAASwuC,EAAanF,KAAbmF,SALF,OAOfx5C,EAAK0tC,UAAY+O,IAEjBz8C,EAAKoC,MAAQ,CACTi2C,YAAa,EACbC,kBAAmB7rB,aAAkB,GACrCzhB,QAASA,EACTwuC,SAAUA,EACV0B,SAAS,EACThwB,IAAKlrB,EAAK06C,YAAY1vC,IAfXhL,qFAmBGsT,EAAWC,EAAW4pB,GAAa,IAC7Cn3B,EAAU7F,KAAKyC,MAAfoD,MAD6C4K,EAETzQ,KAAKiC,MAAzC4I,EAF6C4F,EAE7C5F,QAASwuC,EAFoC5oC,EAEpC4oC,SAAUtuB,EAF0Bta,EAE1Bsa,IAAKgwB,EAFqBtqC,EAErBsqC,QAEhC,OAAI5nC,EAAUtN,QAAUA,IAIpBuN,EAAUvI,UAAYA,IAItBuI,EAAUimC,WAAaA,IAIvBjmC,EAAU2X,MAAQA,GAIlB3X,EAAU2nC,UAAYA,iDAQ1BtxC,KAAU4J,GAAG,4BAA6BrT,KAAKw6C,yBAC/C/wC,KAAU4J,GAAG,4BAA6BrT,KAAKw6C,yBAC/C/wC,KAAU4J,GAAG,wBAAyBrT,KAAKw6C,yBAC3CtG,KAAY7gC,GAAG,0BAA2BrT,KAAKk5C,2BAC/ChF,KAAY7gC,GAAG,yBAA0BrT,KAAK86C,0BAC9C5G,KAAY7gC,GAAG,4BAA6BrT,KAAKs5C,6BACjDpF,KAAY7gC,GAAG,8BAA+BrT,KAAKo6C,+BACnDlG,KAAY7gC,GAAG,+BAAgCrT,KAAKm6C,gCACpDjG,KAAY7gC,GAAG,+BAAgCrT,KAAKk6C,gCACpDhG,KAAY7gC,GAAG,0BAA2BrT,KAAKw0C,2BAC/CN,KAAY7gC,GAAG,gCAAiCrT,KAAK03C,iCAErDvsC,IAAiBkI,GAAG,iCAAkCrT,KAAK+5C,iFAI3DtwC,KAAU/H,eAAe,4BAA6B1B,KAAKw6C,yBAC3D/wC,KAAU/H,eAAe,4BAA6B1B,KAAKw6C,yBAC3D/wC,KAAU/H,eAAe,wBAAyB1B,KAAKw6C,yBACvDtG,KAAYxyC,eAAe,0BAA2B1B,KAAKk5C,2BAC3DhF,KAAYxyC,eAAe,yBAA0B1B,KAAK86C,0BAC1D5G,KAAYxyC,eAAe,4BAA6B1B,KAAKs5C,6BAC7DpF,KAAYxyC,eAAe,8BAA+B1B,KAAKo6C,+BAC/DlG,KAAYxyC,eAAe,+BAAgC1B,KAAKm6C,gCAChEjG,KAAYxyC,eAAe,+BAAgC1B,KAAKk6C,gCAChEhG,KAAYxyC,eAAe,0BAA2B1B,KAAKw0C,2BAC3DN,KAAYxyC,eAAe,gCAAiC1B,KAAK03C,iCAEjEvsC,IAAiBzJ,eAAe,iCAAkC1B,KAAK+5C,mEA4elE,IACGh1C,EAAY/E,KAAKyC,MAAjBsC,QADHwgB,EAEuCvlB,KAAKiC,MAAzC84C,EAFHx1B,EAEGw1B,QAASlwC,EAFZ0a,EAEY1a,QAASwuC,EAFrB9zB,EAEqB8zB,SAAUtuB,EAF/BxF,EAE+BwF,IAEhC2vB,GAAQ,EACZ,GAAI7vC,EAAS,KACDV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GACjB85C,EAAQgB,aAASvxC,EAASvJ,GAG9B,IAAM8wB,EAAO7mB,EAAUA,EAAQ6mB,KAAO,KAEhC/N,EAAQ44B,aAAc1xC,GACtB2xC,EAAcC,aAAY/qB,GAC1BgrB,EAAUC,aAAQjrB,GAClBkrB,GAAYlC,EACZmC,GAAoBnC,EACpBoC,EAAapC,EACbqC,EAAcrC,EACduB,EAAUj8C,KAAKi8C,QAAQpxC,EAASwuC,GAChC6C,EAAUl8C,KAAKk8C,QAAQrxC,EAASwuC,GAEtC,OACI/0C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,SACIC,UAAU,sBACVgO,IAAKnR,KAAK85C,SACV/uB,IAAKA,EACLiyB,UAAU,EACVC,UAAU,EACV3vC,MAAO,GACPC,OAAQ,GACR2vC,UAAWl9C,KAAKy7C,cAChB0B,OAAQn9C,KAAK+7C,gBACbqB,QAASp9C,KAAKg8C,iBACdqB,aAAcr9C,KAAKw7C,iBACnB8B,QAASt9C,KAAKu7C,mBAEjB1wC,GACGvG,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQe,YAAa,kBAC5CxB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIk7B,UAAW8d,EACX94C,UAAW4B,EAAQk5B,WACnBxyB,MAAM,UACNlG,QAASvF,KAAKk7C,YACd52C,EAAArB,EAAAC,cAACq6C,GAAAt6C,EAAD,CAAkBm+B,SAAS,WAE/B98B,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WACnBxyB,MAAM,UACN0yB,UAAWpT,EACXxlB,QAASvF,KAAKm7C,YACbJ,EAAUz2C,EAAArB,EAAAC,cAACs6C,GAAAv6C,EAAD,MAAgBqB,EAAArB,EAAAC,cAACu6C,GAAAx6C,EAAD,OAE/BqB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIk7B,UAAW+d,EACX/4C,UAAW4B,EAAQk5B,WACnBxyB,MAAM,UACNlG,QAASvF,KAAKo7C,YACd92C,EAAArB,EAAAC,cAACw6C,GAAAz6C,EAAD,CAAcm+B,SAAS,WAE3B98B,EAAArB,EAAAC,cAACy6C,GAAD,MACAr5C,EAAArB,EAAAC,cAAA,OACIC,UAAU,wBACVwyC,aAAc31C,KAAKm8C,sBACnBvG,aAAc51C,KAAKo8C,sBACnB72C,QAASvF,KAAKq8C,kBACd/3C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACVwgB,EACAi5B,GACGt4C,EAAArB,EAAAC,cAAA,QAAMygB,MAAO64B,GAAb,OAEKE,IAVjB,OAeIp4C,EAAArB,EAAAC,cAAC06C,GAAD,OAEJt5C,EAAArB,EAAAC,cAAC26C,GAAD,MACChB,GAAoBv4C,EAAArB,EAAAC,cAAC46C,GAAD,MACpBhB,GAAcx4C,EAAArB,EAAAC,cAAC66C,GAAD,MACdhB,GAAez4C,EAAArB,EAAAC,cAAC86C,GAAD,MAChB15C,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQk5B,WAAY14B,QAASvF,KAAKuK,aACrDjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAWm+B,SAAS,oBA5oBrB79B,IAAMC,YA0pBlBsO,GALCC,YACZS,cACA5M,IA9pBW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBm+B,WAAY,CACRhsB,QAAS,IAEVM,YAAY1M,KA0pBI,CAAEQ,WAAW,IAGrByL,CAAQ8nC,IC/qBjBqE,sNASFC,uBAAyB,WACrBr+C,EAAKuO,kGARLmqB,KAAkBllB,GAAG,6BAA8BrT,KAAKk+C,uEAIxD3lB,KAAkB72B,eAAe,6BAA8B1B,KAAKk+C,yDAO/D,IAAAp5C,EAC2B9E,KAAKyC,MAA7BsC,EADHD,EACGC,QAAS2sB,EADZ5sB,EACY4sB,KAAM2G,EADlBvzB,EACkBuzB,KAEvB,OACI/zB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,WAAYN,EAAQo5C,UAC1C,IAAIpqB,KAAY,IAAPrC,GAAa0sB,mBAAmB,CAAC/lB,EAAKD,UAAW,CAAEimB,IAAK,UAAWC,MAAO,iBAlB9E/6C,IAAMC,YAiCbsO,GALCC,YACZnM,IAnCW,SAAAC,GAAK,MAAK,CACrBs4C,QAAS,CACL1yC,MAAO5F,EAAME,QAAQuG,KAAKoH,aAiCX,CAAErN,WAAW,IAChCmM,cAGWV,CAAQmsC,ICoERM,uBA7GX,SAAAA,EAAY97C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAu+C,IACf1+C,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAy+C,GAAAp+C,KAAAH,KAAMyC,KAeV+7C,uBAAyB,SAAAh+C,GACrBX,EAAK6C,SAAS,CAAE2xC,SAAUlpC,IAAiBszC,iBAjB5B5+C,EAoBnB6+C,gBAAkB,SAAAjwC,GACdA,EAAME,iBACNF,EAAMuS,mBAtBSnhB,EAyBnB8+C,WAAa,SAAAlwC,GACTA,EAAME,iBACNF,EAAMuS,kBACN7V,IAAiByzC,aAAY,GAE7B/+C,EAAKwpC,6BAA6B56B,EAAMowC,aAAa/V,QA9BtCjpC,EAiCnBi/C,gBAAkB,SAAArwC,GACdA,EAAME,iBACNF,EAAMuS,kBACN7V,IAAiByzC,aAAY,IApCd/+C,EAuCnBwpC,6BAA+B,SAAAP,GAC3B,GAAqB,IAAjBA,EAAMniC,OAEV,IAAK,IAAIO,EAAI,EAAGA,EAAI4hC,EAAMniC,OAAQO,IAAK,CACnC,IAAI+hC,EAAOH,EAAM5hC,GACX8E,EAAU,CACZ1J,QAAS,uBACTqN,SAAU,CAAErN,QAAS,gBAAiBk1B,KAAMyR,EAAKzR,KAAMgS,KAAMP,IAGjEppC,EAAKynC,eAAet7B,EAAS,SAAAxJ,GAAM,OAAIiH,KAAUogC,WAAWrnC,EAAOwJ,QAAQ2D,SAASA,SAAS/O,GAAI4B,OAjDtF3C,EAqDnBynC,eArDmB,eAAAzmB,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqDF,SAAAC,EAAOqE,EAASwZ,GAAhB,IAAA9M,EAAAlW,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPoQ,EAAgBvN,IAAiBwN,YAD1B,CAAAvQ,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,oBAIRgC,EAJQ,CAAA5D,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAC,KAAA,EAOT8C,IAAiBs/B,sBAAjB,mCAAA9lC,OAA0E+T,IAPjEtQ,EAAAE,KAAA,EASU/G,KAAgBc,KAAK,CACpCC,QAAS,cACT6H,QAASuO,EACT7L,oBAAqB,EACrBI,sBAAuBjB,IAblB,OASLxJ,EATK4F,EAAAiB,KAkBT9H,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAASuO,EACT7K,YAAa,CAACrL,EAAO5B,MAGzB4kB,EAAShjB,GAxBA4F,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAuiC,GAAAviC,EAAA,SA0BTwiC,MAAM,qBAAuBC,KAAKC,UAAL1iC,EAAAuiC,KA1BpB,yBAAAviC,EAAAwB,SAAAjC,EAAA,kBArDE,gBAAAyZ,EAAA2F,GAAA,OAAAlG,EAAA7c,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAKoC,MAAQ,CACToyC,SAAUlpC,IAAiBszC,eAJhB5+C,mFASfsL,IAAiBkI,GAAG,uBAAwBrT,KAAKw+C,uEAIjDrzC,IAAiBzJ,eAAe,uBAAwB1B,KAAKw+C,yDAsExD,IACGnK,EAAar0C,KAAKiC,MAAlBoyC,SAER,OACI/vC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACKg7B,GACG/vC,EAAArB,EAAAC,cAAA,OACIC,UAAU,oBACV47C,YAAa/+C,KAAK0+C,gBAClBM,YAAah/C,KAAK8+C,gBAClBG,OAAQj/C,KAAK2+C,YACbr6C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BAAf,mBACAmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,8BAAf,+CAlGFI,IAAMC,6DCoDpC,IAwBM07C,8MACFj9C,MAAQ,CACJk9C,SAAU,QAGdC,eAAiB,SAAA3gB,GACb5+B,EAAK6C,SAAS,CACVy8C,SAAU1gB,OAIlB4gB,YAAc,SAAA5wC,GACVA,EAAMuS,kBADa,IAGXs+B,EAAgBz/C,EAAK4C,MAArB68C,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBh5B,EAAmBg5B,EAAnBh5B,eAER9K,aAAS8K,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxBpc,EAAwBo1C,EAAxBp1C,QAASC,EAAem1C,EAAfn1C,WAEjBmR,aAASpR,EAASC,6EAMrB,IAAAtF,EAC+B9E,KAAKyC,MAAjCkI,EADH7F,EACG6F,EAAG5F,EADND,EACMC,QAASu6C,EADfx6C,EACew6C,YACZH,EAAan/C,KAAKiC,MAAlBk9C,SAEFx7B,EAAQ67B,aAAgBF,EAAa30C,GACrC80C,EAAUC,aAAsBJ,GAClCh7C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK1O,EAAE,cACHrG,EAAArB,EAAAC,cAAA,QAAMC,UAAW4B,EAAQ46C,MAAOxuC,IAAKnR,KAAKo/C,kBAG9C,GAGJ,OACI96C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkBN,EAAQ66C,aAAc,YAAnE,GAAAj7C,OACQgG,EAAE,oBADV,MAAAhG,OACkCgG,EAAE,QADpC,KAEIrG,EAAArB,EAAAC,cAAC28C,GAAA58C,EAAD,CACI0gB,MAAO87B,EACP16C,QAAS,CAAE+6C,OAAQ/6C,EAAQg7C,YAAaN,QAAS16C,EAAQ06C,SACzDO,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAASt8B,QAAQs7B,GACjBtX,QAASsX,MAKzBiB,UAAU,OACV97C,EAAArB,EAAAC,cAAA,KAAGqC,QAASvF,KAAKq/C,aAAc17B,YArE7BpgB,IAAMC,WAqFbsO,GALCC,YACZnM,IAzGW,SAAAC,GAAK,MAAK,CACrB+5C,aAAc,CACVn0C,MAAO5F,EAAME,QAAQC,QAAQC,MAEjC85C,aAnDoBt0C,EAmDQ5F,EAAME,QAAQusB,KAAK,KAlDxC,CACH+tB,kCAAmC,CAC/Bt/B,IAAK,EACLD,KAAM,EACNg1B,UAAW,UACXxoC,MAAO,MACPC,OAAQ,MACR+yC,YAAa,CACTvK,YAAa,gBACbjwC,YAAW,2BAAAnB,OAA6B8G,EAA7B,kBAGnB80C,+BAAgC,CAC5BjwB,OAAQ,EACRxP,KAAM,EACN0/B,aAAc,UACdlzC,MAAO,MACPC,OAAQ,MACR+yC,YAAa,CACTvK,YAAa,gBACbjwC,YAAW,GAAAnB,OAAK8G,EAAL,0CAGnBg1C,iCAAkC,CAC9B3/B,KAAM,EACN4/B,WAAY,UACZnzC,OAAQ,MACRD,MAAO,MACPgzC,YAAa,CACTvK,YAAa,gBACbjwC,YAAW,eAAAnB,OAAiB8G,EAAjB,8BAGnBk1C,gCAAiC,CAC7BtwB,MAAO,EACPuwB,YAAa,UACbrzC,OAAQ,MACRD,MAAO,MACPgzC,YAAa,CACTvK,YAAa,gBACbjwC,YAAW,uCAAAnB,OAAyC8G,OAWhEk0C,MAAO,CACHrtC,SAAU,WACV8uB,SAAU,EACV9zB,MAAO,MACPC,OAAQ,MACR+yC,YAAa,CACTt0C,QAAS,KACT0K,OAAQ,OACRrE,QAAS,QACT/E,MAAO,EACPC,OAAQ,EACRgF,YAAa,UAGrBktC,QAAS,CACL/oC,OAAQ,iBAnEhB,IAAwBjL,GAwJD,CAAEpF,WAAW,IAChCmM,cAGWV,CAAQotC,ICrJjB2B,4LACO,IAAA/7C,EACsD9E,KAAKyC,MAAxDsC,EADHD,EACGC,QAAS2sB,EADZ5sB,EACY4sB,KAAMovB,EADlBh8C,EACkBg8C,SAAUC,EAD5Bj8C,EAC4Bi8C,YAAap2C,EADzC7F,EACyC6F,EAAGq2C,EAD5Cl8C,EAC4Ck8C,MAE3CtE,EAAUC,aAAQjrB,GAClB8qB,EAAcC,aAAY/qB,GAEhC,OACIptB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,OAAQN,EAAQk8C,OACvC38C,EAAArB,EAAAC,cAAA,oBACC89C,EAAQ,GACL18C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,KAAGC,UAAU,oBACbmB,EAAArB,EAAAC,cAAA,QAAMC,UAAU,cAAhB,OAEK69C,EAFL,cAOPF,EAAW,GAAKx8C,EAAArB,EAAAC,cAAA,YAAOyH,EAAE,iBAAT,QACjBrG,EAAArB,EAAAC,cAAA,KAAGqC,QAASw7C,GACRz8C,EAAArB,EAAAC,cAAA,QAAMygB,MAAO64B,GAAcE,YAtB5Bn5C,IAAMC,YAyCVsO,GALCC,YACZnM,IA9CW,SAAAC,GAAK,MAAK,CACrBo7C,KAAM,CACFx1C,MAAO5F,EAAME,QAAQuG,KAAKoH,UAC1BwtC,MAAO,CACHz1C,MAAO5F,EAAME,QAAQuG,KAAKoH,cA0Cf,CAAErN,WAAW,IAChCmM,cAGWV,CAAQ+uC,ICvCjBM,uBACF,SAAAA,EAAY1+C,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmhD,IACfthD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqhD,GAAAhhD,KAAAH,KAAMyC,KAoCV2+C,oBAAsB,SAAA5gD,GAAU,IAAAsE,EACEjF,EAAK4C,MAA3BuC,EADoBF,EACpBE,OAAQob,EADYtb,EACZsb,UACRihC,EAA4B7gD,EAA5B6gD,eAAgBx2C,EAAYrK,EAAZqK,QAExB,GAAIuV,IAAcihC,GACbx2C,EAAL,CAL4B,IAOpBV,EAA+BU,EAA/BV,QAASvJ,EAAsBiK,EAAtBjK,GAAIypC,EAAkBx/B,EAAlBw/B,cACjBrlC,IAAWmF,IAEftK,EAAKyhD,aAAe1gD,EACpBf,EAAK6C,SAAS,CAAE6+C,aAAclX,OAhDfxqC,EAmDnB2hD,uBAAyB,SAAAhhD,GAAU,IAAAyK,EACDpL,EAAK4C,MAA3BuC,EADuBiG,EACvBjG,OAAQob,EADenV,EACfmV,UACRjW,EAAyC3J,EAAzC2J,QAASs3C,EAAgCjhD,EAAhCihD,4BACTH,EAHuBxhD,OAAAonB,GAAA,EAAApnB,QAAAonB,GAAA,EAAApnB,CAAAD,IAGvByhD,aAEJt8C,IAAWmF,IAEVm3C,GAAgBA,GAAgBG,GAAgCrhC,GAAaqhC,IAC9E5hD,EAAK6C,SAAS,CAAE6+C,aAAc,KAAMG,QAAQ,KAxDhD7hD,EAAKoC,MAAQ,CACTuT,WAAY/S,EAAMuC,OAClB28C,cAAel/C,EAAM2d,UACrBmhC,aAAc9+C,EAAM8+C,aACpBG,QAAQ,GAPG7hD,mFAwBfuU,KAAUf,GAAG,uBAAwBrT,KAAKwhD,wBAE1C11C,KAAauH,GAAG,0BAA2BrT,KAAKohD,qBAChDt1C,KAAauH,GAAG,6BAA8BrT,KAAKohD,oEAInDhtC,KAAU1S,eAAe,uBAAwB1B,KAAKwhD,wBAEtD11C,KAAapK,eAAe,0BAA2B1B,KAAKohD,qBAC5Dt1C,KAAapK,eAAe,6BAA8B1B,KAAKohD,sDA6B1D,IACGr8C,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAE4B7O,KAAKiC,MAA9Bs/C,EAFH1yC,EAEG0yC,aAAcG,EAFjB7yC,EAEiB6yC,OAElBE,EAAiBv8C,IAAW,2BAA4BN,EAAQ88C,wBAQpE,OAPIN,IACAK,EAC8B,8BAA1BL,EAAa,SACPl8C,IAAW,wBAAyBN,EAAQ+8C,qBAC5Cz8C,IAAW,yBAA0BN,EAAQg9C,uBAGpDL,GAAUp9C,EAAArB,EAAAC,cAAA,KAAGC,UAAWkC,IAAW,sBAAuBu8C,wDAhErCn/C,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,YAAc/S,EAAM2d,YAAcne,EAAM0/C,cACxD,CACHnsC,WAAY/S,EAAMuC,OAClB28C,cAAel/C,EAAM2d,UACrBmhC,aAAc9+C,EAAM8+C,cAIrB,YArBah+C,IAAMC,YAsFnBoC,OAlGA,SAAAC,GAAK,MAAK,CACrBi8C,oBAAqB,CACjB37C,WAAYN,EAAME,QAAQ6uB,MAAMotB,OAEpCD,qBAAsB,CAClB57C,WAAYN,EAAME,QAAQC,QAAQg8C,OAEtCH,uBAAwB,CACpB17C,WAAYN,EAAME,QAAQC,QAAQg8C,SA0FR,CAAE37C,WAAW,GAAhCT,CAAwCu7C,oBCxFxCv7C,WAbA,SAAAC,GAAK,MAAK,CACrBo8C,gBAAiB,CACb97C,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQusB,KAAK,KAAO,UACtE7mB,MAA8B,SAAvB5F,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQuG,KAAKtG,QAAU,aAU7DJ,CANf,SAAyBnD,GAAO,IACpBsC,EAAYtC,EAAZsC,QAER,OAAOT,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,mBAAoBN,EAAQk9C,kBAAvD,qGCQLC,sNACFlwB,WAAa,WAAM,IAAAltB,EACwEjF,EAAK4C,MAApFsC,EADOD,EACPC,QAASC,EADFF,EACEE,OAAQob,EADVtb,EACUsb,UAAW/S,EADrBvI,EACqBuI,KAAmB80C,GADxCr9C,EAC2BzB,YAD3ByB,EACwCq9C,kBAAkBvgC,EAD1D9c,EAC0D8c,UAEnE/W,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAJN,IAMPmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAPN,IASPyuC,EAAazuC,EAAbyuC,SACR,IAAKA,EAAU,OAAO,KAVP,IAaX2H,EAaA3H,EAbA2H,UACAz+B,EAYA82B,EAZA92B,MACA0+B,EAWA5H,EAXA4H,YAEAp2C,GASAwuC,EAVA6H,IAUA7H,EATAxuC,OACAs2C,EAQA9H,EARA8H,UACAv2B,EAOAyuB,EAPAzuB,MACA0uB,EAMAD,EANAC,MACA/qC,EAKA8qC,EALA9qC,SACAgrC,EAIAF,EAJAE,WACAC,EAGAH,EAHAG,WACA74C,EAEA04C,EAFA14C,QACAsS,EACAomC,EADApmC,KAGJ,GAAItS,EACA,OACIuC,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAACs/C,GAAA,EAAD,CAASx9C,OAAQA,EAAQob,UAAWA,EAAWre,QAASA,EAAS6f,UAAWA,KAKxF,GAAI+4B,EACA,OACIr2C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAACu/C,GAAA,EAAD,CAAWz9C,OAAQA,EAAQob,UAAWA,EAAWsiC,UAAW/H,EAAY/4B,UAAWA,KAK/F,GAAIg5B,EACA,OACIt2C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAACy/C,GAAA,EAAD,CAAW39C,OAAQA,EAAQob,UAAWA,EAAWwiC,UAAWhI,EAAYh5B,UAAWA,KAK/F,GAAI84B,EACA,OACIp2C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAAC2/C,GAAA,EAAD,CAAO79C,OAAQA,EAAQob,UAAWA,EAAWs6B,MAAOA,EAAO94B,UAAWA,KAKlF,GAAIjS,EACA,OACIrL,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAAC4/C,GAAA,EAAD,CAAU99C,OAAQA,EAAQob,UAAWA,EAAWzQ,SAAUA,EAAUiS,UAAWA,KAK3F,GAAI2gC,IACqBv3B,YAAOu3B,EAAUA,YAClBA,EAAU/0C,WAC1B,OACIlJ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAAC6/C,GAAA,EAAD,CAAW/9C,OAAQA,EAAQob,UAAWA,EAAWmiC,UAAWA,EAAW3gC,UAAWA,KAMlG,GAAIoK,GACIA,EAAMxe,UACN,OACIlJ,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,GACvD/9C,EAAArB,EAAAC,cAAC8/C,GAAA,EAAD,CAAOh+C,OAAQA,EAAQob,UAAWA,EAAW4L,MAAOA,EAAOpK,UAAWA,KAMtF,GAAI3V,EAAO,CACP,IAAMI,EAAYye,aAAQ7e,EAAMC,MAAOmB,GACjC41C,GACQ,YAAT5uC,GAA+B,UAATA,KACtB+tC,GAAaz+B,GAAS0+B,IACvBh2C,GACAA,EAAUiB,QAAUjB,EAAUkB,OAE5BgR,EAAQ0kC,EACR,CACIC,MAAO,QACPxC,WAAY,EACZF,aAAc,GAElB,GACN,OACIl8C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK4pC,GACG3+C,EAAArB,EAAAC,cAACigD,GAAA,EAAD,CACI9/C,YAAa8+C,EACb5jC,MAAOA,EACPvZ,OAAQA,EACRob,UAAWA,EACXnU,MAAOA,EACP2V,UAAWA,IAGlBwgC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,IACrDY,GAAc3+C,EAAArB,EAAAC,cAACigD,GAAA,EAAD,CAAOn+C,OAAQA,EAAQob,UAAWA,EAAWnU,MAAOA,EAAO2V,UAAWA,KAKlG,OACItd,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACK+oC,GACG99C,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQ+gC,kBAAmBsc,GAE/Ez+B,GAASrf,EAAArB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwgB,GAC1C0+B,GAAe/9C,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAAwBk/C,6EAK1D,IACGt9C,EAAY/E,KAAKyC,MAAjBsC,QAER,OACIT,EAAArB,EAAAC,cAAA,OAAKC,UAAU,YACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,kBAAmBN,EAAQ6gC,yBACtDthC,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBAAoBnD,KAAKgyB,sBAnLlCzuB,IAAMC,YAkM5B0+C,GAAQhsC,aAAe,CACnB7I,KAAMge,IACNhoB,YAAa+/C,IACbjB,iBAAkBkB,KAGPz9C,WA5MA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbkmC,YAAangC,KA2MLD,CAAmBs8C,IClL5BoB,uBACF,SAAAA,EAAY7gD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAsjD,IACfzjD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwjD,GAAAnjD,KAAAH,KAAMyC,KA+FV8gD,6BAA+B,SAAA/iD,GACtBX,EAAKoC,MAAMgD,UAEhBpF,EAAK6C,SAAS,CAAEuC,UAAU,KAnGXpF,EAsGnB2jD,iCAAmC,SAAAhjD,GAAU,IAAAsE,EACXjF,EAAK4C,MAA3BuC,EADiCF,EACjCE,OAAQob,EADyBtb,EACzBsb,UADyBvR,EAEPhP,EAAKoC,MAA/BgD,EAFiC4J,EAEjC5J,SAAUw+C,EAFuB50C,EAEvB40C,YAEdx+C,IAEAD,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,UAC7CqjC,EACA5jD,EAAK6C,SAAS,CAAE+gD,aAAa,GAAS,WAClCrzC,WAAW,WACPvQ,EAAK6C,SAAS,CAAE+gD,aAAa,KAC9B,KAGP5jD,EAAK6C,SAAS,CAAE+gD,aAAa,IAE1BA,GACP5jD,EAAK6C,SAAS,CAAE+gD,aAAa,MAvHlB5jD,EA2HnB8yC,8BAAgC,SAAAnyC,GAAU,IAAAyK,EACRpL,EAAK4C,MAA3BuC,EAD8BiG,EAC9BjG,OAAQob,EADsBnV,EACtBmV,UACRnb,EAAazE,EAAbyE,SAEJD,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,WACjDvgB,EAAK6C,SAAS,CAAEuC,WAAUw+C,aAAa,KAhI5B5jD,EAoInB6jD,sBAAwB,SAAAljD,GAAU,IACtB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADagC,EAEAvM,EAAK4C,MAA3BuC,EAFsBoH,EAEtBpH,OAAQob,EAFchU,EAEdgU,UAEZpb,IAAWmF,GAAWiW,IAAchW,GACpCvK,EAAKuO,eAzIMvO,EA6InB8jD,qBAAuB,SAAAnjD,GAAU,IACrB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADYoG,EAEC3Q,EAAK4C,MAA3BuC,EAFqBwL,EAErBxL,OAAQob,EAFa5P,EAEb4P,UAEZpb,IAAWmF,GAAWiW,IAAchW,GACpCvK,EAAKuO,eAlJMvO,EAsJnBykB,uBAAyB,SAAA9jB,GAAU,IACvB2J,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WADc+Q,EAEDtb,EAAK4C,MAA3BuC,EAFuBmW,EAEvBnW,OAAQob,EAFejF,EAEfiF,UACRwjC,EAAiB/jD,EAAKoC,MAAtB2hD,aAEJ5+C,IAAWmF,IACXiW,IAAchW,IAEMy5C,aAAgB7+C,EAAQob,KACxBwjC,EACpB/jD,EAAK6C,SAAS,CAAEkhD,aAAcC,aAAgB7+C,EAAQob,KAEtDvgB,EAAKuO,iBAlKMvO,EAsKnBikD,iBAAmB,SAAAlxC,GACf6I,aAAS7I,GAAQ,IAvKF/S,EA0KnBkkD,iBAAmB,SAAA/+C,GACfuW,aAASvW,EAAQ,MAAM,IA3KRnF,EA8KnBmkD,gBAAkB,WACd,GAAKnkD,EAAKokD,YAEQniD,OAAOo9B,eAAekB,WACxC,CAJoB,IAAA9kB,EAMUzb,EAAK4C,MAA3BuC,EANYsW,EAMZtW,OAAQob,EANI9E,EAMJ8E,UAEVnb,GAAY6G,KAAaqkC,cAAchpC,IAA3B,UAAAxC,OAAyCK,EAAzC,eAAAL,OAA6Dyb,IAC/E8jC,aAAcl/C,EAAQob,EAAWnb,KAvLlBpF,EA0LnBskD,gBAAkB,SAAA/6C,GACdA,EAAEuF,iBACFvF,EAAE4X,kBAFiB,IAAAhF,EAIWnc,EAAK4C,MAA3BuC,EAJWgX,EAIXhX,OAAQob,EAJGpE,EAIHoE,UAEVvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GAEpBhR,YAAgBpK,GAEjCzD,KAAgBiJ,aAAa,CACzBlI,QAAS,oBACT0C,OAAQA,EACRob,UAAWA,IAKIvV,GAAWA,EAAQkB,kBAEtCxK,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CACFzF,OAAQA,EACR8E,WAAY,CAACsW,OAlNVvgB,EAwNnB+hB,UAAY,SAAAnT,GACJA,IACAA,EAAME,iBACNF,EAAMuS,mBAHO,IAAA9E,EAMarc,EAAK4C,MAA3BuC,EANSkX,EAMTlX,OAAQob,EANClE,EAMDkE,UAEhBwB,aAAU5c,EAAQob,IAhOHvgB,EAmOnBukD,mBAAqB,WACjBvkD,EAAK6C,SAAS,CAAE+gD,aAAa,KApOd5jD,EAuOnBwkD,gBAAkB,WACdxkD,EAAKokD,WAAY,GAxOFpkD,EA2OnBykD,gBAAkB,WACdzkD,EAAKokD,WAAY,GA5OFpkD,EA+OnB0kD,eAAiB,WACb1kD,EAAK2kD,UAAW,GAhPD3kD,EAmPnB4kD,iBAAmB,WAAM,IAAA9nC,EACS9c,EAAK4C,MAA3BuC,EADa2X,EACb3X,OAAQob,EADKzD,EACLyD,UAChBskC,aAAU1/C,EAAQob,IArPH,IAAAukC,EAGe9kD,EAAK4C,MAA3BuC,EAHO2/C,EAGP3/C,OAAQob,EAHDukC,EAGCvkC,UAHD,OAYXvgB,EAAKoC,MAAQ,CACT2hD,aAAcC,aAAgB7+C,EAAQob,GACtCnb,UAAU,EACVw+C,aAAa,GAfN5jD,qFAoBGsT,EAAWC,GAAW,IAAAwxC,EAC2C5kD,KAAKyC,MAAhFoD,EADgC++C,EAChC/+C,MAAOb,EADyB4/C,EACzB5/C,OAAQob,EADiBwkC,EACjBxkC,UAAWmhC,EADMqD,EACNrD,aAAcsD,EADRD,EACQC,oBAAqBC,EAD7BF,EAC6BE,UAD7Br0C,EAEqBzQ,KAAKiC,MAA1Dgf,EAFgCxQ,EAEhCwQ,YAAahc,EAFmBwL,EAEnBxL,SAAUw+C,EAFShzC,EAETgzC,YAAaG,EAFJnzC,EAEImzC,aAE5C,OAAIzwC,EAAUtN,QAAUA,GACpBqI,QAAQC,IAAI,uCACL,GAGPgF,EAAUnO,SAAWA,GACrBkJ,QAAQC,IAAI,uCACL,GAGPgF,EAAUiN,YAAcA,GACxBlS,QAAQC,IAAI,uCACL,GAGPgF,EAAUouC,eAAiBA,GAC3BrzC,QAAQC,IAAI,uCACL,GAGPgF,EAAU0xC,sBAAwBA,GAClC32C,QAAQC,IAAI,uCACL,GAGPgF,EAAU2xC,YAAcA,GACxB52C,QAAQC,IAAI,uCACL,GAGPiF,EAAU6N,cAAgBA,GAC1B/S,QAAQC,IAAI,uCACL,GAGPiF,EAAUnO,WAAaA,GACvBiJ,QAAQC,IAAI,uCACL,GAGPiF,EAAUqwC,cAAgBA,GAC1Bv1C,QAAQC,IAAI,uCACL,GAGPiF,EAAUwwC,eAAiBA,IAC3B11C,QAAQC,IAAI,uCACL,+CAQXrC,KAAauH,GAAG,iCAAkCrT,KAAKwjD,kCACvD13C,KAAauH,GAAG,8BAA+BrT,KAAK2yC,+BACpD7mC,KAAauH,GAAG,6BAA8BrT,KAAKujD,8BACnDz3C,KAAauH,GAAG,uBAAwBrT,KAAKskB,wBAC7CxY,KAAauH,GAAG,sBAAuBrT,KAAK0jD,uBAC5C53C,KAAauH,GAAG,qBAAsBrT,KAAK2jD,qEAI3C73C,KAAapK,eAAe,iCAAkC1B,KAAKwjD,kCACnE13C,KAAapK,eAAe,8BAA+B1B,KAAK2yC,+BAChE7mC,KAAapK,eAAe,6BAA8B1B,KAAKujD,8BAC/Dz3C,KAAapK,eAAe,uBAAwB1B,KAAKskB,wBACzDxY,KAAapK,eAAe,sBAAuB1B,KAAK0jD,uBACxD53C,KAAapK,eAAe,qBAAsB1B,KAAK2jD,uDA2JlD,IAAAhzB,EAAAo0B,EACqE/kD,KAAKyC,MAApEsC,GADNggD,EACGp6C,EADHo6C,EACMhgD,SAASC,EADf+/C,EACe//C,OAAQob,EADvB2kC,EACuB3kC,UAAWykC,EADlCE,EACkCF,oBAAqBC,EADvDC,EACuDD,UADvDv/B,EAE2CvlB,KAAKiC,MAA7C2hD,EAFHr+B,EAEGq+B,aAAc3+C,EAFjBsgB,EAEiBtgB,SAAUw+C,EAF3Bl+B,EAE2Bk+B,YAE1B54C,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAOvG,EAAArB,EAAAC,cAAA,8BALhB,IAOGmnC,EAA6Fx/B,EAA7Fw/B,cAAe2W,EAA8En2C,EAA9Em2C,MAAOtvB,EAAuE7mB,EAAvE6mB,KAAMszB,EAAiEn6C,EAAjEm6C,UAAWn4C,EAAsDhC,EAAtDgC,oBAAqBo4C,EAAiCp6C,EAAjCo6C,aAAc1+B,EAAmB1b,EAAnB0b,eAE5Eja,EAAOqzB,aAAQ90B,GACfq6C,EAAUC,aAAWt6C,GACrBu6C,EAAQzjC,aAAS9W,EAAS7K,KAAK4hB,WACrC5hB,KAAK0hD,OAAS2D,aAAUx6C,GAExB,IAAIonB,EAAO,KACP6yB,IACA7yB,EAAO1L,EACHjiB,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQ2T,EAAgBrhB,SAAUlF,KAAK8jD,mBAEjDx/C,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQE,SAAUlF,KAAK+jD,oBAIjD,IAAMuB,EAAmBjgD,IAAW,UAAWN,EAAQ8F,SAApB8lB,EAAA,CAC/B40B,mBAAoBtgD,GADWnF,OAAAyT,GAAA,EAAAzT,CAAA6wB,EAE9B5rB,EAAQygD,gBAAkBvgD,GAFInF,OAAAyT,GAAA,EAAAzT,CAAA6wB,EAG9B5rB,EAAQ0gD,mBAAqBhC,IAAgBx+C,GAHfnF,OAAAyT,GAAA,EAAAzT,CAAA6wB,EAI/B,iBAAkBm0B,GAJan0B,IAO7BswB,EAAO38C,EAAArB,EAAAC,cAACwiD,GAAD,CAAMh0B,KAAMA,EAAMovB,SAAUkE,EAAWhE,MAAOA,EAAOD,YAAa/gD,KAAKmkD,kBAEpF,OACI7/C,EAAArB,EAAAC,cAAA,OACIC,UAAWmiD,EACXK,YAAa3lD,KAAKskD,gBAClBsB,WAAY5lD,KAAKukD,eACjBniC,YAAapiB,KAAKqkD,gBAClB9+C,QAASvF,KAAKgkD,gBACd6B,eAAgB7lD,KAAKokD,oBACpBS,GAAuBvgD,EAAArB,EAAAC,cAAC4iD,GAAD,MACxBxhD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBAIXmB,EAAArB,EAAAC,cAAC6iD,GAAA9iD,EAAD,CAAeE,UAAWkC,IAAW,sBAAuBN,EAAQihD,qBACnEhmD,KAAK0hD,QACFp9C,EAAArB,EAAAC,cAAC+iD,GAAD,CAAejhD,OAAQA,EAAQob,UAAWA,EAAWmhC,aAAclX,KAG1EpY,EACD3tB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,mBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iBACV2hD,IAAcG,GACX3gD,EAAArB,EAAAC,cAACgjD,GAAA,EAAD,CAAelhD,OAAQA,EAAQuW,UAAQ,EAAC3I,OAAQ2T,EAAgB9K,UAAQ,IAE3EwpC,GAAgB3gD,EAAArB,EAAAC,cAACijD,GAAD,CAAS7G,YAAa2F,IACtCH,GAAa7D,GAEjBp9B,QAAQhX,IACLvI,EAAArB,EAAAC,cAACkjC,GAAD,CAAOphC,OAAQA,EAAQob,UAAWvT,EAAqBtH,QAASvF,KAAKykD,mBAExEW,EACD9gD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,eAAgB,CAClC+gD,sBAAwC,IAAjBxC,EACvByC,sBAAwC,IAAjBzC,EACvB0C,sBAAwC,IAAjB1C,KAE1Bt3C,GAEJ44C,GAAW5gD,EAAArB,EAAAC,cAACqjD,GAAD,CAASvhD,OAAQA,EAAQob,UAAWA,EAAWwB,UAAW5hB,KAAK4hB,cAE7EkjC,GAAa7D,WAnUbz9C,cA+UPsO,GALCC,YACZnM,IAlWW,SAAAC,GAAK,MAAK,CACrBgF,QAAS,CACL0gB,gBAAiB,eAErBi7B,mBAAoB,CAChB/6C,MAAO5F,EAAME,QAAQC,QAAQC,MAEjCu/C,gBAAiB,CACbj6B,gBAAiB1lB,EAAME,QAAQC,QAAQC,KAAO,MAElD+/C,kBAAmB,CACf7/C,WAAYN,EAAME,QAAQC,QAAQC,KAClCwF,MAAO,SAEXg7C,yBAA0B,CACtBzd,KAAM,CAAEzd,gBAAiB1lB,EAAME,QAAQC,QAAQC,KAAO,MACtDygD,GAAI,CAAEn7B,gBAAiB,gBAE3Bk6B,mBAAoB,CAChBlD,UAAW,6BA+UI,CAAEl8C,WAAW,IAChCmM,cAGWV,CAAQwxC,ICnVjBqD,uBACF,SAAAA,EAAYlkD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA2mD,IACf9mD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA6mD,GAAAxmD,KAAAH,KAAMyC,KAgDVmkD,gCAAkC,SAAApmD,GAAU,IAChCwE,EAAuBxE,EAAvBwE,OAAQ6hD,EAAermD,EAAfqmD,WAEZhnD,EAAK4C,MAAMuC,SAAWA,GAE1BnF,EAAK6C,SAAS,CAAEmkD,gBAtDDhnD,EAyDnBinD,0BAA4B,SAAAtmD,GAAU,IAC1B2J,EAA+B3J,EAA/B2J,QAAS48C,EAAsBvmD,EAAtBumD,kBACElnD,EAAK4C,MAAhBuC,SAEOmF,GAEftK,EAAK6C,SAAS,CAAE0d,UAAW2mC,KA/DZlnD,EAkEnB0H,YAAc,WAAM,IACRvC,EAAWnF,EAAK4C,MAAhBuC,OACAob,EAAcvgB,EAAKoC,MAAnBme,UAEHpb,IACAob,IAEWtU,KAAahF,IAAI9B,EAAQob,IAGzC7e,KAAgBc,KAAK,CACjBC,QAAS,aACT6H,QAASnF,EACToF,WAAYgW,IAEX7d,KAAK,SAAAC,GACFsJ,KAAamC,IAAIzL,GAEjB,IAAM7C,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO,CAAC6C,IAE5B3C,EAAKuO,gBAERjF,MAAM,SAAAyrB,GACH,IAAMoyB,EAAiB,CACnB1kD,QAAS,iBACT6H,QAASnF,EACTpE,GAAIwf,EACJpU,QAAS,MAEbF,KAAamC,IAAI+4C,GACjBnnD,EAAKuO,mBAjGEvO,EAoInBgU,YAAc,SAAApF,GAAS,IACXzJ,EAAWnF,EAAK4C,MAAhBuC,OACAob,EAAcvgB,EAAKoC,MAAnBme,UAEHA,GAEL7E,aAASvW,EAAQob,IA1IFvgB,EA6InB0gB,aA7ImB,eAAAM,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA6IJ,SAAAC,EAAM8G,GAAN,IAAAzJ,EAAAob,EAAAopB,EAAA,OAAA/hC,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXmG,EAAME,iBACNF,EAAMuS,kBAEEhc,EAAWnF,EAAK4C,MAAhBuC,OACAob,EAAcvgB,EAAKoC,MAAnBme,WAEO6mC,YAAejiD,GAPnB,CAAAoD,EAAAE,KAAA,QASPzI,EAAK6C,SAAS,CAAEggC,SAAS,IATlBt6B,EAAAE,KAAA,uBAWDkhC,EAAOp1B,KAAU8yC,cAAcliD,GAX9BoD,EAAAE,KAAA,GAYD/G,KAAgBiJ,aAAa,CAC/BlI,QAAS,gCACT0C,OAAQA,EACR6hD,WAAY/mD,OAAOkB,OAAO,GAAIwoC,EAAM,CAAE2d,oBAAqB/mC,MAfxD,yBAAAhY,EAAAwB,SAAAjC,MA7II,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAiKnBunD,YAjKmBtnD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAiKL,SAAAmC,IAAA,IAAA7E,EAAA,OAAAyC,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACFtD,EAAWnF,EAAK4C,MAAhBuC,OAERnF,EAAK0K,cAELhJ,KAAgBc,KAAK,CACjBC,QAAS,mBACT6H,QAASnF,IAPH,wBAAA+E,EAAAH,SAAAC,MAjKKhK,EA4KnB0K,YAAc,WACV1K,EAAK6C,SAAS,CAAEggC,SAAS,KA1KzB,IAAMvuB,EAAOC,KAAUtN,IAAIrE,EAAMuC,QAHlB,OAIfnF,EAAKoC,MAAQ,CACTuzB,gBAAiB/yB,EAAMuC,OACvB6hD,WAAYzyC,KAAU8yC,cAAczkD,EAAMuC,QAC1Cob,UAAWjM,GAAQA,EAAK4yC,kBAAoB5yC,EAAK4yC,kBAAoB,EACrErkB,SAAS,GARE7iC,kFA6BAgD,EAAWC,EAAWC,GAAU,IACvCqd,EAAcpgB,KAAKiC,MAAnBme,UAEJA,GAAatd,EAAUsd,YAAcA,GACrCpgB,KAAKuH,0DAKTvH,KAAKuH,cAEL6M,KAAUf,GAAG,0BAA2BrT,KAAK8mD,2BAC7C1yC,KAAUf,GAAG,gCAAiCrT,KAAK4mD,gFAInDxyC,KAAU1S,eAAe,0BAA2B1B,KAAK8mD,2BACzD1yC,KAAU1S,eAAe,gCAAiC1B,KAAK4mD,+EAuD7CzzC,EAAWC,EAAW4pB,GAAa,IAAAl4B,EACxB9E,KAAKyC,MAA1BuC,EAD6CF,EAC7CE,OAAQ2F,EADqC7F,EACrC6F,EAAG9E,EADkCf,EAClCe,MADkCgJ,EAEV7O,KAAKiC,MAAxC4kD,EAF6Ch4C,EAE7Cg4C,WAAYnkB,EAFiC7zB,EAEjC6zB,QAAStiB,EAFwBvR,EAExBuR,UAE7B,OAAIjN,EAAUxI,IAAMA,IAIhBwI,EAAUtN,QAAUA,IAIpBsN,EAAUnO,SAAWA,IAIrBoO,EAAUyzC,aAAeA,IAIzBzzC,EAAUsvB,UAAYA,GAItBtvB,EAAUgN,YAAcA,uCAmDvB,IAAAnV,EAC0BjL,KAAKyC,MAA5BuC,EADHiG,EACGjG,OAAQD,EADXkG,EACWlG,QAAS4F,EADpBM,EACoBN,EADpB8F,EAE0BzQ,KAAKiC,MAA5Bme,EAFH3P,EAEG2P,UAAWsiB,EAFdjyB,EAEciyB,QAEnB,IAAK19B,EAAQ,OAAO,KAGpB,GADgCoP,KAAU8yC,cAAcliD,GAAhDmiD,sBACoB/mC,EAAW,OAAO,KAE9C,IAAMvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAErB,IAAImB,EAAWnB,EAAyBmnB,aAAWnnB,EAASF,GAAnCA,EAAE,WACrB0B,EAAYs5B,aAAkB3gC,EAAQob,GAM5C,OAJIqlB,aAAiB56B,KACjBmB,EAAUrB,EAAE,mBAIZrG,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,iBAAkBN,EAAQsiD,cAAetiD,EAAQe,aACvEP,QAASvF,KAAK6T,aACdvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBN,EAAQ6gC,yBAClDv5B,GAAa/H,EAAArB,EAAAC,cAAC2iC,GAAD,CAAW7gC,OAAQA,EAAQob,UAAWA,EAAW/T,UAAWA,IAC1E/H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,0BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,+BAAgCN,EAAQ+gC,kBAC9Dn7B,EAAE,kBAEPrG,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IACP,kCACAN,EAAQuiD,+BAEXt7C,IAGT1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYE,UAAW4B,EAAQk5B,WAAY14B,QAASvF,KAAKugB,cACrDjc,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,UAKfy/B,GACGp+B,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,MAAI,EACJC,QAAS9Q,KAAKuK,YACdwG,kBAAgB,8BAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,8BAA8B+J,EAAE,YAChDrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KAAoB0H,EAAE,uBAE1BrG,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKuK,YAAakB,MAAM,WACpCd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKonD,YAAa37C,MAAM,WACpCd,EAAE,6DAjOClI,EAAOR,GAAO,IAClCuzB,EAAoBvzB,EAApBuzB,gBACAxwB,EAAWvC,EAAXuC,OAER,GAAIwwB,IAAoBxwB,EAAQ,CAC5B,IAAMmP,EAAOC,KAAUtN,IAAI9B,GAC3B,MAAO,CACHwwB,gBAAiBxwB,EACjB6hD,WAAYzyC,KAAU8yC,cAAcliD,GACpCob,UAAWjM,GAAQA,EAAK4yC,kBAAoB5yC,EAAK4yC,kBAAoB,EACrErkB,SAAS,GAIjB,OAAO,YA3Ban/B,IAAMC,YAiQnBsO,GALCC,YACZnM,IA5QW,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,GACbkmC,YAAangC,GACb0M,YAAY1M,GAFC,CAGhBo4B,WAAY,GAGZopB,cAAe,CACXlhD,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,UAC/Ejd,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9BshD,6BAA8B,CAC1B77C,MAAO5F,EAAME,QAAQuG,KAAKoH,cAiQX,CAAErN,WAAW,IAChCmM,cAGWV,CAAQ60C,ICjTvB,SAAAY,KAAmR,OAA9PA,GAAAznD,OAAAkB,QAAA,SAAAw1B,GAAgD,QAAAtvB,EAAA,EAAgBA,EAAAjD,UAAA0C,OAAsBO,IAAA,CAAO,IAAAsgD,EAAAvjD,UAAAiD,GAA2B,QAAA9C,KAAAojD,EAA0B1nD,OAAA2nD,UAAAC,eAAAvnD,KAAAqnD,EAAApjD,KAAyDoyB,EAAApyB,GAAAojD,EAAApjD,IAAiC,OAAAoyB,IAAkBxyB,MAAAhE,KAAAiE,WAEnR,SAAA0jD,GAAAH,EAAAI,GAAqD,SAAAJ,EAAA,SAA+B,IAA8DpjD,EAAA8C,EAA9DsvB,EAEpF,SAAAgxB,EAAAI,GAA0D,SAAAJ,EAAA,SAA+B,IAAuDpjD,EAAA8C,EAAvDsvB,EAAA,GAAiBqxB,EAAA/nD,OAAA00B,KAAAgzB,GAAkD,IAAAtgD,EAAA,EAAYA,EAAA2gD,EAAAlhD,OAAuBO,IAAO9C,EAAAyjD,EAAA3gD,GAAqB0gD,EAAA33C,QAAA7L,IAAA,IAA0CoyB,EAAApyB,GAAAojD,EAAApjD,IAA6B,OAAAoyB,EAF9MsxB,CAAAN,EAAAI,GAA0E,GAAA9nD,OAAAioD,sBAAA,CAAoC,IAAAC,EAAAloD,OAAAioD,sBAAAP,GAA6D,IAAAtgD,EAAA,EAAYA,EAAA8gD,EAAArhD,OAA6BO,IAAO9C,EAAA4jD,EAAA9gD,GAA2B0gD,EAAA33C,QAAA7L,IAAA,GAA0CtE,OAAA2nD,UAAAQ,qBAAA9nD,KAAAqnD,EAAApjD,KAAwEoyB,EAAApyB,GAAAojD,EAAApjD,IAA+B,OAAAoyB,EAM3d,IAAI0xB,GAEJ5jD,EAAArB,EAAKC,cAAA,SAA0BoB,EAAArB,EAAKC,cAAA,QACpCilD,KAAA,UACAC,EAAA,k4BACI9jD,EAAArB,EAAKC,cAAA,QACTilD,KAAA,UACAC,EAAA,g5BAGIC,GAAU,SAAAxnC,GACd,IAAAynC,EAAAznC,EAAAynC,OACA7lD,EAAAklD,GAAA9mC,EAAA,YAEA,OAASvc,EAAArB,EAAKC,cAAA,MAAAqkD,GAAA,CACd3mD,GAAA,SACAG,EAAA,MACAid,EAAA,MACAuqC,QAAA,cACAhqC,MAAA,CACAiqC,iBAAA,mBAEAC,SAAA,WACAt3C,IAAAm3C,GACG7lD,GAAUylD,KAGbQ,GAAiBpkD,EAAArB,EAAK0lD,WAAA,SAAAlmD,EAAA0O,GACtB,OAAS7M,EAAArB,EAAKC,cAAemlD,GAAUd,GAAA,CACvCe,OAAAn3C,GACG1O,MCzBGmmD,ID2BS/hB,EAAAgiB,qBC1BX,SAAAD,EAAYnmD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4oD,IACf/oD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8oD,GAAAzoD,KAAAH,KAAMyC,KA+BVkqB,qBAAuB,SAAAnsB,GAAU,IACTwE,EAAWxE,EAAvBosB,WAER/sB,EAAK6C,SAAS,CAAEsC,YAnCDnF,EAsCnBipD,2BAA6B,SAAAtoD,GAAU,IAC3BuoD,EAAiB59C,IAAjB49C,aAERlpD,EAAK6C,SAAS,CAAEqmD,kBAzCD,IAGP/jD,EAAyBmG,IAAzBnG,OAAQ+jD,EAAiB59C,IAAjB49C,aAHD,OAIflpD,EAAKoC,MAAQ,CACT+C,SACA+jD,gBANWlpD,qFAUGsT,EAAWC,EAAW4pB,GACxC,OAAI5pB,EAAUpO,SAAWhF,KAAKiC,MAAM+C,QAIhCoO,EAAU21C,eAAiB/oD,KAAKiC,MAAM8mD,yDAQ1C59C,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,sBAC/CxhB,IAAiBkI,GAAG,2BAA4BrT,KAAK8oD,2EAIrD39C,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,sBAC3DxhB,IAAiBzJ,eAAe,2BAA4B1B,KAAK8oD,6DAe5D,IACGn+C,EAAM3K,KAAKyC,MAAXkI,EADHkE,EAE4B7O,KAAKiC,MAA9B+C,EAFH6J,EAEG7J,OAAQ+jD,EAFXl6C,EAEWk6C,aAChB,OAAI/jD,EAAe,KACd+jD,EAGDzkD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,eACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACwlD,GAAD,CAAavlD,UAAU,qBACtBwH,EAAE,gCANW,YAjDRpH,IAAMC,YAgEjBgP,iBAAkBo2C,wBCvD3BI,4LACO,IAAAlkD,EACwB9E,KAAKyC,MAA1BsC,EADHD,EACGC,QAASQ,EADZT,EACYS,QAEjB,OACIjB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,qBAAsBN,EAAQkkD,mBACrD3kD,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CAAYimD,eAAe,EAAM9mC,YAAa7c,GAC1CjB,EAAArB,EAAAC,cAACimD,GAAAlmD,EAAD,eAPWM,IAAMC,YAkBtBoC,OAzBA,SAAAC,GAAK,MAAK,CACrBojD,iBAAkB,CACd9iD,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,UAC/E5iB,YAAaD,EAAME,QAAQqjD,WAsBpBxjD,CAAmBojD,aCvB5BK,WAAiB,CACnB/7C,MAAO,GACPC,OAAQ,GACRquB,aAAc,MACdllB,OAAQ,wBAgBN4yC,eACF,SAAAA,EAAY7mD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAspD,IACfzpD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAwpD,GAAAnpD,KAAAH,KAAMyC,KAsDV+gD,iCAAmC,SAAAhjD,GAAU,IAAAsE,EACXjF,EAAK4C,MAA3BuC,EADiCF,EACjCE,OAAQob,EADyBtb,EACzBsb,UADyBvR,EAEPhP,EAAKoC,MAA/BgD,EAFiC4J,EAEjC5J,SAAUw+C,EAFuB50C,EAEvB40C,YAEdx+C,IAEAD,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,UAC7CqjC,EACA5jD,EAAK6C,SAAS,CAAE+gD,aAAa,GAAS,WAClCrzC,WAAW,WACPvQ,EAAK6C,SAAS,CAAE+gD,aAAa,KAC9B,KAGP5jD,EAAK6C,SAAS,CAAE+gD,aAAa,IAE1BA,GACP5jD,EAAK6C,SAAS,CAAE+gD,aAAa,MAxElB5jD,EA4EnBukD,mBAAqB,WACjBvkD,EAAK6C,SAAS,CAAE+gD,aAAa,KA7Ed5jD,EAgFnB+hB,UAAY,SAAAnT,GACJA,IACAA,EAAME,iBACNF,EAAMuS,mBAHO,IAAA/V,EAMapL,EAAK4C,MAA3BuC,EANSiG,EAMTjG,OAAQob,EANCnV,EAMDmV,UAEhBwB,aAAU5c,EAAQob,IA9EdvgB,EAAKoC,MAAQ,CACTwhD,aAAa,GAXN5jD,qFAgBGsT,EAAWC,GAAW,IAAA5C,EACgCxQ,KAAKyC,MAArEuC,EADgCwL,EAChCxL,OAAQob,EADwB5P,EACxB4P,UAAWmhC,EADa/wC,EACb+wC,aAAcsD,EADDr0C,EACCq0C,oBAAqBh/C,EADtB2K,EACsB3K,MACtD49C,EAAgBzjD,KAAKiC,MAArBwhD,YAER,OAAItwC,EAAUnO,SAAWA,IAIrBmO,EAAUiN,YAAcA,IAIxBjN,EAAUouC,eAAiBA,IAI3BpuC,EAAU0xC,sBAAwBA,IAIlC1xC,EAAUtN,QAAUA,GAIpBuN,EAAUqwC,cAAgBA,kDAQ9B33C,KAAauH,GAAG,iCAAkCrT,KAAKwjD,iFAIvD13C,KAAapK,eAAe,iCAAkC1B,KAAKwjD,mEAuC9D,IAAAroC,EACuDnb,KAAKyC,MAAzDsC,EADHoW,EACGpW,QAASC,EADZmW,EACYnW,OAAQob,EADpBjF,EACoBiF,UAAWykC,EAD/B1pC,EAC+B0pC,oBAC5BpB,EAAgBzjD,KAAKiC,MAArBwhD,YAEF54C,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAOvG,EAAArB,EAAAC,cAAA,sCALhB,IAOG8I,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO1H,EAAArB,EAAAC,cAAA,sCARhB,IAUG+I,EAAUD,EAAVC,MAEFK,EAAOi9C,aAAyB1+C,GAAS,GAEzCy6C,EAAmBjgD,IAAW,kBAADvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAuBiF,EAAQ0gD,mBAAqBhC,IAEvF,OACIn/C,EAAArB,EAAAC,cAAA,OAAKC,UAAWmiD,EAAkBO,eAAgB7lD,KAAKokD,oBAClDS,GAAuBvgD,EAAArB,EAAAC,cAAC4iD,GAAD,MACxBxhD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,2BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,0BAA2BN,EAAQykD,wBAAyBl9C,IAE1FL,GACG3H,EAAArB,EAAAC,cAACigD,GAAA,EAAD,CACIn+C,OAAQA,EACRob,UAAWA,EACXnU,MAAOA,EACPsS,MAAO8qC,GACPznC,UAAW5hB,KAAK4hB,oBAxHXre,IAAMC,WAgIpBoC,OA7IA,SAAAC,GAAK,MAAK,CACrB4gD,yBAA0B,CACtBzd,KAAM,CAAEzd,gBAAiB1lB,EAAME,QAAQC,QAAQC,KAAO,MACtDygD,GAAI,CAAEn7B,gBAAiB,gBAE3Bk6B,mBAAoB,CAChBlD,UAAW,2BAEfiH,sBAAuB,CACnB/9C,MAAO5F,EAAME,QAAQuG,KAAKoH,aAoIA,CAAErN,WAAW,GAAhCT,CAAwC0jD,cCzIjDG,uBACF,SAAAA,EAAYhnD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAypD,IACf5pD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA2pD,GAAAtpD,KAAAH,KAAMyC,KAuBVinD,iCAAmC,SAAAlpD,GAAU,IACjCF,EAASE,EAATF,KACMqpD,EAAgB9pD,EAAKoC,MAA3B3B,KAER,IAAIqpD,GAAerpD,EAAKa,YAAcwoD,EAAYxoD,UAAlD,CAEAtB,EAAK6C,SAAS,CACVpC,KAAMV,KAAaU,KACnBwd,MAAOje,EAAK+pD,SAAShqD,KAAaU,QAGtC,IAAMX,EAAQ8J,KAAUC,WAChBrI,EAAaf,EAAbe,SACRwoD,YAAoBlqD,EAAO0B,EAASA,YArCrBxB,EAwCnBiqD,gCAAkC,SAAAtpD,GAAU,IAChCF,EAASE,EAATF,KAUR,GARAT,EAAK6C,SAAS,CACVpC,OACAwd,MAAOje,EAAK+pD,SAAStpD,GACrBypD,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGX3pD,EAAL,CAEA,IAAMX,EAAQ8J,KAAUC,WAChBrI,EAAaf,EAAbe,SACRwoD,YAAoBlqD,EAAO0B,EAASA,YAvDrBxB,EA0DnBsM,WAAa,SAAApK,GACclC,EAAKoC,MAApBgoD,YAEHloD,GAELR,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACTP,aAjEWlC,EAqEnBqqD,mBAAqB,SAAAC,GAAa,IACtBrsC,EAAUje,EAAKoC,MAAf6b,MAEF/b,EAAU+b,EAAMlJ,KAAK,SAAA7T,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOupD,IACjD,GAAKpoD,EAAL,CAEA,IAAMpC,EAAQ8J,KAAUC,WACxB0gD,YAAmBzqD,EAAOoC,EAAS,MAEnC,IAAIsoD,EAAiB,EACjBxqD,EAAKyqD,UAAYzqD,EAAKyqD,SAAS79C,UAC/B49C,EAAiBjS,KAAKC,MAAMx4C,EAAKyqD,SAAS79C,QAAQ89C,YAAcC,MAG5C3qD,EAAK4qD,oBAAoBN,EAAWrsC,EAAOusC,GACnD19C,QAAQ,SAAA5L,GACpBqpD,YAAmBzqD,EAAOoB,EAAG,UArFlBlB,EAyFnB4qD,oBAAsB,SAACN,EAAW9oD,EAAUgpD,GACxC,IAAKhpD,EAAU,MAAO,GAEtB,IAAMqpD,EAAU,GACV9lC,EAAQvjB,EAASwjB,UAAU,SAAA9jB,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOupD,IACvD,IAAe,IAAXvlC,EAAc,MAAO,GAEzB,IAAM+lC,EAAMvS,KAAKC,MAAMzzB,EAAQylC,GACzBO,EAAShmC,EAAQylC,EAEjBQ,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ/hD,KAAK0hD,EAAiBQ,EAAUE,GAE5CL,EAAQ/hD,KAAK0hD,EAAiBQ,EAAUD,GACpCI,EAAaX,GACbK,EAAQ/hD,KAAK0hD,EAAiBQ,EAAUG,IAI5CD,GAAc,GACdL,EAAQ/hD,KAAK0hD,EAAiBM,EAAMI,GAEpCC,EAAaX,GACbK,EAAQ/hD,KAAK0hD,EAAiBM,EAAMK,GAGpCF,EAAU1S,KAAK6S,KAAK5pD,EAASsF,OAAS0jD,KAClCU,GAAc,GACdL,EAAQ/hD,KAAK0hD,EAAiBS,EAAUC,GAE5CL,EAAQ/hD,KAAK0hD,EAAiBS,EAAUF,GACpCI,EAAaX,GACbK,EAAQ/hD,KAAK0hD,EAAiBS,EAAUE,IAIzCN,EAAQxhD,IAAI,SAAAhC,GAAC,OAAI7F,EAAS6F,MAnIlBrH,EAsInBykD,gBAAkB,SAAA71C,GACd,IAAM07C,EAAYe,OAAOz8C,EAAM+nB,OAAOwJ,QAAQmqB,WACzCA,GAEAtqD,EAAKokD,YAENpkD,EAAKsrD,qBAAuBhB,IAC5BtqD,EAAKsrD,mBAAqB,MAE9BtrD,EAAK6C,SAAS,CAAEqnD,iBAAkBI,IAClCtqD,EAAKqqD,mBAAmBC,KAhJTtqD,EAmJnBwkD,gBAAkB,SAAA51C,GACd,IAAM07C,EAAYe,OAAOz8C,EAAM+nB,OAAOwJ,QAAQmqB,WAC9C,GAAKA,EAAL,CAEAtqD,EAAKsrD,mBAAqBhB,EAC1B,IAAM/nB,EAAMrO,KAAKqO,MAiBjB,OAfAviC,EAAK6C,SAAS,CAAEqnD,iBAAkBI,EAAWhpD,UAAWihC,EAAK4nB,aAAa,EAAOC,YAAY,IAC7F75C,WAAW,WACevQ,EAAKoC,MAAnBd,YACUihC,GACdviC,EAAK6C,SAAS,CAAEsnD,aAAa,EAAMC,YAAY,KAEpD,KAEHpqD,EAAKqqD,mBAAmBC,GAExBtqD,EAAKokD,WAAY,EACjBt0C,SAASy7C,iBAAiB,UAAWvrD,EAAKwrD,eAE1C58C,EAAME,iBACNF,EAAMuS,mBACC,IAzKQnhB,EA4KnBwrD,cAAgB,WACZxrD,EAAK6C,SAAS,CAAEqnD,iBAAkB,EAAG5oD,UAAW,EAAG6oD,aAAa,IAChEnqD,EAAKokD,WAAY,EACjBt0C,SAAS27C,oBAAoB,UAAWzrD,EAAKwrD,gBA/K9BxrD,EAkLnB+pD,SAAW,SAAAtpD,GACP,IAAMwd,EAAQ,GACd,IAAKxd,EAAM,OAAOwd,EAElB,IAAMytC,EAAO,IAAIvkD,IACT3F,EAA4Bf,EAA5Be,SAAUD,EAAkBd,EAAlBc,cAgBlB,OAfIC,GACAA,EAASA,SAASsL,QAAQ,SAAA5L,GACtB+c,EAAMnV,KAAK5H,GACXwqD,EAAKt9C,IAAIlN,EAAEgB,QAAQnB,GAAIG,EAAEgB,QAAQnB,MAGrCQ,GACAA,EAAcC,SAASsL,QAAQ,SAAA5L,GACtBwqD,EAAKpkD,IAAIpG,EAAEgB,QAAQnB,MACpBkd,EAAMnV,KAAK5H,GACXwqD,EAAKt9C,IAAIlN,EAAEgB,QAAQnB,GAAIG,EAAEgB,QAAQnB,OAKtCkd,GApMPje,EAAKyqD,SAAW/mD,IAAM+M,YAEtBzQ,EAAKoC,MAAQ,CACT3B,KAAM,KACNwd,MAAO,GACPisC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDpqD,mFAefD,KAAayT,GAAG,gCAAiCrT,KAAK8pD,iCACtDlqD,KAAayT,GAAG,iCAAkCrT,KAAK0pD,iFAIvD9pD,KAAa8B,eAAe,gCAAiC1B,KAAK8pD,iCAClElqD,KAAa8B,eAAe,iCAAkC1B,KAAK0pD,mEAqL9D,IAAAn5C,EAAAvQ,KACG+E,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEkD7O,KAAKiC,MAApD3B,EAFHuO,EAEGvO,KAAMwd,EAFTjP,EAESiP,MAAOisC,EAFhBl7C,EAEgBk7C,iBAAkBC,EAFlCn7C,EAEkCm7C,YACvC,IAAK1pD,EAAM,OAAO,KAClB,IAAKwd,EAAO,OAAO,KACnB,IAAKA,EAAMnX,OAAQ,OAAO,KAE1B,IAAMs2C,EAAWn/B,EAAM5U,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAA,OACIC,UAAU,0BACViB,IAAKrD,EAAEgB,QAAQnB,GACf4qD,kBAAiBzqD,EAAEgB,QAAQnB,GAC3B2d,MAAO,CAAEjR,MAAOk9C,IAA2Bj9C,OAAQi9C,KACnDjlD,QAAS,kBAAMgL,EAAKpE,WAAWpL,KAC/BuD,EAAArB,EAAAC,cAACs/C,GAAA,EAAD,CACIp+C,IAAKrD,EAAEgB,QAAQnB,GACfuC,UAAU,kCACVsoD,SAAO,EACP1pD,QAAShB,EACTsC,YAAaqoD,IACbC,MAAM,OAKZC,EAAe9tC,EAAM+G,UAAU,SAAA9jB,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOmpD,IACrDhoD,GAA4B,IAAlB6pD,EAAsB9tC,EAAM8tC,GAAgB,KAE5D,OACItnD,EAAArB,EAAAC,cAAA,OACIiO,IAAKnR,KAAKsqD,SACVnnD,UAAWkC,IAAW,gBAAiBN,EAAQe,YAAaf,EAAQud,MACpEqjC,YAAa3lD,KAAKskD,gBAClBliC,YAAapiB,KAAKqkD,iBACjBpH,EACAp5B,QAAQ9hB,IAAYioD,GAAe1lD,EAAArB,EAAAC,cAAClB,GAAA,EAAD,CAAgBD,QAASA,YA9OlDwB,IAAMC,YAoPlBoC,OA3PA,SAAAC,GAAK,OAAA/F,OAAAkS,EAAA,EAAAlS,CAAA,CAChBwiB,KAAM,CACFnc,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,YAEhFnW,YAAY1M,KAuPJD,CAAmB6jD,IC7O5BoC,WAAqB/rD,OAAOgsD,OAAO,CACrCC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BASpBC,eACF,SAAAA,EAAY1pD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAmsD,IACftsD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAqsD,GAAAhsD,KAAAH,KAAMyC,KAgLV2pD,wBAA0B,SAAA5rD,GAAU,IACxBwE,EAAsBxE,EAAtBwE,OAAQob,EAAc5f,EAAd4f,UACRisC,EAAiBxsD,EAAKoC,MAAtBoqD,aAER,GAAIxsD,EAAK4C,MAAMuC,SAAWA,EAA1B,CAIA,IAAMsnD,EAAWD,EAAa1lD,OAAS,EAAI0lD,EAAaA,EAAa1lD,OAAS,GAAK,KAC/E2lD,GAAYA,EAAStnD,SAAWA,GAAUsnD,EAASlsC,YAAcA,GAIrEisC,EAAa1jD,KAAK,CAAE3D,SAAQob,gBA9LbvgB,EAiMnBq5C,0BAA4B,SAAA14C,GACxB,IAAMqb,EAAOhc,EAAKonB,QAAQxa,QAEpB8/C,EAAmB1wC,EAAKE,aACxBywC,EAAgB3wC,EAAKZ,UAC3Bpb,EAAK6C,SAAS,CAAE+pD,cAAc,GAAQ,WAC9B5wC,EAAKZ,YAAcuxC,IACnB3wC,EAAKZ,WAAam9B,KAAKsU,IAAIH,EAAmB1wC,EAAKE,kBAxM5Clc,EA6MnB8sD,0BAA4B,SAAAC,GACxB,IAAM/wC,EAAOhc,EAAKonB,QAAQxa,QAE1B5M,EAAK0sD,iBAAmB1wC,EAAKE,aAC7Blc,EAAK2sD,cAAgB3wC,EAAKZ,WAjNXpb,EAoNnBgtD,uBAAyB,SAAAD,GACrB,IAAM/wC,EAAOhc,EAAKonB,QAAQxa,QAK1B5M,EAAK6C,SAAS,CAAE+pD,cAAc,GAAS,WAC/B5wC,EAAKZ,YAAcpb,EAAK2sD,gBACxB3wC,EAAKZ,WAAam9B,KAAKsU,IAAI7sD,EAAK0sD,iBAAmB1wC,EAAKE,kBA5NjDlc,EAiOnBitD,wBAA0B,SAAAtsD,GACtBX,EAAK6C,SAAS,CACVqqD,gBAAiBjhD,KAAaqkC,cAAc9iC,KAAO,KAnOxCxN,EAuOnBmtD,2BAA6B,SAAAxsD,GACNX,EAAK4C,MAAhBuC,SAEOxE,EAAOwE,QAClBnF,EAAK6C,SAAS,CAAE0sC,aAAc5uC,EAAOuuC,cA3O1BlvC,EA+OnBykB,uBAAyB,SAAA9jB,GAAU,IACvBwE,EAAWnF,EAAK4C,MAAhBuC,OACAioD,EAAYptD,EAAKoC,MAAjBgrD,QACA9iD,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WAEjB,GAAIpF,IAAWmF,IAEsC,IAAjD8iD,EAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOwJ,IAAoB,CACpD,IAAMS,EAAUiB,KAAahF,IAAIqD,EAASC,GAC1C,IAAKS,EAAS,OAEd,IAAMlL,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO,CAACkL,MA3PjBhL,EA+PnBqtD,wBAA0B,SAAA1sD,GACHX,EAAK4C,MAAhBuC,OACOxE,EAAO2J,SAjQPtK,EAoQnBstD,6BAA+B,SAAA3sD,GAC3B,GAAKX,EAAKgmB,UAAV,CADqC,IAG7Bhb,EAA4BrK,EAA5BqK,QAASw2C,EAAmB7gD,EAAnB6gD,eAEjB,GADmBxhD,EAAK4C,MAAhBuC,SACO6F,EAAQV,QAAvB,CAaA,IAAMijD,EAAiBviD,EAAQwiD,YACzBxB,GAAmBE,iBACnBF,GAAmBK,qBAEzBrsD,EAAKytD,eAAejM,EAAgBx2C,EAAS,WACrCuiD,IAAmBvB,GAAmBK,sBACtCrsD,EAAK0tD,qBAAqBH,EAAgBvtD,EAAKkD,YAIvD,IAAMpD,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO,CAACkL,IAC5BshD,EAAaqB,aAAa,CAAC3iD,OAlSZhL,EAqSnBslB,mBAAqB,SAAA3kB,GACjB,GAAKX,EAAKgmB,UAAV,CAD2B,IAGnBhb,EAAYrK,EAAZqK,QAER,GADmBhL,EAAK4C,MAAhBuC,SACO6F,EAAQV,QAAvB,CAEA,IAAMijD,EAAiBviD,EAAQwiD,YACzBxB,GAAmBE,iBACnBF,GAAmBK,qBACnBuB,EAAW5iD,EAAQwiD,YAAc,CAAEK,mBAAmB,GAAU,GAEhET,EAAU,CAACpiD,GACjBhL,EAAK8tD,eAAeC,aAAeX,GAAUQ,EAAU,WAC/CL,IAAmBvB,GAAmBK,sBACtCrsD,EAAK0tD,qBAAqBH,EAAgBvtD,EAAKkD,YAIvD,IAAMpD,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAOstD,GAC3Bd,EAAaqB,aAAaP,MA1TXptD,EA6TnBylB,uBAAyB,SAAA9kB,GAAU,IACvBwE,EAAWnF,EAAK4C,MAAhBuC,OACAmF,EAAuC3J,EAAvC2J,QAAS0jD,EAA8BrtD,EAA9BqtD,aAAchgD,EAAgBrN,EAAhBqN,YAC3B7I,IAAWmF,GAEV0jD,GAELhuD,EAAKiuD,cAAcjgD,IApUJhO,EAuUnBkuD,kBAAoB,WAChB,GAAKluD,EAAKqmB,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAIlf,IACf8W,EAAQkwC,aAAYnuD,EAAKonB,QAASpnB,EAAKouD,UACpC/mD,EAAI,EAAGA,EAAI4W,EAAMnX,OAAQO,IAAK,CACnC,IAAMgnD,EAAiBruD,EAAKqmB,SAASpI,EAAM5W,IAC3C,GAAIgnD,EAAgB,CAChB,IADgBC,EACAD,EAAezrD,MAAM2rD,SAAS,GACR3rD,MAA9BuC,EAFQmpD,EAERnpD,OAAQob,EAFA+tC,EAEA/tC,UACVhc,EAAG,GAAAO,OAAMK,EAAN,KAAAL,OAAgByb,GACzB8F,EAASjY,IAAI7J,EAAKA,IAI1B7C,KAAgBiJ,aAAa,CACzBlI,QAAS,6BACT4jB,SAAUA,MAxVCrmB,EA2gBnBwuD,sBA3gBmB,eAAAxtC,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA2gBK,SAAAC,EAAMnF,GAAN,IAAA8rD,EAAAC,EAAArnD,EAAA,OAAAO,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdgmD,EAAiB,EACnBC,EAAa/rD,GAAUA,EAAO0jB,SAASvf,OAAS,GAAKnE,EAAO0jB,SAASvf,OAAS6nD,IAEzEtnD,EAAI,EAJO,YAIJA,EAAIonD,GAAkBC,GAJlB,CAAAnmD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDzI,EAAK6lB,aALJ,OAKhBljB,EALgB4F,EAAAiB,KAMhBklD,EAAa/rD,GAAUA,EAAO0jB,SAASvf,OAAS,GAAKnE,EAAO0jB,SAASvf,OAAS6nD,IAN9D,OAI8BtnD,IAJ9BkB,EAAAE,KAAA,iCAAAF,EAAAwB,SAAAjC,MA3gBL,gBAAAyZ,GAAA,OAAAP,EAAA7c,MAAAhE,KAAAiE,YAAA,GAAApE,EAqhBnB6lB,WArhBmB5lB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqhBN,SAAAmC,IAAA,IAAA7E,EAAAioD,EAAAhnC,EAAAkN,EAAA3wB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACDtD,EAAWnF,EAAK4C,MAAhBuC,OACAioD,EAAYptD,EAAKoC,MAAjBgrD,QAEHjoD,EAJI,CAAA+E,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAKLnK,EAAK+lB,QALA,CAAA7b,EAAAzB,KAAA,eAAAyB,EAAAC,OAAA,qBAOLnK,EAAK4uD,oBAPA,CAAA1kD,EAAAzB,KAAA,eAQLzI,EAAK6uD,wBARA3kD,EAAAC,OAAA,wBAYHic,EAAgBgnC,GAAWA,EAAQtmD,OAAS,EAAIsmD,EAAQ,GAAGrsD,GAAK,EAEtEf,EAAK+lB,SAAU,EACTuN,EAAYtzB,EAAKszB,UAfdppB,EAAAzB,KAAA,GAgBU/G,KAAgBc,KAAK,CACpCC,QAAS,iBACT6H,QAASnF,EACTwhB,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO8lD,MACR9nC,QAAQ,WACP7mB,EAAK+lB,SAAU,IAvBV,WAgBLpjB,EAhBKuH,EAAAV,KA0BL8pB,IAActzB,EAAKszB,UA1Bd,CAAAppB,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,qBA8BLnK,EAAK4C,MAAMuC,SAAWA,EA9BjB,CAAA+E,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,yBAkCT8B,KAAa8a,SAASpkB,EAAO0jB,UAC7B1jB,EAAO0jB,SAASyzB,UAChB95C,EAAK8uD,WAAWf,aAAeprD,EAAO0jB,UAAW,WACxC1jB,EAAO0jB,SAASvf,QACjB9G,EAAK6uD,0BAIP/uD,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAClCimC,EAAaqB,aAAahrD,EAAO0jB,UA5CxBnc,EAAAC,OAAA,SA8CFxH,GA9CE,yBAAAuH,EAAAH,SAAAC,MArhBMhK,EAskBnB6uD,sBAtkBmB5uD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAskBK,SAAA8f,IAAA,IAAAxiB,EAAAioD,EAAA2B,EAAAr6C,EAAAs6C,EAAA5oC,EAAAkN,EAAA3wB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,UACZtD,EAAWnF,EAAK4C,MAAhBuC,OACAioD,EAAYptD,EAAKoC,MAAjBgrD,QAEHjoD,EAJe,CAAA0iB,EAAApf,KAAA,eAAAof,EAAA1d,OAAA,qBAKhBnK,EAAK+lB,QALW,CAAA8B,EAAApf,KAAA,eAAAof,EAAA1d,OAAA,oBAOd4kD,EAAe3gC,YAAgBjpB,GAPjB,CAAA0iB,EAAApf,KAAA,eAAAof,EAAA1d,OAAA,oBAUduK,EAAWkB,KAAgBhB,YAAYm6C,GAVzB,CAAAlnC,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,qBAYfuK,EAAS2Z,6BAZM,CAAAxG,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,yBAcpBnK,EAAK4uD,qBAAsB,EAdP/mC,EAAApf,KAAA,GAgBS/G,KAAgBc,KAAK,CAC9CC,QAAS,uBACToS,eAAgBH,EAAS2Z,+BAlBT,WAgBd2gC,EAhBcnnC,EAAAre,KAAA,CAAAqe,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,yBAuBdic,EAAgBgnC,EAAQtmD,OAAS,GAAKsmD,EAAQ,GAAG9iD,UAAY0kD,EAAejuD,GAAKqsD,EAAQ,GAAGrsD,GAAK,EAEvGf,EAAK+lB,SAAU,EACTuN,EAAYtzB,EAAKszB,UA1BHzL,EAAApf,KAAA,GA2BC/G,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAAS0kD,EAAejuD,GACxB4lB,gBAAiBP,EACjBQ,OAAQ,EACR/d,MAAO8lD,MACR9nC,QAAQ,WACP7mB,EAAK+lB,SAAU,IAlCC,WA2BdpjB,EA3BcklB,EAAAre,KAqChB8pB,IAActzB,EAAKszB,UArCH,CAAAzL,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,qBAyChBnK,EAAK4C,MAAMuC,SAAWA,EAzCN,CAAA0iB,EAAApf,KAAA,gBAAAof,EAAA1d,OAAA,kBA6CpB8B,KAAa8a,SAASpkB,EAAO0jB,UAC7B1jB,EAAO0jB,SAASyzB,UAChB95C,EAAK8uD,WAAWf,aAAeprD,EAAO0jB,WAEhCvmB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAClCimC,EAAaqB,aAAahrD,EAAO0jB,UAnDb,yBAAAwB,EAAA9d,SAAA4d,MAtkBL3nB,EA4nBnBs1B,eA5nBmBr1B,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA4nBF,SAAAqgB,IAAA,IAAA/iB,EAAAioD,EAAA94C,EAAA8R,EAAAkN,EAAA3wB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAA8f,GAAA,cAAAA,EAAA5f,KAAA4f,EAAA3f,MAAA,UACLtD,EAAWnF,EAAK4C,MAAhBuC,OACAioD,EAAYptD,EAAKoC,MAAjBgrD,QAEF94C,EAAOC,KAAUtN,IAAI9B,GAJd,CAAAijB,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,qBAOTnK,EAAK+lB,QAPI,CAAAqC,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,qBAQTnK,EAAKgmB,UARI,CAAAoC,EAAA3f,KAAA,eAAA2f,EAAAje,OAAA,wBAUPic,EAAgBgnC,GAAWA,EAAQtmD,OAAS,EAAIsmD,EAAQA,EAAQtmD,OAAS,GAAG/F,GAAK,EAEvFf,EAAK+lB,SAAU,EACTuN,EAAYtzB,EAAKszB,UAbVlL,EAAA3f,KAAA,GAcM/G,KAAgBc,KAAK,CACpCC,QAAS,iBACT6H,QAASnF,EACTwhB,gBAAiBP,EACjBQ,QAAS+nC,IAAsB,EAC/B9lD,MAAO8lD,IAAsB,IAC9B9nC,QAAQ,WACP7mB,EAAK+lB,SAAU,IArBN,WAcTpjB,EAdSylB,EAAA5e,KAwBT8pB,IAActzB,EAAKszB,UAxBV,CAAAlL,EAAA3f,KAAA,gBAAA2f,EAAAje,OAAA,qBA4BTnK,EAAK4C,MAAMuC,SAAWA,EA5Bb,CAAAijB,EAAA3f,KAAA,gBAAA2f,EAAAje,OAAA,yBAgCTmK,EAAK26C,aACLjvD,EAAKgmB,UAAYrjB,EAAO0jB,SAASvf,OAAS,GAAKwN,EAAK26C,aAAaluD,KAAO4B,EAAO0jB,SAAS,GAAGtlB,GAE3Ff,EAAKgmB,WAAY,EAGrByP,aAAwB9yB,EAAQ3C,EAAKoC,MAAMgrD,SAE3CnhD,KAAa8a,SAASpkB,EAAO0jB,UAC7B1jB,EAAO0jB,SAASyzB,UAChB95C,EAAKkvD,oBAAqB,EAC1BlvD,EAAK8tD,eAAeC,aAAeprD,EAAO0jB,UAAW,GAAI,WACrDrmB,EAAKkvD,oBAAqB,IAGxBpvD,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAClCimC,EAAaqB,aAAahrD,EAAO0jB,UAjDpB+B,EAAAje,OAAA,SAmDNxH,GAnDM,yBAAAylB,EAAAre,SAAAme,MA5nBEloB,EAiuBnBmnB,aAAe,WAAM,IAAAnY,EAEoChP,EAAKoC,MAAlDyrD,EAFS7+C,EAET6+C,kBAAmBrB,EAFVx9C,EAEUw9C,aAAcY,EAFxBp+C,EAEwBo+C,QACnCpxC,EAAOhc,EAAKonB,QAAQxa,QAE1B5M,EAAKkuD,oBAEDlyC,EAAKZ,WAAa,EAElBpb,EAAK6lB,aACE7J,EAAKZ,UAAYY,EAAKE,eAAiBF,EAAKC,cAEnDjc,EAAKs1B,iBAGLtZ,EAAKZ,UAAYY,EAAKE,eAAiBF,EAAKC,aACxCjc,EAAKgmB,WAAa6nC,IACd7tD,EAAK2sD,gBAAkB3wC,EAAKZ,WAAapb,EAAK2sD,eAAiB3sD,EAAKmvD,cAAgB/B,EAEpFptD,EAAK6C,SAAS,CACVgrD,mBAAmB,EACnBrB,aAAc,KAEVA,EAAa1lD,QAErB9G,EAAK6C,SAAS,CACVgrD,mBAAmB,KAK1BA,GAED7tD,EAAK6C,SAAS,CAAEgrD,mBAAmB,IAI3C7tD,EAAK2sD,cAAgB3wC,EAAKZ,UAC1Bpb,EAAKmvD,YAAc/B,GAvwBJptD,EA0wBnB0tD,qBAAuB,SAACH,EAAgBrqD,GAAa,IAAA+B,EACnBjF,EAAK4C,MADc0lB,GAAArjB,EACzCE,OADyCF,EACjCsb,UACkCrd,GAAY,CAC1DkY,UAAW,EACXa,aAAc,EACdC,aAAc,IAL+BoM,EAEzClN,UAFyCkN,EAE9BrM,aAF8BqM,EAEhBpM,aAejC,OAAQqxC,GACJ,KAAKvB,GAAmBE,iBACpBlsD,EAAKovD,iBACL,MAEJ,KAAKpD,GAAmBI,kBACpBpsD,EAAKqvD,kBACL,MAEJ,KAAKrD,GAAmBG,iBACpBnsD,EAAKsvD,iBACL,MAEJ,KAAKtD,GAAmBK,qBACpBrsD,EAAKuvD,mBAAmBrsD,KAzyBjBlD,EA+yBnBuvD,mBAAqB,SAAArsD,GAAY,IAAAkI,EACCpL,EAAK4C,MAC3BwY,GAFqBhQ,EACrBjG,OADqBiG,EACbmV,UACkCrd,EAA1CkY,WAAWa,EAA+B/Y,EAA/B+Y,aACbD,GAD4C9Y,EAAjBgZ,aACpBlc,EAAKonB,QAAQxa,SAU1BoP,EAAKZ,UAAYA,GAAaY,EAAKC,aAAeA,IA5zBnCjc,EAu0BnBsvD,eAAiB,WAcb,IAdmB,IAAA/iD,EACWvM,EAAK4C,MAC3BwqD,GAFW7gD,EACXpH,OADWoH,EACHgU,UACIvgB,EAAKoC,MAAjBgrD,SACFpxC,EAAOhc,EAAKonB,QAAQxa,QAUtB4iD,GAAW,EACNnoD,EAAI,EAAGA,EAAI+lD,EAAQtmD,OAAQO,IAAK,CACrC,IAAIooD,EAAgBzvD,EAAK0vD,SAASzoD,IAAII,GAClC+/B,EAAO0R,eAAqB2W,GAChC,GAAIroB,GACIqoB,EAAc7sD,MAAMoiD,oBAAqB,CACzChpC,EAAKZ,UAAYgsB,EAAK2R,UACtByW,GAAW,EACX,OAaPA,GACDxvD,EAAKovD,kBA12BMpvD,EA82BnBqvD,gBAAkB,WAcd,IAdoB,IAAA1+C,EACU3Q,EAAK4C,MAAnB2d,GADI5P,EACZxL,OADYwL,EACJ4P,WACR6sC,EAAYptD,EAAKoC,MAAjBgrD,QACFpxC,EAAOhc,EAAKonB,QAAQxa,QAUtB4iD,GAAW,EACNnoD,EAAI,EAAGA,EAAI+lD,EAAQtmD,OAAQO,IAAK,CACrC,IAAIooD,EAAgBzvD,EAAK0vD,SAASzoD,IAAII,GAClC+/B,EAAO0R,eAAqB2W,GAChC,GAAIroB,GACIqoB,EAAc7sD,MAAM2d,YAAcA,EAAW,CAC7CvE,EAAKZ,UAAYgsB,EAAK2R,UAAY/8B,EAAKE,aAAe,EACtDszC,GAAW,EACX,OAaPA,GACDxvD,EAAKovD,kBAj5BMpvD,EAq5BnBovD,eAAiB,WAAM,IAAA9zC,EACWtb,EAAK4C,MAC7BoZ,GAFaV,EACXnW,OADWmW,EACHiF,UACHvgB,EAAKonB,QAAQxa,SAUJoP,EAAKC,aAAeD,EAAKE,eACzBF,EAAKZ,YACvBY,EAAKZ,UAAYY,EAAKC,aAAeD,EAAKE,eAn6B/Blc,EAu7BnB2vD,cAv7BmB1vD,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAu7BH,SAAA0gB,IAAA,IAAApjB,EAAAmP,EAAAzL,EAAAyqB,EAAA3wB,EAAA7C,EAAA,OAAA8H,EAAAxE,EAAAkF,KAAA,SAAAkgB,GAAA,cAAAA,EAAAhgB,KAAAggB,EAAA/f,MAAA,UACJtD,EAAWnF,EAAK4C,MAAhBuC,OACFmP,EAAOC,KAAUtN,IAAI9B,GAFf,CAAAqjB,EAAA/f,KAAA,eAAA+f,EAAAre,OAAA,wBAMZnK,EAAKszB,UAAYY,KAAKqO,MACtBviC,EAAK+lB,SAAU,EACf/lB,EAAKgmB,WAAY,EAEK,EACP,EACTnd,EAAQ8lD,IAEd3uD,EAAK+lB,SAAU,EACTuN,EAAYtzB,EAAKszB,UAfX9K,EAAA/f,KAAA,GAgBS/G,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAASgK,EAAKvT,GACd4lB,gBATkB,EAUlBC,OATW,EAUX/d,MAAOA,IACRge,QAAQ,WACP7mB,EAAK+lB,SAAU,IAvBP,WAgBNpjB,EAhBM6lB,EAAAhf,KA0BR8pB,IAActzB,EAAKszB,UA1BX,CAAA9K,EAAA/f,KAAA,gBAAA+f,EAAAre,OAAA,qBA8BRnK,EAAK4C,MAAMuC,SAAWA,EA9Bd,CAAAqjB,EAAA/f,KAAA,gBAAA+f,EAAAre,OAAA,kBAkCRmK,EAAK26C,aACLjvD,EAAKgmB,UAAYrjB,EAAO0jB,SAASvf,OAAS,GAAKwN,EAAK26C,aAAaluD,KAAO4B,EAAO0jB,SAAS,GAAGtlB,GAE3Ff,EAAKgmB,WAAY,EAGrBhmB,EAAK6C,SAAS,CAAEgrD,mBAAmB,EAAOrB,aAAc,KAExDvgD,KAAa8a,SAASpkB,EAAO0jB,UAC7B1jB,EAAO0jB,SAASyzB,UAES,EACzB95C,EAAKihC,QADoB,EACQt+B,EAAO0jB,SAAU,WAC9CrmB,EAAK0tD,qBAAqB1B,GAAmBE,iBAAkBlsD,EAAKkD,YAIlEpD,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAClCimC,EAAaqB,aAAahrD,EAAO0jB,UAEjCrmB,EAAKwuD,sBAAsB7rD,GAvDf,yBAAA6lB,EAAAze,SAAAwe,MAv7BGvoB,EAi/BnB4vD,oBAAsB,SAAAhhD,GAClBA,EAAME,iBACNF,EAAMuS,kBAFqB,IAInBhc,EAAWnF,EAAK4C,MAAhBuC,OACH0qD,YAAa1qD,IAElBmG,IAAiByzC,aAAY,IAx/Bd/+C,EA2/BnB8vD,sBAAwB,SAAAlhD,GAAS,IACrB49C,EAAiBxsD,EAAKoC,MAAtBoqD,aAER,GAAIA,EAAa1lD,OAAS,EAAG,CACzB,IAAMipD,EAAYvD,EAAawD,MAC/B,GAAID,EAAW,KACH5qD,EAAsB4qD,EAAtB5qD,OAAQob,EAAcwvC,EAAdxvC,UACZpb,IAAWnF,EAAK4C,MAAMuC,QACtBuW,aAASvW,EAAQob,SAIzBvgB,EAAK2vD,iBAjgCT3vD,EAAKszB,UAAYY,KAAKqO,MACtBviC,EAAKoC,MAAQ,CACTuT,WAAY,EACZmsC,cAAe,KACf8K,cAAc,EACdQ,QAAS,GACT7d,cAAc,EACd2d,iBAAiB,EACjB+C,mBAAoB,EACpBpC,mBAAmB,EACnBrB,aAAc,IAGlBxsD,EAAKonB,QAAU1jB,IAAM+M,YACrBzQ,EAAKouD,SAAW1qD,IAAM+M,YAEtBzQ,EAAK0vD,SAAW,IAAIvoD,IAEpBnH,EAAKkuD,kBAAoBgC,aAASlwD,EAAKkuD,kBAAmB,KAxB3CluD,uFA4CKgD,EAAWC,GAAW,IAAAwY,EACZtb,KAAKyC,MAE7BoZ,GAHoCP,EAClCtW,OADkCsW,EAC1B8E,UAEHpgB,KAAKinB,QAAQxa,SAGpB1J,EAAW,CACbkY,UAH8CY,EAA1CZ,UAIJa,aAJ8CD,EAA/BC,aAKfC,aAL8CF,EAAjBE,cAiBjC,OADA/b,KAAK+C,SAAWA,EACTA,6CAGQF,EAAWC,EAAWC,GAAU,IAAAiZ,EACjBhc,KAAKyC,MAA3BuC,EADuCgX,EACvChX,OAAQob,EAD+BpE,EAC/BoE,UACcpgB,KAAKiC,MAA3ByrD,kBAEK1tD,KAAKinB,QAAQxa,QAWtB5J,EAAUmC,SAAWA,GAAUnC,EAAUud,YAAcA,EACvDpgB,KAAK+jD,iBAAiB/+C,EAAQnC,EAAUmC,OAAQob,EAAWvd,EAAUud,WAEhEpgB,KAAK+uD,oBACN/uD,KAAKutD,qBAAqB1B,GAAmBK,qBAAsBnpD,iDAKzDoQ,EAAWC,GAAW,IAAA8I,EACHlc,KAAKyC,MAAlCuC,EADgCkX,EAChClX,OAAQob,EADwBlE,EACxBkE,UAAWva,EADaqW,EACbrW,MADa4K,EAEsDzQ,KAAKiC,MAA3FwqD,EAFgCh8C,EAEhCg8C,aAAcQ,EAFkBx8C,EAElBw8C,QAAS5Y,EAFS5jC,EAET4jC,SAAUjF,EAFD3+B,EAEC2+B,aAAc2d,EAFft8C,EAEes8C,gBAAiBW,EAFhCj9C,EAEgCi9C,kBAExE,OAAIv6C,EAAUtN,QAAUA,IAKpBsN,EAAUnO,SAAWA,IAKrBmO,EAAUiN,YAAcA,IAKxBhN,EAAUs6C,oBAAsBA,IAKhCt6C,EAAUq5C,eAAiBA,KAK1BuD,aAAc58C,EAAU65C,QAASA,KAKlC75C,EAAUihC,WAAaA,IAKvBjhC,EAAUg8B,eAAiBA,GAK3Bh8B,EAAU25C,kBAAoBA,qDAUlCjhD,KAAauH,GAAG,mBAAoBrT,KAAKmlB,oBACzCrZ,KAAauH,GAAG,uBAAwBrT,KAAKslB,wBAC7CxZ,KAAauH,GAAG,uBAAwBrT,KAAKskB,wBAC7CxY,KAAauH,GAAG,6BAA8BrT,KAAKmtD,8BACnDrhD,KAAauH,GAAG,8BAA+BrT,KAAK8sD,yBACpDhhD,KAAauH,GAAG,6BAA8BrT,KAAK8sD,yBACnDhhD,KAAauH,GAAG,wBAAyBrT,KAAKosD,yBAC9Ch4C,KAAUf,GAAG,wBAAyBrT,KAAKktD,yBAC3C94C,KAAUf,GAAG,2BAA4BrT,KAAKgtD,4BAE9C9Y,KAAY7gC,GAAG,0BAA2BrT,KAAKk5C,2BAC/ChF,KAAY7gC,GAAG,0BAA2BrT,KAAK2sD,2BAC/CzY,KAAY7gC,GAAG,uBAAwBrT,KAAK6sD,uEAI5C/gD,KAAapK,eAAe,mBAAoB1B,KAAKmlB,oBACrDrZ,KAAapK,eAAe,uBAAwB1B,KAAKslB,wBACzDxZ,KAAapK,eAAe,uBAAwB1B,KAAKskB,wBACzDxY,KAAapK,eAAe,6BAA8B1B,KAAKmtD,8BAC/DrhD,KAAapK,eAAe,8BAA+B1B,KAAK8sD,yBAChEhhD,KAAapK,eAAe,6BAA8B1B,KAAK8sD,yBAC/DhhD,KAAapK,eAAe,wBAAyB1B,KAAKosD,yBAC1Dh4C,KAAU1S,eAAe,wBAAyB1B,KAAKktD,yBACvD94C,KAAU1S,eAAe,2BAA4B1B,KAAKgtD,4BAE1D9Y,KAAYxyC,eAAe,0BAA2B1B,KAAKk5C,2BAC3DhF,KAAYxyC,eAAe,0BAA2B1B,KAAK2sD,2BAC3DzY,KAAYxyC,eAAe,uBAAwB1B,KAAK6sD,yGAsMrC7nD,EAAQ0rB,EAAgBtQ,EAAWmR,2GAChDpd,EAAOC,KAAUtN,IAAI9B,GACrBirD,EAAe77C,KAAUtN,IAAI4pB,GAGnC1wB,KAAKmzB,UAAYY,KAAKqO,MACtBpiC,KAAK4lB,SAAU,EACf5lB,KAAK6lB,WAAY,EACjB7lB,KAAKyuD,qBAAsB,GAEvBt6C,0BACA5S,KAAgBc,KAAK,CACjBC,QAAS,WACT6H,QAASgK,EAAKvT,KAGZ8gD,GAAUthC,GAAajM,EAAK+7C,aAAe,EAC3CjqC,EACFy7B,GAAUvtC,EAAK+7C,aAAe,EAAI/7C,EAAKg8C,2BAA6B/vC,GAAwB,EAC1FqG,EAAUi7B,GAAUvtC,EAAK+7C,aAAe,GAAM9vC,GAAa,EAAIouC,IAAsB,EACrF9lD,EACDg5C,GAAUvtC,EAAK+7C,aAAe,GAAM9vC,EAAY,EAAIouC,IAAsBA,IAE/ExuD,KAAK4lB,SAAU,EACTuN,EAAYnzB,KAAKmzB,oBACF5xB,KAAgBc,KAAK,CACtCC,QAAS,iBACT6H,QAASgK,EAAKvT,GACd4lB,gBAAiBP,EACjBQ,OAAQA,EACR/d,MAAOA,IACRge,QAAQ,WACPnW,EAAKqV,SAAU,eAPbpjB,SAUF2wB,IAAcnzB,KAAKmzB,gEAInBhf,EAAK26C,aACL9uD,KAAK6lB,UAAYrjB,EAAO0jB,SAASvf,OAAS,GAAKwN,EAAK26C,aAAaluD,KAAO4B,EAAO0jB,SAAS,GAAGtlB,GAE3FZ,KAAK6lB,WAAY,EAGrB/Z,KAAa8a,SAASpkB,EAAO0jB,UAC7B1jB,EAAO0jB,SAASyzB,UAEZmW,EAAqB5E,OAAOkF,YAC5Bj8C,GAAQA,EAAK+7C,aAAe,oBACnBhpD,EAAI1E,EAAO0jB,SAASvf,OAAS,eAAGO,GAAK,uBAClCtG,EAAO4B,EAAO0jB,SAAShf,GAAvBtG,MAEH4B,EAAO0jB,SAAShf,GAAGmmD,aACpBzsD,EAAKuT,EAAKg8C,4BACVvvD,EAAKkvD,oBAELA,EAAqBlvD,8DAPoBsG,4BAarD4oD,EAAqBA,IAAuB5E,OAAOkF,UAAY,EAAIN,EAE/D1C,EAAiBvB,GAAmBE,iBACpC3rC,EACAgtC,EAAiBvB,GAAmBI,kBAC7BvK,GAAUoO,IACjB1C,EAAiBvB,GAAmBG,kBAGxChsD,KAAK8gC,QAAQgvB,EAAoBttD,EAAO0jB,SAAU,WAC9C3V,EAAKg9C,qBAAqBH,EAAgB78C,EAAKxN,UAC3Cqd,GACAiwC,aAAiBrrD,EAAQob,KAK3BzgB,EAAQ8J,KAAUC,WACxB2b,YAAoB1lB,EAAO6C,EAAO0jB,UAClCimC,EAAaqB,aAAahrD,EAAO0jB,UAEjCvc,YAAiBhK,EAAO,CAACqF,IACzBsrD,YAAiB3wD,EAAOqF,GAExBhF,KAAKquD,sBAAsB7rD,GAG3B8X,YAAgBnG,EAAKvT,4BAErBZ,KAAK4lB,SAAU,EACf5lB,KAAK8gC,QAAQ,EAAG,GAAI,WAChBvwB,EAAKqV,SAAU,YAInBqqC,GAAgBv/B,IAAmB1rB,GACnCzD,KAAgBc,KAAK,CACjBC,QAAS,YACT6H,QAASumB,gKAiBKxK,GAEtB,IAAK,IAAIhf,EAAIgf,EAASvf,OAAS,EAAGO,GAAK,EAAGA,IAAK,CAC3C,IAAI2D,EAAUqb,EAAShf,GACvB,GAAI2D,GAAWA,EAAQmB,QACnB,OAAQnB,EAAQmB,QAAQ,UACpB,IAAK,eAAgB,IAAAukD,EACDvwD,KAAKwwD,gBAAgB3lD,GADpB4lD,EAAA3wD,OAAAwJ,EAAA,EAAAxJ,CAAAywD,EAAA,GACZ3vD,EADY6vD,EAAA,GAEjB,GAFiBA,EAAA,GAGHC,aAAa7lD,EAAQmB,QAAQC,MAAMC,OACpCk+B,MACL3gC,KAAUknD,oBAAoB/vD,EAAIiK,GAG1C,MAEJ,IAAK,iBAAkB,IAAA+lD,EACH5wD,KAAK6wD,kBAAkBhmD,GADpBimD,EAAAhxD,OAAAwJ,EAAA,EAAAxJ,CAAA8wD,EAAA,GACdhwD,EADckwD,EAAA,GAEnB,GAFmBA,EAAA,GAGLjmD,EAAQmB,QAAQjK,QAAQA,QACzBqoC,MACL3gC,KAAUknD,oBAAoB/vD,EAAIiK,qCAmLtDilD,EAAoB7C,EAASznC,GACjCxlB,KAAK0C,SAAS,CAAEotD,qBAAoB7C,WAAWznC,0CAGpCurC,EAAclmD,EAAS2a,GAC7B3a,EAKL7K,KAAK0C,SACD,CACIuqD,QAASjtD,KAAKiC,MAAMgrD,QAAQ99C,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOmwD,IAAcpsD,OAAO,CAACkG,KAE3E2a,GARIA,GAAUA,uCAYXynC,EAASznC,GACO,IAAnBynC,EAAQtmD,OAKZ3G,KAAK0C,SAAS,CAAEuqD,QAASA,EAAQtoD,OAAO3E,KAAKiC,MAAMgrD,UAAYznC,GAJvDA,GAAUA,2CAOPynC,EAASQ,EAAUjoC,GACP,IAAnBynC,EAAQtmD,OAKZ3G,KAAK0C,SAAL5C,OAAAkS,EAAA,EAAAlS,CAAA,CAAgBmtD,QAASjtD,KAAKiC,MAAMgrD,QAAQtoD,OAAOsoD,IAAaQ,GAAYjoC,GAJpEA,GAAUA,0CAOR3X,EAAa2X,GAAU,IACzBynC,EAAYjtD,KAAKiC,MAAjBgrD,QACR,GAAuB,IAAnBA,EAAQtmD,OAAZ,CAKA,IAAMuC,EAAM,IAAIlC,IAAI6G,EAAY3E,IAAI,SAAAnI,GAAC,MAAI,CAACA,EAAGA,MAC7Cf,KAAK0C,SAAS,CAAEuqD,QAASA,EAAQ99C,OAAO,SAAApO,GAAC,OAAKmI,EAAI/B,IAAIpG,EAAEH,OAAQ4kB,QALxDA,GAAUA,qCAkTb,IAAA1F,EAAA9f,KAAA2c,EACuB3c,KAAKyC,MAAzBsC,EADH4X,EACG5X,QAASC,EADZ2X,EACY3X,OADZugB,EAEqFvlB,KAAKiC,MAAvFgrD,EAFH1nC,EAEG0nC,QAAS6C,EAFZvqC,EAEYuqC,mBAAoB1gB,EAFhC7pB,EAEgC6pB,aAAc2d,EAF9CxnC,EAE8CwnC,gBAAiBW,EAF/DnoC,EAE+DmoC,kBAI9Dt0C,EAAY9C,YAActR,GAgEhC,OA7DAhF,KAAKuvD,SAASlrB,QACdrkC,KAAKkmB,SAAWkpB,EACV,KACA6d,EAAQ/jD,IAAI,SAACnI,EAAGmG,GACZ,IAAM8pD,EAAc9pD,EAAI,EAAI+lD,EAAQ/lD,EAAI,GAAK,KACvCwqB,EAAO,IAAIqC,KAAc,IAAThzB,EAAE2wB,MAClBu/B,EAAWD,EAAc,IAAIj9B,KAAwB,IAAnBi9B,EAAYt/B,MAAeA,EAC/DkrB,GAAW,EAEL,IAAN11C,GACAwqB,EAAKw/B,gBAAkBD,EAASC,eAChCx/B,EAAKy/B,aAAeF,EAASE,YAC7Bz/B,EAAKirB,YAAcsU,EAAStU,YAE5BC,GAAW,GAGf,IAAIwU,EAAI,KACR,GAAIC,aAAiBtwD,GACjBqwD,EACI9sD,EAAArB,EAAAC,cAACouD,GAAD,CACIltD,IAAG,WAAAO,OAAa5D,EAAEoJ,QAAf,gBAAAxF,OAAqC5D,EAAEH,IAC1CuQ,IAAK,SAAA0L,GAAE,OAAIiD,EAAKyvC,SAASthD,IAAI/G,EAAG2V,IAChC7X,OAAQjE,EAAEoJ,QACViW,UAAWrf,EAAEH,GACbikD,oBAAqBiL,IAAuB/uD,EAAEH,SAGnD,CACH,IAAMkkD,EAEF1rC,GACM,IAANlS,GACC8pD,IACIK,aAAiBL,IACdjwD,EAAEwlB,iBAAmByqC,EAAYzqC,gBACjCxlB,EAAE2wB,KAAOs/B,EAAYt/B,KAAO6/B,KAExCH,EACI9sD,EAAArB,EAAAC,cAACsuD,GAAD,CACIptD,IAAG,WAAAO,OAAa5D,EAAEoJ,QAAf,gBAAAxF,OAAqC5D,EAAEH,IAC1CuQ,IAAK,SAAA0L,GAAE,OAAIiD,EAAKyvC,SAASthD,IAAI/G,EAAG2V,IAChC7X,OAAQjE,EAAEoJ,QACViW,UAAWrf,EAAEH,GACb2gD,aAAcxgD,EAAEspC,cAChBya,UAAWA,EACXD,oBAAqBiL,IAAuB/uD,EAAEH,KAO1D,OACI0D,EAAArB,EAAAC,cAAA,OAAKkB,IAAG,WAAAO,OAAa5D,EAAEoJ,QAAf,gBAAAxF,OAAqC5D,EAAEH,KAC1Cg8C,GAAYt4C,EAAArB,EAAAC,cAACuuD,GAAD,CAAS//B,KAAM3wB,EAAE2wB,OAC7B0/B,KAMf9sD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAWN,EAAQoB,WAAY,gBAAiB,CACvDurD,iCAAkC3E,IAEtChO,YAAa/+C,KAAKyvD,qBAClBnrD,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKinB,QAAS9jB,UAAU,wBAAwBgmB,SAAUnpB,KAAKgnB,cACrE1iB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBACfmB,EAAArB,EAAAC,cAAA,OAAKiO,IAAKnR,KAAKiuD,SAAU9qD,UAAU,uBAC9BnD,KAAKkmB,WAGd5hB,EAAArB,EAAAC,cAACyuD,GAAD,MACCjE,GAAqBppD,EAAArB,EAAAC,cAAC0uD,GAAD,CAAkBrsD,QAASvF,KAAK2vD,wBACtDrrD,EAAArB,EAAAC,cAAC2uD,GAAD,CAAe7sD,OAAQA,IACvBV,EAAArB,EAAAC,cAAC4uD,GAAD,MACAxtD,EAAArB,EAAAC,cAAC6uD,GAAD,0DAtkCoBtvD,EAAOR,GACnC,OAAIQ,EAAMuC,SAAW/C,EAAMuT,YAAc/S,EAAM2d,YAAcne,EAAM0/C,cACxD,CACHnsC,WAAY/S,EAAMuC,OAClB28C,cAAel/C,EAAM2d,UACrBgvB,cAAc,EACd2d,iBAAiB,EACjB+C,mBAAoB,EACpBpC,kBACIjrD,EAAMuC,SAAW/C,EAAMuT,aAAevT,EAAMyrD,mBAAqBzrD,EAAMoqD,aAAa1lD,OAAS,GACjG0lD,aAAc5pD,EAAMuC,SAAW/C,EAAMuT,WAAa,GAAKvT,EAAMoqD,cAI9D,0CAqbSnmC,GACXA,GACmB,IAApBA,EAASvf,QACRuf,EAAS,GAAG/b,SAEjB5I,KAAgBc,KAAK,CACjBC,QAAS,eACT6H,QAAS+b,EAAS,GAAG/b,QACrB0D,YAAaqY,EAAShd,IAAI,SAAAnI,GAAC,OAAIA,EAAEH,cAvelB2C,IAAMC,WAwmClBoC,OA9mCA,SAAAC,GAAK,MAAK,CACrBM,WAAY,CACRA,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQusB,KAAK,KAAO,iBA4mC5C,CAAEjsB,WAAW,GAAhCT,CAAwCumD,8CCrnCjD6F,8MACF/vD,MAAQ,CACJ+2B,SAAU,QAGdyE,gBAAkB,SAAAhvB,GACd5O,EAAK2lC,WAAW/2B,EAAMwqB,kBAG1BuM,WAAa,SAAAxM,GACTn5B,EAAK6C,SAAS,CAAEs2B,gBAGpBzuB,YAAc,WACV1K,EAAK6C,SAAS,CAAEs2B,SAAU,UAG9BtuB,eAAiB,WACb7K,EAAK0K,cADc,IAGXI,EAAM9K,EAAK4C,MAAXkI,EAEFC,EAAO/K,EAAKoyD,gBAAgBryD,KAAaS,YAC/C,GAAKuK,EAAL,CAEAE,IAAKF,GAEL,IAAMxG,EAAG,GAAAO,OAAMiG,EAAN,uBACHC,EAAUF,EAAE,cAGlB9K,EAAKkL,sBAAsB3G,EAAKyG,EAFjB,UAKnBonD,gBAAkB,SAAA5xD,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBm3B,EAASn3B,EAATm3B,KACR,IAAKA,EAAM,MAAO,GAElB,IAAM/c,EAAoB5T,IAAYC,IAAI,YAE1C,OAAQ2T,EAAoBA,EAAkBpW,MAAQ,yBAA2B,eAAiBmzB,KAGtGzsB,sBAAwB,SAAC3G,EAAKyG,EAASG,GACnC,GAAK5G,EAAL,CAD8C,IAAAU,EAGNjF,EAAK4C,MAArCyI,EAHsCpG,EAGtCoG,gBAAiBnG,EAHqBD,EAGrBC,QAHqBD,EAGZ6F,EAClC,GAAKO,EAAL,CAIIC,IAAiBC,mBAAmBhH,EAAKiH,IAAqC,IAAsBL,IAEpGE,EAAgBL,EAAS,CACrBS,iBAAkBD,IAClBL,OAAQ,CACJ1G,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACImB,IAAI,QACJoH,aAAW,QACXC,MAAM,UACNtI,UAAW4B,EAAQ2G,MACnBnG,QAAS,kBAAM4F,IAAiBQ,sBAAsBvH,KACtDE,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,eAOpBivD,YAAc,WACVryD,EAAK0K,cAEL,IAAMK,EAAO/K,EAAKoyD,gBAAgBryD,KAAaS,YAC1CuK,IAELrJ,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACTjC,WAAY,OAGhBkB,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CAAEG,oFAIP,IAAAK,EAC6BjL,KAAKyC,MAA/BsC,EADHkG,EACGlG,QAAS4F,EADZM,EACYN,EAAGxH,EADf8H,EACe9H,UACZ61B,EAAah5B,KAAKiC,MAAlB+2B,SAER,OACI10B,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACqI,EAAAtI,EAAD,CACIE,UAAW4B,EAAQk5B,WAAa,IAAM96B,EACtCqI,aAAW,QACXqF,KAAMgT,QAAQmV,GACdzzB,QAASvF,KAAKy9B,iBACdn5B,EAAArB,EAAAC,cAACusC,GAAAxsC,EAAD,OAEJqB,EAAArB,EAAAC,cAAC82B,GAAA/2B,EAAD,CACIrC,GAAG,cACHo4B,SAAUA,EACVnoB,KAAMgT,QAAQmV,GACdiB,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBnY,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBpR,QAAS9Q,KAAKuK,aACdjG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAK0K,gBACpBpG,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACivD,GAAAlvD,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,eAE7BrG,EAAArB,EAAAC,cAACsf,GAAAvf,EAAD,CAAUsC,QAASvF,KAAKkyD,aACpB5tD,EAAArB,EAAAC,cAACyU,GAAA1U,EAAD,KACIqB,EAAArB,EAAAC,cAACkvD,GAAAnvD,EAAD,OAEJqB,EAAArB,EAAAC,cAAC4U,GAAA7U,EAAD,CAAc+C,QAAS2E,EAAE,6BA/HbpH,IAAMC,WA+I3BsO,GANCC,YACZnM,IAhJW,SAAAC,GAAK,MAAK,CACrB6F,MAAO,CACHuG,QAASpM,EAAMqM,QAAQC,KAAO,KA8If,CAAE9L,WAAW,IAChCmM,cACAC,eAGWX,CAAQkgD,ICtHjBK,uBACF,SAAAA,EAAY5vD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAqyD,IACfxyD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAuyD,GAAAlyD,KAAAH,KAAMyC,KAwBV6vD,iCAAmC,SAAA9xD,GAAU,IACjCH,EAAeT,KAAfS,WAERR,EAAK6C,SAAS,CAAErC,gBA5BDR,EA+BnB0yD,6BAA+B,SAAA/xD,GAAU,IAC7BH,EAAeG,EAAfH,WAIR,GAFAR,EAAK6C,SAAS,CAAErC,eAEZA,EAAY,CACZ,IAAMV,EAAQ8J,KAAUC,WACxB8oD,YAAsB7yD,EAAOU,KAtClBR,EA0CnB0K,YAAc,WACVhJ,KAAgBiJ,aAAa,CACzBlI,QAAS,yBACTjC,WAAY,QA7CDR,EAiDnBg7B,WAAa,WAAM,IACPx6B,EAAeR,EAAKoC,MAApB5B,WACR,GAAKA,EAAL,CAFe,IAIPQ,EAAiBR,EAAjBQ,aAERU,KAAgBc,KAAK,CACjBC,QAAS,mBACTmwD,OAAQpyD,EAAWO,GACnBC,cAAeA,IAGnBhB,EAAK0K,gBA7DU1K,EAgEnBqqD,mBAAqB,SAAAC,GAAa,IAGxBpoD,EAFiBlC,EAAKoC,MAApB5B,WACAgB,SACiBuT,KAAK,SAAA7T,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOupD,IACpD,GAAKpoD,EAAL,CAEA,IAAMpC,EAAQ8J,KAAUC,WACxB0gD,YAAmBzqD,EAAOoC,EAAS,MAEXlC,EAAK4qD,oBAAoBN,GACjCx9C,QAAQ,SAAA5L,GACpBqpD,YAAmBzqD,EAAOoB,EAAG,UA3ElBlB,EA+EnB4qD,oBAAsB,SAAAN,GAAa,IACvB9pD,EAAeR,EAAKoC,MAApB5B,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBgB,EAAahB,EAAbgB,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMqpD,EAAU,GACV9lC,EAAQvjB,EAASwjB,UAAU,SAAA9jB,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOupD,IACvD,IAAe,IAAXvlC,EAAc,MAAO,GAEzB,IACM+lC,EAAMvS,KAAKC,MAAMzzB,EADE,GAEnBgmC,EAAShmC,EAFU,EAInBimC,EAAUF,EAAM,EAChBG,EAAUH,EAAM,EAChBI,EAAaH,EAAS,EACtBI,EAAaJ,EAAS,EA6B5B,OA3BIC,GAAW,IACPE,GAAc,GACdL,EAAQ/hD,KAXS,EAWekiD,EAAUE,GAE9CL,EAAQ/hD,KAba,EAaWkiD,EAAUD,GACtCI,EAdiB,GAejBN,EAAQ/hD,KAfS,EAeekiD,EAAUG,IAI9CD,GAAc,GACdL,EAAQ/hD,KApBa,EAoBWgiD,EAAMI,GAEtCC,EAtBqB,GAuBrBN,EAAQ/hD,KAvBa,EAuBWgiD,EAAMK,GAGtCF,EAAU1S,KAAK6S,KAAK5pD,EAASsF,OA1BR,KA2BjBokD,GAAc,GACdL,EAAQ/hD,KA5BS,EA4BemiD,EAAUC,GAE9CL,EAAQ/hD,KA9Ba,EA8BWmiD,EAAUF,GACtCI,EA/BiB,GAgCjBN,EAAQ/hD,KAhCS,EAgCemiD,EAAUE,IAI3CN,EAAQxhD,IAAI,SAAAhC,GAAC,OAAI7F,EAAS6F,MA9HlBrH,EAiInBykD,gBAAkB,SAAA71C,GACd,IAAM07C,EAAYe,OAAOz8C,EAAM+nB,OAAOwJ,QAAQmqB,WACzCA,GAEAtqD,EAAKokD,YAEVpkD,EAAK6C,SAAS,CAAEynD,cAChBtqD,EAAKqqD,mBAAmBC,KAxITtqD,EA2InBwkD,gBAAkB,SAAA51C,GACd,IAAM07C,EAAYe,OAAOz8C,EAAM+nB,OAAOwJ,QAAQmqB,WAC9C,GAAKA,EAUL,OARAtqD,EAAK6C,SAAS,CAAEynD,cAChBtqD,EAAKqqD,mBAAmBC,GAExBtqD,EAAKokD,WAAY,EACjBt0C,SAASy7C,iBAAiB,UAAWvrD,EAAKwrD,eAE1C58C,EAAME,iBACNF,EAAMuS,mBACC,GAvJQnhB,EA0JnBwrD,cAAgB,WACZxrD,EAAK6C,SAAS,CAAEynD,UAAW,IAC3BtqD,EAAKokD,WAAY,EACjBt0C,SAAS27C,oBAAoB,UAAWzrD,EAAKwrD,gBA1J7CxrD,EAAKoC,MAAQ,CACT5B,WAAYT,KAAaS,WACzB8pD,UAAW,GALAtqD,qFASGsT,EAAWC,EAAW4pB,GAAa,IAAAnuB,EACnB7O,KAAKiC,MAA/B5B,EAD6CwO,EAC7CxO,WAAY8pD,EADiCt7C,EACjCs7C,UAEpB,OAAO9pD,IAAe+S,EAAU/S,YAAc8pD,IAAc/2C,EAAU+2C,sDAItEvqD,KAAayT,GAAG,yBAA0BrT,KAAKuyD,8BAC/C3yD,KAAayT,GAAG,6BAA8BrT,KAAKsyD,iFAInD1yD,KAAa8B,eAAe,yBAA0B1B,KAAKuyD,8BAC3D3yD,KAAa8B,eAAe,6BAA8B1B,KAAKsyD,mEA0I1D,IAAAxtD,EACkB9E,KAAKyC,MAApBkI,EADH7F,EACG6F,EAAG5F,EADND,EACMC,QADN0L,EAE6BzQ,KAAKiC,MAA/B5B,EAFHoQ,EAEGpQ,WAAY8pD,EAFf15C,EAEe05C,UACpB,IAAK9pD,EAAY,OAAO,KAHnB,IAKGsjB,EAAkCtjB,EAAlCsjB,MAAOtiB,EAA2BhB,EAA3BgB,SAAUR,EAAiBR,EAAjBQ,aAEnBid,EAAQzc,EAAS6H,IAAI,SAAAnI,GAAC,OACxBuD,EAAArB,EAAAC,cAAA,OACIC,UAAU,0BACViB,IAAKrD,EAAEgB,QAAQnB,GACf4qD,kBAAiBzqD,EAAEgB,QAAQnB,GAC3B2d,MAAO,CAAEjR,MAAO,GAAIC,OAAQ,KAC5BjJ,EAAArB,EAAAC,cAACs/C,GAAA,EAAD,CACIp+C,IAAKrD,EAAEgB,QAAQnB,GACfuC,UAAU,kCACVsoD,SAAO,EACP1pD,QAAShB,EACTsC,YAAaqoD,IACbC,MAAM,IAEVrnD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,iCAAiCpC,EAAEmB,UAIpD0pD,EAAevqD,EAASwjB,UAAU,SAAA9jB,GAAC,OAAIA,EAAEgB,QAAQnB,KAAOupD,IACxDpoD,GAA4B,IAAlB6pD,EAAsBvqD,EAASuqD,GAAgB,KAE/D,OACItnD,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIE,UAAW4B,EAAQk4B,WACnBpsB,MAAI,EACJ4R,mBAAoB,EACpB3R,QAAS9Q,KAAKuK,YACdwG,kBAAgB,gCAChBhM,QAAS,CAAEqB,MAAOrB,EAAQq4B,YAC1B94B,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CACIrC,GAAG,gCACHuC,UAAWkC,IAAWN,EAAQ2tD,gBAAT5yD,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQ4tD,qBAAuB9uC,QAAQ9hB,KAE5C8iC,mBAAiB,GACjBvgC,EAAArB,EAAAC,cAAC6U,GAAA9U,EAAD,CAAY+U,QAAQ,KAAK7U,UAAW4B,EAAQ+/B,eAAgB7sB,QAAM,GAC7D0L,GAELrf,EAAArB,EAAAC,cAAC0vD,GAAD,CAAuBzvD,UAAW4B,EAAQ8tD,mBAE9CvuD,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,CACI8B,QAAS,CAAEud,KAAMvd,EAAQy/B,aACzBmhB,YAAa3lD,KAAKskD,gBAClBsB,WAAY5lD,KAAKukD,eACjBniC,YAAapiB,KAAKqkD,iBACjBvmC,GAELxZ,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,CAAeE,UAAWkC,IAAWvF,OAAAyT,GAAA,EAAAzT,CAAA,GAAGiF,EAAQ4tD,qBAAuB9uC,QAAQ9hB,MAC3EuC,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAKuK,aACjCI,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQwI,MAAM,UAAUlG,QAASvF,KAAK66B,YAClBlwB,EAAf9J,EAAiB,iBAAsB,SAG/CgjB,QAAQ9hB,IAAYuC,EAAArB,EAAAC,cAAClB,GAAA,EAAD,CAAgBD,QAASA,YA/N/BwB,IAAMC,YA4OtBsO,GALCC,YACZnM,IAvQW,SAAAC,GAAK,MAAK,CACrB2+B,YAAa,CACTnyB,QAAS,OACTqZ,SAAU,OACVmQ,UAAW,IACX5pB,QAAS,cACT9L,WAAY,eAEhBi3B,UAAW,CACP9vB,MAAO,KAEXolD,gBAAiB,CACbrgD,QAAS,OACTygD,cAAe,MACflnC,WAAY,UAEhBqR,WAAY,CACRxxB,MAAO5F,EAAME,QAAQuG,KAAKtG,SAE9B6sD,gBAAiB,CACbn8C,OAAQ,uBAEZouB,eAAgB,CACZL,SAAU,EACVsuB,WAAY,GAEhBJ,qBAAsB,CAClBK,cAAe,WA6OnBxgD,cAGWV,CAAQugD,IC1KRY,uBA1GX,SAAAA,EAAYxwD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAizD,IACfpzD,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAmzD,GAAA9yD,KAAAH,KAAMyC,KAiCVywD,8BAAgC,SAAA1yD,GAC5BX,EAAKuO,eAnCUvO,EAsCnB8sB,qBAAuB,SAAAnsB,GACnBX,EAAK6C,SAAS,CACVsC,OAAQxE,EAAOosB,WACfxM,UAAW5f,EAAO6wB,iBAzCPxxB,EA6CnBovD,eAAiB,WACbpvD,EAAKszD,aAAalE,kBA9CHpvD,EAiDnB2vD,cAAgB,WACZ3vD,EAAKszD,aAAa3D,iBAlDH3vD,EAqDnBqvD,gBAAkB,WACdrvD,EAAKszD,aAAajE,mBAnDlBrvD,EAAKoC,MAAQ,CACT+C,OAAQmG,IAAiBwN,YACzByH,UAAWjV,IAAiBmmB,eAC5B8hC,cAAe,GANJvzD,qFAUGsT,EAAWC,GAC7B,OAAIA,EAAUpO,SAAWhF,KAAKiC,MAAM+C,SAGhCoO,EAAUgN,YAAcpgB,KAAKiC,MAAMme,WAGnChN,EAAUggD,gBAAkBpzD,KAAKiC,MAAMkuC,2DAQ3ChlC,IAAiBkI,GAAG,oCAAqCrT,KAAKkzD,+BAC9D/nD,IAAiBkI,GAAG,qBAAsBrT,KAAK2sB,qEAI/CxhB,IAAiBzJ,eAAe,oCAAqC1B,KAAKkzD,+BAC1E/nD,IAAiBzJ,eAAe,qBAAsB1B,KAAK2sB,uDA0BtD,IAAApc,EAAAvQ,KAAA6O,EAiCwC7O,KAAKiC,MAA1C+C,EAjCH6J,EAiCG7J,OAAQob,EAjCXvR,EAiCWuR,UACR6b,GAlCHptB,EAiCsBukD,cACMjoD,IAAzB8wB,sBAER,OACI33B,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,iBAAkB,CAAEguD,8BAA+Bp3B,KAC1E33B,EAAArB,EAAAC,cAACowD,GAAD,MACAhvD,EAAArB,EAAAC,cAACqwD,GAAD,CAAQvuD,OAAQA,IAChBV,EAAArB,EAAAC,cAACswD,GAAD,CAAc/4B,SAAU,SAAAtpB,GAAG,OAAKZ,EAAK4iD,aAAehiD,GAAMnM,OAAQA,EAAQob,UAAWA,IACrF9b,EAAArB,EAAAC,cAACuwD,GAAD,CAAQzuD,OAAQA,IAChBV,EAAArB,EAAAC,cAACwwD,GAAD,MACApvD,EAAArB,EAAAC,cAACywD,GAAD,cArGYnwD,iICsCbowD,uBAxCX,SAAAA,EAAYnxD,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA4zD,GAAA9zD,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA8zD,GAAAzzD,KAAAH,KACVyC,0EAGD,IAAAqC,EACyB9E,KAAKyC,MAA3BuC,EADHF,EACGE,OAAQob,EADXtb,EACWsb,UAEVvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAJhB,IAMG6mB,EAAS7mB,EAAT6mB,KAEF9e,EAASihD,aAAgBhpD,GACzBipD,EAAWrX,aAAY/qB,GAEvBqiC,EAAcnhD,EAAStO,EAAArB,EAAAC,cAAC8Q,GAAA,EAAD,CAAUpB,OAAQA,IAAatO,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,IAE9E,OACIV,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACV4wD,EACDzvD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAACgjD,GAAA,EAAD,CAAelhD,OAAQA,EAAQ4N,OAAQA,KAE3CtO,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,YAAO4wD,cA3BFvwD,IAAMC,qBCHjCwwD,uBACF,SAAAA,EAAYvxD,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAg0D,IACfn0D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAk0D,GAAA7zD,KAAAH,KAAMyC,KAGVoR,YAAc,SAAApF,GACVA,EAAMuS,mBALSnhB,wEAQV,IACGyM,EAAStM,KAAKyC,MAAd6J,KAER,OACIhI,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAAgBoC,QAASvF,KAAK6T,aACzCvP,EAAArB,EAAAC,cAAA,OAAKC,UAAU,sBAAsBmJ,WAd1B/I,IAAMC,YAwBjCwwD,GAAa99C,aAAe,GAEb89C,UClBTC,WAAS1wD,IAAMqjC,KAAK,kBAAM59B,QAAAC,IAAA,CAAA49B,EAAAz9B,EAAA,GAAAy9B,EAAAz9B,EAAA,KAAA7G,KAAAskC,EAAAC,KAAA,cAoXjBotB,eAjXX,SAAAA,EAAYzxD,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAk0D,IACfr0D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAo0D,GAAA/zD,KAAAH,KAAMyC,KA4FV0xD,2BAA6B,SAAA3zD,GAAU,IAAAsE,EACLjF,EAAK4C,MAA3BuC,EAD2BF,EAC3BE,OAAQob,EADmBtb,EACnBsb,UAEZpb,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,WACjDvgB,EAAKu0D,uBAjGMv0D,EAqGnBu0D,oBArGmBt0D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqGG,SAAAC,IAAA,IAAAsD,EAAAjG,EAAAob,EAAA/S,EAAAgnD,EAAAC,EAAArrB,EAAAsrB,EAAA,OAAA9sD,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA2C,EACkBpL,EAAK4C,MAAjCuC,EADUiG,EACVjG,OAAQob,EADEnV,EACFmV,UAAW/S,EADTpC,EACSoC,KAEtBmnD,aAAgBxvD,EAAQob,GAHX,CAAAhY,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAAqqD,EAOYI,YAAazvD,EAAQob,EAAW/S,GAP5CinD,EAAAx0D,OAAAwJ,EAAA,EAAAxJ,CAAAu0D,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOIrrB,EAPJqrB,EAAA,GAAAlsD,EAAAE,KAAA,EAQUzI,EAAK60D,iBAAiBzrB,GARhC,OAQZsrB,EARYnsD,EAAAiB,KAUlBxJ,EAAK6C,SAAS,CAAE6xD,kBAVE,wBAAAnsD,EAAAwB,SAAAjC,MArGH9H,EAkHnB60D,iBAAmB,SAAAzrB,GACf,OAAO,IAAIjgC,QAAQ,SAAA2rD,GACf,GAAK1rB,EAAL,CAKA,IAAMmB,EAAO3gC,KAAUmrD,QAAQ3rB,EAAKroC,IACpC,GAAKwpC,EAAL,CAKA,IAAMyqB,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAAtmD,GAAK,OAAIkmD,EAAQ9pB,KAAKmqB,MAAMvmD,EAAM+nB,OAAOh0B,UAC7DqyD,EAAWI,QAAU,kBAAMN,EAAQ,OACnCE,EAAWK,QAAU,kBAAMP,EAAQ,OACnCE,EAAWM,WAAW/qB,QARlBuqB,EAAQ,WANRA,EAAQ,SArHD90D,EAuInB26C,wBAA0B,SAAAh6C,GAAU,IAAA4L,EACIvM,EAAK4C,MAAjCuC,EADwBoH,EACxBpH,OAAQob,EADgBhU,EAChBgU,UAAW/S,EADKjB,EACLiB,KAE3B,GAAIrI,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,UAAW,KAAAg1C,EAC9BX,YAAazvD,EAAQob,EAAW/S,GADFgoD,EAAAv1D,OAAAwJ,EAAA,EAAAxJ,CAAAs1D,EAAA,GACrD9nD,EADqD+nD,EAAA,GAC9C9nD,EAD8C8nD,EAAA,GACtCpsB,EADsCosB,EAAA,GAE5Dx1D,EAAK6C,SAAS,CACV4K,QACAC,SACA07B,WA/IOppC,EAoJnBy1D,iCAAmC,SAAA90D,GAAU,IAAAgQ,EACX3Q,EAAK4C,MAA3BuC,EADiCwL,EACjCxL,OAAQob,EADyB5P,EACzB4P,UAEhB,GAAIpb,IAAWxE,EAAOwE,QAAUob,IAAc5f,EAAO4f,UAAW,KAAAm1C,EAC9BC,YAAoBxwD,EAAQob,GADEq1C,EAAA31D,OAAAwJ,EAAA,EAAAxJ,CAAAy1D,EAAA,GACrDjoD,EADqDmoD,EAAA,GAC9CloD,EAD8CkoD,EAAA,GACtCxsB,EADsCwsB,EAAA,GAE5D51D,EAAK6C,SAAS,CACV0kC,eAAgB95B,EAChB+5B,gBAAiB95B,EACjBC,UAAWy7B,MA5JJppC,EAiKnBykB,uBAAyB,SAAA9jB,GAAU,IAAA2a,EACKtb,EAAK4C,MAAjCuC,EADuBmW,EACvBnW,OAAQob,EADejF,EACfiF,UAAW/S,EADI8N,EACJ9N,KACnBlD,EAAwB3J,EAAxB2J,QAASC,EAAe5J,EAAf4J,WAEjB,GAAIpF,IAAWmF,GAAWiW,IAAchW,EAAY,KAAAsrD,EAClBjB,YAAazvD,EAAQob,EAAW/S,GADdsoD,EAAA71D,OAAAwJ,EAAA,EAAAxJ,CAAA41D,EAAA,GACzCpoD,EADyCqoD,EAAA,GAClCpoD,EADkCooD,EAAA,GAC1B1sB,EAD0B0sB,EAAA,GAE1C9qD,EAAUiB,KAAahF,IAAI9B,EAAQob,GACnC9T,EAAOqzB,aAAQ90B,GACrBhL,EAAK6C,SAAS,CACV4K,MAAOA,EACPC,OAAQA,EACR07B,KAAMA,EACN38B,KAAMA,MA7KCzM,EAkLnB+1D,mBAAqB,SAAAnnD,GACbA,GAAOA,EAAMuS,mBAnLFnhB,EAsLnBg2D,YAAc,SAAAC,GACVj2D,EAAK6C,SAAS,CACVozD,WArLJj2D,EAAKi6C,SAAWv2C,IAAM+M,YACtBzQ,EAAKk2D,UAAYxyD,IAAM+M,YAJR,IAAAgL,EAMqBzb,EAAK4C,MAAjCuC,EANOsW,EAMPtW,OAAQob,EAND9E,EAMC8E,UAAW/S,EANZiO,EAMYjO,KANZ2oD,EAQavB,YAAazvD,EAAQob,EAAW/S,GAR7C4oD,EAAAn2D,OAAAwJ,EAAA,EAAAxJ,CAAAk2D,EAAA,GAQV1oD,EARU2oD,EAAA,GAQH1oD,EARG0oD,EAAA,GAQKhtB,EARLgtB,EAAA,GASfhtB,EAAOx/B,KAAU3C,IAAImiC,EAAKroC,KAAOqoC,EATlB,IAAAitB,EAWoCV,YAAoBxwD,EAAQob,GAXhE+1C,EAAAr2D,OAAAwJ,EAAA,EAAAxJ,CAAAo2D,EAAA,GAWV9uB,EAXU+uB,EAAA,GAWM9uB,EAXN8uB,EAAA,GAWuB3oD,EAXvB2oD,EAAA,GAYf3oD,EAAYA,EAAY/D,KAAU3C,IAAI0G,EAAU5M,KAAO4M,EAAY,KAEnE,IAAM3C,EAAUiB,KAAahF,IAAI9B,EAAQob,GACnC9T,EAAOqzB,aAAQ90B,GAfN,OAiBfhL,EAAKoC,MAAQ,CACT6zD,MAAO,EACPtgD,WAAYxQ,EACZ28C,cAAevhC,EACfg2C,WAAW,EACX9oD,MAAOA,EACPC,OAAQA,EACR07B,KAAMA,EACN38B,KAAMA,EACN86B,eAAgBA,EAChBC,gBAAiBA,EACjB75B,UAAWA,GAGf3N,EAAKu0D,sBA/BUv0D,mFAkEf4J,KAAU4J,GAAG,2BAA4BrT,KAAKm0D,4BAC9C1qD,KAAU4J,GAAG,wBAAyBrT,KAAKw6C,yBAC3C/wC,KAAU4J,GAAG,wBAAyBrT,KAAKw6C,yBAC3C/wC,KAAU4J,GAAG,4BAA6BrT,KAAKw6C,yBAC/C/wC,KAAU4J,GAAG,iCAAkCrT,KAAKs1D,kCACpD7rD,KAAU4J,GAAG,qCAAsCrT,KAAKs1D,kCACxDxpD,KAAauH,GAAG,uBAAwBrT,KAAKskB,uEAI7C7a,KAAU/H,eAAe,2BAA4B1B,KAAKm0D,4BAC1D1qD,KAAU/H,eAAe,wBAAyB1B,KAAKw6C,yBACvD/wC,KAAU/H,eAAe,wBAAyB1B,KAAKw6C,yBACvD/wC,KAAU/H,eAAe,4BAA6B1B,KAAKw6C,yBAC3D/wC,KAAU/H,eAAe,iCAAkC1B,KAAKs1D,kCAChE7rD,KAAU/H,eAAe,qCAAsC1B,KAAKs1D,kCACpExpD,KAAapK,eAAe,uBAAwB1B,KAAKskB,mEAG1CzhB,EAAWC,EAAWC,GAAU,IAAAiZ,EACjBhc,KAAKyC,MAA3BuC,EADuCgX,EACvChX,OAAQob,EAD+BpE,EAC/BoE,UAEZvd,EAAUmC,SAAWA,GAAUnC,EAAUud,YAAcA,GACvDpgB,KAAKo0D,uDAmGJ,IAAA7jD,EAAAvQ,KAAAkc,EACyBlc,KAAKyC,MAA3BuC,EADHkX,EACGlX,OAAQob,EADXlE,EACWkE,UADXvR,EAYD7O,KAAKiC,MATLsyD,EAHC1lD,EAGD0lD,cACAjnD,EAJCuB,EAIDvB,MACAC,EALCsB,EAKDtB,OACA65B,EANCv4B,EAMDu4B,eACAC,EAPCx4B,EAODw4B,gBACA4B,EARCp6B,EAQDo6B,KACA38B,EATCuC,EASDvC,KACAkB,EAVCqB,EAUDrB,UACA4oD,EAXCvnD,EAWDunD,UAEJ,IAAKntB,EAAM,OAAO,KAElB,IAAMmB,EAAO3gC,KAAUmrD,QAAQ3rB,EAAKroC,KAAOqoC,EAAKmB,KAC1Crf,EAAMthB,KAAU4sD,WAAWjsB,IAAS,GAEpCksB,EAAgB9oD,EAAY/D,KAAUmrD,QAAQpnD,EAAU5M,KAAO4M,EAAU48B,KAAO,KAChFmsB,EAAe9sD,KAAU4sD,WAAWC,GACpCnqC,EAAYjB,aAAmB,CAAE5d,MAAO85B,EAAgB75B,OAAQ85B,IAEhEmvB,EAAUC,aAAezxD,EAAQob,GACjCs2C,EAAcC,aAAmB3xD,EAAQob,GACzCw2C,EAAWpC,aAAgBxvD,EAAQob,GACrCy2C,EAAavpD,EACbwpD,EAAcvpD,EAClB,GAAI6qC,KAAKhC,IAAIygB,EAAYC,GAAe,IAAK,CACzC,IAAMC,EAAQ,IAAM3e,KAAKhC,IAAIygB,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAM1e,KAAKC,MAAMwe,EAAaE,IAC7B,IAAM3e,KAAKC,MAAMye,EAAcC,GAG5E,IAAI/qD,EAAU,KACd,GAAIwqD,EACAxqD,EACI1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,SACIiO,IAAKnR,KAAK85C,SACV32C,UAAU,oCACV4nB,IAAKA,EACLxlB,QAASvF,KAAK41D,mBACd3Y,UAAQ,EACRD,UAAQ,EACR1vC,MAAOupD,EACPtpD,OAAQupD,EACR3Z,OAAQ,WACJ5sC,EAAK7N,SAAS,CAAE0zD,WAAW,IAC3B70D,KAAgBiJ,aAAa,CACzBlI,QAAS,iCAGjB46C,UAAW,WACP,IAAMrD,EAAStpC,EAAKupC,SAASrtC,QACzBotC,IACAA,EAAO1F,OAASD,KAAYC,SAGpCiJ,QAAS,WACL77C,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAGjBg7C,QAAS,WACL/7C,KAAgBiJ,aAAa,CACzBlI,QAAS,kCAGjB00D,eAAgB,WACZ,IAAMnd,EAAStpC,EAAKupC,SAASrtC,QACzBotC,GACAt4C,KAAgBiJ,aAAa,CACzBlI,QAAS,0BACT6xC,OAAQ0F,EAAO1F,aAK7BiiB,KACIrrC,GAAOwrC,EACLjyD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,uCAAwC,CAC1DgnB,gBAAiBF,IAErBpB,IAAKwrC,EACLlxB,IAAI,GACJ/3B,MAAOupD,EACPtpD,OAAQupD,IAGZxyD,EAAArB,EAAAC,cAAA,OACIC,UAAU,uCACVob,MAAO,CACHjR,MAAOupD,EACPtpD,OAAQupD,YAM7B,GAAIJ,EACP1qD,EACI1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,SACIC,UAAU,oCACV4nB,IAAKA,EACLxlB,QAASvF,KAAK41D,mBACdqB,MAAI,EACJja,UAAQ,EACR1vC,MAAOupD,EACPtpD,OAAQupD,EACR3Z,OAAQ,WACJ5sC,EAAK7N,SAAS,CAAE0zD,WAAW,QAGjCA,KACIrrC,GAAOwrC,EACLjyD,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW,uCAAwC,CAC1DgnB,gBAAiBF,IAErBpB,IAAKwrC,EACLlxB,IAAI,GACJ/3B,MAAOupD,EACPtpD,OAAQupD,IAGZxyD,EAAArB,EAAAC,cAAA,OACIC,UAAU,uCACVob,MAAO,CACHjR,MAAOupD,EACPtpD,OAAQupD,YAM7B,GAAIF,EAAU,CACjB,IAAMM,EAAiB,CACnBD,MAAM,EACNE,UAAU,EAEV5C,cAAeA,EACf6C,iBAAkB,CACdC,oBAAqB,mBAGrBvB,EAAU91D,KAAKiC,MAAf6zD,MAER9pD,EACI1H,EAAArB,EAAAC,cAAC+wD,GAAD,CACI9iD,IAAKnR,KAAK+1D,UACVD,MAAOA,EACPj0B,QAASq1B,EACT3pD,OAAO,OACPD,MAAO,IACPgqD,WAAW,EACXC,UAAU,SAIlBvrD,EAAU1H,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6B4nB,IAAKA,EAAKsa,IAAI,GAAG9/B,QAASvF,KAAK41D,qBAGzF,OACItxD,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAACoB,EAAArB,EAAMuoC,SAAP,CAAgBC,SAAS,IAAIz/B,GAE7B1H,EAAArB,EAAAC,cAACs0D,GAAA,EAAD,CAAcvuB,KAAMA,EAAM1Y,OAAQ,IACjCjkB,GAAQA,EAAK3F,OAAS,GAAKrC,EAAArB,EAAAC,cAACu0D,GAAD,CAAcnrD,KAAMA,wDAnU5B7J,EAAOR,GAAO,IAClC+C,EAA4BvC,EAA5BuC,OAAQob,EAAoB3d,EAApB2d,UAAW/S,EAAS5K,EAAT4K,KAE3B,GAAIrI,IAAW/C,EAAMuT,YAAc4K,IAAcne,EAAM0/C,cAAe,KAAA+V,EACtCjD,YAAazvD,EAAQob,EAAW/S,GADMsqD,EAAA73D,OAAAwJ,EAAA,EAAAxJ,CAAA43D,EAAA,GAC7DpqD,EAD6DqqD,EAAA,GACtDpqD,EADsDoqD,EAAA,GAC9C1uB,EAD8C0uB,EAAA,GAElE1uB,EAAOx/B,KAAU3C,IAAImiC,EAAKroC,KAAOqoC,EAFiC,IAAA2uB,EAIfpC,YAAoBxwD,EAAQob,GAJby3C,EAAA/3D,OAAAwJ,EAAA,EAAAxJ,CAAA83D,EAAA,GAI7DxwB,EAJ6DywB,EAAA,GAI7CxwB,EAJ6CwwB,EAAA,GAI5BrqD,EAJ4BqqD,EAAA,GAKlErqD,EAAY/D,KAAU3C,IAAI0G,EAAU5M,KAAO4M,EAE3C,IAAM3C,EAAUiB,KAAahF,IAAI9B,EAAQob,GAGzC,MAAO,CACH01C,MAAO,EACPtgD,WAAYxQ,EACZ28C,cAAevhC,EACfg2C,WAAW,EACX9oD,MAAOA,EACPC,OAAQA,EACR07B,KAAMA,EACN38B,KAVSqzB,aAAQ90B,GAWjBu8B,eAAgBA,EAChBC,gBAAiBA,EACjB75B,UAAWA,GAInB,OAAO,YA/DkBjK,IAAMC,WCqBxBs0D,sNA/BXjkD,YAAc,SAAApF,GACVA,EAAMuS,kBADa,IAAAlc,EAGWjF,EAAK4C,MAA3B07B,EAHWr5B,EAGXq5B,SAAU54B,EAHCT,EAGDS,QAEd44B,GAEJ54B,EAAQkJ,4EAGH,IAAAxD,EACgCjL,KAAKyC,MAAlC07B,EADHlzB,EACGkzB,SAAU45B,EADb9sD,EACa8sD,KAAM3J,EADnBnjD,EACmBmjD,SAElBjrD,EAAYkC,IACd84B,EAAW,+BAAiC,sBAC5C,CAAE45B,KAAMA,IAGZ,OACIzzD,EAAArB,EAAAC,cAAA,OAAKC,UAAWA,EAAWoC,QAASvF,KAAK6T,aACpCu6C,UArBe7qD,IAAMC,YCyBvBw0D,4LAzBF,IAAAlzD,EACuB9E,KAAKyC,MAAzBkhB,EADH7e,EACG6e,MAAO9O,EADV/P,EACU+P,SAEf,OACIvQ,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACXmB,EAAArB,EAAAC,cAAA,YAAOygB,GAEHE,QAAQhP,IACJvQ,EAAArB,EAAAC,cAAA,mBAEK2R,YAZGtR,IAAMC,YCCpCy0D,sNACFpkD,YAAc,SAAApF,GACVA,EAAMuS,kBADa,IAAAlc,EAGWjF,EAAK4C,MAA3B8C,EAHWT,EAGXS,QAHWT,EAGFq5B,UAIjB54B,EAAQkJ,4EAGH,IAAAxD,EACmDjL,KAAKyC,MAArD4V,EADHpN,EACGoN,QAAS+1C,EADZnjD,EACYmjD,SAAUrpD,EADtBkG,EACsBlG,QAASo5B,EAD/BlzB,EAC+BkzB,SAAUxa,EADzC1Y,EACyC0Y,MAE9C,OACIrf,EAAArB,EAAAC,cAAA,OACIC,UAAWkC,IAAW84B,EAAW,sCAAwC,6BAApDr+B,OAAAyT,GAAA,EAAAzT,CAAA,GAChBiF,EAAQsT,QAAUA,IAEvBsL,MAAOA,EACPpe,QAASvF,KAAK6T,aACbu6C,UArBqB7qD,IAAMC,YAkC7BoC,OAxCA,SAAAC,GAAK,MAAK,CACrBwS,QAAS,CACL5M,MAAO5F,EAAME,QAAQC,QAAQC,QAsCtBL,CAAmBqyD,yBCvC5BC,GAAY,CACdjmD,QAAS,GACTxG,MAAO,SAGL0sD,eACF,SAAAA,EAAY11D,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAm4D,IACft4D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAq4D,GAAAh4D,KAAAH,KAAMyC,KA4CV+3C,wBAA0B,SAAAh6C,GAAU,IACxBoqB,EAAW/qB,EAAKoC,MAAhB2oB,OAEJA,IAAWpqB,EAAOoqB,QAClB/qB,EAAK6C,SAAS,CACVy7B,SAAUg6B,EAA0BC,aAAaxtC,MAlD1C/qB,EA2DnBgU,YAAc,SAAApF,GACVA,EAAMuS,kBADa,IAGXzb,EAAY1F,EAAK4C,MAAjB8C,QACa1F,EAAKoC,MAAlBk8B,UAGR54B,EAAQkJ,IAlEO,IAGPmc,EAAWnoB,EAAXmoB,OAHO,OAKf/qB,EAAKoC,MAAQ,CACTo2D,gBAAiBztC,EACjBA,OAAQA,EACRuT,SAAUg6B,EAA0BC,aAAaxtC,IARtC/qB,mFA4Bf4J,KAAU4J,GAAG,4BAA6BrT,KAAKw6C,yBAC/C/wC,KAAU4J,GAAG,uBAAwBrT,KAAKw6C,yBAC1C/wC,KAAU4J,GAAG,2BAA4BrT,KAAKw6C,yBAC9C/wC,KAAU4J,GAAG,wBAAyBrT,KAAKw6C,yBAC3C/wC,KAAU4J,GAAG,uBAAwBrT,KAAKw6C,yBAC1C/wC,KAAU4J,GAAG,wBAAyBrT,KAAKw6C,wEAI3C/wC,KAAU/H,eAAe,4BAA6B1B,KAAKw6C,yBAC3D/wC,KAAU/H,eAAe,uBAAwB1B,KAAKw6C,yBACtD/wC,KAAU/H,eAAe,2BAA4B1B,KAAKw6C,yBAC1D/wC,KAAU/H,eAAe,wBAAyB1B,KAAKw6C,yBACvD/wC,KAAU/H,eAAe,uBAAwB1B,KAAKw6C,yBACtD/wC,KAAU/H,eAAe,wBAAyB1B,KAAKw6C,0DA2BlD,IACG72B,EAAU3jB,KAAKyC,MAAfkhB,MACAwa,EAAan+B,KAAKiC,MAAlBk8B,SAER,OACI75B,EAAArB,EAAAC,cAACo1D,GAAD,CAAyBn6B,SAAUA,EAAUxa,MAAOA,EAAOpe,QAASvF,KAAK6T,aACrEvP,EAAArB,EAAAC,cAACq1D,GAAAt1D,EAAD,CAAUsb,MAAO25C,yDA/DGz1D,EAAOR,GAAO,IAClC2oB,EAAWnoB,EAAXmoB,OAGR,OAAIA,IAFwB3oB,EAApBo2D,gBAGG,CACHA,gBAAiBztC,EACjBA,OAAQA,EACRuT,SAAUg6B,EAA0BC,aAAaxtC,IAIlD,YAzByBrnB,IAAMC,WAAxC20D,GAwDKC,aAAe,SAAAxtC,GAClB,OAAQ/G,QAAQpa,KAAUmrD,QAAQhqC,KA+B3ButC,UC5CTK,WAAmB,CACrBvmD,QAAS,GACTwmD,UAAW,eAGTP,GAAY,CACdjmD,QAAS,IAGPymD,GAAsB,CACxBzmD,QAAS,IAGP0mD,eACF,SAAAA,EAAYl2D,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA24D,IACf94D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA64D,GAAAx4D,KAAAH,KAAMyC,KA4FV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqC7O,EAAKoC,MAAlC22D,yBACsB,OAE9B/4D,EAAK0K,mBACoB,KAAlBkE,EAAMC,QACb7O,EAAKu7C,aACoB,KAAlB3sC,EAAMC,SACb7O,EAAKg5D,kBAtGMh5D,EA0GnBykB,uBAAyB,SAAA9jB,GAAU,IACvB2J,EAAkD3J,EAAlD2J,QAASC,EAAyC5J,EAAzC4J,WAAYqa,EAA6BjkB,EAA7BikB,YAAaC,EAAgBlkB,EAAhBkkB,YAClC1f,EAAWnF,EAAK4C,MAAhBuC,OAFuB6J,EAGUhP,EAAKoC,MAAtC62D,EAHuBjqD,EAGvBiqD,iBAAkBC,EAHKlqD,EAGLkqD,WAE1B,GAAI/zD,IAAWmF,EAAf,CAEA,IAAMU,EAAUiB,KAAahF,IAAIqD,EAASC,GAC1C,GAAKS,EAAL,CAKA,GAHAmuD,YAAuB,CAACnuD,IAELouD,aAAex0C,KAAiBw0C,aAAev0C,GAClD,CACZ,GACI7kB,EAAKotD,QAAQtmD,QAAU,IACtB9G,EAAKq5D,kBACFv0C,aAAQva,EAAYvK,EAAKotD,QAAQ,GAAGrsD,GAAIf,EAAKotD,QAAQptD,EAAKotD,QAAQtmD,OAAS,GAAG/F,KACpF,CAGE,IAFA,IAAIu4D,GAAW,EACXlM,EAAU,GACL/lD,EAAI,EAAGA,EAAIrH,EAAKotD,QAAQtmD,OAAQO,IACjCrH,EAAKotD,QAAQ/lD,GAAGtG,GAAKwJ,EACrB6iD,EAAQtkD,KAAK9I,EAAKotD,QAAQ/lD,KAErBiyD,IACDA,GAAW,EACXlM,EAAQtkD,KAAKkC,IAEjBoiD,EAAQtkD,KAAK9I,EAAKotD,QAAQ/lD,KAGlCrH,EAAKotD,QAAUA,EAGnB,IAAMroC,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IACnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCm0C,WAAYA,EAAa,IAKjC,IADuBE,aAAex0C,IAAgBw0C,aAAev0C,GAClD,CACf,IAAI40C,EAAaz5D,EAAKotD,QAGtB,GAFAptD,EAAKotD,QAAUptD,EAAKotD,QAAQ99C,OAAO,SAAApO,GAAC,OAAIA,EAAEH,KAAOwJ,IAE7C0uD,IAAqB1uD,EAAY,CACjC,IAAMmvD,EAAY,IAAIvyD,IACtBuyD,EAAUtrD,IAAI7D,EAAYA,GAE1BvK,EAAK25D,gBAAgBF,EAAYC,GACjC15D,EAAK6C,SAAS,CACVq2D,WAAY3gB,KAAKhC,IAAI2iB,EAAa,EAAG,SAEtC,CACH,IAAMn0C,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IACnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCm0C,WAAY3gB,KAAKhC,IAAI2iB,EAAa,EAAG,UAvKlCl5D,EA6KnBylB,uBAAyB,SAAA9kB,GAAU,IACvB2J,EAAuC3J,EAAvC2J,QAAS0D,EAA8BrN,EAA9BqN,YAAaggD,EAAiBrtD,EAAjBqtD,aACtB7oD,EAAWnF,EAAK4C,MAAhBuC,OAFuByL,EAGU5Q,EAAKoC,MAAtC62D,EAHuBroD,EAGvBqoD,iBAAkBC,EAHKtoD,EAGLsoD,WAE1B,GAAKlL,GACD7oD,IAAWmF,EAAf,CAEA,IAAMovD,EAAY1rD,EAAY4rD,OAAO,SAACC,EAAaC,GAE/C,OADAD,EAAYzrD,IAAI0rD,EAAWA,GACpBD,GACR,IAAI1yD,KAEDsyD,EAAaz5D,EAAKotD,QACpB2M,EAAeN,EAAW3yD,OAE9B9G,EAAKotD,QAAUptD,EAAKotD,QAAQ99C,OAAO,SAAApO,GAAC,OAAKw4D,EAAUpyD,IAAIpG,EAAEH,MACzDg5D,GAAgB/5D,EAAKotD,QAAQtmD,OAE7B9G,EAAK6C,SAAS,CAAEq2D,WAAY3gB,KAAKhC,IAAI2iB,EAAaa,EAAc,KAE3D/5D,EAAKotD,QAAQtmD,OAKd4yD,EAAUpyD,IAAI2xD,IACdj5D,EAAK25D,gBAAgBF,EAAYC,GALjCM,aAAsB,QAnMXh6D,EA4MnBslB,mBAAqB,SAAA3kB,GAAU,IACnBwE,EAAWnF,EAAK4C,MAAhBuC,OADmBugB,EAEc1lB,EAAKoC,MAAtC62D,EAFmBvzC,EAEnBuzC,iBAAkBC,EAFCxzC,EAEDwzC,WAElBluD,EAAYrK,EAAZqK,QACR,GAAKA,GACAouD,aAAepuD,EAAQmB,UAExBnB,EAAQV,UAAYnF,GACnBnF,EAAKq5D,iBAAV,CAEAr5D,EAAKotD,QAAU,CAACpiD,GAASlG,OAAO9E,EAAKotD,SACrC,IAAMroC,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAEnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCm0C,WAAYA,EAAa,MA7Ndl5D,EAiOnBi6D,UAAY,SAAC90D,EAAQob,GACjB,IAAMvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,KAFU,IAIvBmB,EAAYnB,EAAZmB,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACH1J,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAzC,EA8PnBk6D,YA9PmBj6D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA8PL,SAAAC,IAAA,IAAA7C,EAAAE,EAAAob,EAAAjR,EAAA3M,EAAAs2D,EAAAl0C,EAAAo1C,EAAAC,EAAA1oB,EAAA2oB,EAAA,OAAAzyD,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UAAAxD,EACoBjF,EAAK4C,MAA3BuC,EADEF,EACFE,OAAQob,EADNtb,EACMsb,UAEVjR,EAAStP,EAAKi6D,UAAU90D,EAAQob,GAElC5d,EAAS,CACTF,QAAS,WACT4jB,SAAU,GACVS,YAAa,IAEbxX,EAVM,CAAApF,EAAAzB,KAAA,eAAAyB,EAAAzB,KAAA,EAWS/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAO,GACPC,eAAgB,EAChBC,gBAAiBpG,EACjBqG,QAAS0zC,IACTzxD,MAAO,EAAIyxD,IACXhrD,OAAQA,IAnBN,OAWN3M,EAXMuH,EAAAV,KAAA,UAuBVisB,aAAwB9yB,EAAQ3C,EAAKotD,SACrCnhD,KAAa8a,SAASpkB,EAAO0jB,UAE7BrmB,EAAKotD,QAAUzqD,EAAO0jB,SACtBrmB,EAAKq5D,iBAA8C,IAA3B12D,EAAO0jB,SAASvf,OAEhCmyD,EAAqBj5D,EAAKoC,MAA1B62D,iBACFl0C,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAEnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,MAG7B,IAAXA,EArCM,CAAA7a,EAAAzB,KAAA,SAsCNzI,EAAKotD,QAAU,CAACnhD,KAAahF,IAAI9B,EAAQ8zD,IACzCsB,YAA0B,EAAGv6D,EAAKotD,SAvC5BljD,EAAAzB,KAAA,oBAyCN8xD,YAA0Bx1C,EAAO/kB,EAAKotD,SAEhC99C,EAAStP,EAAKi6D,UAAU90D,EAAQob,GA3ChC,CAAArW,EAAAzB,KAAA,gBAAAyB,EAAAC,OAAA,kBA8CAiwD,EAAW,KACb1oB,EAAQ,EA/CN2oB,EAAAzyD,EAAAxE,EAAAyE,KAAA,SAAAwyD,IAAA,IAAA13D,EAAAs2D,EAAAl0C,EAAA,OAAAnd,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmB/G,KAAgBc,KAAK,CACtCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAO,GACPC,eAAgB,EAChBC,gBAAiB3mB,EAAKotD,QAAQtmD,OAAS,EAAI9G,EAAKotD,QAAQ,GAAGrsD,GAAK,EAChE6lB,QAAS,GACT/d,MAAO,IACPyG,OAAQA,IAzDV,OAiDI3M,EAjDJ4F,EAAAiB,KA2DFkoC,GAAS/uC,EAAO0jB,SAASvf,OAEzB2uB,aAAwB9yB,EAAQ3C,EAAKotD,SACrCnhD,KAAa8a,SAASpkB,EAAO0jB,UAE7BrmB,EAAKotD,QAAUzqD,EAAO0jB,SAASvhB,OAAO9E,EAAKotD,SAC3CptD,EAAKq5D,iBAA8C,IAA3B12D,EAAO0jB,SAASvf,OAEhCmyD,EAAqBj5D,EAAKoC,MAA1B62D,iBACFl0C,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAEnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCs0C,iBAAkBr5D,EAAKq5D,iBACvBH,WAAYv2D,EAAOmkB,cA1ErB,yBAAAve,EAAAwB,SAAAswD,KAAA,WAgDEr6D,EAAKq5D,oBAAoB3nB,EAAQ0oB,GAhDnC,CAAAlwD,EAAAzB,KAAA,gBAAAyB,EAAAswD,cAAAH,IAAA,iBAAAnwD,EAAAzB,KAAA,kCAAAyB,EAAAH,SAAAjC,MA9PK9H,EA8UnB0K,YAAc,WACVsvD,aAAsB,MADN,IAGRf,EAAqBj5D,EAAKoC,MAA1B62D,iBACFl0C,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,KACpC,IAAXl0C,GACA01C,YAAgC11C,EAAO/kB,EAAKotD,UApVjCptD,EAwVnB06D,cAAgB,SAAChY,EAAW13C,GACxB,GAAKA,EAAL,CADoC,IAE5BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAK2hD,EAAL,CAJoC,IAMjBtZ,EAAoBsZ,EAA/BA,UAAiBiY,EAAcjY,EAAdiY,UACzB,GAAKvxB,EAAL,CAPoC,IASxBre,EAAWqe,EAAfroC,GAER65D,YAAexxB,EAAMuxB,GAAa55D,EAAIiK,EAAS,kBAAMpB,KAAUixD,oBAAoBvwD,EAASvJ,EAAIgqB,SAnWjF/qB,EAsWnB86D,aAAe,SAAChrD,EAAU9E,GACtB,GAAKA,EAAL,CADkC,IAE1BV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAK+O,EAAL,CAJkC,IAMhBs5B,EAAoBt5B,EAA9BA,SAAgB6qD,EAAc7qD,EAAd6qD,UACxB,GAAKvxB,EAAL,CAPkC,IAStBre,EAAWqe,EAAfroC,GAER65D,YAAexxB,EAAMuxB,GAAa55D,EAAIiK,EAAS,kBAAMpB,KAAUmxD,mBAAmBzwD,EAASvJ,EAAIgqB,SAjXhF/qB,EAoXnBg7D,UAAY,SAAC7uC,EAAOnhB,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAKorB,EAAL,CAJ4B,IAMbid,EAAoBjd,EAA3BA,MAAawuC,EAAcxuC,EAAdwuC,UACrB,GAAKvxB,EAAL,CAP4B,IAShBre,EAAWqe,EAAfroC,GAER65D,YAAexxB,EAAMuxB,GAAa55D,EAAIiK,EAAS,kBAAMpB,KAAUqxD,gBAAgB3wD,EAASvJ,EAAIgqB,SA/X7E/qB,EAkYnBk7D,UAAY,SAAC9uD,EAAOpB,GAChB,GAAKA,EAAL,CAD4B,IAEpBV,EAAgBU,EAAhBV,QAASvJ,EAAOiK,EAAPjK,GAEjB,GAAKqL,EAAL,CAEA,IAAMI,EAAYye,aAAQ7e,EAAMC,MAAO8uD,KACvC,GAAK3uD,EAAL,CAP4B,IASb48B,EAAS58B,EAAhBJ,MACR,GAAKg9B,EAAL,CAV4B,IAYhBre,EAAWqe,EAAfroC,GAER65D,YAAexxB,EAAMA,EAAKroC,GAAK,OAAQiK,EAAS,kBAAMpB,KAAU8gC,gBAAgBpgC,EAASvJ,EAAIgqB,UAhZ9E/qB,EAmZnBo7D,WAAa,WAAM,IACPj2D,EAAWnF,EAAK4C,MAAhBuC,OACA8zD,EAAqBj5D,EAAKoC,MAA1B62D,iBAEFjuD,EAAUiB,KAAahF,IAAI9B,EAAQ8zD,GACzC,GAAKjuD,EAAL,CALe,IAOPmB,EAAYnB,EAAZmB,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbu2C,EAAcv2C,EAAdu2C,UAER1iD,EAAK06D,cAAchY,EAAW13C,GAC9B,MAEJ,IAAK,yBAA0B,IACnBoB,EAAUD,EAAVC,MAERpM,EAAKk7D,UAAU9uD,EAAOpB,GACtB,MAEJ,IAAK,kBAAmB,IACZ8E,EAAa3D,EAAb2D,SAER9P,EAAK86D,aAAahrD,EAAU9E,GAC5B,MAEJ,IAAK,eAAgB,IACToB,EAAUD,EAAVC,MAERpM,EAAKk7D,UAAU9uD,EAAOpB,GACtB,MAEJ,IAAK,cAAe,IACR4vC,EAAazuC,EAAbyuC,SACR,IAAKA,EAAU,OAFC,IAIR8H,EAAsC9H,EAAtC8H,UAAW5yC,EAA2B8qC,EAA3B9qC,SAAU1D,EAAiBwuC,EAAjBxuC,MAAO+f,EAAUyuB,EAAVzuB,MAEpC,GAAIu2B,EAEA,YADA1iD,EAAK06D,cAAchY,EAAW13C,GAIlC,GAAI8E,EAEA,YADA9P,EAAK86D,aAAahrD,EAAU9E,GAIhC,GAAIoB,EAEA,YADApM,EAAKk7D,UAAU9uD,EAAOpB,GAI1B,GAAImhB,EAEA,YADAnsB,EAAKg7D,UAAU7uC,EAAOnhB,GAG1B,MAEJ,IAAK,eAAgB,IACTmhB,EAAUhgB,EAAVggB,MAERnsB,EAAKg7D,UAAU7uC,EAAOnhB,MApdfhL,EA0dnBwgB,cAAgB,WAAM,IACVrb,EAAWnF,EAAK4C,MAAhBuC,OACA8zD,EAAqBj5D,EAAKoC,MAA1B62D,iBAERv3D,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CACFzF,OAAQA,EACR8E,WAAY,CAACgvD,OAleNj5D,EAuenB0gB,aAAe,WACX1gB,EAAKq7D,oBAxeUr7D,EAigBnBw5D,iBAAmB,SAAAz0C,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP/kB,EAAKotD,QAAQtmD,QArgBjB9G,EAwgBnBg5D,eAAiB,SAAApqD,GACTA,GACAA,EAAMuS,kBAFY,IAKd83C,EAAqBj5D,EAAKoC,MAA1B62D,iBAEFn1B,EADQ9jC,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IACzB,EAE1B,OAAOj5D,EAAKs7D,UAAUx3B,EAAW,WACzBA,IAAc9jC,EAAKotD,QAAQtmD,OAAS,GACpC9G,EAAKu7D,kBAnhBEv7D,EAwhBnBu7D,aAxhBmBt7D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwhBJ,SAAAmC,IAAA,IAAAuC,EAAApH,EAAAob,EAAA04C,EAAA3pD,EAAA3M,EAAAoiB,EAAA,OAAAnd,EAAAxE,EAAAkF,KAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,UAAA8D,EACmBvM,EAAK4C,MAA3BuC,EADGoH,EACHpH,OAAQob,EADLhU,EACKgU,UACR04C,EAAqBj5D,EAAKoC,MAA1B62D,iBAEF3pD,EAAStP,EAAKi6D,UAAU90D,EAAQob,GAElC5d,EAAS,CACTF,QAAS,WACT4jB,SAAU,GACVS,YAAa,IAEbxX,EAXO,CAAAuY,EAAApf,KAAA,eAAAof,EAAApf,KAAA,EAYQ/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAO,GACPC,eAAgB,EAChBC,gBAAiBsyC,EACjBryC,OAAQ,EACR/d,MAAOyxD,IACPhrD,OAAQA,IApBL,OAYP3M,EAZOklB,EAAAre,KAAA,OAwBXisB,aAAwB9yB,EAAQ3C,EAAKotD,SACrCnhD,KAAa8a,SAASpkB,EAAO0jB,UAE7BrmB,EAAKotD,QAAUptD,EAAKotD,QAAQtoD,OAAOnC,EAAO0jB,UAEpCtB,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAEnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCm0C,WAAYv2D,EAAOmkB,cAlCZ,yBAAAe,EAAA9d,SAAAC,MAxhBIhK,EA8jBnBu5D,aAAe,SAAAx0C,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL/kB,EAqkBnBu7C,WAAa,SAAA3sC,GACLA,GACAA,EAAMuS,kBAFQ,IAKV83C,EAAqBj5D,EAAKoC,MAA1B62D,iBAEFn1B,EADQ9jC,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IACzB,EAE1B,OAAOj5D,EAAKs7D,UAAUx3B,EAAW,WACX,IAAdA,GACA9jC,EAAKw7D,cAhlBEx7D,EAqlBnBw7D,SArlBmBv7D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAqlBR,SAAA8f,IAAA,IAAAhX,EAAAxL,EAAAob,EAAA04C,EAAA3pD,EAAA3M,EAAAoiB,EAAA,OAAAnd,EAAAxE,EAAAkF,KAAA,SAAA8f,GAAA,cAAAA,EAAA5f,KAAA4f,EAAA3f,MAAA,UAAAkI,EACuB3Q,EAAK4C,MAA3BuC,EADDwL,EACCxL,OAAQob,EADT5P,EACS4P,UACR04C,EAAqBj5D,EAAKoC,MAA1B62D,iBAEF3pD,EAAStP,EAAKi6D,UAAU90D,EAAQob,GAElC5d,EAAS,CACTF,QAAS,WACT4jB,SAAU,GACVS,YAAa,IAEbxX,EAXG,CAAA8Y,EAAA3f,KAAA,eAAA2f,EAAA3f,KAAA,EAYY/G,KAAgBc,KAAK,CAChCC,QAAS,qBACT6H,QAASnF,EACTshB,MAAO,GACPC,eAAgB,EAChBC,gBAAiBsyC,EACjBryC,QAAS0zC,IACTzxD,MAAOyxD,IAAoB,EAC3BhrD,OAAQA,IApBT,OAYH3M,EAZGylB,EAAA5e,KAAA,OAwBPisB,aAAwB9yB,EAAQ3C,EAAKotD,SACrCnhD,KAAa8a,SAASpkB,EAAO0jB,UAE7BrmB,EAAKq5D,iBAA8C,IAA3B12D,EAAO0jB,SAASvf,OACxC9G,EAAKotD,QAAUzqD,EAAO0jB,SAASvhB,OAAO9E,EAAKotD,SAErCroC,EAAQ/kB,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAEnDj5D,EAAK6C,SAAS,CACV02D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,GACxCs0C,iBAAkBr5D,EAAKq5D,iBACvBH,WAAYv2D,EAAOmkB,cApChB,yBAAAsB,EAAAre,SAAA4d,MArlBQ3nB,EA6nBnBs7D,UAAY,SAACv2C,EAAOY,GAChB,QAAIZ,EAAQ,OACRA,GAAS/kB,EAAKotD,QAAQtmD,UAE1B9G,EAAK6C,SACD,CACIo2D,iBAAkBj5D,EAAKotD,QAAQroC,GAAOhkB,GACtCw4D,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,IAE5CY,GAGJ40C,YAA0Bx1C,EAAO/kB,EAAKotD,UAC/B,KA3oBQptD,EA8oBnB25D,gBAAkB,SAACF,EAAYC,GAK3B,IALyC,IACjCT,EAAqBj5D,EAAKoC,MAA1B62D,iBAEFl0C,EAAQ00C,EAAWz0C,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,IAC7CwC,EAAS,EACJp0D,EAAI0d,EAAQ,EAAG1d,GAAK,EAAGA,IAC5B,GAAIqyD,IAAcA,EAAUpyD,IAAImyD,EAAWpyD,GAAGtG,IAAK,CAC/C06D,EAAShC,EAAWpyD,GAAGtG,GACvB,MAGR,IAAK06D,EACD,IAAK,IAAIp0D,EAAI0d,EAAQ,EAAG1d,EAAIoyD,EAAW3yD,OAAQO,IAC3C,GAAIqyD,IAAcA,EAAUpyD,IAAImyD,EAAWpyD,GAAGtG,IAAK,CAC/C06D,EAAShC,EAAWpyD,GAAGtG,GACvB,MAKZ,GAAK06D,EAAL,CAEA,IAAM33B,EAAY9jC,EAAKotD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAO06D,IAEvD,OAAOz7D,EAAKs7D,UAAUx3B,EAAW,WACX,IAAdA,EACA9jC,EAAKw7D,WACE13B,IAAc9jC,EAAKotD,QAAQtmD,OAAS,GAC3C9G,EAAKu7D,mBA1qBEv7D,EA+qBnBq7D,iBAAmB,WACfr7D,EAAK6C,SAAS,CAAEk2D,0BAA0B,KAhrB3B/4D,EAmrBnB07D,kBAAoB,WAChB17D,EAAK6C,SAAS,CAAEk2D,0BAA0B,KAprB3B/4D,EAurBnBg7B,WAAa,WACTh7B,EAAK6C,SAAS,CAAEk2D,0BAA0B,IAD3B,IAGP5zD,EAAWnF,EAAK4C,MAAhBuC,OAHO6jB,EAI4BhpB,EAAKoC,MAAxC62D,EAJOjwC,EAIPiwC,iBAAkB0C,EAJX3yC,EAIW2yC,aAEpB3wD,EAAUiB,KAAahF,IAAI9B,EAAQ8zD,GACzC,GAAKjuD,EAAL,CAPe,IASP4W,EAA+D5W,EAA/D4W,6BAA8BjB,EAAiC3V,EAAjC2V,8BACjBiB,GAAgCjB,IAGrDjf,KAAgBc,KAAK,CACjBC,QAAS,iBACT6H,QAASnF,EACT6I,YAAa,CAACirD,GACdn4C,OAAQH,GAAgCg7C,MAxsB7B37D,EA4sBnB47D,yBAA2B,SAAAhtD,GACvB5O,EAAK6C,SAAS,CAAE84D,aAAc/sD,EAAM+nB,OAAOne,WA7sB5BxY,EAgtBnB67D,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuB97D,EAAKoC,MAApBkE,YAIJ,IAAK,uBACDw1D,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB97D,EAAK6C,SAAS,CACVyD,WAAYw1D,KApuBD97D,EAwuBnB+7D,kBAAoB,WAChB,GAAK/7D,EAAKg8D,WAAV,CADsB,IAGdpvD,EAAY5M,EAAKg8D,WAAjBpvD,QACR,GAAKA,EAAL,CAJsB,IAOhBqvD,EADYj8D,EAAKoC,MAAf6zD,MACkB,EAAI,EAAI,GAElCj2D,EAAK6C,SAAS,CAAEozD,MAAOgG,IAEvBrvD,EAAQopD,YAAYiG,MAnvBLj8D,EAsvBnBkyC,eAAiB,SAAC/sC,EAAQob,GACtB,IAAMvV,EAAUiB,KAAahF,IAAI9B,EAAQob,GACzC,IAAKvV,EAAS,OAAO,EAFe,IAI5BkB,EAA8BlB,EAA9BkB,iBAAkBC,EAAYnB,EAAZmB,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOD,IA/vBflM,EAAKg8D,WAAat4D,IAAM+M,YACxBzQ,EAAKotD,QAAU,GAJA,IAAA9xC,EAMetb,EAAK4C,MAA3BuC,EANOmW,EAMPnW,OAAQob,EANDjF,EAMCiF,UAND,OAQfvgB,EAAKoC,MAAQ,CACT6zD,MAAO,EACP3vD,WAAY,uBACZqP,WAAYxQ,EACZ28C,cAAevhC,EACf04C,iBAAkB14C,EAClBg5C,cAAc,EACdC,kBAAkB,EAClBT,0BAA0B,EAC1B4C,cAAc,GAjBH37D,qFAqBGsT,EAAWC,GAAW,IAAAkI,EACVtb,KAAKyC,MAA3BuC,EADgCsW,EAChCtW,OAAQob,EADwB9E,EACxB8E,UADwBs1B,EAWpC11C,KAAKiC,MARLkE,EAHoCuvC,EAGpCvvC,WACA2yD,EAJoCpjB,EAIpCojB,iBACAF,EALoCljB,EAKpCkjB,yBACAM,EANoCxjB,EAMpCwjB,iBACAE,EAPoC1jB,EAOpC0jB,aACAC,EARoC3jB,EAQpC2jB,iBACAvD,EAToCpgB,EASpCogB,MACAiD,EAVoCrjB,EAUpCqjB,WAGJ,OAAI3lD,EAAUjN,aAAeA,IAIzBgN,EAAUnO,SAAWA,IAIrBmO,EAAUiN,YAAcA,IAIxBhN,EAAU0lD,mBAAqBA,IAI/B1lD,EAAU2oD,kBAAoB1C,IAI9BjmD,EAAUgmD,eAAiBA,IAI3BhmD,EAAU8lD,mBAAqBA,IAI/B9lD,EAAU2lD,aAAeA,IAIzB3lD,EAAUwlD,2BAA6BA,GAIvCxlD,EAAU0iD,QAAUA,sDAQxB91D,KAAK+5D,cAELpqD,SAASy7C,iBAAiB,UAAWprD,KAAKuR,WAAW,GACrDzF,KAAauH,GAAG,uBAAwBrT,KAAKslB,wBAC7CxZ,KAAauH,GAAG,mBAAoBrT,KAAKmlB,oBACzCrZ,KAAauH,GAAG,uBAAwBrT,KAAKskB,uEAI7C3U,SAAS27C,oBAAoB,UAAWtrD,KAAKuR,WAAW,GACxDzF,KAAapK,eAAe,uBAAwB1B,KAAKslB,wBACzDxZ,KAAapK,eAAe,mBAAoB1B,KAAKmlB,oBACrDrZ,KAAapK,eAAe,uBAAwB1B,KAAKskB,yDA6qBpD,IAAAtI,EACiBhc,KAAKyC,MAAnBuC,EADHgX,EACGhX,OAAQ2F,EADXqR,EACWrR,EADXqxD,EAYDh8D,KAAKiC,MATLkE,EAHC61D,EAGD71D,WACA2yD,EAJCkD,EAIDlD,iBACAF,EALCoD,EAKDpD,yBACA4C,EANCQ,EAMDR,aACAtC,EAPC8C,EAOD9C,iBACAE,EARC4C,EAQD5C,aACAC,EATC2C,EASD3C,iBACAvD,EAVCkG,EAUDlG,MACAiD,EAXCiD,EAWDjD,WAGAn0C,GAAS,EACTm0C,GAAcG,IACdt0C,EAAQ5kB,KAAKitD,QAAQpoC,UAAU,SAAA9jB,GAAC,OAAIA,EAAEH,KAAOk4D,KAEjD,IAAMmB,EAAW7hB,KAAKhC,IAAIp2C,KAAKitD,QAAQtmD,OAAQoyD,GAEzCluD,EAAUiB,KAAahF,IAAI9B,EAAQ8zD,GACjCt4C,EAA+D3V,EAA/D2V,6BAA8BiB,EAAiC5W,EAAjC4W,6BAEhC+vB,EAAehxB,GAAgCiB,EAC/CswB,EAAiB/xC,KAAK+xC,eAAe/sC,EAAQ8zD,GAE/CmD,EAA4B,GAE5BA,EADAxF,aAAezxD,EAAQ8zD,GACKnuD,EAAE,yBACvBgsD,aAAmB3xD,EAAQ8zD,GACNnuD,EAAE,uBAEFA,EAAE,yBAElC,IAAMuxD,EAAqBtD,EACvBt0D,EAAArB,EAAAC,cAAC0N,EAAA3N,EAAD,CACIwf,mBAAoB,EACpB5R,KAAM+nD,EACN9nD,QAAS9Q,KAAKu7D,kBACdxqD,kBAAgB,qBAChBzM,EAAArB,EAAAC,cAACgO,EAAAjO,EAAD,CAAarC,GAAG,qBAAqB+J,EAAE,YACvCrG,EAAArB,EAAAC,cAACwf,GAAAzf,EAAD,KACIqB,EAAArB,EAAAC,cAACyf,GAAA1f,EAAD,KAAoBg5D,GACnBz7C,GACGlc,EAAArB,EAAAC,cAAC0f,GAAA3f,EAAD,CACI8f,MAAOpY,EAAE,gBACTkY,QACIve,EAAArB,EAAAC,cAAC4f,GAAA7f,EAAD,CAAUwI,MAAM,UAAUpH,MAAM,YAAY+T,SAAUpY,KAAKy7D,2BAE/DpjD,QAASmjD,KAIrBl3D,EAAArB,EAAAC,cAACyO,EAAA1O,EAAD,KACIqB,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAKu7D,kBAAmB9vD,MAAM,WAC1Cd,EAAE,WAEPrG,EAAArB,EAAAC,cAAC0O,EAAA3O,EAAD,CAAQsC,QAASvF,KAAK66B,WAAYpvB,MAAM,WACnCd,EAAE,SAIf,KA9DC0pD,EAgEyBI,YAAazvD,EAAQ8zD,EAAkBkC,KAhEhE1G,EAAAx0D,OAAAwJ,EAAA,EAAAxJ,CAAAu0D,EAAA,GAgEiBprB,GAhEjBqrB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkEC1pC,EAASqe,EAAOA,EAAKroC,GAAK,EAC5B+iB,EAAQhZ,EAAE,eASd,OARI8rD,aAAezxD,EAAQ8zD,GACvBn1C,EAAQhZ,EAAE,eACHgsD,aAAmB3xD,EAAQ8zD,GAClCn1C,EAAQhZ,EAAE,aACH6pD,aAAgBxvD,EAAQ8zD,KAC/Bn1C,EAAQ,IAIRrf,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAW,eAAgBc,IACtC+1D,EACD53D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBoC,QAASvF,KAAK64D,gBAChDv0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACfmB,EAAArB,EAAAC,cAACi5D,GAAD,CAAmBh+B,UAAWk7B,EAAkBtB,MAAI,EAACxyD,QAASvF,KAAK64D,gBAC/Dv0D,EAAArB,EAAAC,cAACk5D,GAAAn5D,EAAD,CAAoBm+B,SAAS,QAAQ7iB,MAAOm6C,OAIpDp0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACm5D,GAAD,CACIlrD,IAAKnR,KAAK67D,WACV72D,OAAQA,EACRob,UAAW04C,EACXzrD,KAAM2tD,IACNz1D,QAASvF,KAAK64D,kBAItBv0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAACi5D,GAAD,CAAmB52D,QAASvF,KAAKuK,aAC7BjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAWm+B,SAAS,QAAQ7iB,MAAOm6C,MAEvCp0D,EAAArB,EAAAC,cAACi5D,GAAD,CAAmBh+B,UAAWi7B,EAAcrB,MAAI,EAACxyD,QAASvF,KAAKo7C,YAC3D92C,EAAArB,EAAAC,cAACo5D,GAAAr5D,EAAD,CAAkBm+B,SAAS,QAAQ7iB,MAAOm6C,QAItDp0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACq5D,GAAD,CAAoBv3D,OAAQA,EAAQob,UAAW04C,IAC/Cx0D,EAAArB,EAAAC,cAACs5D,GAAD,CACI74C,MAAOA,EACP9O,SAAUolD,GAAYr1C,GAAS,EAArB,GAAAjgB,OAA4Bs1D,EAAWr1C,EAAvC,QAAAjgB,OAAmDs1D,GAAa,OAE7EzF,aAAgBxvD,EAAQ8zD,IACrBx0D,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAACo1D,GAAD,CACI30C,MAAOhZ,EAAE,eACT0N,QAASy9C,EAAQ,EACjBvwD,QAASvF,KAAK47D,mBACdt3D,EAAArB,EAAAC,cAACu5D,GAAAx5D,EAAD,CAAqBsb,MAAO25C,MAEhC5zD,EAAArB,EAAAC,cAACo1D,GAAD,CACI30C,MAAOhZ,EAAE,yBACTpF,QAASvF,KAAK07D,oBACdp3D,EAAArB,EAAAC,cAACw5D,GAAAz5D,EAAD,CAAkBsb,MAAO25C,OAIrC5zD,EAAArB,EAAAC,cAACy5D,GAAD,CAA2Bh5C,MAAOhZ,EAAE,QAASigB,OAAQA,EAAQrlB,QAASvF,KAAKi7D,aAC3E32D,EAAArB,EAAAC,cAACo1D,GAAD,CACI30C,MAAOhZ,EAAE,WACTwzB,UAAW4T,EACXxsC,QAASvF,KAAKqgB,eACd/b,EAAArB,EAAAC,cAACgjC,GAAAjjC,EAAD,CAAWsb,MAAOi6C,MAEtBl0D,EAAArB,EAAAC,cAACo1D,GAAD,CAAyB30C,MAAOhZ,EAAE,UAAWwzB,UAAWqT,EAAcjsC,QAASvF,KAAKugB,cAChFjc,EAAArB,EAAAC,cAAC05D,GAAA35D,EAAD,CAAYsb,MAAO25C,eA/4BjB30D,IAAMC,WA45BjBgP,iBAAkBmmD,IC13BlBkE,uBA9FX,SAAAA,EAAYp6D,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAA68D,IACfh9D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAA+8D,GAAA18D,KAAAH,KAAMyC,KA0CVq6D,uBAAyB,SAAAt8D,GAAU,IAAAsE,EACLjF,EAAK4C,MAAvBuC,EADuBF,EACvBE,OAAQiH,EADenH,EACfmH,MAEhB,GAAIjH,IAAWxE,EAAOwE,QAAUiH,EAAM8wD,IAAIn8D,KAAOJ,EAAOoqB,OAAQ,CAC5D,IAAMqe,EAAOx/B,KAAU3C,IAAItG,EAAOoqB,SAAW/qB,EAAKoC,MAAMgnC,KACxDppC,EAAK6C,SAAS,CACVumC,KAAMA,MAjDCppC,EAsDnBm9D,uBAAyB,SAAAx8D,GAAU,IAAAyK,EACLpL,EAAK4C,MAAvBuC,EADuBiG,EACvBjG,OAAQiH,EADehB,EACfgB,MAGhB,GAFe4T,YAAc7a,KAEdxE,EAAOoS,QAAU3G,EAAM8wD,IAAIn8D,KAAOJ,EAAOoqB,OAAQ,CAC5D,IAAMqe,EAAOx/B,KAAU3C,IAAItG,EAAOoqB,SAAW/qB,EAAKoC,MAAMgnC,KACxDppC,EAAK6C,SAAS,CACVumC,KAAMA,MA7DCppC,EAkEnB+1D,mBAAqB,SAAAnnD,GACbA,GAAOA,EAAMuS,kBAEjBnhB,EAAK4C,MAAM8C,QAAQkJ,IArEJ,IAAArC,EAGWvM,EAAK4C,MAAvBuC,EAHOoH,EAGPpH,OAAQiH,EAHDG,EAGCH,MAELg9B,EAASh9B,EAAd8wD,IALS,OAMf9zB,EAAOx/B,KAAU3C,IAAImiC,EAAKroC,KAAOqoC,EAEjCppC,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZi4D,UAAWhxD,EACXqB,MAAO4vD,IACP3vD,OAAQ2vD,IACRj0B,KAAMA,GAbKppC,mFAkCf4J,KAAU4J,GAAG,uBAAwBrT,KAAK88D,wBAC1CrzD,KAAU4J,GAAG,uBAAwBrT,KAAKg9D,uEAI1CvzD,KAAU/H,eAAe,uBAAwB1B,KAAK88D,wBACtDrzD,KAAU/H,eAAe,uBAAwB1B,KAAKg9D,yDAgCjD,IAAAnuD,EAC2B7O,KAAKiC,MAAdgnC,GADlBp6B,EACGvB,MADHuB,EACUtB,OADVsB,EACkBo6B,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMmB,EAAO3gC,KAAUmrD,QAAQ3rB,EAAKroC,KAAOqoC,EAAKmB,KAC1Crf,EAAMthB,KAAU4sD,WAAWjsB,GAGjC,OADAl8B,QAAQC,IAAI,cAAe4c,GAEvBzmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BAA6B4nB,IAAKA,EAAKsa,IAAI,GAAG9/B,QAASvF,KAAK41D,qBAC3EtxD,EAAArB,EAAAC,cAACs0D,GAAA,EAAD,CAAcvuB,KAAMA,wDAlEAxmC,EAAOR,GAAO,IAClC+C,EAAkBvC,EAAlBuC,OAAQiH,EAAUxJ,EAAVwJ,MAEhB,OAAIjH,IAAW/C,EAAMuT,YAAcvJ,IAAUhK,EAAMg7D,UACxC,CACHznD,WAAYxQ,EACZi4D,UAAWhxD,EACXqB,MAAO4vD,IACP3vD,OAAQ2vD,IACRj0B,KAAMh9B,EAAM8wD,KAIb,YA/ByBx5D,IAAMC,YCsC/B25D,eAhCX,SAAAA,EAAY16D,GAAQ,OAAA3C,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAm9D,GAAAr9D,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAq9D,GAAAh9D,KAAAH,KACVyC,0EAGD,IAAAqC,EACoB9E,KAAKyC,MAAtBuC,EADHF,EACGE,OAAQ0sB,EADX5sB,EACW4sB,KAEhB,OACIptB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,wBACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAACsC,EAAA,EAAD,CAAUR,OAAQA,EAAQ+Q,mBAAmB,IAC7CzR,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gCACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oBACXmB,EAAArB,EAAAC,cAACgjD,GAAA,EAAD,CAAelhD,OAAQA,KAE1B0sB,GACGptB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,yBACXmB,EAAArB,EAAAC,cAAA,YAAOwuB,cAlBCnuB,IAAMC,WCkBxCg1D,GAAmB,CACrBvmD,QAAS,GACTxG,MAAO,QACPgtD,UAAW,cAGT2E,GAAkB,CACpBnrD,QAAS,GACTxG,MAAO,SAGLitD,GAAsB,CACxBzmD,QAAS,GACTxG,MAAO,SAGL4xD,eACF,SAAAA,EAAY56D,GAAO,IAAA5C,EAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAq9D,IACfx9D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAu9D,GAAAl9D,KAAAH,KAAMyC,KA4EV8O,UAAY,SAAA9C,GACR,GAAsB,KAAlBA,EAAMC,QAAgB,CAEtB,GADqC7O,EAAKoC,MAAlC22D,yBACsB,OAE9B/4D,EAAK0K,mBACoB,KAAlBkE,EAAMC,QACb7O,EAAKg5D,iBACoB,KAAlBpqD,EAAMC,SACb7O,EAAKu7C,cAtFMv7C,EA0FnBk6D,YA1FmBj6D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA0FL,SAAAC,IAAA,IAAA3C,EAAAxC,EAAA,OAAAiF,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFtD,EAAWnF,EAAK4C,MAAhBuC,OAEHqR,YAAcrR,GAHT,CAAAoD,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EAKW/G,KAAgBc,KAAK,CACtCC,QAAS,uBACTsG,QAASiX,YAAc7a,GACvByhB,OAAQ,EACR/d,MAAO,MATD,OAKJlG,EALI4F,EAAAiB,KAYVxJ,EAAKotD,QAAUzqD,EAAO86D,OACtBz9D,EAAKq5D,iBAA4C,IAAzB12D,EAAO86D,OAAO32D,OAExB,EAEd9G,EAAK6C,SAAS,CACV66D,aAHU,EAIVnE,aAAcv5D,EAAKu5D,aAJT,GAKVC,iBAAkBx5D,EAAKw5D,iBALb,GAMVN,WAAYv2D,EAAOmkB,cAGvB62C,YAAiCx4D,EATnB,EASkCnF,EAAKotD,SAxB3C,yBAAA7kD,EAAAwB,SAAAjC,MA1FK9H,EAqHnB0K,YAAc,WACV6Q,aAA6B,OAtHdvb,EAyHnBo7D,WAAa,WAAM,IACPj2D,EAAWnF,EAAK4C,MAAhBuC,OADO6J,EAEsBhP,EAAKoC,MAAlCs7D,EAFO1uD,EAEP0uD,aAAcxE,EAFPlqD,EAEOkqD,WAEhB5kD,EAAOC,KAAUtN,IAAI9B,GAC3B,GAAKmP,EAAL,CAEA,IAAIyQ,GAAS,EACTm0C,IACAn0C,EAAQ24C,GAGZ,IAAMtxD,EACF2Y,EAAQ,GAAKA,EAAQ/kB,EAAKotD,QAAQtmD,OAAS82D,aAAgB59D,EAAKotD,QAAQroC,IAAU84C,YAAiB14D,GACvG,GAAKiH,GACAA,EAAM8wD,IAAX,CAEA,IAAM9zB,EAAOx/B,KAAU3C,IAAImF,EAAM8wD,IAAIn8D,KAAOqL,EAAM8wD,IAC7C9zB,GAELwxB,YAAexxB,EAAMA,EAAKroC,GAAK,OAAQuT,EAAM,kBAAM1K,KAAUk0D,oBAAoB34D,EAAQikC,EAAKroC,SA7I/Ef,EAgJnBwgB,cAAgB,WAAM,IACVrb,EAAWnF,EAAK4C,MAAhBuC,OACR,GAAKqR,YAAcrR,GAAnB,CAFkB,IAAAyL,EAImB5Q,EAAKoC,MAAlCs7D,EAJU9sD,EAIV8sD,aAEJ34C,GAAS,EAKb,GAXkBnU,EAIIsoD,aAIlBn0C,EAAQ24C,KAGR34C,EAAQ,GAAKA,GAAS/kB,EAAKotD,QAAQtmD,QAAvC,CACA,IAAMsF,EAAQwxD,aAAgB59D,EAAKotD,QAAQroC,IAC3C,GAAK3Y,EAAL,CAbkB,IAePg9B,EAASh9B,EAAd8wD,IAEN,GADA9zB,EAAOx/B,KAAU3C,IAAImiC,EAAKroC,KAAOqoC,EACjC,CAEA,IAAM58B,EAAY,CACd/J,QAAS,YACT+R,KAAM,IACNpI,MAAOg9B,EACP37B,MAAO,IACPC,OAAQ,KAGZhM,KAAgBiJ,aAAa,CACzBlI,QAAS,sBACTmI,KAAM,CAAE4B,oBA7KGxM,EAiLnB0gB,aAAe,WAAM,IAAAzb,EACajF,EAAK4C,MAA3BuC,EADSF,EACTE,OADSugB,GAAAzgB,EACDsb,UACqBvgB,EAAKoC,OAAlCs7D,EAFSh4C,EAETg4C,aAEJ34C,GAAS,EAJIW,EAEKwzC,aAIlBn0C,EAAQ24C,GAGZ,IAAMtxD,EACF2Y,EAAQ,GAAKA,EAAQ/kB,EAAKotD,QAAQtmD,OAAS82D,aAAgB59D,EAAKotD,QAAQroC,IAAU84C,YAAiB14D,GAEvG,GAAIiH,EAAO,CACP,IAAIg9B,EAAOh9B,EAAM8wD,IAEjB,GADA9zB,EAAOx/B,KAAU3C,IAAImiC,EAAKroC,KAAOqoC,EACvB,CACN,IAAMtpC,EAAQ8J,KAAUm0D,oBAExBn0D,KAAUo0D,gBAAgBl+D,EAAOspC,MAnM1BppC,EAwMnBw5D,iBAAmB,SAAAz0C,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP/kB,EAAKotD,QAAQtmD,QA5MjB9G,EA+MnBg5D,eAAiB,SAAApqD,GACTA,GACAA,EAAMuS,kBAFY,IAMhB2iB,EADmB9jC,EAAKoC,MAAtBs7D,aACyB,EAEjC,OAAO19D,EAAKs7D,UAAUx3B,EAAW,WACzBA,IAAc9jC,EAAKotD,QAAQtmD,OAAS,GACpC9G,EAAKu7D,kBAzNEv7D,EA8NnBu7D,aA9NmBt7D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KA8NJ,SAAAmC,IAAA,OAAApC,EAAAxE,EAAAkF,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAC,OAAA,kCAAAD,EAAAH,SAAAC,MA9NIhK,EAkOnBu5D,aAAe,SAAAx0C,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL/kB,EAyOnBu7C,WAAa,SAAA3sC,GACLA,GACAA,EAAMuS,kBAFQ,IAMZ2iB,EADmB9jC,EAAKoC,MAAtBs7D,aACyB,EAEjC,OAAO19D,EAAKs7D,UAAUx3B,EAAW,WACX,IAAdA,GACA9jC,EAAKw7D,cAnPEx7D,EAwPnBw7D,SAxPmBv7D,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwPR,SAAA8f,IAAA,OAAA/f,EAAAxE,EAAAkF,KAAA,SAAAuf,GAAA,cAAAA,EAAArf,KAAAqf,EAAApf,MAAA,cAAAof,EAAA1d,OAAA,kCAAA0d,EAAA9d,SAAA4d,MAxPQ3nB,EA4PnBs7D,UAAY,SAACv2C,EAAOY,GAChB,GAAIZ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS/kB,EAAKotD,QAAQtmD,OAAQ,OAAO,EAEzC9G,EAAK6C,SACD,CACI66D,aAAc34C,EACdw0C,aAAcv5D,EAAKu5D,aAAax0C,GAChCy0C,iBAAkBx5D,EAAKw5D,iBAAiBz0C,IAE5CY,GAVyB,IAarBxgB,EAAWnF,EAAK4C,MAAhBuC,OAGR,OADAw4D,YAAiCx4D,EAAQ4f,EAAO/kB,EAAKotD,UAC9C,GAzQPptD,EAAKotD,QAAU,GAHA,IAAAhiD,EAKYpL,EAAK4C,MAAxBuC,EALOiG,EAKPjG,OAAQ4lB,EALD3f,EAKC2f,OALD,OAOf/qB,EAAKoC,MAAQ,CACTuT,WAAYxQ,EACZ84D,WAAYlzC,EACZ2yC,aAAc,EACdnE,cAAc,EACdC,kBAAkB,EAClBT,0BAA0B,GAbf/4D,qFAiBGsT,EAAWC,GAAW,IAAAhH,EACVpM,KAAKyC,MAA3BuC,EADgCoH,EAChCpH,OAAQob,EADwBhU,EACxBgU,UADwByI,EASpC7oB,KAAKiC,MANL87D,EAHoCl1C,EAGpCk1C,cACA1E,EAJoCxwC,EAIpCwwC,iBACAD,EALoCvwC,EAKpCuwC,aACAF,EANoCrwC,EAMpCqwC,iBACAH,EAPoClwC,EAOpCkwC,WACAH,EARoC/vC,EAQpC+vC,yBAGJ,OAAIzlD,EAAUnO,SAAWA,IAIrBmO,EAAUiN,YAAcA,IAIxBhN,EAAU2qD,gBAAkBA,IAI5B3qD,EAAU2oD,kBAAoB1C,IAI9BjmD,EAAUgmD,eAAiBA,IAI3BhmD,EAAU8lD,mBAAqBA,IAI/B9lD,EAAU2lD,aAAeA,GAIzB3lD,EAAUwlD,2BAA6BA,oDAO3B,IACR5zD,EAAWhF,KAAKyC,MAAhBuC,OACFiH,EAAQyxD,YAAiB14D,GAC/Bg5D,YAA8Bh5D,EAAQ,CAACiH,IAEvCjM,KAAK+5D,cAELpqD,SAASy7C,iBAAiB,UAAWprD,KAAKuR,WAAW,kDAIrD5B,SAAS27C,oBAAoB,UAAWtrD,KAAKuR,WAAW,oCAqMnD,IAAAf,EACiBxQ,KAAKyC,MAAnBuC,EADHwL,EACGxL,OAAQ2F,EADX6F,EACW7F,EADX+qC,EAUD11C,KAAKiC,MAPLs7D,EAHC7nB,EAGD6nB,aACAnE,EAJC1jB,EAID0jB,aACAC,EALC3jB,EAKD2jB,iBAEAN,GAPCrjB,EAMDwjB,iBANCxjB,EAODqjB,YAKAn0C,GAZC8wB,EAQDkjB,yBARCljB,EASD8lB,cAGS,GACTzC,IACAn0C,EAAQ24C,GAGZ,IACMU,EAAYr5C,GAAS,GAAKA,EAAQ5kB,KAAKitD,QAAQtmD,OAC/CsF,EAAQgyD,EAAYR,aAAgBz9D,KAAKitD,QAAQroC,IAAU84C,YAAiB14D,GAC5Ek5D,EAAmBD,EAAYj+D,KAAKitD,QAAQroC,GAAS,KAC9CqkB,EAASh9B,EAAd8wD,IAER,OACIz4D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,gBAPQ,KASnBmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBAAuBoC,QAASvF,KAAK64D,gBAChDv0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,4BACXmB,EAAArB,EAAAC,cAAA,OAAKC,UAAU,oCACfmB,EAAArB,EAAAC,cAACi5D,GAAD,CAAmBh+B,UAAWi7B,EAAcrB,MAAI,EAACxyD,QAASvF,KAAKo7C,YAC3D92C,EAAArB,EAAAC,cAACk5D,GAAAn5D,EAAD,CAAoBm+B,SAAS,QAAQ7iB,MAAOm6C,OAIpDp0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,+BACXmB,EAAArB,EAAAC,cAACi7D,GAAD,CAA2Bn5D,OAAQA,EAAQiH,MAAOA,EAAO1G,QAASvF,KAAK64D,kBAG3Ev0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,6BACXmB,EAAArB,EAAAC,cAACi5D,GAAD,CAAmB52D,QAASvF,KAAKuK,aAC7BjG,EAAArB,EAAAC,cAAC0I,EAAA3I,EAAD,CAAWm+B,SAAS,QAAQ7iB,MAAOm6C,MAEvCp0D,EAAArB,EAAAC,cAACi5D,GAAD,CAAmBh+B,UAAWk7B,EAAkBtB,MAAI,EAACxyD,QAASvF,KAAK64D,gBAC/Dv0D,EAAArB,EAAAC,cAACo5D,GAAAr5D,EAAD,CAAkBm+B,SAAS,QAAQ7iB,MAAOm6C,QAItDp0D,EAAArB,EAAAC,cAAA,OAAKC,UAAU,uBACXmB,EAAArB,EAAAC,cAACk7D,GAAD,CAA2Bp5D,OAAQA,EAAQ0sB,KAAM2sC,aAAwBH,KACzE55D,EAAArB,EAAAC,cAACs5D,GAAD,CACI74C,MAAOhZ,EAAE,eACTkK,SAAUkkD,GAAcn0C,GAAS,EAAvB,GAAAjgB,OAA8BigB,EAAQ,EAAtC,QAAAjgB,OAA8Co0D,GAAe,OAE3Ez0D,EAAArB,EAAAC,cAACy5D,GAAD,CAA2Bh5C,MAAOhZ,EAAE,QAASigB,OAAQqe,EAAKroC,GAAI2E,QAASvF,KAAKi7D,aAC3E5kD,YAAcrR,IACXV,EAAArB,EAAAC,cAACo1D,GAAD,CACI30C,MAAOhZ,EAAE,WACTwzB,UAAW8/B,EACX14D,QAASvF,KAAKqgB,eACd/b,EAAArB,EAAAC,cAACgjC,GAAAjjC,EAAD,CAAWsb,MAAOi6C,MAG1Bl0D,EAAArB,EAAAC,cAACo1D,GAAD,CAAyB30C,MAAOhZ,EAAE,UAAWwzB,UAAQ,EAAC54B,QAASvF,KAAKugB,cAChEjc,EAAArB,EAAAC,cAAC05D,GAAA35D,EAAD,CAAYsb,MAAO6+C,eA/UV75D,IAAMC,WA2VxBgP,iBAAkB6qD,ICvW3BiB,uBACF,SAAAA,EAAY77D,GAAO,IAAA5C,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAE,KAAAs+D,IACfz+D,EAAAC,OAAAgE,EAAA,EAAAhE,CAAAE,KAAAF,OAAAiE,EAAA,EAAAjE,CAAAw+D,GAAAn+D,KAAAH,KAAMyC,KAyCV87D,uBAAyB,SAAA/9D,GAAU,IACvBwE,EAA6BxE,EAA7BwE,OAAQob,EAAqB5f,EAArB4f,UAAWjG,EAAU3Z,EAAV2Z,MAE3Bta,EAAKkkD,iBAAiB/+C,EAAQob,EAAWjG,IA7C1Bta,EAgDnB2+D,uBAAyB,SAAAh+D,GAAU,IACvBoS,EAAkBpS,EAAlBoS,OAAQuH,EAAU3Z,EAAV2Z,MAEhBta,EAAKikD,iBAAiBlxC,EAAQuH,IAnDfta,EAsDnBm8B,oCAAsC,SAAAx7B,GAClCX,EAAK6C,SAAS,CACVu5B,qBAAsB9wB,IAAiB8wB,wBAxD5Bp8B,EA4DnBk6C,iCAAmC,SAAAv5C,GAC/BX,EAAK6C,SAAS,CAAEu3C,mBAAoB9uC,IAAiB8uC,sBA7DtCp6C,EAgEnB4+D,wCAA0C,SAAAj+D,GACtCX,EAAK6C,SAAS,CACVg8D,0BAA2BvzD,IAAiBuzD,6BAlEjC7+D,EAsEnB8+D,sBAAwB,SAAAn+D,GAAU,IACtBiK,EAASjK,EAATiK,KAER5K,EAAK6C,SAAS,CAAE48C,YAAa70C,KAzEd5K,EA4EnBkkD,iBAAmB,SAAC/+C,GAA4C,IAApCob,EAAoCnc,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,GAAAA,UAAA,GAAxB,KAAMkW,EAAkBlW,UAAA0C,OAAA,QAAA0f,IAAApiB,UAAA,IAAAA,UAAA,GACtDyU,EAAgBvN,IAAiBwN,YACjCimD,EAAsBzzD,IAAiBmkB,aACvCwpC,EAAmB3tD,IAAiBmmB,eAEtCnX,EACIykD,IAAwB55D,GACxBzD,KAAgBiJ,aAAa,CACzBlI,QAAS,2BACT0C,WAOR0T,IAAkB1T,GAAUob,GAAa04C,IAAqB14C,GAC9DvgB,EAAKg/D,iBAAiBpyD,QAAQyiD,kBAC1B9uC,GACAiwC,aAAiBrrD,EAAQob,IAEtB1H,IAAkB1T,GAAWob,EAGpC7e,KAAgBqX,UAAU5T,EAAQob,GAFlCvgB,EAAKg/D,iBAAiBpyD,QAAQ+iD,iBAlGnB3vD,EAwGnBikD,iBAxGmB,eAAAjjC,EAAA/gB,OAAA0H,EAAA,EAAA1H,CAAA2H,EAAAxE,EAAAyE,KAwGA,SAAAC,EAAOiL,EAAQuH,GAAf,IAAAhG,EAAA,OAAA1M,EAAAxE,EAAAkF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVsK,EADU,CAAAxK,EAAAE,KAAA,eAAAF,EAAA4B,OAAA,wBAAA5B,EAAAE,KAAA,EAGI/G,KAAgBc,KAAK,CACpCC,QAAS,oBACTsG,QAASgK,EACT7J,OAAO,IANI,OAGToL,EAHS/L,EAAAiB,KASfxJ,EAAKkkD,iBAAiB5vC,EAAKvT,GAAI,KAAMuZ,GATtB,wBAAA/R,EAAAwB,SAAAjC,MAxGA,gBAAAyZ,EAAA2F,GAAA,OAAAlG,EAAA7c,MAAAhE,KAAAiE,YAAA,GAGfpE,EAAKg/D,iBAAmBt7D,IAAM+M,YAE9BzQ,EAAKoC,MAAQ,CACTg6B,qBAAsB9wB,IAAiB8wB,qBACvCge,mBAAoB9uC,IAAiB8uC,mBACrCykB,0BAA2BvzD,IAAiBuzD,0BAC5Cpf,YAAa,MATFz/C,mFAoBfgJ,KAAUwK,GAAG,uBAAwBrT,KAAKw+D,wBAC1CpqD,KAAUf,GAAG,uBAAwBrT,KAAKu+D,wBAE1CpzD,IAAiBkI,GAAG,oCAAqCrT,KAAKg8B,qCAC9D7wB,IAAiBkI,GAAG,iCAAkCrT,KAAK+5C,kCAC3D5uC,IAAiBkI,GAAG,wCAAyCrT,KAAKy+D,yCAClEtzD,IAAiBkI,GAAG,sBAAuBrT,KAAK2+D,sEAIhD91D,KAAUnH,eAAe,uBAAwB1B,KAAKw+D,wBACtDpqD,KAAU1S,eAAe,uBAAwB1B,KAAKu+D,wBAEtDpzD,IAAiBzJ,eAAe,oCAAqC1B,KAAKg8B,qCAC1E7wB,IAAiBzJ,eAAe,iCAAkC1B,KAAK+5C,kCACvE5uC,IAAiBzJ,eACb,wCACA1B,KAAKy+D,yCAETtzD,IAAiBzJ,eAAe,sBAAuB1B,KAAK2+D,wDA6EvD,IACG55D,EAAY/E,KAAKyC,MAAjBsC,QADH8J,EAEwF7O,KAAKiC,MAA1Fg6B,EAFHptB,EAEGotB,qBAAsBge,EAFzBprC,EAEyBorC,mBAAoBykB,EAF7C7vD,EAE6C6vD,0BAA2Bpf,EAFxEzwC,EAEwEywC,YAE7E,OACIh7C,EAAArB,EAAAC,cAAAoB,EAAArB,EAAAoW,SAAA,KACI/U,EAAArB,EAAAC,cAAA,OAAKC,UAAWkC,IAAWN,EAAQ+5D,KAAM,OAAQ,CAAEC,oBAAqB9iC,KACpE33B,EAAArB,EAAAC,cAAC87D,GAAD,MACA16D,EAAArB,EAAAC,cAAC+7D,GAAD,CAAe9tD,IAAKnR,KAAK6+D,mBACxB5iC,GAAwB33B,EAAArB,EAAAC,cAACm6B,GAAD,OAE7B/4B,EAAArB,EAAAC,cAACg8D,GAAA,EAAD,MACCjlB,GAAsB31C,EAAArB,EAAAC,cAACi8D,GAAgBllB,GACvCykB,GAA6Bp6D,EAAArB,EAAAC,cAACk8D,GAAuBV,GACrDpf,GAAeh7C,EAAArB,EAAAC,cAACm8D,GAAkB/f,WAnI5B/7C,IAAMC,YA2IvBsO,GAAUC,YACZutD,IACAj5D,IACAT,IArJW,SAAAC,GAAK,MAAK,CACrBi5D,KAAM,CACF34D,WAAmC,SAAvBN,EAAME,QAAQsO,KAAkBxO,EAAME,QAAQI,WAAWuiB,QAAU,UAC/Ejd,MAAO5F,EAAME,QAAQuG,KAAKtG,YAmJ9BvC,GAGWqO,aAAQwsD","file":"static/js/3.c4d5becc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {\n\n            },\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageText';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-photo-content', classes.sharedPhotoContent)} style={{backgroundImage: `url(${src || thumbSrc})`}}/>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />);\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia}>\n                <div className='shared-video-wrapper'>\n                    <div className={classNames('shared-video-content', { 'media-blurred': isBlurred })} style={{backgroundImage: `url(${thumbSrc})`}}/>\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />);\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}