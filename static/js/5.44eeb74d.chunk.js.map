{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","nextProps","nextState","nextContext","this","props","info","_this$props","classes","onSelect","onMouseDown","onMouseOver","title","items","stickers","map","x","i","react_default","a","createElement","className","classNames","stickerSetItem","key","sticker","id","data-sticker-id","onClick","Sticker","displaySize","STICKER_SMALL_DISPLAY_SIZE","blur","React","Component","withStyles","theme","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","&:hover","type","borderRadius","StickersPicker","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","stickerSets","sets","result","promises","slicedSets","wrap","_context","prev","next","state","abrupt","TdLibController","send","@type","is_masks","sent","forEach","push","set_id","Promise","all","slice","setState","setsLength","length","stop","_x","_x2","apply","arguments","loadInViewContent","scroll","scrollRef","current","inViewItems","item","itemsMap","get","node","ReactDOM","topBorder","scrollTop","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","set","loadStickerSetContent","handleScroll","_callee2","loadChunk","_this$state","concatSets","_context2","loadingChunk","scrollHeight","Date","now","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseOver","event","Number","target","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","createRef","Map","position","debounce","_this$state2","_this2","_this$state3","clear","Components_ColumnMiddle_StickerSet","ref","el","onScroll","EmojiPickerButton","onClientUpdateChange","update","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","reverse","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","switchPicker","handleEmojiClick","tab","handleStickersClick","stickersPickerRef","handleStickerSend","clientUpdate","handleStickerPreview","ApplicationStore","on","LocalizationStore","removeListener","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","style","overflowX","stickersPicker","Components_ColumnMiddle_StickersPicker","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","onMouseLeave","InsertEmoticon_default","pickerRoot","defineProperty","pickerRootOpened","Button_default","headerButton","emoji-picker-content-stickers","StickerPreview","enhance","compose","margin","flex","shape","boxShadow","shadows","bottom","display","withTheme","withTranslation"],"mappings":"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","file":"static/js/5.44eeb74d.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info } = this.props;\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseOver } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport { debounce } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            stickerSets: null,\n            sets: [],\n            position: 0\n        };\n\n        this.loadInViewContent = debounce(this.loadInViewContent, 100);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadContent = async (stickerSets, sets) => {\n        if (this.state.stickerSets) return;\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        this.setState({ stickerSets, sets: slicedSets });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContent = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const padding = 800;\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    handleScroll = async () => {\n        this.loadInViewContent();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const date = Date.now();\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n        this.setsLength += result.length;\n        let concatSets = sets.concat(result);\n        this.setState({ sets: concatSets });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { sets } = this.state;\n\n                    const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    render() {\n        const { stickerSets, sets } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseOver={this.handleMouseOver}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker'>\n                <div className='stickers-picker-header' />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickersPicker from './StickersPicker';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\nimport { loadStickerSetContent } from '../../Utils/File';\nimport StickerPreview from './StickerPreview';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    switchPicker = () => {\n        this.updatePicker(!this.state.open);\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        this.stickersPickerRef.current.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onClick={this.switchPicker}\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}\n                >\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}\n                >\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    <StickerPreview sticker={sticker} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}