{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props7","migratedCounters","_this$props8","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","_this$props9","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedMediaBase","constructor","TypeError","getItemTemplate","migratedChatId","Tile_SharedMedia_SharedDocument","onUpdateMessageContent","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","toConsumableArray","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","messages","incompleteResults","_args","undefined","query","sender_user_id","from_message_id","offset","finally","total_count","setItems","onLoadMigratedNext","_args2","_x2","handleScroll","listRef","handleSearchScroll","searchListRef","searchParams","assertThisInitialized","onSearchMigratedNext","onSearchNext","_callee3","_args3","_context3","searchItems","_x3","_ref4","_callee4","_args4","_context4","searchMigratedItems","_x4","_ref5","_callee5","_context5","handleCloseSearch","_x5","sharedMediaSearchList","default","Error","_this$state4","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","getHeader","onScroll","Boolean","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","userChatId","openSharedMedia","openSharedAudios","openSharedDocuments","openGroupInCommon","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","category","error","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.4335c46a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedMedia,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedMedia}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedDocument: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate = message => {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    };\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!this.completed) {\n                this.onLoadNext(this.params);\n            } else {\n                this.onLoadMigratedNext(this.params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(this.getItemTemplate);\n        const searchMessages = searchItems.concat(searchMigratedItems).map(this.getItemTemplate);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.handleSearch}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className='shared-media-list'\n                    onScroll={this.handleScroll}\n                    style={{ minHeight }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedMedia,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}