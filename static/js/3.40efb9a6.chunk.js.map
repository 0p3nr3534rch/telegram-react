{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Actions/Client.js","Stores/PlayerStore.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selectedItems","clear","selected","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","file_name","emoji","isMediaContent","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","openChat","openReply","highlightMessage","selectMessage","setProfileMediaViewerContent","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","isVerified","CheckDecagram_default","verifiedIcon","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","handleOpenChat","handleOpenUser","getContentHeight","clientHeight","offsetHeight","_this$props7","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleSelectUser","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","foundPublicChatActive","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","aria-owns","aria-haspopup","menuIconButton","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","clearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","dialogMetaDate","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","& $iconIndicator","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","deleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","HeaderProgress","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","toLocaleDateString","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","webPage","media","messageClassName","message-selected","messageSelected","messageHighlighted","meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","getClientData","unpinned_message_id","handleUnpin","_extends","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","divider","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","scrollDownVisible","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","handleScrollDownClick","lastReply","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.40efb9a6.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return basicGroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return isMeChat(chatId);\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return supergroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    isChatVerified,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n            case 'clientUpdateOpenReply': {\n                this.emit('clientUpdateOpenReply', update);\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function openReply(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenReply',\n        chatId,\n        messageId\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n\nexport function setMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaViewerContent',\n        content\n    });\n}\n\nexport function setProfileMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateProfileMediaViewerContent',\n        content\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus\n                        classes={{\n                            root: classes.statusRoot,\n                            icon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                        chatId={chatId}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from 'mdi-material-ui/CheckDecagram';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.main\n    },\n    verifiedIcon: {}\n});\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && (\n                    <CheckDecagramIcon\n                        className={classNames(classes.icon, classes.verifiedIcon, 'dialog-title-icon')}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {!isMe && <Divider />}\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary + '!important'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nconst styles = theme => ({\n    dialogContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t, classes } = this.props;\n\n        if (this.clearHistory) return <div className={classNames('dialog-content', classes.dialogContent)}>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className={classNames('dialog-content', classes.dialogContent)}>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className={classNames('dialog-content', classes.dialogContent)}>{contentControl}</div>;\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nconst styles = theme => ({\n    dialogMetaDate: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DialogMetaControl extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, classes } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className={classNames('dialog-meta', classes.dialogMetaDate)}>{date}</div>}</>;\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogMetaControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {\n        background: '#80d066'\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $verifiedIcon': {\n            color: '#fff'\n        },\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        },\n        '& $iconIndicator': {\n            background: '#ffffff'\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const chat = ChatStore.get(chatId);\n        const { is_verified } = chat;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{\n                            statusRoot: classes.statusRoot,\n                            statusIcon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        return (\n            <div className='day-meta'>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getUnread,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTileControl userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-without-avatar': !showTitle\n        });\n\n        const meta = (\n            <div className='message-meta'>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='message-views-icon' />\n                        <span className='message-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a className='message-date' onClick={this.handleDateClick}>\n                    <span title={dateHint}>{date}</span>\n                </a>\n            </div>\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div className='reply-content-subtitle'>{content}</div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onClick={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0,\n                scrollDownVisible: props.chatId === state.prevChatId && state.replyHistory.length > 0,\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible } = this.state;\n\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                this.setState({ scrollDownVisible: false, scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION });\n            }\n\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        console.log('MessagesList.scrollToBottom');\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        console.log('MessagesList.scrollToStart');\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n        console.log('MessagesList.scrollToStart scrollDownVisible=false');\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render', this.props, this.state);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}