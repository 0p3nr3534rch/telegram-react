{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Utils/Punycode.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","@type","then","result","_this","props","setState","emojis","join","prevProps","prevState","snapshot","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","call","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","store","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","_this$props5","setProfileMediaViewerContent","handleOpenChat","_this$props6","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props7","migratedCounters","_this$props8","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","_this$props9","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","SpeedDialIcon_default","icon","Search_default","openIcon","SharedMediaBase","constructor","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","toConsumableArray","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","messages","incompleteResults","_args","undefined","query","sender_user_id","from_message_id","offset","finally","total_count","setItems","onLoadMigratedNext","_args2","_x2","handleScroll","listRef","assertThisInitialized","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","_callee3","_args3","_context3","searchItems","searchMigratedItems","_x3","_ref4","_callee4","_args4","_context4","_x4","_ref5","_callee5","_context5","handleCloseSearch","_x5","sharedMediaList","sharedMediaSearchList","default","Error","Tile_SharedMedia_SharedDocument","_this$state4","getItemTemplate","searchMessages","ColumnRight_SharedMedia_SharedMediaHeader","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","punycode","utf16","decode","extra","len","charCodeAt","RangeError","encode","String","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","d","flag","adapt","delta","numpoints","firsttime","k","Math","floor","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","splice","h","b","m","q","ijv","bcp","ToASCII","domain","domain_array","split","s","match","ToUnicode","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","error","webPage","description","display_url","getTitleFromUrl","SafeLink","displayText","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","abs","charAt","Media_Photo","showProgress","accentStyles","SharedLinks","web_page","Tile_SharedMedia_SharedLink","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","Tile_SharedMedia_SharedPhoto","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","_this$props$video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","media-blurred","getDurationString","SharedVideos","Tile_SharedMedia_SharedVideo","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","voiceNoteMeta","AudioAction","MediaStatus","SharedVoiceNotes","Tile_SharedMedia_SharedVoiceNote","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedAudios","ColumnRight_SharedMedia_SharedDocuments","ColumnRight_SharedMedia_SharedLinks","ColumnRight_SharedMedia_SharedPhotos","ColumnRight_SharedMedia_SharedVideos","ColumnRight_SharedMedia_SharedVoiceNotes","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","some","includes","recentlyFound","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","category","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","window","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","reset","onUpdate","onClientUpdate","now","assign","addTdLibListener","addListener","removeTdLibListener","setMaxListeners","Infinity","source1","source2","_this$poll","EventEmitter","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","hint","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","handleEmojiSelect","native","regex","t1","timestamp","StickerStore","performance","emojiRegex","exec","stickers","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","getWebPage","webPageContent","_this$getMedia","_this$getMedia2","webPageMediaTop","webPageMediaBottom","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","autoplay","playAnimated","pack","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","resolve","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.a7791ddc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = <SafeLink className='shared-link-url' url={url} displayText={display_url} />;\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return <SafeLink className='shared-link-url' url={url} displayText={entityText} mail={mail} />;\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [null, <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { site_name, title, description } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                    autoplay={false}\n                    playAnimated={true}\n                    pack={true}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}