{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Actions/Client.js","Stores/PlayerStore.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContent.js","Components/Tile/DialogBadge.js","Components/Tile/DialogMeta.js","Components/Tile/Dialog.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selectedItems","clear","selected","deletedMessage","Contact","_this$props","props","classes","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTile","firstName","lastName","onClick","classNames","contactPhone","React","Component","withStyles","theme","color","palette","secondary","withTheme","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","formattedText","getFormattedText","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","defineProperty","pollPercentageSubtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","_this$props4","question","options","total_voter_count","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Dialog_default","transitionDuration","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","file_name","emoji","isMediaContent","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","openChat","openReply","highlightMessage","selectMessage","setProfileMediaViewerContent","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","trim","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","tileLoaded","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","onLoad","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","documentAction","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","audioAction","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","replyContentSubtitle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem_default","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","e","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","preventDefault","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Popup_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","voiceNoteMeta","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTile","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTile","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","dark","UserControl","Components_Tile_UserStatusControl","DialogTitle","isVerified","CheckDecagram_default","verifiedIcon","DialogStatus","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitle","Components_Tile_DialogStatus","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","handleOpenChat","handleOpenUser","getContentHeight","clientHeight","offsetHeight","_this$props7","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleSelectUser","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","foundPublicChatActive","foundPublicChatSubtitle","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","aria-owns","aria-haspopup","menuIconButton","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContent","onClientUpdateClearHistory","clearHistory","contentControl","DialogBadge","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMeta","dialogMetaDate","Dialog","isSelected","dialogActive","Components_Tile_DialogMeta","Components_Tile_DialogContent","Components_Tile_DialogBadge","cursor","& $statusRoot","& $iconIndicator","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_Dialog","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","deleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","webPage","media","messageClassName","message-selected","messageSelected","messageHighlighted","meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","getClientData","unpinned_message_id","handleUnpin","pinnedMessageContentSubtitle","_extends","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","divider","chatPhotoStyle","ServiceMessage","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","newState","scrollDownVisible","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","prevHistory","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","handleScrollDownClick","lastReply","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.2a156986.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return basicGroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return isMeChat(chatId);\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return supergroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    isChatVerified,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n            case 'clientUpdateOpenReply': {\n                this.emit('clientUpdateOpenReply', update);\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nconst styles = theme => ({\n    contactPhone: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass Contact extends React.Component {\n    render() {\n        const { classes, contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTile userId={user_id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className={classNames('contact-phone', classes.contactPhone)}>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nconst styles = theme => ({\n    pollPercentageSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        console.log('PollPercentage.shouldComponentUpdate start');\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        console.log('PollPercentage.shouldComponentUpdate end with false');\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        console.log('PollPercentage.updateAnimation');\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n        console.log('PollPercentage.onAnimationFrame');\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, classes, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { [classes.pollPercentageSubtitle]: !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(PollPercentage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        return;\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                {/*<Popover*/}\n                {/*open={contextMenu && (canUnvote || canStopPoll)}*/}\n                {/*onClose={this.handleCloseContextMenu}*/}\n                {/*anchorReference='anchorPosition'*/}\n                {/*anchorPosition={{ top, left }}*/}\n                {/*anchorOrigin={{*/}\n                {/*vertical: 'bottom',*/}\n                {/*horizontal: 'right'*/}\n                {/*}}*/}\n                {/*transformOrigin={{*/}\n                {/*vertical: 'top',*/}\n                {/*horizontal: 'left'*/}\n                {/*}}>*/}\n                {/*<MenuList onClick={e => e.stopPropagation()}>*/}\n                {/*{canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}*/}\n                {/*{canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}*/}\n                {/*</MenuList>*/}\n                {/*</Popover>*/}\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function openReply(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenReply',\n        chatId,\n        messageId\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n\nexport function setMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaViewerContent',\n        content\n    });\n}\n\nexport function setProfileMediaViewerContent(content) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateProfileMediaViewerContent',\n        content\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(user) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n    }\n\n    return firstName ? firstName.charAt(0) : lastName ? lastName.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { userId, fistName, lastName, onSelect } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(userId, fistName, lastName);\n        const src = getSrc(profile_photo ? profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !tileLoaded }, { pointer: onSelect });\n\n        return (\n            <div className='user-tile' onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className={className} src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func\n};\n\nexport default UserTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n        const tileLoaded = thumbnailSrc && loaded;\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {!tileLoaded && <div className={classes.background} />}\n                {thumbnailSrc && (\n                    <img className={className} src={thumbnailSrc} onLoad={this.handleLoad} draggable={false} alt='' />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nconst styles = theme => ({\n    documentAction: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className={classNames('document-action', classes.documentAction)}>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentAction);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nconst styles = theme => ({\n    audioAction: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className={classNames('audio-action', classes.audioAction)}>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(AudioAction);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(VoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {}\n};\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n        const { loaded } = this.state;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className='chat-tile' onClick={this.handleSelect}>\n                    <div className={className}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !tileLoaded }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className={className} src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus\n                        chatId={chatId}\n                        classes={{\n                            root: classes.statusRoot,\n                            icon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from 'mdi-material-ui/CheckDecagram';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nconst styles = theme => ({\n    icon: {\n        color: theme.palette.primary.main\n    },\n    verifiedIcon: {}\n});\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && (\n                    <CheckDecagramIcon\n                        className={classNames(classes.icon, classes.verifiedIcon, 'dialog-title-icon')}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {!isMe && <Divider />}\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary + '!important'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nconst styles = theme => ({\n    dialogContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t, classes } = this.props;\n\n        if (this.clearHistory)\n            return <div className={classNames('dialog-content', classes.dialogContent)}>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className={classNames('dialog-content', classes.dialogContent)}>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className={classNames('dialog-content', classes.dialogContent)}>{contentControl}</div>;\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadge.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadge);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nconst styles = theme => ({\n    dialogMetaDate: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, classes } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className={classNames('dialog-meta', classes.dialogMetaDate)}>{date}</div>}</>;\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialog.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {\n        background: '#80d066'\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $verifiedIcon': {\n            color: '#fff'\n        },\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        },\n        '& $iconIndicator': {\n            background: '#ffffff'\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass Dialog extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const chat = ChatStore.get(chatId);\n        const { is_verified } = chat;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTile\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{\n                            statusRoot: classes.statusRoot,\n                            statusIcon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '../Tile/Dialog';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { orderCompare } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getUnread,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-without-avatar': !showTitle\n        });\n\n        const meta = (\n            <div className='message-meta'>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='message-views-icon' />\n                        <span className='message-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a className='message-date' onClick={this.handleDateClick}>\n                    <span title={dateHint}>{date}</span>\n                </a>\n            </div>\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0,\n                scrollDownVisible: props.chatId === state.prevChatId,\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        const newState = {\n            scrollBehavior,\n            scrollDownVisible: false\n        };\n        this.insertAfter(this.filterMessages(history), newState);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), { scrollBehavior: ScrollBehaviorEnum.NONE });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, newState, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n                    });\n                }\n            }\n\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        //console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}