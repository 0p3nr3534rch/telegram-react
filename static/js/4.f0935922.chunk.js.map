{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/FullScreen.js","Components/Player/Hint.js","Components/Player/Progress.js","Components/Player/Player.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","Hint","text","onClientUpdateMediaHint","update","fileId","animated","clearTimeout","checkTimeout","setTimeout","handleAnimationEnd","event","PlayerStore","on","off","classNames","onAnimationEnd","Progress","waiting","handleWaiting","viewBox","height","width","stroke","fill","strokeWidth","strokeDasharray","strokeDashoffset","strokeLinecap","r","cx","cy","Player","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","videoRef","current","handled","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","handlePictureInPicture","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onClientUpdateMediaShortcut","startStopPlayer","play","hidden","paused","pause","handlePlay","onPlay","clientUpdate","handlePause","onPause","handleEnded","onEnded","handleTimeUpdate","buffered","handleLoadedData","handleLoadedMetadata","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","root","contentRef","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","exitFullscreen","requestFullscreen","handleClickRoot","mouseDownRoot","handleMouseDownRoot","handleVolumeChange","onVolumeChange","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","handleProgress","handleCanPlay","target","a","videoInfo","content","pictureInPictureElement","mozPictureInPictureElement","webkitPictureInPictureElement","exitPictureInPicture","requestPictureInPicture","onpause","addEventListener","handleLeavePictureInPicture","src","removeEventListener","handleDoubleClick","handleVideoKeyDown","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","mouseOverTimeout","rootRef","createRef","load","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","mozRequestPictureInPicture","webkitRequestPictureInPicture","mozExitPictureInPicture","webkitExitPictureInPicture","children","style","poster","bufferedTime","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","rootStyle","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","pictureInPictureEnabled","mozPictureInPictureEnabled","webkitPictureInPictureEnabled","ref","onMouseDown","onClick","onDoubleClick","onMouseMove","autoPlay","controls","playsInline","onLoadedMetadata","onLoadedData","onCanPlay","onTimeUpdate","onProgress","onWaiting","e","onMouseEnter","onMouseLeave","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","fontSize","length","i","end","PipPlayer","onWindowResize","player","getElementById","oldLeft","parseInt","left","oldTop","top","normalizePosition","handlePlayerMouseDown","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleClose","connectPlayer","window","disconnectPlayer","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","Close","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","size","borderSize","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","getSrc","small","onUpdateChatPhoto","chat_id","file","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","currentPackId","OptionStore","suggestedPackId","Map","output","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","THUMBNAIL_BLURRED_SIZE_90","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","transform","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","item","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","alpha","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","getTimeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","onClientUpdateMediaBlob","streaming","video_note","onClientUpdateMediaClose","handlePrev","handleNext","mime_type","setFileOptions","moveNext","handleVideoEnded","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","InstantViewMediaViewerContent","getViewerFile","supportsStreaming","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdatePictureInPicture","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.f0935922.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        d='M5,14 C5.55228475,14 6,14.4477153 6,15 L6,18 L9,18 C9.55228475,18 10,18.4477153 10,19 C10,19.5522847 9.55228475,20 9,20 L5,20 C4.44771525,20 4,19.5522847 4,19 L4,15 C4,14.4477153 4.44771525,14 5,14 Z M19,14 C19.5522847,14 20,14.4477153 20,15 L20,15 L20,19 C20,19.5522847 19.5522847,20 19,20 L19,20 L15,20 C14.4477153,20 14,19.5522847 14,19 C14,18.4477153 14.4477153,18 15,18 L15,18 L18,18 L18,15 C18,14.4477153 18.4477153,14 19,14 Z M9,4 C9.55228475,4 10,4.44771525 10,5 C10,5.55228475 9.55228475,6 9,6 L9,6 L6,6 L6,9 C6,9.55228475 5.55228475,10 5,10 C4.44771525,10 4,9.55228475 4,9 L4,9 L4,5 C4,4.44771525 4.44771525,4 5,4 L5,4 Z M19,4 C19.5522847,4 20,4.44771525 20,5 L20,9 C20,9.55228475 19.5522847,10 19,10 C18.4477153,10 18,9.55228475 18,9 L18,6 L15,6 C14.4477153,6 14,5.55228475 14,5 C14,4.44771525 14.4477153,4 15,4 L19,4 Z'\n    />,\n    'FullScreen'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Hint.css';\n\nclass Hint extends React.Component {\n    state = { text: null };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    onClientUpdateMediaHint = update => {\n        const { fileId, text } = update;\n        if (fileId !== this.props.fileId) return;\n\n        const { animated } = this.state;\n\n        clearTimeout(this.checkTimeout);\n        this.setState({\n            text,\n            animated: false\n        }, () => {\n            this.checkTimeout = setTimeout(() => {\n                if (this.state.text !== text) return;\n\n                this.setState({\n                    animated: true\n                })\n            }, 250);\n        });\n    };\n\n    handleAnimationEnd = event => {\n        this.setState({\n            text: null,\n            animated: false\n        })\n    }\n\n    render() {\n        const { animated, text } = this.state;\n        if (!text) return null;\n\n        return (\n            <div className={classNames('player-hint', { 'player-hint-animated': animated })} onAnimationEnd={this.handleAnimationEnd}>\n                <span>{text}</span>\n            </div>\n        );\n    }\n}\n\nHint.propTypes = {\n    fileId: PropTypes.number\n};\n\nexport default Hint;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progress.css';\n\nclass Progress extends React.Component {\n    state = {\n        waiting: false\n    };\n\n    componentDidMount() {\n        this.handleWaiting();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.waiting !== this.props.waiting) {\n            this.handleWaiting();\n        }\n    }\n\n    handleWaiting = () => {\n        const { waiting } = this.props;\n        if (!waiting) {\n            if (this.state.waiting) {\n                this.setState({\n                    waiting: false\n                });\n            }\n            return;\n        }\n\n        setTimeout(() => {\n            if (!this.props.waiting) return;\n\n            this.setState({\n                waiting: true\n            })\n        }, 250);\n    };\n\n    render() {\n        const { waiting } = this.state;\n\n        if (!waiting) return null;\n\n        return (\n            <div className='player-progress'>\n                <svg viewBox='0 0 54 54' height='54' width='54'>\n                    <circle stroke='white' fill='transparent' strokeWidth='3' strokeDasharray='120 100' strokeDashoffset='25' strokeLinecap='round' r='21' cx='27' cy='27'/>\n                </svg>\n            </div>\n        );\n    }\n\n}\n\nProgress.propTypes = {\n    waiting: PropTypes.bool\n};\n\nexport default Progress;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport Hint from './Hint';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport {\n    PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Player.css';\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rootRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.videoRef = React.createRef();\n\n        this.state = {\n            duration: 0,\n            currentTime: 0,\n            volume: PlayerStore.volume,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true,\n            hidden: false\n        };\n    }\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    handleVolume = volume => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = this.state;\n\n        video.volume = volume;\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    load() {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        video.load();\n\n        this.setState({\n            duration: 0,\n            currentTime: 0,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true\n        });\n    }\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n    };\n\n    handleTimeUpdate = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        })\n    };\n\n    handleLoadedData = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime: 0,\n            volume,\n            waiting: true,\n            buffered\n        });\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = this.contentRef.current;\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.mouseDownRoot = false;\n        this.startStopPlayer();\n    }\n\n    handleMouseDownRoot = event => {\n        this.mouseDownRoot = true;\n        event.stopPropagation();\n    }\n\n    static getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleMute = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleProgress = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    static getBufferedTime = (time, buffered) => {\n        if (!buffered || !buffered.length) {\n            return 0;\n        }\n\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n            if (start <= time && time < end) {\n                return end;\n            }\n        }\n\n        return 0;\n    }\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePictureInPicture = async () => {\n        const { fileId } = this.props;\n        const { duration, currentTime, volume, play, buffered, waiting } = this.state;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: {\n                fileId,\n                video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n\n        return;\n\n        if (!video.duration) return;\n\n        const pictureInPictureElement = document.pictureInPictureElement || document.mozPictureInPictureElement || document.webkitPictureInPictureElement;\n        if (pictureInPictureElement) {\n            this.exitPictureInPicture();\n            return;\n        }\n\n        try {\n            const pipWindow = await this.requestPictureInPicture(video);\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaViewerContent',\n                content: null\n            });\n            video.onpause = event => {\n                event.target.play();\n                event.target.onpause = null;\n            };\n            video.addEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n        } catch (error) { }\n    };\n\n    handleLeavePictureInPicture = event => {\n        const video = this.videoRef.current;\n\n        if (!video) event.target.src = null;\n        event.target.removeEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n    };\n\n    async requestPictureInPicture(element) {\n        const method = element.requestPictureInPicture || element.mozRequestPictureInPicture || element.webkitRequestPictureInPicture;\n        if (!method) return null;\n\n        return method.call(element);\n    }\n\n    exitPictureInPicture() {\n        const method = document.exitPictureInPicture || document.mozExitPictureInPicture || document.webkitExitPictureInPicture;\n\n        method && method.call(document);\n    }\n\n    handleDoubleClick = event => {\n        this.handleFullScreen(event);\n    };\n\n    handleVideoKeyDown = event => {\n        event.preventDefault();\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    render() {\n        const { children, src, className, style, width, height, poster, fileId } = this.props;\n        const { waiting, volume, duration, currentTime, play, dragging, draggingTime, buffered, hidden } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n        const rootStyle = {\n            ...style,\n            width,\n            height\n        }\n\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n        const pictureInPictureEnabled = document.pictureInPictureEnabled || document.mozPictureInPictureEnabled || document.webkitPictureInPictureEnabled;\n\n        return (\n            <div\n                ref={this.rootRef}\n                className={classNames('player', className)}\n                onMouseDown={this.handleMouseDownRoot}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}\n                style={rootStyle}>\n                <div ref={this.contentRef} className='player-content' onMouseMove={this.handleMouseOver}>\n                    <video\n                        className='player-video'\n                        ref={this.videoRef}\n                        autoPlay={false}\n                        controls={false}\n                        playsInline={true}\n                        src={src}\n                        poster={poster}\n                        onLoadedMetadata={this.handleLoadedMetadata}\n                        onLoadedData={this.handleLoadedData}\n                        onCanPlay={this.handleCanPlay}\n                        onPlay={this.handlePlay}\n                        onPause={this.handlePause}\n                        onEnded={this.handleEnded}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onVolumeChange={this.handleVolumeChange}\n                        onProgress={this.handleProgress}\n                        onWaiting={this.handleWaiting}\n                        onKeyDown={this.handleVideoKeyDown}\n                    >\n                        {children}\n                    </video>\n                    <Hint fileId={fileId}/>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            <button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>\n                                <PictureInPictureIcon/>\n                            </button>\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlayer.propTypes = {\n    fileId: PropTypes.number\n};\n\n//export default React.forwardRef((props, ref) => (<Player forwardedRef={ref} {...props}/>));\n\nexport default Player;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport './PipPlayer.css';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport Slider from '@material-ui/core/Slider';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport Player from './Player';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport Progress from './Progress';\nimport TdLibController from '../../Controllers/TdLibController';\nimport CloseIcon from '../../Assets/Icons/Close';\n\nclass PipPlayer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime: 0,\n            volume,\n            waiting: true,\n            buffered\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        })\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    render() {\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}>\n                <div className='pip-player-wrapper'>\n                    <div id='pip-player-container'/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n\n        setTimeout(() => {\n            const { innerText } = this.newMessageRef.current;\n            console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const { streaming } = TdLibController;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (streaming) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (streaming) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && TdLibController.streaming) {\n                            src = `/streaming/file_id=${file.id}`;\n                            setFileOptions(src, { fileId: file.id, size: file.size, mimeType: audio.mime_type });\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    const { name, text } = props;\n\n    return (\n        <a id={name}>\n            {text && <RichText text={text} />}\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        // console.log('[p] mainPage.render');\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}