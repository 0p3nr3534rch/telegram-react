{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Utils/Text.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/CallEnd.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/GroupCallMicButton.js","Assets/Icons/AddMember.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanelButtons.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","Button","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","PinMessageDialog","prevMessageId","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","UnpinMessageDialog","LeaveVoiceChatDialog","discard","handleDiscardChange","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","onClientUpdateBlockSender","update","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","on","off","PureComponent","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","forceUpdate","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","classNames","Chat","handleClick","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Close","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","tabIndex","disableRipple","ListItemText","primary","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","onWindowResize","setSelection","supergroupMembers","photoAndVideo","document","audio","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","current","item","left","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","clamp","offsetWidth","setTimeout","handleFilterClick","createRef","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","ref","r","set","onMouseDown","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","stopPropagation","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","handleOpenContextMenu","contextMenu","clientX","top","clientY","handleCloseContextMenu","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","console","content","description","animation","video","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","filter","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","map","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","container","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","addEventListener","removeEventListener","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","copy","navigator","clipboard","writeText","copyOld","element","successful","createElement","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","getChatUsername","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","clientHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyDown","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","width","Pending","log","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","remove","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","saveInternal","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","shift","replaceChats","appendChats","newChats","Array","_chats","_c","ids","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","GroupCallTopPanel","onUpdateGroupCallParticipant","group_call_id","participant","call","groupCallId","groupCall","connection","CallStore","can_unmute_self","onUpdateGroupCall","group_call","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","currentGroupCall","connected","iceConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","changeMuted","showSnackbar","handleLeave","leaveGroupCall","handleOpenGroupCall","opened","elements","getElementsByClassName","openPanel","offsetHeightDiff","Mic","MicOff","CallEnd","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","canManageVoiceChats","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","getElementById","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","which","clickedPinned","handleMouseDown","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","max","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","player","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","muted","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","handleCopyLink","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","prevGroupCallId","GroupCallRecentParticipants","speakers","recent_speakers","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchRef","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","GroupCallMicButton","is_muted","GroupCallParticipant","participants","GroupCallParticipants","AddMember","GroupCallSettingsButton","Tune","GroupCallPanelButtons","GroupCallPanel","GroupCall","onClientUpdateGroupCallFullScreen","fullscreen","mouseDownRoot","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","windowDragging","normalizePosition","fullScreen","checkGlue","playerWidth","playerHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","pipParams","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","progress","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","oldLeft","oldTop","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","exitFullscreen","requestFullscreen","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleBlur","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.5387ef9a.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        console.log('[m] ack render 1', [chatId, messageId, sendingState, unread]);\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        window._m = new Map();\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    window._m.set(chat_id, chat_id);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        window._chats = chats;\n        window._c = new Map((chats || []).map(i => [i, i]));\n        const ids = [];\n        window._m.forEach((value, key) => {\n            if (!window._c.has(key)) {\n                ids.push(key);\n            }\n        });\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\n            //ids.map(x => ChatStore.get(x))\n        );\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            // connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeMuted(!CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { groupCallId } = call;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateGroupCallPanel',\n            opened: true,\n            groupCallId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className={classNames('group-call-top-panel',\n                {\n                    'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                    'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                    'group-call-top-panel-connecting': !connected,\n\n                })}\n                onClick={this.handleOpenGroupCall}\n            >\n                <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                    {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                </IconButton>\n                <div className='group-call-top-panel-title'>\n                    {title}\n                </div>\n                <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                    <CallEndIcon fontSize='small' />\n                </IconButton>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender, canManageVoiceChats } from '../../Utils/Chat';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore, { ERROR_CALL, LOG_CALL } from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    {/*{ pinned.length > 1 && (*/}\n                    {/*    <IconButton*/}\n                    {/*        className='pinned-message-edit-button'*/}\n                    {/*        aria-label='Edit'*/}\n                    {/*        onClick={this.handleEditClick}*/}\n                    {/*        onMouseDown={this.handleMouseDown}>*/}\n                    {/*        <PlaylistEditIcon />*/}\n                    {/*    </IconButton>*/}\n                    {/*)}*/}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent() {\n        const { speakers } = this.state;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers }, () => {\n            this.loadContent();\n        });\n    };\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {speakers.map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        // console.log('[call] join.render', groupCallId, isCurrent);\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected\n        }\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status,\n            connected\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    handleClick = () => {\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeMuted(!CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected } = this.state;\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                <div className={classNames('group-call-mic-button',\n                    {\n                        'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                        'group-call-unmuted': connected && status === 'unmuted',\n                        'group-call-connecting': !connected,\n                    })}\n                    onClick={this.handleClick}\n                >\n                    {status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                </div>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallMicButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport UserTile from '../Tile/UserTile';\nimport { getUserFullName } from '../../Utils/User';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { groupCallId, userId, t } = this.props;\n        const participants = CallStore.participants.get(groupCallId) || new Map();\n        const participant = participants.get(userId);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted, can_unmute_self } = participant;\n\n        return (\n            <div className='group-call-participant'>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>{getUserFullName(userId)}</div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': is_muted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!is_muted ? <MicIcon /> : <MicOffIcon />}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { orderCompare } from '../../Utils/Common';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    state = {\n        participants: []\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participants = Array.from(CallStore.participants.get(groupCallId).values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(a.order, b.order));\n\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const participants = Array.from(CallStore.participants.get(groupCallId).values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(a.order, b.order));\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    };\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n\n        return (\n            <div className='group-call-participants'>\n                <div className='group-call-participants-invite'>\n                    <AddMemberIcon/>\n                    <div className='group-call-participants-invite-text'>\n                        {t('VoipGroupInviteMember')}\n                    </div>\n                </div>\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        return (\n            <div className='group-call-settings-button'>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState === 'connected';\n        }\n\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            // connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        let connected = false;\n        let status = '';\n        if (call) {\n            const { groupCallId, connection } = call;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                if (!groupCall.can_unmute_self) {\n                    status = 'forceMuted';\n                } else {\n                    status = !CallStore.isMuted() ? 'unmuted' : 'muted';\n                }\n            }\n            connected = connection && connection.iceConnectionState !== 'new' && connection.iceConnectionState !== 'connecting';\n        }\n\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport { getChatTitle } from '../../Utils/Chat';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\n\nclass GroupCallPanel extends React.Component {\n\n    handleClick = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                </div>\n                <div className='group-call-panel-participants'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport CallStore from '../../Stores/CallStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupCall.css';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport { clamp } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    }\n\n    handleClose = () => {\n        const { groupCallId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateGroupCallPanel',\n            groupCallId,\n            opened: false\n        });\n    };\n\n    handleMouseDown = event => {\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId} onClose={this.handleClose}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened, groupCallId } = update;\n\n        this.setState({\n            groupCallId: opened ? groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n                {groupCallId && <GroupCall groupCallId={groupCallId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}