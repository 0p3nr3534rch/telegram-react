{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Utils/Punycode.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","ForwardTargetChat","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","a","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","store","FileStore","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","key","message","copy","handleScheduledAction","action","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","aria-label","color","close","removeScheduledAction","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","latinText","cyrillicText","searchResults","concat","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","foundChats","open","onClose","aria-labelledby","aria-describedby","dialog","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","autoFocus","enhance","compose","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","button","listItem","variant","noWrap","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","in","timeout","unmountOnExit","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","style","whiteSpace","wordWrap","toUpperCase","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","stopPropagation","contextMenu","left","clientX","top","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","root","menuListRoot","transitionDuration","control","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","query","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","sharedMediaList","sharedMediaSearchList","default","Error","getItemTemplate","searchMessages","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","punycode","utf16","decode","extra","len","charCodeAt","RangeError","encode","String","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","d","flag","adapt","delta","numpoints","firsttime","k","Math","floor","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","splice","h","b","m","q","ijv","bcp","ToASCII","domain","domain_array","split","s","match","ToUnicode","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","error","webPage","description","display_url","getTitleFromUrl","SafeLink","displayText","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","abs","charAt","showProgress","accentStyles","SharedLinks","web_page","SharedMediaHeaderControl","SharedMedia","handleChange","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","voiceNoteMeta","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","recentlyFound","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","keys","topPromise","category","recentlyFoundPromise","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","recentlyFoundChats","localChats","globalChats","globalMessages","messagesCaption","search","closeSearchIconButton","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","formControl","focused","name","group","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","LanguagePicker","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","innerRef","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","dialogText","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","window","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","onSearchTextChange","DialogsList","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","disabled","canSendPhotos","canSendDocuments","canSendPolls","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","reset","onUpdate","onClientUpdate","now","assign","addTdLibListener","addListener","removeTdLibListener","setMaxListeners","Infinity","source1","source2","Object","EventEmitter","CreatePollDialog","handleClientUpdateNewPoll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","canAddOption","hint","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","accentColorMain","replyContentSubtitle","InputBoxHeader","replyIcon","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","StickerStore","t0","performance","regex","emojiRegex","exec","t1","timestamp","stickers","Suspense","fallback","multiple","accept","FooterCommand","onCommand","NotificationsCommandControl","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","is_member","can_send_messages","is_channel","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","HeaderCommand","handleCancel","selectedItems","values","handleReply","next","count","canBeDeleted","canBeForwarded","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","undefined","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","DayMeta","onClientUpdateLanguage","dayMeta","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","marginBottom","marginLeft","marginRight","Meta","editDate","onDateClick","views","meta","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","getWebPage","webPageContent","webPageMediaTop","webPageMediaBottom","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","showUnreadSeparator","showTitle","edit_date","forward_info","media","getUnread","messageClassName","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","messageSelectTick","messageAuthorColor","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","autoplay","playAnimated","pack","dialogTitleRoot","disablePointerEvents","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","isLottieMessage","getMediaFile","getAnimationData","animationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","onClientUpdateMediaThumbnailBlob","getMediaPreviewFile","handleContentClick","changeSpeed","speed","lottieRef","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","maxCount","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","withLanguage"],"mappings":"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","file":"static/js/3.77f6d250.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = <SafeLink className='shared-link-url' url={url} displayText={display_url} />;\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return <SafeLink className='shared-link-url' url={url} displayText={entityText} mail={mail} />;\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [null, <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { site_name, title, description } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                    autoplay={false}\n                    playAnimated={true}\n                    pack={true}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}