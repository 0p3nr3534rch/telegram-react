{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Components/ColumnMiddle/StickerSet.js","Utils/Animatior.js","Components/ColumnMiddle/StickersPickerHeader.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","@type","then","result","_this","props","setState","emojis","join","prevProps","prevState","snapshot","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","StickerSet","nextProps","nextState","nextContext","_this$props","info","theme","_this$props2","classes","onSelect","onMouseDown","onMouseOver","title","items","stickers","map","x","i","react_default","classNames","stickerSetItem","key","data-sticker-id","onClick","Sticker","preview","STICKER_SMALL_DISPLAY_SIZE","blur","withStyles","backgroundColor","palette","background","paper","color","text","primary","width","height","padding","boxSizing","&:hover","type","borderRadius","withTheme","Animator","duration","options","arguments","length","undefined","Object","classCallCheck","start","stopped","requestAnimationFrame","startAnim","timeStamp","end","draw","now","p","val","outSine","forEach","from","to","func","stop","cancelAnimationFrame","n","Math","sin","PI","StickersPickerHeader","possibleConstructorReturn","getPrototypeOf","call","onClientUpdateStickerSetPosition","update","position","scrollToPosition","_assertThisInitialize","assertThisInitialized","animator","anchorRef","scroll","scrollRef","current","anchor","anchorNode","ReactDOM","scrollFrom","scrollLeft","scrollTo","anchorFrom","Number","style","left","replace","anchorTo","ANIMATION_DURATION_200MS","abs","sign","handleWheel","event","deltaX","deltaY","handleSelect","indexOf","createRef","StickerStore","on","removeListener","_this2","openMedia","borderColor","ref","onWheel","accentBackgroundDark","objectSpread","borderStyle","accentStyles","StickersPicker","scrollTop","loadContent","_ref","asyncToGenerator","regenerator_default","mark","_callee","stickerSets","sets","promises","slicedSets","headerStickers","wrap","_context","prev","next","abrupt","is_masks","sent","push","set_id","Promise","all","slice","reduce","set","setsLength","_x","_x2","apply","loadInViewContentOnScroll","loadInViewContent","loadInViewContentOnScrollEnd","inViewItems","item","itemsMap","get","node","topBorder","bottomBorder","offsetHeight","nodeTop","offsetTop","nodeBottom","clientHeight","store","FileStore","getStore","loadedSets","has","loadStickerSetContent","updatePosition","minDiff","scrollHeight","firstOffsetTop","pos","element","diff","clientUpdate","handleScroll","_callee2","loadChunk","_this$state","concatSets","_context2","loadingChunk","finally","concat","loadPreviewContent","stickerId","getStickers","find","loadStickerContent","getNeighborStickersFromSets","handleMouseOver","target","dataset","mouseDown","mouseDownStickerId","previewStickerId","onPreview","handleMouseDown","Date","timestamp","showPreview","cancelSend","setTimeout","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","handleStickerSelect","handleSelectSet","_ref3","_callee3","_this$state2","_context3","_x3","Map","debounce","throttle","_this$state3","_this$state4","clear","Components_ColumnMiddle_StickerSet","el","Components_ColumnMiddle_StickersPickerHeader","onScroll","EmojiPickerButton","onClientUpdateChange","picker","handleButtonMouseEnter","buttonEnter","updatePicker","loadStickerSets","EMOJI_PICKER_TIMEOUT_MS","stickersPickerRef","reverse","loadStickerThumbnailContent","handleButtonMouseLeave","tryClosePicker","paperEnter","handlePaperMouseEnter","handlePaperMouseLeave","open","handleEmojiClick","tab","handleStickersClick","stickersPicker","handleStickerSend","handleStickerPreview","emojiPickerRef","ApplicationStore","LocalizationStore","t","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","native","isAppleDevice","overflowX","Components_ColumnMiddle_StickersPicker","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","onMouseLeave","InsertEmoticon_default","pickerRoot","defineProperty","pickerRootOpened","Button_default","headerButton","emoji-picker-content-stickers","enhance","compose","margin","flex","zIndex","modal","shape","boxShadow","shadows","bottom","display","withTranslation"],"mappings":"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","file":"static/js/5.178a6253.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary\n    },\n    stickerSetItem: {\n        width: STICKER_SMALL_DISPLAY_SIZE,\n        height: STICKER_SMALL_DISPLAY_SIZE,\n        padding: 3,\n        boxSizing: 'border-box',\n        '&:hover': {\n            background: theme.palette.type === 'dark' ? '#303030' : '#f4f4f4',\n            borderRadius: 6\n        }\n    }\n});\n\nclass StickerSet extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { info, theme } = this.props;\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (info !== nextProps.info) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { classes, info, onSelect, onMouseDown, onMouseOver } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map((x, i) => (\n            <div\n                className={classNames('sticker-set-item', classes.stickerSetItem)}\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onClick={() => onSelect(x)}\n                onMouseDown={onMouseDown}\n                onMouseOver={onMouseOver}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    preview\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE - 6}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startAnim);\n    };\n\n    startAnim = timeStamp => {\n        const { start, duration } = this;\n\n        this.start = timeStamp;\n        this.end = start + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, start, options } = this;\n\n        if (stopped) return;\n        if (now - start >= duration) this.stopped = true;\n\n        const p = (now - start) / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            func(from + (to - from) * val);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animator from '../../Utils/Animatior';\nimport Sticker from './../Message/Media/Sticker';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport StickerStore from '../../Stores/StickerStore';\nimport './StickersPickerHeader.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme),\n    ...accentStyles(theme)\n});\n\nclass StickersPickerHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { position: 0 };\n\n        this.scrollRef = React.createRef();\n        this.anchorRef = React.createRef();\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSetPosition', this.onClientUpdateStickerSetPosition);\n    }\n\n    onClientUpdateStickerSetPosition = update => {\n        const { position } = update;\n\n        this.setState({ position });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.position !== this.state.position) {\n            this.scrollToPosition();\n        }\n    }\n\n    scrollToPosition = () => {\n        const { position } = this.state;\n        const { animator, anchorRef, scrollRef } = this;\n\n        const scroll = scrollRef.current;\n        const anchor = anchorRef.current;\n        const anchorNode = ReactDOM.findDOMNode(anchor);\n\n        const scrollFrom = scroll.scrollLeft;\n        const scrollTo = position * 44 - 147;\n\n        const anchorFrom = Number(anchorNode.style.left.replace('px', ''));\n        const anchorTo = position * 44;\n\n        if (animator) {\n            animator.stop();\n        }\n        this.animator = new Animator(ANIMATION_DURATION_200MS, [\n            {\n                from: scrollFrom,\n                to: scrollTo,\n                func: left => (scroll.scrollLeft = left)\n            },\n            {\n                from:\n                    Math.abs(anchorTo - anchorFrom) > 338\n                        ? anchorTo - Math.sign(anchorTo - anchorFrom) * 338\n                        : anchorFrom,\n                to: anchorTo,\n                func: left => (anchorNode.style.left = left + 'px')\n            }\n        ]);\n        this.animator.start();\n    };\n\n    handleWheel = event => {\n        const { scrollRef } = this;\n\n        if (event.deltaX === 0) {\n            const scroll = scrollRef.current;\n\n            scroll.scrollLeft += event.deltaY;\n        }\n    };\n\n    handleSelect = sticker => {\n        const { stickers, onSelect } = this.props;\n\n        onSelect(stickers.indexOf(sticker));\n    };\n\n    render() {\n        const { classes, stickers } = this.props;\n\n        const items = stickers.map(x => (\n            <Sticker\n                key={x.sticker.id}\n                className='stickers-picker-header-sticker'\n                preview\n                sticker={x}\n                displaySize={32}\n                blur={false}\n                openMedia={() => this.handleSelect(x)}\n            />\n        ));\n\n        return (\n            <div className={classNames('stickers-picker-header', classes.borderColor)}>\n                <div ref={this.scrollRef} className='stickers-picker-header-scroll' onWheel={this.handleWheel}>\n                    <div className='stickers-picker-header-items'>{items}</div>\n                    <div\n                        ref={this.anchorRef}\n                        className={classNames('stickers-picker-header-anchor', classes.accentBackgroundDark)}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPickerHeader.propTypes = {\n    stickers: PropTypes.array.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickersPickerHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport StickersPickerHeader from './StickersPickerHeader';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { getNeighborStickersFromSets, getStickers } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.scrollRef = React.createRef();\n        this.itemsMap = new Map();\n        this.loadedSets = new Map();\n\n        this.state = {\n            stickerSets: null,\n            sets: [],\n            headerStickers: [],\n            position: 0\n        };\n\n        this.loadInViewContentOnScrollEnd = debounce(this.loadInViewContentOnScrollEnd, 100);\n        this.loadInViewContentOnScroll = throttle(this.loadInViewContentOnScroll, 2000);\n        this.updatePosition = throttle(this.updatePosition, 250);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { position, stickerSets, sets, showPreview } = this.state;\n\n        if (nextState.stickerSets !== stickerSets) {\n            return true;\n        }\n\n        if (nextState.sets !== sets) {\n            return true;\n        }\n\n        if (nextState.showPreview !== showPreview) {\n            return true;\n        }\n\n        if (nextState.position !== position) {\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop = () => {\n        this.scrollRef.current.scrollTop = 0;\n    };\n\n    loadContent = async (stickerSets, sets) => {\n        if (this.state.stickerSets) return;\n\n        if (!sets) {\n            const result = await TdLibController.send({\n                '@type': 'getInstalledStickerSets',\n                is_masks: false\n            });\n\n            const promises = [];\n            result.sets.forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            sets = await Promise.all(promises);\n        }\n\n        const slicedSets = sets.slice(0, 5);\n        const headerStickers = sets.reduce((preview, set) => {\n            if (set.stickers.length > 0) {\n                preview.push(set.stickers[0]);\n            }\n            return preview;\n        }, []);\n        this.setState({\n            stickerSets,\n            sets: slicedSets,\n            headerStickers\n        });\n        this.setsLength = slicedSets.length;\n    };\n\n    loadInViewContentOnScroll = () => {\n        this.loadInViewContent();\n    };\n\n    loadInViewContentOnScrollEnd = () => {\n        this.loadInViewContent(400);\n    };\n\n    loadInViewContent = (padding = 0) => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n\n        const inViewItems = [];\n        sets.forEach(x => {\n            const item = this.itemsMap.get(x.id);\n            const node = ReactDOM.findDOMNode(item);\n            if (node) {\n                const topBorder = scroll.scrollTop - padding;\n                const bottomBorder = scroll.scrollTop + scroll.offsetHeight + padding;\n\n                const nodeTop = node.offsetTop;\n                const nodeBottom = node.offsetTop + node.clientHeight;\n\n                if (nodeTop >= topBorder && node.offsetTop <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeBottom >= topBorder && nodeBottom <= bottomBorder) {\n                    inViewItems.push(x);\n                } else if (nodeTop <= topBorder && nodeBottom >= bottomBorder) {\n                    inViewItems.push(x);\n                }\n            }\n        });\n\n        inViewItems.forEach(x => {\n            const store = FileStore.getStore();\n            if (!this.loadedSets.has(x.id)) {\n                this.loadedSets.set(x.id, x.id);\n                loadStickerSetContent(store, x);\n            }\n        });\n    };\n\n    updatePosition = () => {\n        const scroll = this.scrollRef.current;\n\n        const { sets } = this.state;\n        let minDiff = scroll.scrollHeight;\n        let position = 0;\n        let firstOffsetTop = 0;\n        sets.forEach((x, pos) => {\n            const element = this.itemsMap.get(x.id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    firstOffsetTop = pos === 0 ? node.offsetTop : firstOffsetTop;\n\n                    const offsetTop = node.offsetTop - firstOffsetTop;\n                    if (node && offsetTop <= scroll.scrollTop) {\n                        const diff = Math.abs(scroll.scrollTop - offsetTop);\n                        if (diff <= minDiff) {\n                            minDiff = diff;\n                            position = pos;\n                        }\n                    }\n                }\n            }\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSetPosition',\n            position\n        });\n    };\n\n    handleScroll = async () => {\n        //this.loadInViewContentOnScroll();\n        this.loadInViewContentOnScrollEnd();\n        this.updatePosition();\n\n        const scroll = this.scrollRef.current;\n\n        if (this.loadingChunk) return;\n\n        let loadChunk = false;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight - 400) {\n            loadChunk = true;\n        }\n\n        if (!loadChunk) {\n            return false;\n        }\n\n        const { sets, stickerSets } = this.state;\n        if (stickerSets.sets.length === sets.length) return;\n\n        this.loadingChunk = true;\n        const promises = [];\n        stickerSets.sets.slice(this.setsLength, this.setsLength + 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n        this.setsLength += result.length;\n        let concatSets = sets.concat(result);\n        this.setState({ sets: concatSets });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n        const preloadStickers = getNeighborStickersFromSets(sticker, sets, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n\n        const { onPreview } = this.props;\n        const { sets } = this.state;\n\n        const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n        onPreview(sticker);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true }, () => {\n                    const { onPreview } = this.props;\n                    const { sets } = this.state;\n\n                    const sticker = getStickers(sets).find(x => x.sticker.id === stickerId);\n                    onPreview(sticker);\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n\n        const { onPreview } = this.props;\n\n        onPreview(null);\n\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleStickerSelect = sticker => {\n        const { onSelect } = this.props;\n        const { cancelSend } = this.state;\n\n        if (cancelSend) return;\n\n        onSelect(sticker);\n    };\n\n    handleSelectSet = async position => {\n        const { sets, stickerSets } = this.state;\n        const { scrollRef } = this;\n\n        if (position < sets.length) {\n            const element = this.itemsMap.get(sets[position].id);\n            if (element) {\n                const node = ReactDOM.findDOMNode(element);\n                if (node) {\n                    const scroll = scrollRef.current;\n                    scroll.scrollTop = node.offsetTop;\n                }\n            }\n        } else if (position < stickerSets.sets.length) {\n            if (this.loadingChunk) return;\n            if (stickerSets.sets.length === sets.length) return;\n\n            this.loadingChunk = true;\n            const promises = [];\n            stickerSets.sets.slice(this.setsLength, position + 1).forEach(x => {\n                promises.push(\n                    TdLibController.send({\n                        '@type': 'getStickerSet',\n                        set_id: x.id\n                    })\n                );\n            });\n\n            const result = await Promise.all(promises).finally(() => (this.loadingChunk = false));\n\n            this.setsLength += result.length;\n            let concatSets = sets.concat(result);\n            this.setState({ sets: concatSets }, () => {\n                if (position < concatSets.length) {\n                    this.handleSelectSet(position);\n                }\n            });\n        }\n    };\n\n    render() {\n        const { stickerSets, sets, headerStickers } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        this.itemsMap.clear();\n        const items = sets.map(x => (\n            <StickerSet\n                key={x.id}\n                ref={el => this.itemsMap.set(x.id, el)}\n                info={x}\n                onSelect={this.handleStickerSelect}\n                onMouseDown={this.handleMouseDown}\n                onMouseOver={this.handleMouseOver}\n            />\n        ));\n\n        return (\n            <div className='stickers-picker'>\n                <StickersPickerHeader onSelect={this.handleSelectSet} stickers={headerStickers} />\n                <div ref={this.scrollRef} className='stickers-picker-scroll' onScroll={this.handleScroll}>\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onPreview: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickerPreview from './StickerPreview';\nimport StickersPicker from './StickersPicker';\nimport { isAppleDevice } from '../../Utils/Common';\nimport { loadStickerThumbnailContent, loadStickerSetContent } from '../../Utils/File';\nimport { EMOJI_PICKER_TIMEOUT_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    },\n    pickerRoot: {\n        zIndex: theme.zIndex.modal,\n        width: 338,\n        overflowX: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.text.primary,\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[8],\n        position: 'absolute',\n        bottom: 80,\n        display: 'none'\n    },\n    pickerRootOpened: {\n        display: 'block'\n    }\n});\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            tab: 0\n        };\n\n        this.emojiPickerRef = React.createRef();\n        this.stickersPickerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    handleButtonMouseEnter = event => {\n        this.buttonEnter = true;\n        setTimeout(() => {\n            if (!this.buttonEnter) return;\n\n            this.updatePicker(true);\n            this.loadStickerSets();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    loadStickerSets = async () => {\n        if (this.sets) return;\n\n        this.stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        const promises = [];\n        this.stickerSets.sets.forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        this.sets = await Promise.all(promises);\n\n        const node = this.stickersPickerRef.current;\n\n        const store = FileStore.getStore();\n        const previewSets = this.sets.slice(0, 5).reverse();\n        previewSets.forEach(x => {\n            loadStickerSetContent(store, x);\n            node.loadedSets.set(x.id, x.id);\n        });\n\n        const previewStickers = this.sets.reduce((stickers, set) => {\n            if (set.stickers.length > 0) {\n                stickers.push(set.stickers[0]);\n            }\n            return stickers;\n        }, []);\n        previewStickers.forEach(x => {\n            loadStickerThumbnailContent(store, x);\n        });\n    };\n\n    handleButtonMouseLeave = () => {\n        this.buttonEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    tryClosePicker = () => {\n        const { sticker } = this.state;\n        if (this.paperEnter || this.buttonEnter || sticker) return;\n\n        this.updatePicker(false);\n    };\n\n    handlePaperMouseEnter = () => {\n        this.paperEnter = true;\n    };\n\n    handlePaperMouseLeave = () => {\n        this.paperEnter = false;\n        setTimeout(() => {\n            this.tryClosePicker();\n        }, EMOJI_PICKER_TIMEOUT_MS);\n    };\n\n    updatePicker = open => {\n        this.setState({ open });\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        const stickersPicker = this.stickersPickerRef.current;\n        const { tab } = this.state;\n\n        stickersPicker.loadContent(this.stickerSets, this.sets);\n\n        this.setState({ tab: 1 });\n        if (tab === 1) {\n            stickersPicker.scrollTop();\n        }\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updatePicker(false);\n    };\n\n    handleStickerPreview = sticker => {\n        this.setState({ sticker });\n\n        if (!sticker) {\n            this.tryClosePicker();\n        }\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { open, tab, sticker } = this.state;\n\n        if (open && !this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    ref={this.emojiPickerRef}\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    native={isAppleDevice()}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n\n            this.stickersPicker = (\n                <StickersPicker\n                    ref={this.stickersPickerRef}\n                    onSelect={this.handleStickerSend}\n                    onPreview={this.handleStickerPreview}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onMouseEnter={this.handleButtonMouseEnter}\n                    onMouseLeave={this.handleButtonMouseLeave}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <div\n                    className={classNames(classes.pickerRoot, { [classes.pickerRootOpened]: open })}\n                    onMouseEnter={this.handlePaperMouseEnter}\n                    onMouseLeave={this.handlePaperMouseLeave}>\n                    <div className='emoji-picker-header'>\n                        <Button\n                            color={tab === 0 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleEmojiClick}>\n                            {t('Emoji')}\n                        </Button>\n                        <Button\n                            color={tab === 1 ? 'primary' : 'default'}\n                            className={classes.headerButton}\n                            onClick={this.handleStickersClick}>\n                            {t('Stickers')}\n                        </Button>\n                    </div>\n                    <div className={classNames('emoji-picker-content', { 'emoji-picker-content-stickers': tab === 1 })}>\n                        {this.picker}\n                        {this.stickersPicker}\n                    </div>\n                    <StickerPreview sticker={sticker} />\n                </div>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}