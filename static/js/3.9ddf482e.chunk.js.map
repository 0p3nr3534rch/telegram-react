{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props6","_this$props7","onOpenGroupInCommon","onOpenSharedDocument","onOpenSharedMedia","_ref","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedDocumentHeader","title","headerBackButton","SharedDocuments","isDocumentMessage","insertSorted","array","element","comparator","toConsumableArray","slice","messageComparator","right","onUpdateMessageContent","new_content","old_content","index","findIndex","onUpdateNewMessage","loadMessageContents","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","setItems","messages","fromMessageId","loading","query","sender_user_id","from_message_id","offset","finally","handleScroll","listRef","Tile_SharedMedia_SharedDocument","onScroll","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openSharedDocument","openGroupInCommon","loadChatCounters","getChatCounters","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocument","handleCloseSharedDocument","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedDocuments","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","el","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","default","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","undefined","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","callback","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","_x2","_x3","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","_x4","_this$state3","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelection","mouseDown","selectMessage","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","completed","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","getSupergroupId","upgraded_from_basic_group_id","last_message","scrollBehaviorNone","prevHistory","_ref5","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","prevMessageId","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.9ddf482e.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log('ChatDetails.componentDidUpdate', this.props.counters);\n\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            counters,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedDocument,\n            onOpenSharedMedia,\n            popup,\n            t\n        } = this.props;\n        const [ photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount ] = counters || [0, 0, 0, 0, 0, 0];\n\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    { (!isMe || isGroup || popup && !isGroup) &&\n                        <>\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    }\n                    {(photoCount > 0 || videoCount > 0 || documentCount > 0 || audioCount > 0 || urlCount > 0 || voiceAndVideoNoteCount > 0 || groupInCommonCount > 0) && (\n                        <>\n                            <List>\n                                { photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedMedia}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { videoCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocument}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { audioCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { urlCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                { voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1 ? '1 voice message' : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1 ? '1 group in common' : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    <List>\n                        {items}\n                    </List>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedDocument: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    },\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>\n                        { can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem> }\n                        { (can_be_deleted_only_for_self || can_be_deleted_for_all_users) && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem> }\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocuments.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nfunction SharedDocumentHeader({ classes, title, onClose }) {\n    return (\n        <div className='header-master'>\n            <IconButton className={classes.headerBackButton} onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow cursor-pointer'>\n                <span className='header-status-content'>{title}</span>\n            </div>\n        </div>\n    );\n}\n\nclass SharedDocuments extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        // console.log('SharedDocuments.componentDidMount');\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        // console.log('SharedDocuments.componentWillMount');\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    isDocumentMessage = message => {\n        return true;\n\n        if (!message) return false;\n\n        const { content } = message;\n        if (!content) return false;\n\n        return content['@type'] === 'messageDocument';\n    };\n\n    insertSorted = (array, element, comparator) => {\n        let i = 0;\n        for (;i < array.length && comparator(array[i], element) < 0; i++) {}\n\n        return [...array.slice(0, i), element, ...array.slice(i)];\n    };\n\n    messageComparator = (left, right) => {\n        return left.id - right.id;\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n        if (chat_id !== chatId) return;\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (!items.length) return;\n        if (message_id > items[0].index) return;\n        if (message_id < items[items.length - 1].index) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n\n        if (new_content['@type'] === 'messageDocument') {\n            const index = items.findIndex(x => x.id === message_id);\n            if (index === -1) {\n                // add new document\n                this.setState({ items: this.insertSorted(items, message, this.messageComparator) });\n            } else {\n                // replace document\n                this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n            }\n        } else {\n            const  index = items.findIndex(x => x.id === message_id);\n            if (index === -1) {\n\n            } else {\n                // remove none document\n                this.setState({ items: items.filter(x => x.id !== message_id) });\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        const { message } = update;\n        const { chat_id, content } = message;\n\n        if (chat_id !== chatId) return;\n        // console.log(`SharedDocuments.onUpdateNewMessage chat_id=${chat_id} message_id=${message.id}`, this.state.items);\n\n        if (content['@type'] !== 'messageDocument') return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        this.setState({ items: [message].concat(items)});\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        const { chat_id, message_ids } = update;\n        if (chat_id !== chatId) return;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState({ items: items.filter(x => !map.has(x.id))},\n            () => {\n                if (this.state.items.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n            });\n    };\n\n    loadContent = async () => {\n        await this.onLoadNext();\n        return;\n\n        const { chatId } = this.props;\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: 0,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: { '@type': 'searchMessagesFilterDocument' }\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: result.messages.filter(this.isDocumentMessage) });\n    };\n\n    onLoadNext = async () => {\n        console.log('SharedDocuments.onLoadNext');\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        if (this.loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: { '@type': 'searchMessagesFilterDocument' }\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.items !== items) return;\n        if (!result.messages.length) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: items.concat(result.messages.filter(this.isDocumentMessage)) });\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    render() {\n        const { classes, t, onClose } = this.props;\n        const { items } = this.state;\n\n        const messages = items.map(x => (<SharedDocument key={`chat_id=${x.chat_id}_message_id=${x.id}`} chatId={x.chat_id} messageId={x.id} />));\n\n        return (\n            <>\n                <SharedDocumentHeader classes={classes} title={t('DocumentsTitle')} onClose={onClose}/>\n                <div ref={this.listRef} className='shared-documents-list' onScroll={this.handleScroll}>\n                    {messages}\n                </div>\n            </>\n        );\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedDocument from './SharedMedia/SharedDocuments';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocument: false,\n            openGroupInCommon: false,\n            counters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadChatCounters(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadChatCounters(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocument: false,\n            openGroupInCommon: false,\n            counters: null\n        });\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocument = () => {\n        this.setState({ openSharedDocument: true });\n    };\n\n    handleCloseSharedDocument = () => {\n        this.setState({ openSharedDocument: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            userChatId,\n            openSharedDocument,\n            openSharedMedia,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedDocument) {\n            content = (\n                <SharedDocument\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocument}\n                />\n            );\n        }\n        else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenSharedDocument={this.handleOpenSharedDocument}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}