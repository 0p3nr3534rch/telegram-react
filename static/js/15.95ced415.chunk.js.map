{"version":3,"sources":["Components/ColumnMiddle/EmojiPickerButton.js"],"names":["EmojiPickerButton","props","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onClientUpdateChange","update","picker","updateAnchorEl","anchorEl","setState","switchPopover","event","state","currentTarget","ApplicationStore","on","LocalizationStore","removeListener","_this2","_this$props","classes","theme","t","open","Boolean","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","emoji_mart__WEBPACK_IMPORTED_MODULE_12__","set","showPreview","showSkinTones","onSelect","color","palette","primary","dark","Fragment","rel","type","href","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_6___default","className","iconButton","aria-label","onClick","_material_ui_icons_InsertEmoticon__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_core_Popover__WEBPACK_IMPORTED_MODULE_8___default","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Suspense","fallback","React","Component","enhance","compose","withStyles","margin","withTheme","withTranslation"],"mappings":"kSAyBMA,sBACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiBVQ,qBAAuB,SAAAC,GACnBR,EAAKS,OAAS,MAnBCT,EAsBnBU,eAAiB,SAAAC,GACbX,EAAKY,SAAS,CAAED,SAAUA,KAvBXX,EA0BnBa,cAAgB,SAAAC,GACZd,EAAKU,eAAeV,EAAKe,MAAMJ,SAAW,KAAOG,EAAME,gBAxBvDhB,EAAKe,MAAQ,CACTJ,SAAU,MAJCX,mFASfiB,IAAiBC,GAAG,0BAA2Bf,KAAKI,sBACpDY,IAAkBD,GAAG,6BAA8Bf,KAAKI,qEAIxDU,IAAiBG,eAAe,0BAA2BjB,KAAKI,sBAChEY,IAAkBC,eAAe,6BAA8BjB,KAAKI,uDAe/D,IAAAc,EAAAlB,KAAAmB,EACyBnB,KAAKJ,MAA3BwB,EADHD,EACGC,QAASC,EADZF,EACYE,MAAOC,EADnBH,EACmBG,EAChBd,EAAaR,KAAKY,MAAlBJ,SAEFe,EAAOC,QAAQhB,GAErB,IAAKR,KAAKM,OAAQ,CACd,IAAMmB,EAAO,CACTC,OAAQJ,EAAE,UACVK,SAAUL,EAAE,iBACZM,SAAUN,EAAE,yBACZO,WAAY,CACRH,OAAQJ,EAAE,iBACVQ,OAAQR,EAAE,UACVS,OAAQT,EAAE,iBACVU,OAAQV,EAAE,iBACVW,MAAOX,EAAE,aACTY,SAAUZ,EAAE,YACZa,OAAQb,EAAE,gBACVc,QAASd,EAAE,WACXe,QAASf,EAAE,WACXgB,MAAOhB,EAAE,SACTiB,OAAQjB,EAAE,YAIlBtB,KAAKM,OACDkC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,IAAI,QACJC,aAAa,EACbC,eAAe,EACfC,SAAU/C,KAAKJ,MAAMmD,SACrBC,MAAO3B,EAAM4B,QAAQC,QAAQC,KAC7B1B,KAAMA,IAKlB,OACIe,EAAAC,EAAAC,cAAAF,EAAAC,EAAAW,SAAA,KACIZ,EAAAC,EAAAC,cAAA,QACIW,IAAI,aACJC,KAAK,WACLC,KAA6B,SAAvBlC,EAAM4B,QAAQK,KAAkB,sBAAwB,yBAElEd,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAYgB,UAAWrC,EAAQsC,WAAYC,aAAW,WAAWC,QAAS5D,KAAKU,eAC3E8B,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,OAEJD,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CACIsB,GAAG,uBACHxC,KAAMA,EACNf,SAAUA,EACVwD,QAAS,kBAAM9C,EAAKX,eAAe,OACnC0D,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhB3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,SAAP,CAAgBC,SAAU9B,EAAAC,EAAAC,cAAA,aAAS1C,KAAKM,iBA5F5BiE,IAAMC,YAmGhCC,EAAUC,YACZC,IA1GW,CACXjB,WAAY,CACRkB,OAAQ,YAwGO,CAAEC,WAAW,IAChCC,eAGWL,YAAQ9E","file":"static/js/15.95ced415.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport Popover from '@material-ui/core/Popover';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport { Picker } from 'emoji-mart';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './EmojiPickerButton.css';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0px'\n    }\n};\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    updateAnchorEl = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    switchPopover = event => {\n        this.updateAnchorEl(this.state.anchorEl ? null : event.currentTarget);\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { anchorEl } = this.state;\n\n        const open = Boolean(anchorEl);\n\n        if (!this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <Picker\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton className={classes.iconButton} aria-label='Emoticon' onClick={this.switchPopover}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <Popover\n                    id='render-props-popover'\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={() => this.updateAnchorEl(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <React.Suspense fallback={<div/>}>{this.picker}</React.Suspense>\n                </Popover>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}