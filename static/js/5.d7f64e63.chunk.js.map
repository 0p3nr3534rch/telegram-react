{"version":3,"sources":["Components/ColumnMiddle/StickerSet.js","Components/ColumnMiddle/StickersPicker.js","Components/ColumnMiddle/EmojiPickerButton.js"],"names":["StickerSet","loadContent","info","_this","props","stickers","store","FileStore","getStore","forEach","x","loadStickerContent","this","_this$props","classes","onSelect","title","items","map","react_default","a","createElement","className","key","sticker","id","data-sticker-id","style","width","STICKER_SMALL_DISPLAY_SIZE","height","onClick","Sticker","displaySize","blur","classNames","React","Component","withStyles","theme","background","palette","type","paper","color","text","primary","StickersPicker","state","stickerSets","_callee2","promises","result","regenerator_default","wrap","_context2","prev","next","loaded","abrupt","TdLibController","send","@type","is_masks","sent","sets","slice","push","set_id","Promise","all","setState","setTimeout","Object","asyncToGenerator","mark","_callee","_context","stop","getItems","set","loadPreviewContent","stickerId","find","then","previewStickerId","previewStickerEmojis","emojis","join","handleMouseOver","event","handleMouseOut","handleMouseDown","Number","target","dataset","mouseDownStickerId","now","Date","timestamp","showPreview","cancelSend","mouseDown","document","addEventListener","handleMouseUp","preventDefault","stopPropagation","removeEventListener","nextProps","nextState","nextContext","_this$state","length","Components_ColumnMiddle_StickerSet","Boolean","StickersHint","STICKER_PREVIEW_DISPLAY_SIZE","EmojiPickerButton","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClientUpdateChange","update","picker","updateAnchorEl","anchorEl","tab","switchPopover","currentTarget","handleMouseLeave","handleEmojiClick","handleStickersClick","stickersPickerRef","current","handleStickerSend","clientUpdate","createRef","popoverRef","ApplicationStore","on","LocalizationStore","removeListener","_this2","t","open","i18n","search","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","dist_es","showSkinTones","dark","overflowX","Fragment","rel","href","IconButton_default","iconButton","aria-label","onMouseEnter","InsertEmoticon_default","Popover_default","ref","onClose","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","onMouseLeave","Button_default","headerButton","emoji-picker-content-stickers","Components_ColumnMiddle_StickersPicker","enhance","compose","margin","borderRadius","flex","withTheme","withTranslation"],"mappings":"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","file":"static/js/5.d7f64e63.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport { loadStickerContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './StickerSet.css';\n\nconst styles = theme => ({\n    title: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.paper : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass StickerSet extends React.Component {\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        const { stickers } = info;\n        if (!stickers) return;\n\n        const store = FileStore.getStore();\n        stickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    render() {\n        const { classes, info, onSelect } = this.props;\n        if (!info) return null;\n\n        const { title, stickers } = info;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_SMALL_DISPLAY_SIZE, height: STICKER_SMALL_DISPLAY_SIZE }}\n                onClick={() => onSelect(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-item-sticker'\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        return (\n            <div className='sticker-set'>\n                <div className={classNames('sticker-set-title', classes.title)}>\n                    <span>{title}</span>\n                </div>\n                <div className='sticker-set-content'>{items}</div>\n            </div>\n        );\n    }\n}\n\nStickerSet.propTypes = {\n    info: PropTypes.object.isRequired,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(StickerSet);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StickerSet from './StickerSet';\nimport Sticker from './StickersHint';\nimport { loadStickerContent } from '../../Utils/File';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersPicker.css';\n\nclass StickersPicker extends React.Component {\n    state = {\n        stickerSets: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextState.stickerSets !== this.state.stickerSets || nextState.sets !== this.state.sets;\n    }\n\n    loadContent = async () => {\n        if (this.loaded) return;\n\n        const stickerSets = await TdLibController.send({\n            '@type': 'getInstalledStickerSets',\n            is_masks: false\n        });\n\n        let promises = [];\n        stickerSets.sets.slice(0, 5).forEach(x => {\n            promises.push(\n                TdLibController.send({\n                    '@type': 'getStickerSet',\n                    set_id: x.id\n                })\n            );\n        });\n\n        let result = await Promise.all(promises);\n\n        this.loaded = true;\n        this.setState({ stickerSets, sets: result }, () => {\n            setTimeout(async () => {\n                promises = [];\n                stickerSets.sets.forEach(x => {\n                    promises.push(\n                        TdLibController.send({\n                            '@type': 'getStickerSet',\n                            set_id: x.id\n                        })\n                    );\n                });\n\n                result = await Promise.all(promises);\n\n                this.setState({ stickerSets, sets: result });\n            }, 250);\n        });\n    };\n\n    getItems = sets => {\n        const stickers = [];\n        sets.forEach(set => {\n            set.stickers.forEach(sticker => {\n                stickers.push(sticker);\n            });\n        });\n\n        return stickers;\n    };\n\n    loadPreviewContent = stickerId => {\n        const { sets } = this.state;\n        const items = this.getItems(sets);\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const stickersPerRow = 5;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: {\n                '@type': 'inputFileId',\n                id: stickerId\n            }\n        }).then(result => {\n            const { previewStickerId } = this.state;\n            if (previewStickerId === stickerId) {\n                this.setState({\n                    previewStickerEmojis: result.emojis.join(' ')\n                });\n            }\n        });\n\n        // const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        // preloadStickers.forEach(x => {\n        //     loadStickerContent(store, x, null);\n        // });\n    };\n\n    handleMouseOver = event => {};\n\n    handleMouseOut = event => {};\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { onSelect } = this.props;\n        const { stickerSets, sets, previewStickerId, showPreview, previewStickerEmojis } = this.state;\n        if (!stickerSets) return null;\n\n        if (!sets) return null;\n        if (!sets.length) return null;\n\n        const items = sets.map(x => <StickerSet key={x.id} info={x} onSelect={onSelect} />);\n        const sticker = this.getItems(sets).find(x => x.sticker.id === previewStickerId);\n\n        return (\n            <div className='stickers-picker'>\n                <div className='stickers-picker-header' />\n                <div className='stickers-picker-scroll'>{items}</div>\n                {Boolean(sticker) && showPreview && (\n                    <div className='sticker-set-dialog-preview'>\n                        <div className='sticker-set-dialog-preview-emoji'>{previewStickerEmojis}</div>\n                        <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nStickersPicker.propTypes = {\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default StickersPicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport Popover from '@material-ui/core/Popover';\nimport { Picker as EmojiPicker } from 'emoji-mart';\nimport StickersPicker from './StickersPicker';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EmojiPickerButton.css';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0px'\n    },\n    headerButton: {\n        borderRadius: 0,\n        flex: '50%'\n    }\n};\n\nclass EmojiPickerButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            tab: 0\n        };\n\n        this.stickersPickerRef = React.createRef();\n        this.popoverRef = React.createRef();\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateChange);\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateChange);\n    }\n\n    onClientUpdateChange = update => {\n        this.picker = null;\n    };\n\n    updateAnchorEl = anchorEl => {\n        this.setState({ anchorEl: anchorEl, tab: anchorEl === null ? 0 : this.state.tab });\n    };\n\n    switchPopover = event => {\n        this.updateAnchorEl(this.state.anchorEl ? null : event.currentTarget);\n    };\n\n    handleMouseOut = event => {\n        //console.log('Popover.handleMouseOut', event.target, event.currentTarget);\n    };\n\n    handleMouseLeave = event => {\n        //console.log('Popover.handleMouseLeave', event);\n    };\n\n    handleEmojiClick = () => {\n        this.setState({ tab: 0 });\n    };\n\n    handleStickersClick = () => {\n        this.stickersPickerRef.current.loadContent();\n\n        this.setState({ tab: 1 });\n    };\n\n    handleStickerSend = sticker => {\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n\n        this.updateAnchorEl(null);\n    };\n\n    render() {\n        const { classes, theme, t } = this.props;\n        const { anchorEl, tab } = this.state;\n\n        const open = Boolean(anchorEl);\n\n        if (!this.picker) {\n            const i18n = {\n                search: t('Search'),\n                notfound: t('NotEmojiFound'),\n                skintext: t('ChooseDefaultSkinTone'),\n                categories: {\n                    search: t('SearchResults'),\n                    recent: t('Recent'),\n                    people: t('SmileysPeople'),\n                    nature: t('AnimalsNature'),\n                    foods: t('FoodDrink'),\n                    activity: t('Activity'),\n                    places: t('TravelPlaces'),\n                    objects: t('Objects'),\n                    symbols: t('Symbols'),\n                    flags: t('Flags'),\n                    custom: t('Custom')\n                }\n            };\n\n            this.picker = (\n                <EmojiPicker\n                    set='apple'\n                    showPreview={false}\n                    showSkinTones={false}\n                    onSelect={this.props.onSelect}\n                    color={theme.palette.primary.dark}\n                    i18n={i18n}\n                    style={{ width: 338, overflowX: 'hidden' }}\n                />\n            );\n        }\n\n        return (\n            <>\n                <link\n                    rel='stylesheet'\n                    type='text/css'\n                    href={theme.palette.type === 'dark' ? 'emoji-mart.dark.css' : 'emoji-mart.light.css'}\n                />\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Emoticon'\n                    onMouseEnter={this.switchPopover}\n                    onClick={this.switchPopover}>\n                    <InsertEmoticonIcon />\n                </IconButton>\n                <Popover\n                    id='render-props-popover'\n                    ref={this.popoverRef}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={() => this.updateAnchorEl(null)}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    transitionDuration={0}>\n                    <div\n                        style={{ width: 338, overflowX: 'hidden', background: 'transparent' }}\n                        onMouseLeave={this.switchPopover}>\n                        <div className='emoji-picker-header'>\n                            <Button\n                                color={tab === 0 ? 'primary' : 'default'}\n                                className={classes.headerButton}\n                                onClick={this.handleEmojiClick}>\n                                EMOJI\n                            </Button>\n                            <Button\n                                color={tab === 1 ? 'primary' : 'default'}\n                                className={classes.headerButton}\n                                onClick={this.handleStickersClick}>\n                                STICKERS\n                            </Button>\n                        </div>\n                        <div\n                            className={classNames('emoji-picker-content', {\n                                'emoji-picker-content-stickers': tab === 1\n                            })}>\n                            {this.picker}\n                            <StickersPicker ref={this.stickersPickerRef} onSelect={this.handleStickerSend} />\n                        </div>\n                    </div>\n                </Popover>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(EmojiPickerButton);\n"],"sourceRoot":""}