{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","__webpack_require__","d","__webpack_exports__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","file_name","emoji","isMediaContent","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","handleSelectUser","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadMessageIcon","unreadCount","unreadMentionCount","showUnreadCount","showDraftChat","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","& $iconIndicator","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","HeaderProgress","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","toLocaleDateString","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","handleUpdateChatReadOutbox","sendingState","unread","payload","newMessageId","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props9","_this$props10","showUnreadSeparator","showTitle","_this$props11","webPage","media","messageClassName","message-selected","messageSelected","messageHighlighted","meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","getClientData","unpinned_message_id","handleUnpin","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","_extends","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","children","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","inHistory","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"6LAYMA,GAAc,EAs4BdC,EAAQ,gBAn4BV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAkBJI,SAnBc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAmBH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAEE,eAFFF,EAAAG,GAAA,EAUE,6BAVFH,EAAAG,GAAA,yBAGCnB,EAAKoB,IAAIN,EAAOO,MAEhBrB,EAAKsB,aAAaR,GAElBd,EAAKuB,KAAKT,EAAO,SAAUA,GAP5BE,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,EAWOlB,EAAKyB,2BAA2BX,GAXvC,sBAAAE,EAAAQ,OAAA,qCAAAR,EAAAU,SAAAb,MAnBG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAuCd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCAIL,IAAK,wBAIL,IAAK,2BACDd,EAAKuB,KAAKT,EAAO,SAAUA,KAlDzBd,EA0Dd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5DvC9B,EA+DdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjE1C9B,EAoEdyB,2BApEc,eAAAW,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoEe,SAAAyB,EAAMvB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACpBJ,EADoB,CAAAwB,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAEpBV,EAAOyB,oBAFa,CAAAD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAImB,0CAAxCV,EAAOyB,oBAAoB,SAJN,CAAAD,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAKflB,EAAKwC,SALU,wBAAAF,EAAAZ,SAAAW,MApEf,gBAAAI,GAAA,OAAAL,EAAAR,MAAAzB,KAAA0B,YAAA,GAAA7B,EA6EdsB,aAAe,SAAAR,GACX,GAAKA,EAAL,CADqB,IAGbO,EAASP,EAATO,KACHA,IAELrB,EAAK0C,gBAAgBrB,GACrBrB,EAAK2C,cAActB,MApFTrB,EAuFd0C,gBAAkB,SAAArB,GAAQ,IACduB,EAA4BvB,EAA5BuB,IAAKC,EAAuBxB,EAAvBwB,GAAIC,EAAmBzB,EAAnByB,QAASC,EAAU1B,EAAV0B,MAG1B,UAFO1B,EAAKuB,IAEP5C,EAAKgD,UAAUC,IAAIJ,IACnBE,EAAMG,2BACNrD,GAAgBiD,GAAYF,GAAjC,CAEA,IAAMO,EAAQnD,EAAKgD,UAAUI,IAAIP,GACjC,GAAKM,EAAL,CAEAnD,EAAKgD,UAAUK,OAAOR,GAEtB,IAAM/C,EAAQE,EAAKsD,WAEnBH,EAAMI,QAAQ,SAAAC,GACV,OAAQA,EAAK,UACT,IAAK,OACDxD,EAAKyD,WAAW3D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,IAAK,UACD5C,EAAK0D,cAAc5D,EAAO0D,EAAMnC,EAAMuB,GACtC,MAEJ,IAAK,UACD5C,EAAK2D,cAAc7D,EAAO0D,EAAMnC,EAAMuB,EAAK,MAC3C,MAEJ,IAAK,OACD5C,EAAK4D,WAAW9D,EAAO0D,EAAMnC,EAAMuB,GACnC,MAEJ,QACIiB,QAAQC,MAAM,wCAAyCN,SAzHzDxD,EA+Hd2C,cAAgB,SAAAtB,GAAQ,IACZwB,EAAexB,EAAfwB,GAAIkB,EAAW1C,EAAX0C,cACL1C,EAAKuB,IAEP5C,EAAKgE,QAAQf,IAAIJ,KAClBkB,EAAOE,wBAEXjE,EAAKgE,QAAQX,OAAOR,KAtIV7C,EAyIdyD,WAAa,SAAC3D,EAAOoE,EAAM7C,EAAMuB,GACxBsB,GAELlE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKoE,oBAAoBF,EAAKrB,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeJ,MAjJ3ClE,EAqJd4D,WAAa,SAAC9D,EAAOyE,EAAMlD,EAAMuB,GACxB2B,GAELvE,EAAKmE,aACDrE,EACAuB,EACAuB,EACA,kBAAM5C,EAAKwE,oBAAoBD,EAAK1B,GAAIxB,EAAKwB,KAC7C,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAeC,MA7J3CvE,EAiKd0D,cAAgB,SAAC5D,EAAO2E,EAASpD,EAAMuB,GACnC,GAAK6B,EAAL,CAD2C,IAGnCC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAClD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERnF,EAAKoF,WAAWtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GACxC,MAEJ,IAAK,kBAAmB,IACZY,EAAaX,EAAbW,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAC9C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,GAGlDI,GACA7E,EAAK8E,YAAYhF,EAAO+E,EAAOxD,EAAMuB,EAAK6B,GAG1CQ,GACAjF,EAAKkF,eAAepF,EAAOmF,EAAU5D,EAAMuB,EAAK6B,GAGhDM,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1Cc,GACAvF,EAAK2D,cAAc7D,EAAOyF,EAASlE,EAAMuB,EAAK6B,GAG9CgB,GACAzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAG1CkB,GACA3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,GAGnDiB,GACA1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GAGvD,MAEJ,IAAK,eAAgB,IAETY,EADUX,EAAVqB,MACAV,SAERrF,EAAKsF,eAAexF,EAAOuF,EAAUhE,EAAMuB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAK4F,YAAY9F,EAAO2F,EAAOpE,EAAMuB,EAAK6B,GAC1C,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAER1F,EAAK8F,gBAAgBhG,EAAO4F,EAAYrE,EAAMuB,EAAK6B,GACnD,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WAER3F,EAAK6F,gBAAgB/F,EAAO6F,EAAYtE,EAAMuB,EAAK6B,MAtRjDzE,EA8RdoF,WAAa,SAACtF,EAAOqF,EAAM9D,EAAMuB,EAAK6B,GAClC,GAAKU,EAAL,CAD8C,IAGtCR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACfA,GACA/E,EAAKgF,YAAYlF,EAAOiF,EAAO1D,EAAMuB,EAAK6B,GAG1CE,GACA3E,EAAK4E,gBAAgB9E,EAAO6E,EAAWtD,EAAMuB,EAAK6B,KAvS5CzE,EA2SdgF,YAAc,SAAClF,EAAOiF,EAAO1D,EAAMuB,EAAKoD,GACpC,GAAIjB,EACA,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAMmB,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAYrB,EAAMmB,MAAMD,GAC9B,GAAIG,EAAW,CACX,IAAMC,EAASD,EAAUrB,MACzB,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsG,gBAAgBN,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,KAErD,UAzTNhG,EAgUd8E,YAAc,SAAChF,EAAO+E,EAAOxD,EAAMuB,EAAKoD,GACpC,GAAInB,EAAM2B,sBAAuB,CAC7B,IAAMH,EAASxB,EAAM2B,sBAAsBzB,MACvCsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyG,yBAAyBT,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAInB,EAAMA,MAAO,CACb,IAAMwB,EAASxB,EAAMA,MACjBwB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2G,gBAAgBX,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAtVnDhG,EA4VdkF,eAAiB,SAACpF,EAAOmF,EAAU5D,EAAMuB,EAAKoD,GAC1C,GAAIf,EAAS2B,UAAW,KACLP,EAAWpB,EAAS2B,UAA3B7B,MACJsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6G,4BAA4Bb,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACjE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIf,EAASA,SAAU,KACDoB,EAAWpB,EAArBA,SACJoB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8G,mBAAmBd,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAlXnDhG,EAwXdsF,eAAiB,SAACxF,EAAOuF,EAAUhE,EAAMuB,EAAKoD,GAC1C,IAAMe,EAAaC,YAAc3B,GACjC,GAAI0B,EAAY,CACZ,IAAMV,EAASrG,EAAKiH,gBAAgBF,GAChCV,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKkH,mBAAmBlB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACxD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,OAlYxDhG,EAwYd2D,cAAgB,SAAC7D,EAAOyF,EAASlE,EAAMuB,EAAKoD,GACxC,GAAIT,EAAQqB,UAAW,CACnB,IAAMP,EAASd,EAAQqB,UAAU7B,MACjC,GAAIsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKqH,2BAA2BF,EAAQC,EAAW/F,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,GAAOT,MAKzE,GAAIA,EAAQA,QAAS,CACjB,IAAMc,EAASd,EAAQA,QACvB,GAAIc,GAAUA,EAAOxD,KAAOxB,EAAKwB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKsH,kBAAkBH,EAAQC,EAAW/F,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,GAAOT,QApa1DvF,EA0ad6F,gBAAkB,SAAC/F,EAAOyH,EAAWlG,EAAMuB,EAAKoD,GAC5C,GAAIuB,EAAUC,MAAO,CACjB,IAAMnB,EAASkB,EAAUC,MACrBnB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKyH,oBAAoBzB,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAnbnDhG,EAybd8F,gBAAkB,SAAChG,EAAO4H,EAAWrG,EAAMuB,EAAKoD,GAC5C,GAAI0B,EAAUd,UAAW,CACrB,IAAMP,EAASqB,EAAUd,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK2H,6BAA6B3B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAI0B,EAAUjC,MAAO,CACjB,IAAMY,EAASqB,EAAUjC,MACrBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK4H,oBAAoB5B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA/cnDhG,EAqdd4F,YAAc,SAAC9F,EAAO2F,EAAOpE,EAAMuB,EAAKoD,GACpC,GAAIP,EAAMmB,UAAW,CACjB,IAAMP,EAASZ,EAAMmB,UAAU7B,MAC3BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK6H,yBAAyB7B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAC9D,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIP,EAAMA,MAAO,CACb,IAAMY,EAASZ,EAAMA,MACjBY,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK8H,gBAAgB9B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACrD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OA3enDhG,EAifd4E,gBAAkB,SAAC9E,EAAO6E,EAAWtD,EAAMuB,EAAKoD,GAC5C,GAAIrB,EAAUiC,UAAW,CACrB,IAAMP,EAAS1B,EAAUiC,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAK+H,6BAA6B/B,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KAClE,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAI6D,IAAoBV,KAKlE,GAAIrB,EAAUA,UAAW,CACrB,IAAM0B,EAAS1B,EAAUA,UACrB0B,GAAUA,EAAOxD,KAAOxB,EAAKwB,IAC7B7C,EAAKmE,aACDrE,EACAuG,EACAzD,EACA,kBAAM5C,EAAKgI,oBAAoBhC,EAAIO,QAASP,EAAInD,GAAIxB,EAAKwB,KACzD,kBAAM7C,EAAKqE,cAAchD,EAAKwB,GAAIyB,IAAe0B,OAvgBnDhG,EA0kBdiI,gBAAkB,SAACnI,EAAOuB,KA1kBZrB,EAosBdoD,IAAM,SAAA8E,GACF,OAAOlI,EAAKmD,MAAMC,IAAI8E,IArsBZlI,EAwsBdoB,IAAM,SAAAC,GACFrB,EAAKmD,MAAM/B,IAAIC,EAAKwB,GAAIxB,IAzsBdrB,EA4sBdmI,QAAU,SAAAD,GACN,OAAOlI,EAAKoI,UAAUhF,IAAI8E,IA7sBhBlI,EAgtBdqI,QAAU,SAACH,EAAQI,GACftI,EAAKoI,UAAUhH,IAAI8G,EAAQI,IAjtBjBtI,EAotBduI,WAAa,SAAAL,GACTlI,EAAKoI,UAAU/E,OAAO6E,IArtBZlI,EAwtBdiH,gBAAkB,SAAAF,GACd,IAAMmB,EAASlI,EAAKwI,cAAcpF,IAAI2D,GAEtC,OAAO/G,EAAKoD,IAAI8E,IA3tBNlI,EA8tBdyI,gBAAkB,SAAC1B,EAAY1F,GAC3BrB,EAAKwI,cAAcpH,IAAI2F,EAAY1F,EAAKwB,IAExC7C,EAAKoB,IAAIC,IAjuBCrB,EAouBd0I,WAAa,SAAAJ,GACT,IAAKA,EACD,OAAO,KAGX,GAAItI,EAAK2I,KAAK1F,IAAIqF,GACd,OAAOtI,EAAK2I,KAAKvF,IAAIkF,GAGzB,IAAMM,EAAMC,IAAIC,gBAAgBR,GAGhC,OAFAtI,EAAK2I,KAAKvH,IAAIkH,EAAMM,GAEbA,GAhvBG5I,EAmvBd+I,cAAgB,SAAAT,GACRtI,EAAK2I,KAAK1F,IAAIqF,IACdtI,EAAK2I,KAAKtF,OAAOiF,IArvBXtI,EAyvBdsG,gBAAkB,SAACa,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7vBFlI,EAiwBdyG,yBAA2B,SAACU,EAAQC,EAAWc,GAC3ClG,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAtwBFlI,EA0wBd2G,gBAAkB,SAACQ,EAAQC,EAAWc,GAClClG,IAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA/wBFlI,EAmxBdyH,oBAAsB,SAACN,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAvxBFlI,EA2xBd2H,6BAA+B,SAACR,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA/xBFlI,EAmyBd4H,oBAAsB,SAACT,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAvyBFlI,EA2yBd+H,6BAA+B,SAACZ,EAAQC,EAAWc,GAC/ClI,EAAKuB,KAAK,qCAAsC,CAC5C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA/yBFlI,EAmzBdgI,oBAAsB,SAACb,EAAQC,EAAWc,GACtClI,EAAKuB,KAAK,4BAA6B,CACnC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAvzBFlI,EA2zBd8G,mBAAqB,SAACK,EAAQC,EAAWc,GACrClG,IAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAh0BFlI,EAo0Bd6H,yBAA2B,SAACV,EAAQC,EAAWc,GAC3ClI,EAAKuB,KAAK,iCAAkC,CACxC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAx0BFlI,EA40Bd8H,gBAAkB,SAACX,EAAQC,EAAWc,GAClClI,EAAKuB,KAAK,wBAAyB,CAC/B4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAh1BFlI,EAo1BdqH,2BAA6B,SAACF,EAAQC,EAAWc,GAC7ClI,EAAKuB,KAAK,mCAAoC,CAC1C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAx1BFlI,EA41BdsH,kBAAoB,SAACH,EAAQC,EAAWc,GACpClI,EAAKuB,KAAK,0BAA2B,CACjC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAh2BFlI,EAo2BdkH,mBAAqB,SAACC,EAAQC,EAAWc,GACrClI,EAAKuB,KAAK,2BAA4B,CAClC4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAx2BFlI,EA42Bd6G,4BAA8B,SAACM,EAAQC,EAAWc,GAC9ClI,EAAKuB,KAAK,oCAAqC,CAC3C4F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA72BZlI,EAAKkJ,UAAY,GAGjBlJ,EAAKmJ,GAAK,KACVnJ,EAAK2I,KAAO,IAAIS,QAChBpJ,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKoI,UAAY,IAAIiB,IACrBrJ,EAAKwI,cAAgB,IAAIa,IAEzBrJ,EAAKgD,UAAY,IAAIqG,IACrBrJ,EAAKgE,QAAU,IAAIqF,IAEnBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAhBXvJ,8GA6gBDwJ,6EAWLrJ,KAAKgJ,0BACLtF,QAAQ4F,IAAI,yBACRD,GAAUA,kCAIdrJ,KAAKuJ,oCACL7F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,oCAItC3F,QAAQ4F,IAAI,4BACRD,GAAUrJ,KAAK+I,UAAUS,KAAKH,GAElCrJ,KAAKuJ,cAAe,YACJvJ,KAAKyJ,SAASC,MAAM,SAAA/F,GAAK,OAAID,QAAQ4F,IAAI,2BAA4B3F,aAKrF,GALA3D,KAAKgJ,UACLhJ,KAAKuJ,cAAe,EAEpB7F,QAAQ4F,IAAI,2BAERtJ,KAAK+I,UAAU/C,OAAQ,CAEvB,IADAtC,QAAQ4F,IAAI,sCAAwCtJ,KAAK+I,UAAU/C,QAC1DF,EAAI,EAAGA,EAAI9F,KAAK+I,UAAU/C,OAAQF,IACvC9F,KAAK+I,UAAUjD,KAEnB9F,KAAK+I,UAAY,wIAKrB,OAAO,IAAIY,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAUC,OAAOC,UAAUC,KAAK,SACtCH,EAAQI,UAAY,kBAAMN,EAAQE,EAAQK,SAC1CL,EAAQM,QAAU,kBAAMP,EAAOC,EAAQnG,6CAM3C,OAAO3D,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,YAAYC,YAAY,6DAItE,IAAI5K,EAGJ,OAAOM,KAAKgJ,GAAGqB,YAAY,CAAC,iBAAkB,aAAaC,YAAY,sDAK9D3K,EAAOuB,EAAMuB,EAAK4G,EAAUkB,GAAe,IAAAC,EAAAxK,KACpD,GAAIN,EAEA,OADAwB,EAAOlB,KAAKiD,IAAI/B,EAAKwB,KAAOxB,IAChBA,EAAK0B,QAAU1B,EAAK0B,MAAMG,8BAClCwH,SAIJ,eAAAE,EAAA3K,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAC,SAAAiK,EAAMxJ,GAAN,IAAAyJ,EAAA,OAAApK,EAAAC,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,EAC0Bc,IAAgBgJ,KAAK,CACxC/B,QAAS,WACTgC,QAAS5J,EAAKwB,KAHrB,OACSiI,EADTC,EAAAG,KAMGrH,QAAQ4F,IAAR,2BAAA0B,OAAuC9J,EAAKwB,IAAMxB,EAAMyJ,GACxDH,EAAKtC,QAAQhH,EAAKwB,GAAIiI,EAASM,MAPlC,wBAAAL,EAAArJ,SAAAmJ,MAAD,gBAAAQ,GAAA,OAAAT,EAAAhJ,MAAAzB,KAAA0B,YAAA,GAQGR,GAAMiK,KAAK9B,EAAUkB,GAK5B,IAAI5H,EAAUzB,EAAKyB,QAMnB,GALKA,IAEDA,GADAzB,EAAOlB,KAAKiD,IAAI/B,EAAKwB,KAAOxB,GACbyB,SAGdA,GAAYF,EAAjB,CAKA,GAAIA,EAIA,OAHAvB,EAAKiH,KAAO,IAAIiD,KAAK,CAAC3I,IACtBzC,KAAKkI,QAAQhH,EAAKwB,GAAIxB,EAAKiH,WAC3BkB,IAIJ,IAAInI,EAAKiH,KAAT,CASA,IAAM2B,EAAUnK,EAAMsD,IAAIN,GAC1BmH,EAAQI,UAAY,SAAAmB,GAChB,IAAMlD,EAAOkD,EAAMC,OAAOnB,OAEtBhC,GACAjH,EAAKiH,KAAOA,EACZqC,EAAKtC,QAAQhH,EAAKwB,GAAIxB,EAAKiH,MAC3BkB,KAEAkB,KAGRT,EAAQM,QAAU,WACdG,WAjCAA,0CAqCMxC,EAAQwD,EAAU1F,GAC5B,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,IAAW,GACxC/E,EAAMwI,KAAK,SAAAC,GAAC,OAAIA,IAAM5F,MAE1B7C,EAAMwG,KAAK3D,GACX7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,GAE3BnB,IAAgBgJ,KAAK,CACjB/B,QAAS,eACTgC,QAAS/C,EACTwD,SAAUA,iDAIExD,EAAQlC,GACxB,GAAK7F,KAAK6C,UAAUC,IAAIiF,GAAxB,CAEA,GAAKlC,EAEE,CACH,IAAM7C,EAAQhD,KAAK6C,UAAUI,IAAI8E,GAAQ2D,OAAO,SAAAD,GAAC,OAAIA,IAAM5F,IAC3D7F,KAAK6C,UAAU5B,IAAI8G,EAAQ/E,QAH3BhD,KAAK6C,UAAUK,OAAO6E,GAM1BlG,IAAgBgJ,KAAK,CACjB/B,QAAS,qBACTgC,QAAS/C,EACT4D,iBAAiB,wCAId5D,EAAQlC,GACX7F,KAAK6D,QAAQf,IAAIiF,GACL/H,KAAK6D,QAAQZ,IAAI8E,GACvByB,KAAK3D,GAEX7F,KAAK6D,QAAQ5C,IAAI8G,EAAQ,CAAClC,IAG9BnC,QAAQ4F,IAAI,6BAA+BvB,4CAG9BA,EAAQlC,GACjB7F,KAAK6D,QAAQf,IAAIiF,KACjB/H,KAAK6D,QAAQX,OAAO6E,GACpBrE,QAAQ4F,IAAI,4BAA8BzD,EAAInD,IAC9Cb,IAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASP,EAAIO,QACbwF,YAAa,CAAC/F,EAAInD,IAClBmJ,QAAQ,iDAqLAC,EAAQ/D,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B0K,OAAQA,EACR/D,OAAQA,gDAIIf,EAAQe,GACxB/H,KAAKoB,KAAK,uBAAwB,CAC9B4F,OAAQA,EACRe,OAAQA,WA/3BIgE,iBAq4BxBhC,OAAO7I,KAAOvB,EACCA,g7BCl3Bf,SAASqM,EAAcC,GACnB,OAAKA,EAEDA,EAAO,KACP,GAAAjB,OAAUiB,EAAV,MAGAA,EAAO,QACP,GAAAjB,QAAWiB,EAAO,MAAMC,QAAQ,GAAhC,OAGAD,EAAO,WACP,GAAAjB,QAAWiB,EAAO,KAAO,MAAMC,QAAQ,GAAvC,OAGJ,GAAAlB,QAAWiB,EAAO,KAAO,KAAO,MAAMC,QAAQ,GAA9C,OAdW,MAiBf,SAASC,EAAYjL,GACjB,IAAKA,EAAM,OAAO,KAElB,IAAI+K,EAAO/K,EAAK+K,KAChB,OAAKA,EAEED,EAAcC,GAFH,KAyCtB,SAASG,EAASjE,EAAMkE,GACpB,GAA2C,qBAAhCtC,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,aAIpBa,mFAAf,SAAA3M,EAA2Bf,EAAOqH,EAAQsG,GAA1C,IAAAnD,EAAArE,EAAA,OAAAvF,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSiG,EADT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESiM,EAFT,CAAAzM,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGSiM,EAAWtH,OAHpB,CAAAnF,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKyBc,IAAgBgJ,KAAK,CACtC/B,QAAS,cACT1C,QAASY,EACT4E,YAAa0B,IARrB,OAwBI,KAnBMnD,EALVtJ,EAAAkK,MAWWwC,SAAWpD,EAAOoD,SAASC,IAAI,SAAClJ,EAASwB,GAC5C,OACIxB,GAAW,CACPwE,QAAS,iBACT1C,QAASY,EACTtE,GAAI4K,EAAWxH,GACfvB,QAAS,QAKrBkJ,IAAaC,SAASvD,EAAOoD,UAEpBzH,EAAIwH,EAAWtH,OAAS,EAAGF,GAAK,EAAGA,IACxC2H,IAAarM,KAAK,mBAAoBqM,IAAaxK,IAAI+D,EAAQsG,EAAWxH,KAK9E6H,EAFQ/N,IAAUuD,WAEOgH,EAAOoD,UA9BpC,yBAAA1M,EAAAU,SAAAb,6BAiCA,SAASiN,EAAkBhO,EAAO4N,GAC9B,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnCC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAGDqJ,EAA8BjO,EAFR4E,EAAdC,UAEwCF,GAChD,MAEJ,IAAK,eAGDuJ,EAA0BlO,EAFR4E,EAAVG,MAEgCJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,kBAGDyJ,EAA6BpO,EAFR4E,EAAbO,SAEsCR,GAC9C,MAEJ,IAAK,cAGD0J,EAAyBrO,EAFR4E,EAATS,KAE8BV,GACtC,MAEJ,IAAK,eAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGD2J,EAA4BtO,EAFR4E,EAAZa,QAEoCd,GAC5C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAE3D,GAAIX,EAAO,CACPkJ,EAAiBnO,EAAOiF,EAAON,GAC/B,MAGJ,GAAIE,EAAW,CACXoJ,EAA8BjO,EAAO6E,EAAWF,GAChD,MAGJ,GAAII,EAAO,CACPmJ,EAA0BlO,EAAO+E,EAAOJ,GACxC,MAGJ,GAAIQ,EAAU,CACViJ,EAA6BpO,EAAOmF,EAAUR,GAC9C,MAGJ,GAAIc,EAAS,CACT6I,EAA4BtO,EAAOyF,EAASd,GAC5C,MAGJ,GAAIgB,EAAO,CACP4I,EAA0BvO,EAAO2F,EAAOhB,GACxC,MAGJ,GAAIiB,EAAY,CACZ4I,EAA8BxO,EAAO4F,EAAYjB,GACjD,MAGJ,MAEJ,IAAK,eAGD4J,EAA0BvO,EAFR4E,EAAVe,MAEgChB,GACxC,MAEJ,IAAK,mBAGD6J,EAA8BxO,EAFP4E,EAAfgB,WAEyCjB,MAQrE,SAAS8J,EAAiBzO,EAAO+E,EAAOJ,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACjE,GAAKgD,GACAJ,EAAL,CAFiE,IAIpDpD,EAASwD,EAAhBA,MACN,GAAKxD,EAAL,CALiE,IAAAqN,EAOjErN,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyD6L,EAQzD7L,GAAIuJ,EARqDsC,EAQrDtC,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4G,gBAAgBlC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOuC,MAChC5O,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASuJ,EAA0BlO,EAAO+E,EAAOJ,GAC7C,IAAKI,EAAO,OAAO,EACnB,IAAKJ,EAAS,OAAO,EAFiC,IAIvB2B,EAAcvB,EAArC2B,sBACR,IAAKJ,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0G,yBAAyBhC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASmK,EAAqB9O,EAAO6E,EAAWF,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK8C,GACAF,EAAL,CAFyE,IAIxDpD,EAASsD,EAApBA,UACN,GAAKtD,EAAL,CALyE,IAAAwN,EAOzExN,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEgM,EAQjEhM,GAAIuJ,EAR6DyC,EAQ7DzC,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUiI,oBAAoBvD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO0C,MAChC/O,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASsJ,EAA8BjO,EAAO6E,EAAWF,GACrD,IAAKE,EAAW,OAAO,EACvB,IAAKF,EAAS,OAAO,EAFyC,IAI3C2B,EAAczB,EAAzBiC,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUgI,6BAA6BtD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASsK,EAAmBjP,EAAOkP,EAASvK,GACxC,GAAKuK,GACAvK,EAAL,CAFiD,IAIzCwK,EAAYD,EAAZC,QACF1K,EAAO2K,IAAU9L,IAAI6L,GACtB1K,GAEL4K,GAAgBrP,EAAOyE,IAG3B,SAAS6K,EAAoBtP,EAAOmF,EAAUR,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACvE,GAAKoD,GACAR,EAAL,CAFuE,IAIvDpD,EAAS4D,EAAnBA,SACN,GAAK5D,EAAL,CALuE,IAAAgO,EAOvEhO,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAR+DwM,EAQ/DxM,GAAIuJ,EAR2DiD,EAQ3DjD,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+G,mBAAmBrC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,aACS2L,GAAgBpC,GAAQA,EAAOkD,MAChCvP,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASyJ,EAA6BpO,EAAOmF,EAAUR,GACnD,IAAKQ,EAAU,OAAO,EACtB,IAAKR,EAAS,OAAO,EAFuC,IAIzC2B,EAAcnB,EAAzB2B,UACR,IAAKR,EAAW,OAAO,EALqC,IAO/C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR0C,IAWpDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQ9G,EAAKwB,MAGpC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8G,4BAA4BpC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACzE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAAS8K,EAAgBzP,EAAOqF,EAAMV,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GAC1DsD,IACAV,GAILmK,EAAqB9O,EAFCqF,EAAdR,UAE+BF,EAAS+J,IAGpD,SAASL,EAAyBrO,EAAOqF,EAAMV,GAC3C,IAAKU,EAAM,OAAO,EAClB,IAAKV,EAAS,OAAO,EAF+B,IAI5CM,EAAqBI,EAArBJ,MACR,QAAIgJ,EAA8BjO,EADLqF,EAAdR,UACqCF,KAIpDwJ,EAAiBnO,EAAOiF,EAAON,IACxB,YAGI+K,mFAAf,SAAAnN,EAAmCvC,EAAOuF,EAAUZ,GAApD,IAAAsC,EAAA1F,EAAAwB,EAAA,OAAAnC,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACSmE,EADT,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAESiD,EAFT,CAAAnC,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAIUuF,EAAaC,YAAc3B,GAJrC,CAAA/C,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAOQH,EAAOtB,IAAUkH,gBAAgBF,GAPzC,CAAAzE,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GASqBc,IAAgBgJ,KAAK,CAC9B/B,QAAS,sBACT5D,SAAUA,EACVoK,KAAMC,IACNC,MAAOC,IACPC,OAAQC,IACRC,MAAOC,IACPzJ,QAAS9B,EAAQ8B,UAhB7B,QASQlF,EATRiB,EAAA4I,KAkBQnL,IAAU0I,gBAAgB1B,EAAY1F,GAEtCvB,EAAQC,IAAUuD,WApB1B,WAuBIjC,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAAOxB,EAAPwB,IAEK9C,IAAUoI,QAAQ9G,EAAKwB,IA1BxC,CAAAP,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA6BIzB,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUmH,mBAAmBzC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,KAlCzD,yBAAAnC,EAAAZ,SAAAW,6BAsCA,SAAS4N,EAAoBnQ,EAAOiF,EAAON,GACvC,GAAKM,GACAN,EAAL,CAFgD,IAIxCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAY8J,YAAQhK,EAAOiK,KACjC,GAAK/J,EAAL,CARgD,IAUnC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAXgD,IAcxCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAASwJ,EAAiBnO,EAAOiF,EAAON,GACpC,GAAKM,GACAN,EAAL,CAF6C,IAIrCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYgK,YAAalK,GAC/B,GAAKE,EAAL,CAR6C,IAUhC/E,EAAS+E,EAAhBrB,MACN,GAAK1D,EAAL,CAX6C,IAcrCwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAEK9C,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAAS4L,EAA0BvQ,EAAOiF,EAAON,GAC7C,IAAKM,EAAO,OAAO,EACnB,IAAKN,EAAS,OAAO,EAErB,IAAM2B,EAAYkK,YAAsBvL,EAAMmB,OAC9C,IAAKE,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAAS8L,EAAmBzQ,EAAOyF,EAASd,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACrE,GAAK0D,EAAL,CADqE,IAGtDlE,EAASkE,EAAlBA,QACN,GAAKlE,EAAL,CAJqE,IAAAmP,EAMrEnP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EAP6D2N,EAO7D3N,GAAIuJ,EAPyDoE,EAOzDpE,KAGZ,IADarM,IAAUoI,QAAQtF,GAC/B,CAEA,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAEzC9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUuH,kBAAkBH,EAAQC,EAAWvE,IACrD,aACS2L,GAAgBpC,GAAQA,EAAOqE,MAChC1Q,IAAUsE,cAAcxB,EAAIyB,IAAeG,GAAWc,QAMtE,SAAS6I,EAA4BtO,EAAOyF,EAASd,GACjD,IAAKc,EAAS,OAAO,EADqC,IAGvCa,EAAcb,EAAzBqB,UACR,IAAKR,EAAW,OAAO,EAJmC,IAM7C/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAPwC,IAUlDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,GADa9C,IAAUoI,QAAQtF,GACrB,OAAO,EAEjB,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAUzC,OARA9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUsH,2BAA2BF,EAAQC,EAAWvE,IAC9D,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,GAAWc,MAG9D,EAGX,SAASmL,EAAiB5Q,EAAO2F,EAAOhB,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACjE,GAAK4D,GACAhB,EAAL,CAFiE,IAIpDpD,EAASoE,EAAhBA,MACN,GAAKpE,EAAL,CALiE,IAAAsP,EAOjEtP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARyD8N,EAQzD9N,GAAIuJ,EARqDuE,EAQrDvE,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU+H,gBAAgBrD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOwE,MAChC7Q,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS4J,EAA0BvO,EAAO2F,EAAOhB,GAC7C,IAAKgB,EAAO,OAAO,EACnB,IAAKhB,EAAS,OAAO,EAFiC,IAInC2B,EAAcX,EAAzBmB,UACR,IAAKR,EAAW,OAAO,EAL+B,IAOzC/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EARoC,IAW9CwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU8H,yBAAyBpD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASoM,EAAqB/Q,EAAO4H,EAAWjD,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK6F,GACAjD,EAAL,CAFyE,IAI5DpD,EAASqG,EAAhBjC,MACN,GAAKpE,EAAL,CALyE,IAAAyP,EAOzEzP,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEiO,EAQjEjO,GAAIuJ,EAR6D0E,EAQ7D1E,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU6H,oBAAoBnD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO2E,MAChChR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS6J,EAA8BxO,EAAO4H,EAAWjD,GACrD,IAAKiD,EAAW,OAAO,EACvB,IAAKjD,EAAS,OAAO,EAFyC,IAI3C2B,EAAcsB,EAAzBd,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjD/E,EAAS+E,EAAhBrB,MACN,IAAK1D,EAAM,OAAO,EAR4C,IAWtDwB,GADRxB,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GACzBwB,GAGR,QADa9C,IAAUoI,QAAQtF,KAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU4H,6BAA6BlD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBjC,MAGnD,GAGX,SAASuM,EAAqBlR,EAAOyH,EAAW9C,GAA6B,IAApB+J,IAAoB3M,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACzE,GAAK0F,GACA9C,EAAL,CAFyE,IAI5DpD,EAASkG,EAAhBC,MACN,GAAKnG,EAAL,CALyE,IAAA4P,EAOzE5P,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACzBwB,EARiEoO,EAQjEpO,GAAIuJ,EAR6D6E,EAQ7D7E,KAECrM,IAAUoI,QAAQtF,IAG/B9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAU0H,oBAAoBhD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO8E,MAChCnR,IAAUsE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS0M,EAAoBrR,EAAO4N,GAKhC,IAJA,IAAM0D,EAAQ,IAAI/H,IACdlC,EAAS,EACPkK,EAAU,IAAIhI,IAEXpD,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnC8B,EAA0D9B,EAA1D8B,QAAS7B,EAAiDD,EAAjDC,QAAS4M,EAAwC7M,EAAxC6M,eAAgBC,EAAwB9M,EAAxB8M,oBAW1C,GATID,GACAF,EAAMhQ,IAAIkQ,EAAgBA,GAG1BC,IACApK,EAASZ,EACT8K,EAAQjQ,IAAImQ,EAAqBA,IAGjC7M,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB9O,EAAO6E,EAAWF,GACvCsJ,EAA8BjO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER0J,EAAiBzO,EAAO+E,EAAOJ,GAC/BuJ,EAA0BlO,EAAO+E,EAAOJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBnO,EAFC4E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGDsK,EAAmBjP,EAFC4E,EAAZsK,QAE2BvK,GACnC,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERmK,EAAoBtP,EAAOmF,EAAUR,GACrCyJ,EAA6BpO,EAAOmF,EAAUR,GAC9C,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERoK,EAAgBzP,EAAOqF,EAAMV,GAC7B0J,EAAyBrO,EAAOqF,EAAMV,GACtC,MAEJ,IAAK,kBAGD+K,EAAoB1P,EAFC4E,EAAbW,SAE6BZ,GACrC,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EACD,MAHY,IAMRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WACnE6L,GAAY,EAEZ7M,IACAiK,EAAqB9O,EAAO6E,EAAWF,GACvC+M,GAAazD,EAA8BjO,EAAO6E,EAAWF,IAG7DI,IACA0J,EAAiBzO,EAAO+E,EAAOJ,GAC/B+M,GAAaxD,EAA0BlO,EAAO+E,EAAOJ,IAGrDQ,IACAmK,EAAoBtP,EAAOmF,EAAUR,GACrC+M,GAAatD,EAA6BpO,EAAOmF,EAAUR,IAG3Dc,IACAgL,EAAmBzQ,EAAOyF,EAASd,GACnC+M,GAAapD,EAA4BtO,EAAOyF,EAASd,IAGzDgB,IAEA+L,GAAanD,EAA0BvO,EAAO2F,EAAOhB,IAGrDiB,IACAmL,EAAqB/Q,EAAO4F,EAAYjB,GACxC+M,GAAalD,EAA8BxO,EAAO4F,EAAYjB,IAG9DkB,GACAqL,EAAqBlR,EAAO6F,EAAYlB,GAGxC+M,IACAvB,EAAoBnQ,EAAOiF,EAAON,GAClCwJ,EAAiBnO,EAAOiF,EAAON,GAC/B4L,EAA0BvQ,EAAOiF,EAAON,IAE5C,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERkL,EAAoBnQ,EAAOiF,EAAON,GAClCwJ,EAAiBnO,EAAOiF,EAAON,GAC/B4L,EAA0BvQ,EAAOiF,EAAON,GACxC,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERgL,EAAmBzQ,EAAOyF,EAASd,GACnC2J,EAA4BtO,EAAOyF,EAASd,GAC5C,MAEJ,IAAK,eAID+K,EAAoB1P,EAHF4E,EAAVqB,MACAV,SAE6BZ,GACrC,MAEJ,IAAK,eAID4J,EAA0BvO,EAHR4E,EAAVe,MAGgChB,GACxC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAERmL,EAAqB/Q,EAAO4F,EAAYjB,GACxC6J,EAA8BxO,EAAO4F,EAAYjB,GACjD,MAEJ,IAAK,mBAGDuM,EAAqBlR,EAFE4E,EAAfiB,WAEgClB,KAUxDgN,GAAiB3R,EAADG,OAAAyR,EAAA,EAAAzR,CAAYmR,EAAMO,SAClCnE,EAAY1N,EAAOqH,EAARlH,OAAAyR,EAAA,EAAAzR,CAAoBoR,EAAQM,SAG3C,SAASC,EAAevQ,EAAMwQ,EAAU7L,EAAKwD,GACzC,GAAKnI,GACAwQ,EAEL,GAAIxQ,EAAKuB,KAn3Bb,SAAkBwI,EAAMoB,EAAUsF,GAC9B,IAAIxJ,EAAO,IAAIiD,KAAK,CAACH,GAAO,CAAE2G,KAAMD,GAAQ,6BAC5C,GAA2C,qBAAhC5H,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,IA01B3BqF,CAAS3Q,EAAKuB,IAAKiP,OADvB,CAKA,IAAIvJ,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CA,EACAiE,EAASjE,EAAMuJ,GAInB3E,EAAS7L,EAAM2E,EAAK,WACZwD,GAAUA,KAEdlB,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,OAEtCiE,EAASjE,EAAMuJ,MAK3B,SAAS3E,EAAS7L,EAAM2E,EAAKwD,GACzB,GAAKnI,EAAL,CADmC,IAE3BwB,EAAcxB,EAAdwB,GAAIE,EAAU1B,EAAV0B,MAGZ,IADahD,IAAUoI,QAAQtF,GAK/B,GAAIE,EAAMG,yBAAV,CACI,IAAMpD,EAAQC,IAAUuD,WAExBvD,IAAUoE,aAAarE,EAAOuB,EAAM,KAAMmI,EAAU,WAC5CzG,EAAMkP,mBACNlS,IAAUsE,cAAchD,EAAKwB,GAAIyB,IAAe0B,UAMxDjD,EAAMkP,mBACNlS,IAAUsE,cAAcxB,EAAIyB,IAAe0B,IAInD,SAASkM,EAAoB/K,EAAQC,GACjC,IAAM3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAFgB,IAIpCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAEvF,MAEJ,IAAK,yBACD,OAAOoN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,kBAAmB,IACZnN,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eACD,OAAOkN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,cAAe,IACR5M,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUQ,EAAiBD,EAAjBC,MAAOV,EAAUS,EAAVT,MAEpC,GAAIJ,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAGvF,GAAIE,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIQ,GAASA,EAAMmB,UACf,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAG3E,GAAIA,EACA,OAAOoN,EAAahL,EAAQC,EAAWgL,KAG/C,MAEJ,IAAK,eAAgB,IACT3M,EAAUf,EAAVe,MACR,GAAIA,EAAMmB,UACN,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAE3E,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAASoN,EAAahL,EAAQC,EAAWgF,GACrC,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,MACzB,IAAM3H,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAHe,IAKnCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAEzD,MAEJ,IAAK,yBAA0B,IACnBI,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,kBAAmB,IACZE,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eAAgB,IACTF,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,cAAe,IACRS,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MACpC,GAAId,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAGzD,GAAIM,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIF,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAEzD,MAGJ,GAAIU,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAGjD,MAEJ,IAAK,eAAgB,IACTA,EAAUf,EAAVe,MACR,GAAIA,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAQrD,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS4M,EAA6B3E,GAClC,GAAKA,GACAA,EAASvH,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTK,EAAUL,EAAVK,MACR,IAAKA,EAAO,MAgBZ,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOiK,KACvC,IAAK/J,EAAW,MAnBC,IAqBF/E,EAAS+E,EAAhBrB,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,OAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IACnC,MAEJ,IAAK,eAAgB,IACT4C,EAAUf,EAAVe,MACR,IAAKA,EAAO,MAEZ,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IATtB,IAYFxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IACnC,MAEJ,IAAK,cAAe,IACR2C,EAAaf,EAAQC,QAArBc,SACR,GAAIA,EAAU,KACFC,EAAUD,EAAVC,MAER,GAAIA,EAAO,CACP,GAAIA,EAAMmB,UAAW,KACFvF,EAASoE,EAAMmB,UAAtB7B,MAER,GADa1D,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,IANhC,IASQxB,EAASoE,EAAhBA,MACR,IAAKpE,EAAM,MAGX,GADaA,EAAKiH,MAAQvI,IAAUoI,QAAQ9G,EAAKwB,IACvC,MAEV9C,IAAUuS,oBAAoBjR,EAAKwB,QAW/D,SAAS0P,EAAuB7E,GAAgC,IAAtB8E,EAAsB3Q,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC5D,GAAK6L,GACAA,EAASvH,OAId,IAFA,IAAMrG,EAAQC,IAAUuD,WAEf2C,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB9O,EAAO6E,EAAWF,EAAS+N,GAChDzE,EAA8BjO,EAAO6E,EAAWF,GAChD,MAEJ,IAAK,yBAGDwL,EAAoBnQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,kBAGD2K,EAAoBtP,EAFC4E,EAAbO,SAE6BR,EAAS+N,GAC9C,MAEJ,IAAK,eAGDvC,EAAoBnQ,EAFF4E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,cAAe,IACRe,EAAaf,EAAQC,QAArBc,SACR,IAAKA,EACD,MAHY,IAMRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAChC+L,GAAY,EAEZ7M,IACAiK,EAAqB9O,EAAO6E,EAAWF,EAAS+N,GAChDhB,GAAazD,EAA8BjO,EAAO6E,EAAWF,IAG7DQ,IACAmK,EAAoBtP,EAAOmF,EAAUR,EAAS+N,GAC9ChB,GAAY,GAGZ/L,IACAiL,EAAiB5Q,EAAO2F,EAAOhB,EAAS+N,GACxChB,GAAanD,EAA0BvO,EAAO2F,EAAOhB,IAGrD+M,GACAvB,EAAoBnQ,EAAOiF,EAAON,GAGtC,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER4I,EAA0BvO,EAAO2F,EAAOhB,GACxCiM,EAAiB5Q,EAAO2F,EAAOhB,EAAS+N,KAQ5D,SAASC,EAAgCC,EAAOC,GAC5C,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCL,EAA6B,CAACM,EAAQD,KACtCL,EAA6B3E,IAGjC,SAASkF,EAA0BF,EAAOC,GACtC,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCH,EAAuB,CAACI,EAAQD,KAAS,GACzCH,EAAuB7E,GAAU,IAGrC,SAASmF,EAAoB/S,EAAOuB,EAAM4K,GACtC,GAAK5K,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAMkD,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAEQlD,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUyE,oBAAoByH,EAAQpJ,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBnC,MAI9D,SAASuO,GAAoBhT,EAAOuB,EAAM8F,GACtC,GAAK9F,EAAL,CAD8C,IAGtCwB,EAAOxB,EAAPwB,GACRxB,EAAOtB,IAAUqD,IAAIP,IAAOxB,EAE5B,IAAM6C,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEQ7C,EAAKiH,MAAQvI,IAAUoI,QAAQtF,IAG5C9C,IAAUoE,aACNrE,EACAuB,EACA,KACA,kBAAMtB,IAAUqE,oBAAoB+C,EAAQtE,IAC5C,kBAAM9C,IAAUsE,cAAcxB,EAAI6D,IAAoBxC,MAI9D,SAAS8O,GAA8B7L,EAAQ8L,GAC3C,GAAKA,EAAL,CAEA,IAAMnT,EAAQC,IAAUuD,WAExB2P,EAAO1P,QAAQ,SAAAwB,GACX,OAAQA,EAAM,UACV,IAAK,YAAa,IAAAmO,EACSnO,EAAfoO,EADMD,EACNC,MAAOC,EADDF,EACCE,IAEfN,GAAoBhT,EAAOqT,EAAOhM,GAClC2L,GAAoBhT,EAAOsT,EAAKjM,GAChC,MAEJ,IAAK,eACD,IAAM8E,EAASoH,YAAclM,GADZmM,EAGMvO,EAAfoO,EAHSG,EAGTH,MAAOC,EAHEE,EAGFF,IAEfP,EAAoB/S,EAAOqT,EAAOlH,GAClC4G,EAAoB/S,EAAOsT,EAAKnH,GAChC,MAEJ,IAAK,mBAED,KADAlH,EAAQwO,YAAgBxO,IACZ,MAEZ,IAAMkH,EAASoH,YAAclM,GAJRqM,EAMEzO,EAAfoO,EANaK,EAMbL,MAAOC,EANMI,EAMNJ,IAEfP,EAAoB/S,EAAOqT,EAAOlH,GAClC4G,EAAoB/S,EAAOsT,EAAKnH,OAOhD,SAASwH,GAAiCtM,EAAQuL,EAAOC,GACrD,GAAKA,EAAQxM,OAAb,CAEA,IAAMhD,EAAQ,GACVuP,EAAQ,GACRvP,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,EAAQC,EAAQxM,OAAS,GACzBhD,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,GAAS,GAAKA,EAAQC,EAAQxM,QAC9BhD,EAAMwG,KAAKgJ,EAAQD,IAGvBM,GAA8B7L,EAAQhE,IAG1C,SAASgM,GAAgBrP,EAAOmM,GAC5B,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAAL,CAFoC,IAI5BmP,EAAkBnP,EAAlBmP,cACR,GAAKA,EAILb,EAAoB/S,EAFI4T,EAAhBP,MAEyBlH,IAGrC,SAASwF,GAAiB3R,EAAO6T,GACxBA,GAELA,EAAIpQ,QAAQ,SAAAV,GAAE,OAAIsM,GAAgBrP,EAAO+C,KAG7C,SAAS+Q,GAAgB9T,EAAOqH,GAC5B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFoC,IAI5Ba,EAAUb,EAAVa,MACR,GAAKA,EAIL+N,GAAoBhT,EAFIiF,EAAhBoO,MAEyBhM,IAGrC,SAAS0M,GAAiB/T,EAAO6T,GACxBA,GAELA,EAAIpQ,QAAQ,SAAAV,GAAE,OAAI+Q,GAAgB9T,EAAO+C,KAG7C,SAASiR,GAAiBhU,EAAOqH,GAC7B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFqC,IAI7B6P,EAAkB7P,EAAlB6P,cACR,GAAKA,EAAL,CALqC,IAO7BxC,EAAwBwC,EAAxBxC,oBACHA,GAEL/D,EAAY1N,EAAOqH,EAAQ,CAACoK,MAGhC,SAASyC,GAAsBlU,EAAOmU,GAC7BA,GAGLC,GAAoBpU,EADCmU,EAAbE,UAIZ,SAASD,GAAoBpU,EAAOqU,GAC3BA,GAELA,EAAS5Q,QAAQ,SAAAgC,GACb6I,EAA4BtO,EAAOyF,EAAS,QAIpD,SAAS6O,GAAcC,GACnB,OAAOA,GAAuC,cAA3BA,EAASC,cAGhC,SAASC,GAAOlT,GACZ,IAAMiH,EAKV,SAAiBjH,GACb,OAAOA,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KAN3CH,CAAQ9G,GAErB,OAAOtB,IAAU2I,WAAWJ,IAAS,GAOzC,SAASkM,GAAkBnT,GACvB,OAAKA,GACAA,EAAK0B,OACL1B,EAAK0B,MAAM0R,sBAETtI,EAAc9K,EAAK0B,MAAM2R,iBAJd,IAOtB,SAASC,GAAgBtT,GACrB,OAAKA,GACAA,EAAK0C,QACL1C,EAAK0C,OAAO6Q,oBAEVzI,EAAc9K,EAAK0C,OAAO8Q,eAJf,IAOtB,SAASC,GAAajD,GAClB,IAAKA,EACD,MAAO,GAGX,IAAMkD,EAAQlD,EAASmD,MAAM,KAC7B,OAAqB,IAAjBD,EAAM5O,QAA8B,KAAb4O,EAAM,IAA8B,IAAjBA,EAAM5O,OACzC,GAEJ4O,EAAME,MAAMX,4KC33CvB,SAASY,EAAoB/N,GACzB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,IAAIoD,EAAgBpC,IAAUqC,iBAAiBlR,EAAKrB,IACpD,IAAKsS,EAAe,OAAO,KAE3B,OAAQjR,EAAK6N,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,IAAMsD,EA9ClB,SAAoCC,GAChC,IAAKA,EAAoB,OAAO,KAEhC,GAAIA,EAAmBC,QAAQnJ,MAAQ,EAEnC,OADakJ,EAAmBC,QAAQC,SAAStU,OAAOuU,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAO,oBACX,IAAK,+BACD,MAAO,4BACX,IAAK,+BACD,MAAO,4BACX,IAAK,6BACD,MAAO,iBACX,IAAK,8BACD,MAAO,iBACX,IAAK,2BACD,MAAO,kBACX,IAAK,2BACD,MAAO,kBACX,IAAK,+BACD,MAAO,0BACX,IAAK,+BACD,MAAO,0BACX,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAO,SAInB,OAAO,KAcsBC,CAA2BR,GAChD,OAAOE,EAAeA,EAAe,MAAQ,KAEjD,IAAK,qBACL,IAAK,qBACD,IAAMA,EArIlB,SAAkCC,GAC9B,IAAKA,EAAoB,OAAO,KAEhC,IA4BQM,EA5BJxJ,EAAOkJ,EAAmBC,QAAQnJ,KACtC,GAAIA,EAAO,EACP,SAAAjB,OAAUiB,EAAV,sBACG,GAAIA,EAAO,EAAG,CACjB,IAAIwJ,EACAC,EAFaC,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAGjB,QAAAwH,EAAAC,EAAmBZ,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhV,QAAAmV,MAAAP,GAAA,EAAsD,KAA7C7J,EAA6CgK,EAAAR,MAClD,GAAKG,GAEE,IAAKC,EAAY,CACpBA,EAAa3G,IAAU9L,IAAI6I,GAC3B,YAHA2J,EAAY1G,IAAU9L,IAAI6I,IALjB,MAAAqK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAYjB,OAAKJ,GAAcC,GAInBD,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,YACpEZ,EAAaA,EAAWW,WAAaX,EAAWW,WAAaX,EAAWY,YAEnEb,GAAcC,EAInB,GAAA1K,OAAUyK,EAAV,SAAAzK,OAA2B0K,EAA3B,eAHI,GAAA1K,OAAUiB,EAAV,uBAPA,GAAAjB,OAAUiB,EAAV,sBAaJ,GAAIkJ,EAAmBC,QAAQnJ,MAAQ,EAAG,KAAAsK,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IACtC,QAAAoI,EAAAC,EAAmBxB,EAAmBC,QAAQ5D,OAA9CwE,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5V,QAAAmV,MAAAK,GAAA,EAAsD,KAA7CzK,EAA6C4K,EAAApB,MAClD,IAAKG,EAAW,CACZA,EAAY1G,IAAU9L,IAAI6I,GAC1B,QAJ8B,MAAAqK,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAQtC,IAAKhB,EACD,2BAKJ,KAFAA,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,aAGhE,2BAIJ,OADanB,EAAmBC,QAAQC,SAAStU,OAAOuU,MAAMC,OAC/C,UACX,IAAK,2BACD,SAAAvK,OAAUyK,EAAV,yBACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,iCACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,iCACJ,IAAK,6BACD,SAAAzK,OAAUyK,EAAV,sBACJ,IAAK,8BACD,SAAAzK,OAAUyK,EAAV,sBACJ,IAAK,2BACD,SAAAzK,OAAUyK,EAAV,uBACJ,IAAK,2BACD,SAAAzK,OAAUyK,EAAV,uBACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,+BACJ,IAAK,+BACD,SAAAzK,OAAUyK,EAAV,+BACJ,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,SAAAzK,OAAUyK,EAAV,eAKhB,OAAO,KAsDsBmB,CAAyB5B,GAC9C,OAAOE,EAAeA,EAAe,MAAQ,KAIrD,OAAO,KAGX,SAAS2B,EAAyBvS,GAC9B,IAAKA,EAAS,OAAO,KACrB,GAAIwS,YAAiBxS,GAAU,OAAO,KACtC,IAAKA,EAAQ6M,eAAgB,OAAO,KAEpC,IAAM/M,EAAO2K,IAAU9L,IAAIqB,EAAQ6M,gBACnC,OAAK/M,EAEE2S,YAAgB3S,GAFL,KAKtB,SAAS4S,EAAqB1S,GAC1B,IAAKA,EAAS,OAAO,KACrB,GAAIwS,YAAiBxS,GAAU,OAAO,KAEtC,IAAMP,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SACnC,OAAIrC,GAA+B,uBAAvBA,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,SAC1D,KAGJqF,YAAiB3S,EAAQ6M,gBAGpC,SAAS+F,EAAyBnT,GAC9B,OAAKA,EAEEiT,EAAqBjT,EAAKoT,cAFf,KAKtB,SAASC,EAAsBrT,GAAsB,IAAhBsT,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC5C,IAAKvT,EAAM,OAAO,KAD+B,IAGzCoT,EAAiBpT,EAAjBoT,aACR,OAAKA,EAEEI,YAAWJ,EAAcE,GAFN,KAK9B,SAASG,EAAyBzT,GAC9B,QAAKA,MACAA,EAAKoT,eAEHpT,EAAKoT,aAAaM,aAAe1T,EAAKoT,aAAazU,GAAKqB,EAAK2T,8BAGxE,SAASC,EAAmB5T,GACxB,OAAKA,GACAA,EAAK6T,aAEH7T,EAAK6T,aAHM,KAMtB,SAASC,EAA0B9T,GAC/B,OAAKA,GACAA,EAAK+T,qBAEH/T,EAAK+T,qBAHM,KAMtB,SAASC,EAAYhU,GACjB,OAGJ,SAAwBA,GACpB,IAAKA,EAAM,OAAO,EAElB,IAAIA,EAAKiU,qBA0BL,OAAKjU,EAAKkU,sBAEHlU,EAAKkU,sBAAsBC,SAFM,EAzBxC,OAAQnU,EAAK6N,MACT,IAAK,kBACL,IAAK,iBACD,IAAMuG,EAAuBC,IAAiBC,wBAC1C,yCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,EAEX,IAAK,qBACL,IAAK,qBACD,IAAMC,EAAuBC,IAAiBC,wBAC1C,uCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,GA5BZI,CAAevU,GAAQ,EAsClC,SAASwU,EAAejU,GACpB,IAAMkU,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAExBE,EAAW,IAAID,KAErB,GADAC,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAOE,EACP,OAAOE,IAAWJ,EAAM,QAG5B,IAAMK,EAAM,IAAIJ,KACVK,EAAMD,EAAIE,SACVC,EAAYH,EAAII,UAAYH,GAAe,IAARA,GAAa,EAAI,GAE1D,OAAIN,EADW,IAAIC,KAAKI,EAAIK,QAAQF,IAEzBJ,IAAWJ,EAAM,OAGrBI,IAAWJ,EAAM,aAG5B,SAASW,EAAmBpV,GACxB,OAAKA,GACAA,EAAKoT,cACLpT,EAAKoT,aAAaqB,KACnBY,GAAcrV,EAAKrB,IAAY,KAE5B6V,EAAexU,EAAKoT,cALT,KAQtB,SAASkC,EAA6BrS,GAClC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAFwB,IAIlC6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAI2O,EAAK4H,gBAC5C,GAAIF,EACA,OCrShB,SAA6BA,EAAYtS,GACrC,IAAKsS,EAAY,OAAO,KADqB,IAGrCG,EAAgCH,EAAhCG,OAAsBC,EAAUJ,EAAxBK,aAEhB,GAAIF,IAA+B,2BAApBA,EAAO,UAA6D,yBAApBA,EAAO,UAClE,MAAO,wBAGX,IAAKC,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqB7S,GACnD,OAAI4S,EAAc,EACd,GAAA5O,OAAU0O,EAAV,cAAA1O,OAA4B4O,EAA5B,WAGJ,GAAA5O,OAAU0O,EAAV,YDoRmBI,CAAoBR,EAAYtS,GAG3C,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAM5C,EAAO2K,IAAU9L,IAAI2O,EAAK9C,SAChC,GAAI1K,EACA,OAAO2V,YAAc3V,GAGzB,MAEJ,IAAK,qBACD,IAAM4V,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EACA,OErThB,SAA6BA,EAAYhT,GACrC,IAAKgT,EAAY,OAAO,KADqB,IAGvCP,EAA4CO,EAA5CP,OAAQU,EAAoCH,EAApCG,WAA0BT,EAAUM,EAAxBL,aAE1B,GAAIF,GAA8B,2BAApBA,EAAO,SACjB,OAAOU,EAAa,0BAA4B,wBAGpD,IAAKT,EAAO,CACR,IAAMU,EAAWH,IAAgBI,YAAYL,EAAWtX,IACpD0X,IACAV,EAAQU,EAAST,cAIzB,IAAKD,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAchH,IAAUiH,qBAAqB7S,GACnD,OAAI4S,EAAc,EACd,GAAA5O,OAAU0O,EAAV,cAAA1O,OAA4B4O,EAA5B,WAGJ,GAAA5O,OAAU0O,EAAV,YF6RmBY,CAAoBN,EAAYhT,GAOnD,OAAO,KAGX,SAASuT,EAAgBvT,GAAmC,IAA3BwT,EAA2B9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACxD,GAAI+Y,EAASzT,IAAWwT,EACpB,OAAO,KAGX,IAAME,EAAmB3F,EAAoB/N,GAC7C,OAAI0T,GAIGrB,EAA6BrS,GAGxC,SAAS2T,EAAe5W,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAI6W,EAAQ7W,EAAK6W,OAAS,kBAC1B,GAAqB,IAAjBA,EAAM5U,OAAc,OAAO,KAE/B,IAAI6U,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ7U,OAAS,EACrB6U,EAGJ9W,EAAK6W,MAAMG,OAAO,GAG7B,SAASC,EAAkChU,GACvC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAO6W,YAAa7W,GAGxB,MAEJ,IAAK,qBACD,OAAO,EAIf,OAAO,EAGX,SAAS8W,EAAqBlU,GAE1B,OADqB+N,EAAoB/N,IAGlCgU,EAAkChU,GAG7C,SAASmU,EAAgBnU,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAKgX,SAGhB,MAEJ,IAAK,qBACD,IAAMpB,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,EACA,OAAOA,EAAWoB,SAM9B,OAAO,KAGX,SAASC,EAAmBrU,GACxB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAKkX,aAGhB,MAEJ,IAAK,qBACD,OAAO,KAIf,OAAO,KAGX,SAASC,EAAWvU,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMwI,EAAWrL,IAAUsL,YAAYtW,EAAK6N,KAAK9C,SACjD,GAAIsL,EACA,OAAOA,EAASoB,IAGpB,MAEJ,IAAK,qBACD,IAAMpB,EAAWH,IAAgBI,YAAYtW,EAAK6N,KAAKsI,eACvD,GAAIE,EACA,OAAOA,EAASqB,YAO5B,OAAO,KAGX,SAASC,EAAc1U,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS+J,EAAY3U,GACjB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASgK,EAAc5U,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eAEjD,OAAOF,GAAcA,EAAWG,WAEpC,IAAK,qBACL,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS0B,EAAa7U,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOO,EAAWP,OAAOqC,UAKzC,IAAK,qBACD,IAAMxC,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOH,EAAWG,OAAOqC,UAIrC,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASC,EAAa/U,GAAmD,IAA3CwT,EAA2C9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAAhB2V,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC1DvT,EAAO6O,IAAU3P,IAAI+D,GAC3B,OAAKjD,EAED0W,EAASzT,IAAWwT,EACbnD,EAAE,iBAGNtT,EAAK6W,OAASvD,EAAE,cANL,KAStB,SAASoD,EAASzT,GACd,IAEMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAHW,EAKtB,OAAQA,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,OAAO7C,IAAUiN,YAAcjY,EAAK6N,KAAK9C,QAIjD,OAhBsB,EAmB1B,SAASmN,EAAoBjV,GACzB,IAAMkV,EAAgB,GAEhBnY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAOmY,EAElB,OAAQnY,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,IAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,EACA,OAAOA,EAAS+B,SAAWD,EAcvC,OAAOA,EAGX,SAASE,EAAgBpV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,kBAOL,IAAK,iBACD/P,IAAgBgJ,KAAK,CACjB/B,QAAS,kBACTgG,QAAS/K,EAAK6N,KAAK9C,UAEvB,MAEJ,IAAK,qBACDjN,IAAgBgJ,KAAK,CACjB/B,QAAS,wBACT0Q,eAAgBzV,EAAK6N,KAAK4H,iBAE9B,MAEJ,IAAK,qBACD3X,IAAgBgJ,KAAK,CACjB/B,QAAS,wBACToR,cAAenW,EAAK6N,KAAKsI,iBAOzC,SAASmC,EAAgBrV,EAAQsV,GAC7B,IAAMvY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK4H,iBAAmB8C,EAGrF,SAASC,EAAavV,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFQ,IAIlB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,SAGxB,SAAS4K,EAAgBxV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KAER,OAAIA,GAA0B,uBAAlBA,EAAK,SACNA,EAAKsI,cAGT,EAGX,SAASuC,EAAgBzV,EAAQ0V,GAC7B,IAAM3Y,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAO2K,EAAavV,IAAW4K,EAAKsI,gBAAkBwC,EAc1D,SAASxJ,EAAclM,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA2B,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,SAAgD,EAAfA,EAAK9C,QAGtG,SAAS6N,EAAiB3V,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,GAAI2X,EAAc1U,GAAS,CACvB,IAAM5C,EAAO2K,IAAU9L,IAAIiQ,EAAclM,IACzC,GAAI5C,EACA,OAAOA,EAAKmP,cAIpB,OAAOxP,EAAKa,MAGhB,SAASgY,EAAa5V,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAOoD,wBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAM7C,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAOoD,yBAW1C,OAAO,EAGX,SAASC,EAAkB9V,GAAmC,IAA3BwT,EAA2B9Y,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC1D,GAAI+Y,EAASzT,IAAWwT,EACpB,MAAO,iBAGX,IAAMzW,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,qBACD,OAAO7N,EAAK6W,MAEhB,IAAK,kBACL,IAAK,iBACD,OAAO3D,YAAiBlT,EAAK6N,KAAK9C,SAI1C,OAAO,KAGX,SAASiO,EAAyB/V,GAC9B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,OAAIF,EACOA,EAAWK,aAGf,EAEX,IAAK,qBACD,IAAMK,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWL,aAGf,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASqD,EAAgBhW,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,IACQiD,QAAQjD,EAAWoB,UAKnC,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS8B,EAAclW,GACnB,OAAQyT,EAASzT,GAGrB,SAASmW,EAAcnW,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASO,GAAiBpW,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFY,IAItB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMoI,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASQ,GAAarW,GAClB,OAAO,EAGX,SAASsW,GAAgBtW,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAI2O,EAAK4H,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAO8D,kBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMvD,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAO8D,mBAW1C,OAAO,EAGX,SAASnE,GAAcpS,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAG3B,OAFcwW,GAAaxW,IAEW,IAAtBjD,EAAK6T,cAAoD,IAA9B7T,EAAK+T,qBAGpD,SAAS0F,GAAaxW,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAE3B,GAAIjD,EAAM,KACE6P,EAAkB7P,EAAlB6P,cACR,GAAIA,EAAe,KACP6J,EAAuB7J,EAAvB6J,mBACR,GAAIA,EACA,OAAOA,EAAmBC,MAKtC,OAAO,KAGX,SAASC,GAA6B3W,GAClC,IAAI4W,EAAmB,EACjB7Z,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAIjD,EAAM,KACE6P,EAAkB7P,EAAlB6P,cACJA,IACAgK,EAAmBhK,EAAcxC,qBAKzC,OADA1N,QAAQ4F,IAAI,eAAgBsU,GACrBA,EAGX,SAASC,GAAe7W,GACpB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFU,IAIpB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,IAAgBtW,IAAI2O,EAAK4H,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAOH,EAAWG,OAAOqE,iBAE7B,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBAGL,IAAK,yBAGL,IAAK,6BACD,OAAO,EAKnB,MAEJ,IAAK,kBACD,OAAOrD,EAASzT,GAEpB,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMgT,EAAaC,IAAgBhX,IAAI2O,EAAKsI,eAC5C,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAOO,EAAWP,OAAOqE,iBAE7B,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBAGL,IAAK,yBAGL,IAAK,6BACD,OAAO,GAO3B,OAAO,EA7sCXC,EAAAC,EAAAC,EAAA,sBAAA7E,KAAA2E,EAAAC,EAAAC,EAAA,sBAAAT,KAAAO,EAAAC,EAAAC,EAAA,sBAAAN,KAAAI,EAAAC,EAAAC,EAAA,sBAAAlJ,IAAAgJ,EAAAC,EAAAC,EAAA,sBAAAzG,IAAAuG,EAAAC,EAAAC,EAAA,sBAAAtG,IAAAoG,EAAAC,EAAAC,EAAA,sBAAApG,IAAAkG,EAAAC,EAAAC,EAAA,sBAAA1D,IAAAwD,EAAAC,EAAAC,EAAA,sBAAA5E,IAAA0E,EAAAC,EAAAC,EAAA,sBAAA/G,IAAA6G,EAAAC,EAAAC,EAAA,sBAAAjH,IAAA+G,EAAAC,EAAAC,EAAA,sBAAApH,IAAAkH,EAAAC,EAAAC,EAAA,sBAAA7G,IAAA2G,EAAAC,EAAAC,EAAA,sBAAA9E,IAAA4E,EAAAC,EAAAC,EAAA,sBAAA1F,IAAAwF,EAAAC,EAAAC,EAAA,sBAAAtD,IAAAoD,EAAAC,EAAAC,EAAA,sBAAA/C,IAAA6C,EAAAC,EAAAC,EAAA,sBAAAjD,IAAA+C,EAAAC,EAAAC,EAAA,sBAAAlG,IAAAgG,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA4C,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA0C,EAAAC,EAAAC,EAAA,sBAAA1C,IAAAwC,EAAAC,EAAAC,EAAA,sBAAAvC,IAAAqC,EAAAC,EAAAC,EAAA,sBAAAtC,IAAAoC,EAAAC,EAAAC,EAAA,sBAAArC,IAAAmC,EAAAC,EAAAC,EAAA,sBAAApC,IAAAkC,EAAAC,EAAAC,EAAA,sBAAAlC,IAAAgC,EAAAC,EAAAC,EAAA,sBAAAhC,IAAA8B,EAAAC,EAAAC,EAAA,sBAAA7B,IAAA2B,EAAAC,EAAAC,EAAA,sBAAA5B,IAAA0B,EAAAC,EAAAC,EAAA,sBAAAxB,IAAAsB,EAAAC,EAAAC,EAAA,sBAAA1B,IAAAwB,EAAAC,EAAAC,EAAA,sBAAAzB,IAAAuB,EAAAC,EAAAC,EAAA,sBAAA/K,IAAA6K,EAAAC,EAAAC,EAAA,sBAAAtB,IAAAoB,EAAAC,EAAAC,EAAA,sBAAAnB,IAAAiB,EAAAC,EAAAC,EAAA,sBAAAlB,IAAAgB,EAAAC,EAAAC,EAAA,sBAAAxD,IAAAsD,EAAAC,EAAAC,EAAA,sBAAAjB,IAAAe,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAJ,KAAAE,EAAAC,EAAAC,EAAA,sBAAArB,IAAAmB,EAAAC,EAAAC,EAAA,sBAAAX,KAAAS,EAAAC,EAAAC,EAAA,sBAAAd,IAAAY,EAAAC,EAAAC,EAAA,sBAAAb,KAAAW,EAAAC,EAAAC,EAAA,sBAAAZ,gGGgPM1d,EAAQ,gBArOV,SAAA8N,IAAc,IAAA5N,EAAA,OAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAyN,IACV5N,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAA2N,GAAAtN,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,mBAAoBT,GAC9B,MACJ,IAAK,uBACDd,EAAKuB,KAAK,uBAAwBT,GAClC,MACJ,IAAK,sBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO0d,YAC5B/Z,IACAA,EAAQga,aAAe3d,EAAO2d,aAC9Bha,EAAQia,UAAY5d,EAAO4d,WAGnC1e,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,qBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO0d,YAC5B/Z,GAAW3D,EAAO6d,MAAQla,EAAQka,QAClCla,EAAQka,MAAQ7d,EAAO6d,OAG/B3e,EAAKuB,KAAK,qBAAsBT,GAChC,MAEJ,IAAK,uBACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAOyF,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAO0d,YAC5B/Z,IACA3D,EAAO8d,YAAcna,EAAQC,QAC7BD,EAAQC,QAAU5D,EAAO+d,aAGjC7e,EAAKuB,KAAK,uBAAwBT,GAClC,MAEJ,IAAK,6BAA8B,IACvByF,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WAEX/Z,EAAUzE,EAAKoD,IAAImD,EAASiY,GAClC,GAAI/Z,EAEA,OADoBA,EAAZC,QACQ,UACZ,IAAK,mBACDD,EAAQC,QAAQoa,aAAc,EAC9B,MAEJ,IAAK,mBACDra,EAAQC,QAAQqa,WAAY,EAMxC/e,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,6BACD,IAAMoD,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOke,gBAC5Bva,IACAA,EAAQwa,cAAgBne,EAAO2D,QAAQwa,eAEvCne,EAAOke,iBAAmBle,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAIxBzE,EAAKoB,IAAIN,EAAO2D,SAChBzE,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,0BACGA,EAAO2D,QAAQwa,gBACfne,EAAO2D,QAAQwa,cAAcC,WAAape,EAAOoe,WACjDpe,EAAO2D,QAAQwa,cAAcE,cAAgBre,EAAOqe,eAGxD,IAAMjb,EAAOlE,EAAKmD,MAAMC,IAAItC,EAAO2D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAItC,EAAOke,gBAC5Bva,IACAA,EAAQwa,cAAgBne,EAAO2D,QAAQwa,cACnCxa,EAAQwa,gBACRxa,EAAQwa,cAAcC,WAAape,EAAOoe,WAC1Cza,EAAQwa,cAAcE,cAAgBre,EAAOqe,gBAGjDre,EAAOke,iBAAmBle,EAAO2D,QAAQ5B,IACzC7C,EAAKoB,IAAIN,EAAO2D,SAGxBzE,EAAKuB,KAAK,0BAA2BT,KA/GnCd,EAuHd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,8BACGA,EAAOse,SACPpf,EAAKqf,cAAcje,IAAnB,UAAA+J,OAAiCrK,EAAOqG,OAAxC,eAAAgE,OAA4DrK,EAAOsG,WAAa,CAC5ED,OAAQrG,EAAOqG,OACfC,UAAWtG,EAAOsG,YAGtBpH,EAAKqf,cAAchc,OAAnB,UAAA8H,OAAoCrK,EAAOqG,OAA3C,eAAAgE,OAA+DrK,EAAOsG,YAG1EpH,EAAKuB,KAAK,8BAA+BT,GACzC,MAEJ,IAAK,6BACDd,EAAKqf,cAAcC,QAEnBtf,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,qBACGd,EAAKqf,cAAcjT,KAAO,IAC1BpM,EAAKqf,cAAcC,QAEnBtf,EAAKuB,KAAK,6BAA8B,CAAE0H,QAAS,gCAGvD,MAEJ,IAAK,oBACDjJ,EAAKuB,KAAK,oBAAqBT,GAC/B,MAEJ,IAAK,6BACDd,EAAKuB,KAAK,6BAA8BT,KA9JtCd,EAoKd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAtKvC9B,EAyKdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAxKpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKqf,cAAgB,IAAIhW,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,oEA8KTmH,EAAQC,GAAW,IAAAuD,EAAAxK,KACpB6B,IAAgBgJ,KAAK,CACjB/B,QAAS,aACT1C,QAASY,EACTqX,WAAYpX,IAEXkE,KAAK,SAAA7G,GACFkG,EAAKvJ,IAAIqD,GACTkG,EAAKpJ,KAAK,mBAAoBkD,KAEjCoF,MAAM,SAAA/F,GACH,IAAMyb,EAAiB,CACnBtW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbiG,EAAKvJ,IAAIme,GACT5U,EAAKpJ,KAAK,mBAAoBge,iCAItCpY,EAAQC,GACR,IAAIlD,EAAO/D,KAAKgD,MAAMC,IAAI+D,GAC1B,IAAKjD,EAED,OAAO,KAGX,IAAIO,EAAUP,EAAKd,IAAIgE,GACvB,OAAK3C,GAEM,iCAMXA,GACA,IAAIP,EAAO/D,KAAKgD,MAAMC,IAAIqB,EAAQ8B,SAC7BrC,IACDA,EAAO,IAAImF,IACXlJ,KAAKgD,MAAM/B,IAAIqD,EAAQ8B,QAASrC,IAGpCA,EAAK9C,IAAIqD,EAAQ5B,GAAI4B,oCAGhBiJ,GACL,IAAK,IAAIzH,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IACjC9F,KAAKiB,IAAIsM,EAASzH,WAjOHiG,iBAuO3BhC,OAAOzF,QAAU3E,EACFA,mNC1LA0f,2LAxCF,IAAAC,EAC0Btf,KAAKuf,MAA5B1Q,EADHyQ,EACGzQ,QAAS2Q,EADZF,EACYE,UACjB,IAAK3Q,EAAS,OAAO,KAFhB,IAIGC,EAAiDD,EAAjDC,QAASuH,EAAwCxH,EAAxCwH,WAAYoJ,EAA4B5Q,EAA5B4Q,UAAWnE,EAAiBzM,EAAjByM,aAElClX,EAAO2K,IAAU9L,IAAI6L,IAAY,CACnChG,QAAS,OACT8I,KAAM,CAAE9I,QAAS,mBACjBpG,GAAIoM,EACJuH,WAAYA,EACZoJ,UAAWA,GAGTC,EAAW3I,YAAgB3S,GAC3Bub,EAASC,YAAkBtE,GAEjC,OACIuE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,WACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAACqT,EAAA,EAAD,CAAiBjU,OAAQgD,EAAS1K,KAAMA,KAE5Cyb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACVhR,EAAU,EAAI+Q,EAAArf,EAAAkM,cAAA,KAAGsT,QAASR,GAAYE,GAAgBG,EAAArf,EAAAkM,cAAA,YAAOgT,IAElEG,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBAAiBH,YA3B9BM,IAAMC,0GCUtBC,qNACF5I,WAAa,WAAM,IAAA+H,EACmDzf,EAAK0f,MAA/DvY,EADOsY,EACPtY,OAAQC,EADDqY,EACCrY,UAAWjC,EADZsa,EACYta,KAAMiH,EADlBqT,EACkBrT,KAAMmU,EADxBd,EACwBc,YAAaZ,EADrCF,EACqCE,UACpD,IAAKxa,EAAM,OAAO,KAFH,IAIPJ,EAAqBI,EAArBJ,MAAOJ,EAAcQ,EAAdR,UAEf,GAAIA,IACqB4P,YAAO5P,EAAUA,YAClBA,EAAUiC,WAC1B,OAAOoZ,EAAArf,EAAAkM,cAAC2T,EAAA,EAAD,CAAWrZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAWgb,UAAWA,IAIjG,GAAI5a,EAAO,CACP,IAAI+H,EAAQ,CACR6C,MAAO,EACPE,OAAQ,GAENzJ,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EAAW,CACX,IAAMqa,EAAeC,YAAWta,EAAWma,GACvCE,IACA3T,EAAM6C,MAAQ8Q,EAAa9Q,MAC3B7C,EAAM+C,OAAS4Q,EAAa5Q,QAIpC,OAAOmQ,EAAArf,EAAAkM,cAAC8T,EAAA,EAAD,CAAOxZ,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO+H,MAAOA,EAAO6S,UAAWA,IAG/F,OAAO,8EAGF,IAAAiB,EACqBzgB,KAAKuf,MAAvBmB,EADHD,EACGC,QAAS1b,EADZyb,EACYzb,KACjB,IAAKA,EAAM,OAAO,KAFb,IAIG4V,EAA6B5V,EAA7B4V,MAAO8C,EAAsB1Y,EAAtB0Y,KAAMjC,EAAgBzW,EAAhByW,YACfkF,EAAgBC,GAAiBlD,GAEvC,OACImC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,QACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,cAAeH,EAAQI,yBAClDjB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACVlF,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,aAAcH,EAAQK,kBAAmBnG,GAC7E+F,GAAiBd,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,aAAaa,GAC7ClF,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBAAoBrE,GAClDzb,KAAKuX,sBAhDP0I,IAAMC,YAiEzBC,EAAKa,aAAe,CAChB/U,KAAMgG,IACNmO,YAAaa,KAGFC,UA1EA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,GACbuhB,YAAaF,KAyELD,CAAmBf,qBC3BnBmB,qNA5CXC,2BAA6B,SAAA5gB,GAAU,IAC3BoH,EAAWpH,EAAXoH,OAGFnB,EAAaC,GAFEhH,EAAK0f,MAAlBra,UAGFhE,EAAOtB,IAAUkH,gBAAgBF,GAClC1F,GAEDA,EAAKwB,KAAOqF,GACZlI,EAAK2hB,kGAhBT5hB,IAAU6hB,GAAG,2BAA4BzhB,KAAKuhB,2EAI9C3hB,IAAUoC,eAAe,2BAA4BhC,KAAKuhB,6DAgBrD,IACGrc,EAAalF,KAAKuf,MAAlBra,SACR,IAAKA,EAAU,OAAO,KAEtB,IAAM0B,EAAaC,GAAc3B,GAC3BhE,EAAOtB,IAAUkH,gBAAgBF,GACjC8a,EAAMtN,YAAOlT,GAEXygB,EAAwBzc,EAAxByc,UAAWC,EAAa1c,EAAb0c,SACb1b,EAAM,8BAAA8E,OAAiC4W,EAAjC,KAAA5W,OAA6C2W,GAEzD,OACI9B,EAAArf,EAAAkM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASuW,IAAI,uBACjChC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBAAiBgC,WAAW,EAAOC,IAAK7b,EAAQwb,IAAKA,IACpE7B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACXD,EAAArf,EAAAkM,cAACsV,EAAAxhB,EAAD,CAAUyhB,SAAS,QAAQC,MAAM,sBAtClCjC,IAAMC,ySCgBvBiC,4LACO,IAAA7C,EACsDtf,KAAKuf,MAAxDmB,EADHpB,EACGoB,QAAS0B,EADZ9C,EACY8C,OAAQC,EADpB/C,EACoB+C,YAAaC,EADjChD,EACiCgD,OAAQC,EADzCjD,EACyCiD,SAE9C,OACI1C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,aAAc,CAAE2B,oBAAqBF,KAC5DzC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CAAEgC,KAAMhC,EAAQiC,WACzBT,MAAM,UACNU,QAASR,GAAUC,EACnBE,SAAUA,EACVM,YAAahD,EAAArf,EAAAkM,cAACoW,GAAAtiB,EAAD,CAAwBkgB,QAAS,CAAEgC,KAAML,EAAc3B,EAAQqC,KAAO,UAEtFV,GAAexC,EAAArf,EAAAkM,cAACsW,GAAAxiB,EAAD,CAAkByL,KAAM,GAAIgX,UAAW,IAAKvC,QAAS,CAAEgC,KAAMhC,EAAQwC,wBAb7EjD,IAAMC,YAyBfgB,OAxCA,CACXgC,aAAc,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,QAEnBX,UAAW,CACPY,QAAS,GAEbR,KAAM,CACFb,MAAO,gBA6BAhB,CAAmBiB,ICsEnBqB,uBAhHX,SAAAA,EAAYjE,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAwjB,IACf3jB,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA0jB,GAAArjB,KAAAH,KAAMuf,KA0DVqE,gBAAkB,WACd/jB,EAAKgkB,gBAELhkB,EAAKikB,OAASC,sBAAsBlkB,EAAKmkB,mBA9D1BnkB,EAiEnBgkB,cAAgB,WACPhkB,EAAKikB,SAEVG,qBAAqBpkB,EAAKikB,QAC1BjkB,EAAKikB,OAAS,OArECjkB,EAwEnBmkB,iBAAmB,WAAM,IAAAE,EACWrkB,EAAKskB,MAA7BC,EADaF,EACbE,UAAWC,EADEH,EACFG,KAAMC,EADJJ,EACII,GAEnBC,EAAa9L,KAAKI,MAAQuL,EAEhC,GAAIG,GAAcC,IACd3kB,EAAK4kB,SAAS,CAAEC,SAAUJ,IAC1BzkB,EAAKgkB,oBACF,CACH,IAAMa,EAAWL,EAAOM,KAAKC,OAAQN,EAAKD,GAAQE,EAAcC,KAChE3kB,EAAK4kB,SAAS,CAAEC,aAChB7kB,EAAKikB,OAASC,sBAAsBlkB,EAAKmkB,oBAhF7CnkB,EAAKikB,OAAS,KAHC,IAKPxO,EAAUiK,EAAVjK,MALO,OAOfzV,EAAKskB,MAAQ,CACTE,KAAM/O,EACNgP,GAAIhP,EACJoP,SAAUpP,EAEVuP,eAAgBvP,GAZLzV,qFAgBGilB,EAAWC,EAAWC,GAAa,IAAA1F,EAC3Btf,KAAKuf,MAAvB0F,EAD6C3F,EAC7C2F,OAAQ3P,EADqCgK,EACrChK,MACRoP,EAAa1kB,KAAKmkB,MAAlBO,SAER,OAAIO,IAAWH,EAAUG,SAIrB3P,IAAUwP,EAAUxP,OAIpBoP,IAAaK,EAAUL,qDAqBZQ,EAAWC,EAAWC,GACjCF,EAAU5P,QAAUtV,KAAKuf,MAAMjK,OAC/BtV,KAAK4jB,iEAKT5jB,KAAK6jB,iDA+BA,IAAApD,EAC+BzgB,KAAKuf,MAAjC6C,EADH3B,EACG2B,OAAQ6C,EADXxE,EACWwE,OAAQjF,EADnBS,EACmBT,QAChB0E,EAAa1kB,KAAKmkB,MAAlBO,SAER,OACI7E,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,kBAAmB,CAAEwE,4BAA6BjD,MACvE6C,GAAU7C,EACRvC,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,yBAAyBE,QAASA,GAC1C0E,EAAW,KAGhB7E,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAGZ,EAAW,yDA/DEnF,EAAO4E,GACnC,OAAI5E,EAAMjK,QAAU6O,EAAMU,eACf,CACHT,UAAW3L,KAAKI,MAChBwL,KAAMF,EAAMO,SACZJ,GAAI/E,EAAMjK,MAEVuP,eAAgBtF,EAAMjK,OAIvB,YA/Cc2K,IAAMC,YCqB7BqF,sNACFC,eAAiB,SAAC9L,GAA0B,IAAnBrC,EAAmB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAf,SAAA4V,GAAG,OAAIA,GAEhC,OAD0BzX,EAAK0f,MAAvBkG,cACkB,KAErB/L,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,WAAWlD,iBAMpCuR,YAAc,SAAAra,GAAS,IAAAiU,EACezf,EAAK0f,MAA/BkG,EADWnG,EACXmG,cAAeE,EADJrG,EACIqG,OAClBF,IAELpa,EAAMua,kBAEND,QAGJE,aAAe,SAAAxa,GAAS,IACZya,EAAajmB,EAAK0f,MAAlBuG,SAERza,EAAMua,kBAENE,6EAGK,IAAArF,EAC0EzgB,KAAKuf,MAA5EmB,EADHD,EACGC,QAASqF,EADZtF,EACYsF,OAAQxD,EADpB9B,EACoB8B,SAAUkD,EAD9BhF,EAC8BgF,cAAeR,EAD7CxE,EAC6CwE,OAAQe,EADrDvF,EACqDuF,cAAe3O,EADpEoJ,EACoEpJ,EACzE,IAAK0O,EAAQ,OAAO,KAFf,IAIGrI,EAAmEqI,EAAnErI,KAAMuI,EAA6DF,EAA7DE,YAAaC,EAAgDH,EAAhDG,gBAAiBC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,gBAEnD9Q,EAAQ,IAKZ,OAJI2Q,IACA3Q,EAAS2Q,EAAcD,EAAiB,KAIxCnG,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,cAAcE,QAAShgB,KAAK0lB,aACvC7F,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IACP,sBACA4E,EAAgB,yBAA2B,yBAE/C5F,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,2BAA2BlF,MAAO5a,KAAKwlB,eAAeS,EAAa5O,IAC9EwI,EAAArf,EAAAkM,cAAC2Z,GAAD,CACI/Q,MAAO4Q,EACP9D,OAAQ+D,EACRlB,OAAQA,EACRjF,QAAShgB,KAAK6lB,eAElBhG,EAAArf,EAAAkM,cAAC4Z,GAAD,CACIhE,QAASmD,EACTrD,OAAQ+D,EACR9D,YAAa+D,EACb7D,SAAUA,IAEd1C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBAAoBpC,KAG3CmC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,4BAAD/gB,OAAAymB,GAAA,EAAAzmB,CAAA,GAAiC4gB,EAAQ8F,YAAcf,MACjF5F,EAAArf,EAAAkM,cAAC+Z,GAAAjmB,EAAD,CACIkgB,QAAS,CAAEgC,KAAMhC,EAAQwC,aAAcwD,IAAKhG,EAAQiG,aACpDzE,MAAM,UACN0E,QAAQ,cACRtR,MAAOmQ,EAAgB,EAAId,KAAKkC,IAAI,IAAKvR,aAnEpC2K,IAAMC,YAwFhB4G,GALCC,aACZ7F,IAnGW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBojB,aAAc,CACV8D,gBAAiB,cACjBC,OAAQ,eACR9D,SAAU,WACVE,KAAM,EACN6D,MAAO,EACPC,OAAQ,GAEZR,YAAa,CACTS,WAAY,yBAEbC,YAAYlG,KAuFI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQvB,0BClGjBiC,sNACFrD,MAAQ,CACJsD,QAAQ,EACRC,aAAa,EACbrE,KAAM,EACND,IAAK,KAGTuE,yBAA2B,SAACjO,GAA0B,IAAnBrC,EAAmB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAf,SAAA4V,GAAG,OAAIA,GAC1C,OAAKoC,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIrC,EAAE,cAMzBuQ,WAAa,SAAArV,GAAS,IAAA+M,EACYzf,EAAK0f,OC/BpC,SAAuBvY,EAAQC,EAAW4gB,GAC7ChmB,KAAgBgJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTqX,WAAYpX,EACZ6gB,WAAYD,ID4BZE,CAHkBzI,EACVtY,OADUsY,EACFrY,UAEiB,CAACsL,OAGtCyV,aAAe,SAAA3c,GACPA,GACAA,EAAMua,kBAFU,IAAAnF,EAKgB5gB,EAAK0f,MAAjCvY,EALYyZ,EAKZzZ,OAAQC,EALIwZ,EAKJxZ,UAAWghB,EALPxH,EAKOwH,KACHpoB,EAAKskB,MAArBuD,aAGJ7nB,EAAKqoB,yBAGaD,EAAdE,WCvCT,SAA0BnhB,EAAQC,GACrCpF,KAAgBgJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTqX,WAAYpX,EACZ6gB,WAAY,KDqCZM,CAAiBphB,EAAQC,MAG7BohB,eAAiB,SAAAhd,GACbA,EAAMua,kBADgB,IAAA0C,EAGQzoB,EAAK0f,MAA3BvY,EAHcshB,EAGdthB,OAAQC,EAHMqhB,EAGNrhB,UACGpH,EAAKskB,MAAhBsD,QAGJ5nB,EAAK4kB,SAAS,CAAEgD,QAAQ,IC3C7B,SAAkBzgB,EAAQC,GAC7BpF,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,EACTqX,WAAYpX,EACZqX,aAAc,ODyCdiK,CAASvhB,EAAQC,MAGrBuhB,aAAe,SAAAnd,GACQxL,EAAKskB,MAAhBsD,QAGR5nB,EAAK4kB,SAAS,CACVgD,QAAQ,EACRC,aAAa,OAIrBe,kBAAoB,SAAApd,GACZA,GACAA,EAAMua,kBAGV/lB,EAAK4kB,SAAS,CAAEgD,QAAQ,OAG5BiB,kBAAoB,SAAArd,GACCxL,EAAK0f,MAAd0I,KACAE,YAGJ9c,IACAA,EAAMsd,iBACNtd,EAAMua,mBAGc/lB,EAAKskB,MAArBuD,YAGJ7nB,EAAK4kB,SAAS,CAAEiD,aAAa,IAE7B7nB,EAAK4kB,SAAS,CACViD,aAAa,EACbrE,KAAMhY,EAAMud,QACZxF,IAAK/X,EAAMwd,cAKvBX,uBAAyB,SAAA7c,GACjBA,GACAA,EAAMua,kBAGV/lB,EAAK4kB,SAAS,CAAEiD,aAAa,6EAGxB,IAAAld,EAAAxK,KAAA8oB,EACkC9oB,KAAKuf,MAApCvY,EADH8hB,EACG9hB,OAAQC,EADX6hB,EACW7hB,UAAWghB,EADtBa,EACsBb,KAAM5Q,EAD5ByR,EAC4BzR,EAD5B6M,EAEsClkB,KAAKmkB,MAAxCd,EAFHa,EAEGb,KAAMD,EAFTc,EAESd,IAAKsE,EAFdxD,EAEcwD,YAAaD,EAF3BvD,EAE2BuD,OACxBsB,EAAoDd,EAApDc,SAAUC,EAA0Cf,EAA1Ce,QAASC,EAAiChB,EAAjCgB,kBAAmBd,EAAcF,EAAdE,UAExC7jB,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAM4kB,GAAaf,GAAaa,EAAQxd,KAAK,SAAAC,GAAC,OAAIA,EAAE0a,WAAa1a,EAAE2a,kBAC7D+C,EAAc7kB,GAAWA,EAAQ8kB,cACjC3D,GAAiB0C,GAAaa,EAAQK,MAAM,SAAA5d,GAAC,OAAKA,EAAE0a,YACpDH,EAAgBrB,KAAKkC,IAALplB,MAAAkjB,KAAI7kB,OAAAwpB,EAAA,EAAAxpB,CAAQkpB,EAAQxb,IAAI,SAAA/B,GAAC,OAAIA,EAAEwa,gBAErD,OACIpG,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,OAAOyJ,cAAevpB,KAAK0oB,mBACtC7I,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACXD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,uBAAuBiJ,GACvClJ,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,YAAwBzI,EAAZ8Q,EAAc,eAAoB,mBAElEtI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACVkJ,EAAQxb,IAAI,SAAC/B,EAAG8G,GAAJ,OACTsN,EAAArf,EAAAkM,cAAC8c,GAAD,CACIlS,IAAK/E,EACLwT,OAAQta,EACRga,cAAeA,EACfR,OAAQkD,EACRnC,cAAeA,EACfL,OAAQ,kBAAMnb,EAAKod,WAAWrV,IAC9BuT,SAAUtb,EAAKwd,kBAI3BnI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BAA6B9f,KAAK2nB,yBAAyBsB,EAAmB5R,IAC7FwI,EAAArf,EAAAkM,cAAC+c,EAAAjpB,EAAD,CACIyJ,KAAMyd,IAAgBwB,GAAaC,GACnCO,QAAS1pB,KAAKkoB,uBACdyB,gBAAgB,iBAChBC,eAAgB,CAAExG,MAAKC,QACvBwG,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBlK,EAAArf,EAAAkM,cAACud,EAAAzpB,EAAD,CAAUwf,QAAS,SAAAkK,GAAC,OAAIA,EAAEtE,oBACrBsD,GAAarJ,EAAArf,EAAAkM,cAACyd,EAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKgoB,cAAe3Q,EAAE,WACtD8R,GAAetJ,EAAArf,EAAAkM,cAACyd,EAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKwoB,cAAenR,EAAE,eAGjEwI,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAMwd,EACNiC,QAAS1pB,KAAKyoB,kBACd6B,kBAAgB,qBAChBzK,EAAArf,EAAAkM,cAAC6d,GAAA/pB,EAAD,CAAakC,GAAG,qBAAqB2U,EAAE,uBACvCwI,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,KAAoB6W,EAAE,uBAE1BwI,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKyoB,kBAAmBvG,MAAM,WAC1C7K,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKqoB,eAAgBnG,MAAM,WACvC7K,EAAE,mBAtKZ4I,IAAMC,YAsLVqH,iBAAkBC,cElKlBoD,4LA/BF,IAAAtL,EAC2Ctf,KAAKuf,MAA7CvY,EADHsY,EACGtY,OAAQC,EADXqY,EACWrY,UAAWrB,EADtB0Z,EACsB1Z,MAAO4Z,EAD7BF,EAC6BE,UAClC,IAAK5Z,EAAO,OAAO,KAFd,IAIGgV,EAA6BhV,EAA7BgV,MAAOiQ,EAAsBjlB,EAAtBilB,QAAS3lB,EAAaU,EAAbV,SACxB,IAAKA,EAAU,OAAO,KALjB,IAOGyc,EAAwBzc,EAAxByc,UAAWC,EAAa1c,EAAb0c,SACb1b,EAAM,8BAAA8E,OAAiC4W,EAAjC,KAAA5W,OAA6C2W,GAEzD,OACI9B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,SACXD,EAAArf,EAAAkM,cAACoe,EAAD,CAAU9jB,OAAQA,EAAQC,UAAWA,EAAW/B,SAAUA,EAAUsa,UAAWA,IAC/EK,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACXD,EAAArf,EAAAkM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASuW,IAAI,uBACjChC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,eAAelF,IAElCiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkB+K,YAlBjC5K,IAAMC,qGCuD1B,SAAS6K,GAASzmB,GACd,IAAKA,EAAS,OAAO,KADE,IAGf6M,EAA4B7M,EAA5B6M,eAAgB/K,EAAY9B,EAAZ8B,QAExB,GAAI+K,EAAgB,CAChB,IAAM/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,GAAI/M,EACA,OAAO2S,YAAgB3S,GAI/B,GAAIgC,EAAS,CACT,IAAMrC,EAAO6O,KAAU3P,IAAImD,GAC3B,GAAIrC,EACA,OAAOA,EAAK6W,MAIpB,OAAO,KAGX,SAASoQ,GAAUtN,EAAMuN,EAAOC,GAM5B,OALID,EAAQ,IAAGA,EAAQ,GACnBA,EAAQvN,EAAK1X,OAAS,IAAGilB,EAAQvN,EAAK1X,OAAS,GAC/CklB,EAAMD,IAAOC,EAAMD,GACnBC,EAAMxN,EAAK1X,SAAQklB,EAAMxN,EAAK1X,QAE3B0X,EAAKsN,UAAUC,EAAOC,GAGjC,SAAStF,GAAgBva,GACrBA,EAAMua,kBAGV,SAAShF,GAAiBlD,GACtB,GAAsB,kBAAlBA,EAAK,SAA8B,OAAO,KAC9C,IAAKA,EAAKA,KAAM,OAAO,KACvB,IAAKA,EAAKyN,SAAU,OAAOzN,EAAKA,KAIhC,IAFA,IAAIvT,EAAS,GACToI,EAAQ,EACHzM,EAAI,EAAGA,EAAI4X,EAAKyN,SAASnlB,OAAQF,IAAK,CAC3C,IAAIslB,EAAmBJ,GAAUtN,EAAKA,KAAMnL,EAAOmL,EAAKyN,SAASrlB,GAAGulB,QAChED,GACAjhB,EAAOX,KAAK4hB,GAGhB,IAAIE,EAAaN,GACbtN,EAAKA,KACLA,EAAKyN,SAASrlB,GAAGulB,OACjB3N,EAAKyN,SAASrlB,GAAGulB,OAAS3N,EAAKyN,SAASrlB,GAAGE,QAE/C,OAAQ0X,EAAKyN,SAASrlB,GAAG8L,KAAK,UAC1B,IAAK,oBACD,IAAInJ,EAAM6iB,EAAWC,WAAW,QAAUD,EAAa,UAAYA,EAC/DE,OAAU,EACd,IACIA,EAAaC,UAAUH,GACzB,MAAO3nB,GACLD,QAAQC,MAAM,QAAU2nB,EAAa,KAAO3nB,GAC5C6nB,EAAaF,EAGjBnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAMpE,EACNmS,MAAOnS,EACP6C,OAAO,SACPuW,IAAI,uBACH2J,IAGT,MAEJ,IAAK,wBACD,IAAI/iB,EAAMiV,EAAKyN,SAASrlB,GAAG8L,KAAKnJ,IAAI8iB,WAAW,QACzC7N,EAAKyN,SAASrlB,GAAG8L,KAAKnJ,IACtB,UAAYiV,EAAKyN,SAASrlB,GAAG8L,KAAKnJ,IACxC0B,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAMpE,EACNmS,MAAOnS,EACP6C,OAAO,SACPuW,IAAI,uBACHyJ,IAGT,MAEJ,IAAK,qBACDnhB,EAAOX,KAAKqW,EAAArf,EAAAkM,cAAA,UAAQ4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,QAASC,IACnD,MACJ,IAAK,uBACDnhB,EAAOX,KAAKqW,EAAArf,EAAAkM,cAAA,MAAI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,QAASC,IAC/C,MACJ,IAAK,qBACDnhB,EAAOX,KAAKqW,EAAArf,EAAAkM,cAAA,QAAM4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,QAASC,IACjD,MACJ,IAAK,oBACDnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,OAAK4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,QACvBxL,EAAArf,EAAAkM,cAAA,YAAO4e,KAGf,MACJ,IAAK,wBACDnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KAAG4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OAAQrL,QAAS4F,GAAiB/Y,KAAI,UAAA7B,OAAYsgB,IACtEA,IAGT,MACJ,IAAK,4BACDnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAI,WAAA7B,OAAa0S,EAAKyN,SAASrlB,GAAG8L,KAAK9C,UACtCwc,IAGT,MACJ,IAAK,wBACD,IAAII,EAAUJ,EAAWtlB,OAAS,GAAuB,MAAlBslB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1FnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAI,+BAAA7B,OAAiC0gB,IACpCJ,IAGT,MACJ,IAAK,6BACDnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAI,UAAA7B,OAAYsgB,GAChBhgB,OAAO,SACPuW,IAAI,uBACHyJ,IAGT,MACJ,IAAK,2BACD,IAAIK,EAAUL,EAAWtlB,OAAS,GAAuB,MAAlBslB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1FnhB,EAAOX,KACHqW,EAAArf,EAAAkM,cAAA,KACI4K,IAAKoG,EAAKyN,SAASrlB,GAAGulB,OACtBrL,QAAS4F,GACT/Y,KAAI,4BAAA7B,OAA8B2gB,EAA9B,UACHL,IAGT,MACJ,QACInhB,EAAOX,KAAK8hB,GAIpB/Y,GAAS6Y,EAAiBplB,OAASslB,EAAWtlB,OAGlD,GAAIuM,EAAQmL,EAAKA,KAAK1X,OAAQ,CAC1B,IAAI4lB,EAAkBlO,EAAKA,KAAKsN,UAAUzY,GACtCqZ,GACAzhB,EAAOX,KAAKoiB,GAIpB,OAAOzhB,EAGX,SAAS0hB,GAAQvnB,GACb,IAAKA,EAAS,OAAO,KAErB,IAAIoZ,EAAO,GAEHnZ,EAAYD,EAAZC,QAER,GACIA,GACqB,gBAArBA,EAAQ,UACRA,EAAQmZ,MACkB,kBAA1BnZ,EAAQmZ,KAAK,UACbnZ,EAAQmZ,KAAKA,KAEbA,EAAOkD,GAAiBrc,EAAQmZ,WAGhC,GAAInZ,GAAWA,EAAQunB,SAAwC,kBAA7BvnB,EAAQunB,QAAQ,UAAgCvnB,EAAQunB,QAAQpO,KAAM,CACpGA,EAAKlU,KAAK,MACV,IAAImX,EAAgBC,GAAiBrc,EAAQunB,SACzCnL,IACAjD,EAAOA,EAAK1S,OAAO2V,IAK/B,OAAOjD,EAGX,SAASqO,GAAWznB,GAChB,OAAKA,GACAA,EAAQC,QAEND,EAAQC,QAAQc,SAHF,KAMzB,SAAS4T,GAAQ3U,GACb,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQkU,KAAM,OAAO,KAE1B,IAAIA,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAE5B,OAAOI,IAAWJ,EAAM,QAG5B,SAASwT,GAAY1nB,GACjB,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQkU,KAAM,OAAO,KAE1B,IAAMA,EAAO,IAAIC,KAAoB,IAAfnU,EAAQkU,MAC9B,OAAOI,IAAWJ,EAAM,qBAG5B,SAASyT,GAAS3nB,EAASkb,GACvB,IAAKlb,EAAS,OAAO,KADa,IAG1B8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOsb,EAAArf,EAAAkM,cAAC2T,EAAA,EAAD,CAAWrZ,OAAQZ,EAASa,UAAWvE,EAAI8B,UAAWD,EAAQC,UAAWgb,UAAWA,IAC/F,IAAK,eACD,OAAOK,EAAArf,EAAAkM,cAACwf,EAAA,EAAD,CAAOllB,OAAQZ,EAASa,UAAWvE,EAAIgC,MAAOH,EAAQG,MAAO8a,UAAWA,IACnF,IAAK,iBACD,OAAOK,EAAArf,EAAAkM,cAACyf,EAAD,CAASnlB,OAAQZ,EAASa,UAAWvE,EAAImM,QAAStK,EAAQsK,QAAS2Q,UAAWA,IACzF,IAAK,kBACD,OAAOK,EAAArf,EAAAkM,cAAC0f,EAAA,EAAD,CAAUplB,OAAQZ,EAASa,UAAWvE,EAAIoC,SAAUP,EAAQO,SAAU0a,UAAWA,IAC5F,IAAK,cACD,OAAOK,EAAArf,EAAAkM,cAAC2f,EAAD,CAAMrlB,OAAQZ,EAASa,UAAWvE,EAAIsC,KAAMT,EAAQS,KAAMwa,UAAWA,IAChF,IAAK,kBACD,OAAOK,EAAArf,EAAAkM,cAACoe,EAAD,CAAU9jB,OAAQZ,EAASa,UAAWvE,EAAIwC,SAAUX,EAAQW,SAAUsa,UAAWA,IAC5F,IAAK,eACD,OAAOK,EAAArf,EAAAkM,cAAC8T,EAAA,EAAD,CAAOxZ,OAAQZ,EAASa,UAAWvE,EAAIkC,MAAOL,EAAQK,MAAO4a,UAAWA,IACnF,IAAK,cACD,OAAOK,EAAArf,EAAAkM,cAAC4f,GAAD,CAAMtlB,OAAQZ,EAASa,UAAWvE,EAAIulB,KAAM1jB,EAAQ0jB,KAAMzI,UAAWA,IAChF,IAAK,iBACD,OAAOK,EAAArf,EAAAkM,cAAC6f,GAAA,EAAD,CAASvlB,OAAQZ,EAASa,UAAWvE,EAAI0C,QAASb,EAAQa,QAASoa,UAAWA,IACzF,IAAK,cACD,OAAO,KACX,IAAK,eACD,OAAOK,EAAArf,EAAAkM,cAAC8f,GAAD,CAAOxlB,OAAQZ,EAASa,UAAWvE,EAAIkD,MAAOrB,EAAQqB,MAAO4Z,UAAWA,IACnF,IAAK,eACD,OAAOK,EAAArf,EAAAkM,cAAC+f,GAAA,EAAD,CAAOzlB,OAAQZ,EAASa,UAAWvE,EAAI4C,MAAOf,EAAQe,MAAOka,UAAWA,IACnF,IAAK,mBACD,OAAOK,EAAArf,EAAAkM,cAACggB,GAAA,EAAD,CAAW1lB,OAAQZ,EAASa,UAAWvE,EAAI6E,UAAWhD,EAAQgB,WAAYia,UAAWA,IAChG,IAAK,mBACD,OAAOK,EAAArf,EAAAkM,cAACigB,GAAA,EAAD,CAAW3lB,OAAQZ,EAASa,UAAWvE,EAAI0E,UAAW7C,EAAQiB,WAAYga,UAAWA,IAChG,QACI,MAAO,IAAMjb,EAAQ,SAAW,KAI5C,SAASqoB,GAAsBC,GAC3B,IAAKA,EAAa,OAAO,EADe,IAGhCC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,OAAO,EAEpB,OAAQA,EAAO,UACX,IAAK,2BACD,OAAO,EAEX,IAAK,iCACD,OAAO,EAEX,IAAK,8BACD,OAAO,EAIf,OAAO,EAGX,SAASC,GAAgBF,GAA6B,IAAhBxV,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GAC7C,IAAKuV,EAAa,MAAO,GADyB,IAG1CC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,MAAO,GAEpB,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrB3b,EAAmB2b,EAAnB3b,eAEF/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,OAAO4F,YAAgB3S,GAE3B,IAAK,iCAGD,OAFwB0oB,EAAhBE,YAIZ,IAAK,8BAA+B,IACxB5mB,EAA8B0mB,EAA9B1mB,QAAS6mB,EAAqBH,EAArBG,iBAEjB,OAAOlR,aAAa3V,GAAS,EAAOiR,IAAM4V,EAAgB,KAAAjiB,OAAQiiB,EAAR,KAA8B,IAIhG,MAAO,GAGX,SAASC,GAAU5oB,GACf,IAAKA,EAAS,OAAO,EACrB,IAAKA,EAAQ8B,QAAS,OAAO,EAC7B,IAAK9B,EAAQmT,YAAa,OAAO,EAEjC,IAAI1T,EAAO6O,KAAU3P,IAAIqB,EAAQ8B,SACjC,QAAKrC,GAEEA,EAAK2T,4BAA8BpT,EAAQ5B,GAGtD,SAASyqB,GAAgB7oB,GACrB,OAAKA,EAEEA,EAAQ6M,eAFM,KAKzB,SAASic,GAAejjB,EAAQqI,GAC5B,GAA+B,IAA3BrI,EAAOoD,SAASvH,QACG,IAAnBwM,EAAQxM,OAAZ,CAEA,IAAMwH,EAAMgF,EAAQ6a,OAAO,SAASC,EAAaC,GAE7C,OADAD,EAAYrsB,IAAIssB,EAAQ7qB,GAAI6qB,EAAQ7qB,IAC7B4qB,GACR,IAAIpkB,KAEPiB,EAAOoD,SAAWpD,EAAOoD,SAAS7B,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,OAG7D,SAAS6U,GAAWjT,GAAyB,IAAhB+S,EAAgB3V,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAZ,SAAA4V,GAAG,OAAIA,GACpC,IAAKhT,EAAS,OAAO,KADoB,IAGjCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,IAAIunB,EAAU,GAKd,GAJIvnB,EAAQunB,SAAWvnB,EAAQunB,QAAQpO,OACnCoO,EAAO,KAAA9gB,OAAQzG,EAAQunB,QAAQpO,OAG/BpZ,EAAQkpB,IAAM,EACd,OAAOC,aAAyBnpB,GAGpC,OAAQC,EAAQ,UACZ,IAAK,mBACD,OAAO8S,EAAE,aAAeyU,EAE5B,IAAK,eACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,8BACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,cACD,OAAO+S,EAAE,QAAUyU,EAEvB,IAAK,wBAGL,IAAK,yBAGL,IAAK,yBAGL,IAAK,0BAGL,IAAK,yBAGL,IAAK,wBAGL,IAAK,oBAGL,IAAK,yBAGL,IAAK,uBACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,iBACD,OAAO+S,EAAE,iBAAmByU,EAEhC,IAAK,2BAGL,IAAK,6BACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SACR,OAAIA,GAAYA,EAAS4oB,UACd5oB,EAAS4oB,UAAY5B,EAGzBzU,EAAE,kBAAoByU,EAEjC,IAAK,sBACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,sBACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,cACD,OAAOzU,EAAE,cAAgByU,EAE7B,IAAK,mBAGL,IAAK,iBACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,kBACD,OAAO+S,EAAE,kBAAoByU,EAEjC,IAAK,8BAGL,IAAK,0BAGL,IAAK,2BAGL,IAAK,8BACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,eACD,OAAO+S,EAAE,eAAiByU,EAE9B,IAAK,cAGD,MAAO,iBAFUvnB,EAAT0jB,KAEac,UAAY1R,EAAE,SAAWyU,EAElD,IAAK,oBAGL,IAAK,yBACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QACJuoB,EAAQ,GAKZ,OAJIvoB,GAAWA,EAAQuoB,QACnBA,EAAQvoB,EAAQuoB,OAGbtW,EAAE,kBAAoBsW,EAAK,IAAA3iB,OAAO2iB,GAAU,IAAM7B,EAE7D,IAAK,8BACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,cACD,OAAOC,EAAQmZ,KAAKA,KAAOoO,EAE/B,IAAK,qBACD,OAAO2B,aAAyBnpB,GAEpC,IAAK,eACD,OAAO+S,EAAE,kBAAoByU,EAEjC,IAAK,eACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,mBACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,mBACD,OAAOzU,EAAE,eAAiByU,EAE9B,IAAK,0BACD,OAAO2B,aAAyBnpB,GAEpC,QACI,OAAO+S,EAAE,0BAKrB,SAASuW,GAAerpB,GACpB,QAAKA,GAEuB,iBAArBA,EAAQ,SAGnB,SAASsC,GAAc3B,GACnB,IAAKA,EAAU,OAAO,KADO,IAGrByc,EAAwBzc,EAAxByc,UAAWC,EAAa1c,EAAb0c,SACnB,aAAA5W,OAAc4W,EAAd,KAAA5W,OAA0B2W,EAA1B,UAAA3W,OAA4CyE,IAA5C,KAAAzE,OAA8D2E,IAA9D,WAAA3E,OAAuF6E,IAAvF,UAAA7E,OAA8GuE,KAGlH,SAASse,GAAe7mB,EAAQC,GAC5B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFkB,IAI/BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO4X,QAAQ5X,EAASC,OAE5B,QACI,OAAO,GAKnB,SAASwoB,GAAgB9mB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,kBAAmB,IACZO,EAAaP,EAAbO,SACR,IAAKA,EAAU,OAAO,EAFF,IAIZ4oB,EAAc5oB,EAAd4oB,UAER,OAAOA,GAAaA,EAAUvZ,cAAc4Z,SAAS,SAEzD,IAAK,cAAe,IACR1oB,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,EAFN,IAIRP,EAAaO,EAAbP,SACR,IAAKA,EAAU,OAAO,EALN,IAOR4oB,EAAc5oB,EAAd4oB,UAER,OAAOA,GAAaA,EAAUvZ,cAAc4Z,SAAS,SAEzD,QACI,OAAO,GAKnB,SAASC,GAAmBhnB,EAAQC,GAChC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFsB,IAInCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO4X,QAAQ5X,EAASb,WAE5B,QACI,OAAO,GAKnB,SAASypB,GAAgBjnB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOA,EAAQoa,YAEnB,IAAK,mBACD,OAAOpa,EAAQqa,UAEnB,QACI,OAAO,GAKnB,SAASsP,GAAc5pB,GACnB,IAAKA,EAAS,OAAO,KADO,IAGpBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTG,EAAUH,EAAVG,MACR,GAAIA,EACA,OAAOypB,aAAczpB,GAEzB,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAUW,EAAVX,MACR,GAAIA,EACA,OAAOypB,aAAczpB,GAEzB,OAKZ,OA5pBJ,SAAmBJ,GACf,IAAKA,EAAS,OAAO,KADG,IAGhB8pB,EAAiB9pB,EAAjB8pB,aAER,GAAIA,EACA,OAAQA,EAAa,UACjB,IAAK,2BACD,GAAIA,EAAajd,eAAiB,EAAG,CACjC,IAAM/M,EAAO2K,IAAU9L,IAAImrB,EAAajd,gBACxC,GAAI/M,EACA,OAAO2S,YAAgB3S,GAG/B,MAEJ,IAAK,uBACD,IAAML,EAAO6O,KAAU3P,IAAImrB,EAAahoB,SACxC,GAAIrC,EACA,OAAOA,EAAK6W,MAO5B,OAAOmQ,GAASzmB,GAkoBT+pB,CAAU/pB,GAGrB,SAASgqB,GAAStnB,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFY,IAIzBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAEA,GADkBA,EAAVX,MAEJ,OAAO,EAQvB,OAAO,EAGX,SAAS6pB,GAAavnB,EAAQC,GAC1B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFgB,IAI7BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBAED,GADuBA,EAAfgB,WAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAEA,GADuBA,EAAfE,WAEJ,OAAO,EAQvB,OAAO,EAGX,SAASipB,GAAwBxnB,EAAQC,GACrC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAF2B,IAIxCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,MAAO,CACHoE,QAAS,6BAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfiB,WAEJ,MAAO,CACHsD,QAAS,iCAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfgB,WAEJ,OAAO,KAMX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAC3B,GAAIb,EACA,OAAO,KAOX,GAAIc,EACA,OAAO,KAOX,GAAID,EACA,OAAO,KAMX,OAKZ,OAAO,KAGX,SAASkpB,GAAcjqB,EAAWF,EAASoqB,GACvC,GAAKlqB,GACAF,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEAxB,EAASsD,EAApBA,UACDtD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAOxCzC,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,IAGfb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB0V,KAAiBwW,sBAAsB,CACnC5nB,OAAQZ,EACRa,UAAWvE,OAInB,SAASmsB,GAAUnqB,EAAOJ,EAASoqB,GAC/B,GAAKhqB,GACAJ,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASwD,EAAhBA,MACDxD,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAGpCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU4G,gBAAgBJ,EAAS1D,EAAIxB,EAAKwB,MAG9Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAsDnB,SAASosB,GAAahqB,EAAUR,EAASoqB,GACrC,GAAK5pB,GACAR,EAAL,CAFiD,IAIzC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEDxB,EAAS4D,EAAnBA,SACD5D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAIxCzC,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGZorB,GAAgB1nB,EAAS1D,IACzBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB0V,KAAiBwW,sBAAsB,CACnC5nB,OAAQZ,EACRa,UAAWvE,KAGf+O,YAAevQ,EAAM4D,EAAS4oB,UAAWppB,MAwCjD,SAASyqB,GAAUnqB,EAAON,EAASoqB,GAC/B,GAAK9pB,GACAN,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP2C,IAS9B/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB0V,KAAiBwW,sBAAsB,CACnC5nB,OAAQZ,EACRa,UAAWvE,iBAIJssB,uFAAf,SAAAtuB,EAA2B0E,EAASd,EAASoqB,GAA7C,IAAAtoB,EAAA1D,EAAAusB,EAAAnb,EAAA,OAAAob,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSqE,EADT,CAAAvE,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESiD,EAFT,CAAAzD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIY+E,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGRusB,EAAW7pB,EAAX6pB,OAZZ,CAAApuB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,GAe6Bc,KAAgBgJ,KAAK,CAC1C/B,QAAS,gBACTmmB,WAjBR,WAeUnb,EAfVjT,EAAAkK,KAAA,CAAAlK,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAsBIQ,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,eAxBR,yBAAAjT,EAAAU,SAAAb,6BA4BA,SAASyuB,GAAU7pB,EAAOhB,EAASoqB,GAC/B,GAAKppB,GACAhB,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASoE,EAAhBA,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAIxCzC,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB0V,KAAiBwW,sBAAsB,CACnC5nB,OAAQZ,EACRa,UAAWvE,OAInB,SAAS0sB,GAAc7nB,EAAWjD,EAASoqB,GACvC,GAAKnnB,GACAjD,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASqG,EAAhBjC,MACDpE,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU6H,oBAAoBrB,EAAS1D,EAAIxB,EAAKwB,MAE9Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAAS2sB,GAAcjoB,EAAW9C,EAASoqB,GACvC,GAAKtnB,GACA9C,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJxB,EAASkG,EAAhBC,MACDnG,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAGpCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAU0H,oBAAoBlB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAAS8c,GAAUxY,EAAQC,GAA8B,IAAnBynB,IAAmBhtB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GAC/C4C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACJA,GACAiqB,GAAcjqB,EAAWF,EAASoqB,GAGtC,MAEJ,IAAK,eAAgB,IACThqB,EAAUH,EAAVG,MACJA,GACAmqB,GAAUnqB,EAAOJ,EAASoqB,GAG9B,MAEJ,IAAK,yBAA0B,IACnB9pB,EAAUL,EAAVK,MACJA,GAvThB,SAAuBA,EAAON,EAASoqB,GACnC,GAAK9pB,GACAN,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP+C,IASlC/E,EAAS+E,EAAhBrB,MACD1D,IAELA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBACzB1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEhCoqB,GAAcxtB,EAAK0C,OAAO6Q,oBACjC7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,IAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIxB,EAAKwB,MAE1Eb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB0V,KAAiBwW,sBAAsB,CACnC5nB,OAAQZ,EACRa,UAAWvE,QAyRH4sB,CAAc1qB,EAAON,EAASoqB,GAGlC,MAEJ,IAAK,iBAAkB,IACX7f,EAAYtK,EAAZsK,QACJA,GA5RhB,SAAqBA,EAASvK,EAASoqB,GACnC,GAAK7f,GACAvK,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhB6sB,aAAS1gB,EAAQ/C,SAiRL0jB,CAAY3gB,EAASvK,GAGzB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SACJA,GACAgqB,GAAahqB,EAAUR,EAASoqB,GAGpC,MAEJ,IAAK,cAAe,IACR1pB,EAAST,EAATS,KACJA,GArPhB,SAAkBA,EAAMV,EAASoqB,GAC7B,GAAK1pB,GACAV,EAAL,CAFyC,IAIjC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAET8B,EAAcQ,EAAdR,UACR,GAAIA,EAAW,KACMtD,EAASsD,EAApBA,UACN,IAAKtD,EAAM,OAGX,GADAA,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAC7BwtB,GAAcxtB,EAAK0B,MAAM0R,sBAEzB,YADA1U,IAAUuS,oBAAoBjR,EAAKwB,GAAI4B,GAEpC,GAAIoqB,GAAcxtB,EAAK0C,OAAO6Q,oBAEjC,YADA7U,IAAU+uB,iBAAiBztB,EAAKwB,GAAI4B,GAIxCyI,YAAS7L,EAAMoD,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIxB,EAAKwB,MAGlFb,KAAgBgJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACTiY,WAAY3b,IAGhBb,KAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,KAsNH+sB,CAASzqB,EAAMV,EAASoqB,GAG5B,MAEJ,IAAK,eAAgB,IACT9pB,EAAUL,EAAVK,MACJA,GACAmqB,GAAUnqB,EAAON,EAASoqB,GAG9B,MAEJ,IAAK,iBAAkB,IACXtpB,EAAYb,EAAZa,QACJA,GACA4pB,GAAY5pB,EAASd,EAASoqB,GAGlC,MAEJ,IAAK,cAAe,IACRrpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACAiqB,GAAcjqB,EAAWF,EAASoqB,GAGlChqB,GACAmqB,GAAUnqB,EAAOJ,EAASoqB,GAG1B5pB,GACAgqB,GAAahqB,EAAUR,EAASoqB,GAGhCtpB,GACA4pB,GAAY5pB,EAASd,EAASoqB,GAG9BppB,GACA6pB,GAAU7pB,EAAOhB,EAASoqB,GAG1BnpB,GACA6pB,GAAc7pB,EAAYjB,EAASoqB,GAGnClpB,GACA6pB,GAAc7pB,EAAYlB,EAASoqB,GAGnC9pB,GACAmqB,GAAUnqB,EAAON,EAASoqB,GAIlC,MAEJ,IAAK,eAAgB,IACTppB,EAAUf,EAAVe,MACJA,GACA6pB,GAAU7pB,EAAOhB,EAASoqB,GAG9B,MAEJ,IAAK,mBAAoB,IACbnpB,EAAehB,EAAfgB,WACJA,GACA6pB,GAAc7pB,EAAYjB,EAASoqB,GAGvC,MAEJ,IAAK,mBAAoB,IACblpB,EAAejB,EAAfiB,WACJA,GACA6pB,GAAc7pB,EAAYlB,EAASoqB,KAQnD,SAASgB,GAAiBprB,GACtB,OAAOA,GAAgC,mBAArBA,EAAQ,SAG9B,SAASqrB,GAAkB3oB,EAAQC,GAC/B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAF0C,IAIlCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,OAAKA,GAEiBA,EAAdiC,WAFe,KAK3B,IAAK,eAAgB,IACT/B,EAAUH,EAAVG,MACR,OAAKA,GAE6BA,EAA1B2B,uBAFW,KAKvB,IAAK,yBAA0B,IACnBzB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,kBAAmB,IACZjB,EAAaP,EAAbO,SACR,OAAKA,GAEiBA,EAAd2B,WAFc,KAK1B,IAAK,cAAe,IACRzB,EAAST,EAATS,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACnB,GAAIJ,EAAW,KACHiC,EAAcjC,EAAdiC,UACR,GAAIA,EACA,OAAOA,EAIf,OAAI7B,EACOqL,YAAarL,EAAMmB,OAGvB,KAEX,IAAK,eAAgB,IACTnB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,iBAAkB,IACXX,EAAYb,EAAZa,QACR,OAAKA,GAEiBA,EAAdqB,WAFa,KAKzB,IAAK,cAAe,IACRpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIX,EACA,OAAOqL,YAAarL,EAAMmB,OAE9B,GAAIvB,EAEA,OADsBA,EAAdiC,WACY,KAExB,GAAI/B,EAEA,OADkCA,EAA1B2B,uBACwB,KAEpC,GAAIvB,EAEA,OADsBA,EAAd2B,WACY,KAExB,GAAIrB,EAEA,OADsBA,EAAdqB,WACY,KAExB,GAAInB,EAEA,OADsBA,EAAdmB,WACY,KAExB,GAAIlB,EAEA,OADsBA,EAAdkB,WACY,KAI5B,MAEJ,IAAK,eAAgB,IACTnB,EAAUf,EAAVe,MACR,OAAKA,GAEiBA,EAAdmB,WAFW,KAKvB,IAAK,mBAAoB,IACblB,EAAehB,EAAfgB,WACR,OAAKA,GAEiBA,EAAdkB,WAFgB,KAOhC,OAAO,MAGX,SAASmpB,GAAgB5oB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EACrB,GAAyB,gBAArBA,EAAQ,SAA4B,OAAO,EANP,IAQ1BsrB,EAAgBtrB,EAAtBmZ,KACR,GAAKmS,EAAL,CACA,GAA6B,kBAAzBA,EAAY,SAA8B,OAAO,EAVb,IAYhCnS,EAAmBmS,EAAnBnS,KAAMyN,EAAa0E,EAAb1E,SACd,IAAKzN,EAAM,OAAO,EAClB,GAAIyN,GAAYA,EAASnlB,OAAS,EAAG,OAAO,EAE5C,IAEI8pB,EAFAC,EAAY,EACZC,EAAe,EAEbC,EAAKC,MACX,EAAG,CAGC,GAFAJ,EAAIG,EAAGE,KAAKzS,GAEL,CAGH,GAFAsS,GAAgB,EAEZD,IAAcD,EAAEvd,MAAO,CACvByd,EAAe,EACf,MAGJ,GAAIA,EAAe,EAAG,CAClBA,EAAe,EACf,MAEJD,EAAYE,EAAGF,UAGnB,IAAKD,GAAKC,IAAcrS,EAAK1X,OAAQ,CACjCgqB,EAAe,EACf,aAECF,GAET,OAAOE,6jCCt9CLI,EAAatwB,OAAOuwB,OAAO,CAC7BC,KAAM,OACNC,OAAQ,SACRC,WAAY,eA0VV7wB,EAAQ,gBApVV,SAAA8wB,IAAc,IAAA5wB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAywB,IACV5wB,EAAAC,OAAA4wB,EAAA,EAAA5wB,CAAAE,KAAAF,OAAA6wB,EAAA,EAAA7wB,CAAA2wB,GAAAtwB,KAAAH,QAyBJ4B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5BvC9B,EA+BdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjC1C9B,EAoCdO,SApCc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoCH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,mCAAAR,EAAAU,SAAAb,MApCG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA2Cd+wB,MAAQ,WACJ/uB,IAAgBgH,aAAa,CACzBC,QAAS,4BA7CHjJ,EAiDd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,yBACDd,EAAKgxB,SAAW,KAChBhxB,EAAKyE,QAAU,KACfzE,EAAKixB,KAAO,KACZjxB,EAAKkxB,YAAc,KAEnBlxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAEdzE,EAAKyE,QAAUA,EAEfzE,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKmxB,YAAYhqB,EAAQC,GACzB,MAEJ,IAAK,0BAA2B,IACpBgqB,EAAWtwB,EAAXswB,OAERpxB,EAAKoxB,OAASA,GAEE,IAAIC,KACZjwB,IAAI,SAAUgwB,GAEtBpxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBwwB,EAAWxwB,EAAXwwB,OAERtxB,EAAKsxB,OAASA,EAEdtxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BAA4B,IACrBywB,EAAYzwB,EAAZywB,QAERvxB,EAAKuxB,QAAUA,EAEfvxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,gCAAiC,IAC1B0wB,EAAiB1wB,EAAjB0wB,aAERxxB,EAAKwxB,aAAeA,GAEJ,IAAIH,KACZjwB,IAAI,eAAgBowB,GAE5BxxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKyxB,SAAU,EAEfzxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,kCACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,yBACDd,EAAKyxB,SAAU,EAEfzxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAK0xB,iBAAgB,GACrB,MAEJ,IAAK,wBACD1xB,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAK2xB,kBACL,MAEJ,IAAK,0BACD3xB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,uBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAEvBA,EAAO8wB,UACH5xB,EAAK0xB,iBAAgB,IAKzB1xB,EAAK+wB,QAET,MAEJ,IAAK,wBAAyB,IAClBc,EAAqC/wB,EAArC+wB,SAAUC,EAA2BhxB,EAA3BgxB,YAAaC,EAAcjxB,EAAdixB,UAE/B/xB,EAAKixB,KAAO,CACRa,YAAaA,EACbD,SAAUA,EACVE,UAAWA,GAGf/xB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,iCACDd,EAAKkxB,YAAcpwB,EAAOkxB,OAE1BhyB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,8BAIL,IAAK,+BAIL,IAAK,+BAIL,IAAK,mCAIL,IAAK,gCAIL,IAAK,4BAIL,IAAK,gCACDd,EAAKuB,KAAKT,EAAO,SAAUA,KA3MzBd,EAmNd2xB,gBAAkB,WACd,GAAK3xB,EAAKgxB,UACLhxB,EAAKyE,QAAV,CAFoB,IAAAwtB,EAIIjyB,EAAKyE,QAArB8B,EAJY0rB,EAIZ1rB,QAAS1D,EAJGovB,EAIHpvB,GACT6K,EAAa1N,EAAKgxB,SAAlBtjB,SACR,GAAKA,EAAL,CAEA,IAAMgF,EAAQhF,EAASwkB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,GAEAA,EAAQ,EAAIhF,EAASvH,OAAQ,CAC7B,IAAM1B,EAAUiJ,EAASgF,EAAQ,GAEjCiN,YAAUlb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,OAjOjC7C,EAqOd0xB,gBAAkB,SAAAS,GACd,IAAKnyB,EAAKgxB,SAAU,OAAO,EAC3B,IAAKhxB,EAAKyE,QAAS,OAAO,EAFQ,IAAA2tB,EAIVpyB,EAAKyE,QAArB8B,EAJ0B6rB,EAI1B7rB,QAAS1D,EAJiBuvB,EAIjBvvB,GACT6K,EAAa1N,EAAKgxB,SAAlBtjB,SACR,IAAKA,EAAU,OAAO,EAEtB,IAAMgF,EAAQhF,EAASwkB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,EAAc,OAAO,EAEzB,IAAI2f,GAAa,EACjB,GAAKF,EAGD,OAAQnyB,EAAKsxB,QACT,KAAKf,EAAWE,KAER4B,EADAryB,EAAKuxB,QACOe,YAAa,EAAG5kB,EAASvH,QAEzBuM,EAAQ,EAExB,MAEJ,KAAK6d,EAAWI,WACZ0B,EAAY3f,EACZ,MAEJ,KAAK6d,EAAWG,OAER2B,EADAryB,EAAKuxB,QACOe,YAAa,EAAG5kB,EAASvH,QAEzBuM,EAAQ,GAAK,EAAIA,EAAQ,EAAIhF,EAASvH,OAAS,OAnBvEksB,EAAY3f,EAAQ,EA0BxB,GAAI2f,GAAa,EAAG,CAChB,IAAM5tB,EAAUiJ,EAAS2kB,GAGzB,OADA1S,YAAUlb,EAAQ8B,QAAS9B,EAAQ5B,IAAI,IAChC,EAGX,OAAO,GAnRG7C,EAsRdmxB,YAtRc,eAAA/uB,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAsRA,SAAAyB,EAAO8E,EAAQC,GAAf,IAAAmrB,EAAAC,EAAAC,EAAA5mB,EAAAvB,EAAAooB,EAAAhlB,EAAA,OAAAhN,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAqxB,EAAAtyB,OAAA0yB,EAAA,EAAA1yB,QAAA0yB,EAAA,EAAA1yB,CAAAD,MACQwyB,EADRD,EACFvB,UADE,CAAA1uB,EAAApB,KAAA,aAIEwM,EAAa8kB,EAAb9kB,YACiF,IAAzEA,EAASwkB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErF,UAAYY,GAAUyE,EAAE/I,KAAOuE,IALnE,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAUVQ,IAAgBgH,aAAa,CACzBC,QAAS,mCACT9B,OAAQA,EACRC,UAAWA,IAGTyE,EAAS8iB,YAAwBxnB,EAAQC,GAhBrC,CAAA9E,EAAApB,KAAA,gBAkBNlB,EAAKgxB,SAAW,CACZ7pB,OAAQA,EACRC,UAAWA,EACXwrB,WAAY,EACZllB,SAAU,CAACE,IAAaxK,IAAI+D,EAAQC,KAGxCpF,IAAgBgH,aAAa,CACzBC,QAAS,4BACT+nB,SAAUhxB,EAAKgxB,WA3Bb1uB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAiCWc,IAAgBgJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO,GACPvhB,eAAgB,EAChBwhB,gBAAiB1rB,EACjBokB,QAAS,GACTuH,MAAO,IACPlnB,OAAQA,IAzCF,QAiCJvB,EAjCIhI,EAAA4I,KA4CV0C,IAAaC,SAASvD,EAAOoD,UAErBglB,EAA0BpoB,EAA1BooB,YAAahlB,EAAapD,EAAboD,SAErB1N,EAAKgxB,SAAW,CACZ7pB,OAAQA,EACRC,UAAWA,EACXwrB,WAAYF,EACZhlB,SAAUA,GAGd1L,IAAgBgH,aAAa,CACzBC,QAAS,4BACT+nB,SAAUhxB,EAAKgxB,WAzDT,yBAAA1uB,EAAAZ,SAAAW,MAtRA,gBAAAI,EAAAuwB,GAAA,OAAA5wB,EAAAR,MAAAzB,KAAA0B,YAAA,GAGV,IAAMoxB,EAAU,IAAI5B,IAChBG,EAAeyB,EAAQ7vB,IAAI,gBAC3BguB,EAAS6B,EAAQ7vB,IAAI,UALf,OAMVouB,EACIA,GAAgB0B,OAAO1B,IAAiB,GAAK0B,OAAO1B,IAAiB,EAC/D0B,OAAO1B,GACP2B,IACV/B,EAASA,GAAU8B,OAAO9B,IAAW,GAAK8B,OAAO9B,IAAW,EAAI8B,OAAO9B,GAAUgC,IAEjFpzB,EAAKwxB,aAAeA,EACpBxxB,EAAKoxB,OAASA,EACdpxB,EAAKsxB,OAASf,EAAWE,KACzBzwB,EAAKuxB,SAAU,EAEfvxB,EAAKgxB,SAAW,KAChBhxB,EAAKyE,QAAU,KACfzE,EAAKixB,KAAO,KACZjxB,EAAKkxB,YAAc,KAEnBlxB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAvBXvJ,6BADQkM,iBAsV1BhC,OAAOmpB,OAASvzB,EACDA,wCC9Wfoe,EAAAC,EAAAC,EAAA,sBAAAsR,IAAAxR,EAAAC,EAAAC,EAAA,sBAAAkV,IAAApV,EAAAC,EAAAC,EAAA,sBAAAmV,IAAArV,EAAAC,EAAAC,EAAA,sBAAAoV,IAAA,IAAAC,EAAAvV,EAAA,GASO,SAASwR,EAASzjB,GAAuB,IAAfynB,EAAe7xB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC5CG,IAAgBgH,aAAa,CACzBC,QAAS,uBACTgD,SACAynB,UAID,SAASJ,EAASnsB,GAAyC,IAAjCC,EAAiCvF,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAArB,KAAM6xB,EAAe7xB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC9DG,IAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,SACAC,YACAssB,UAID,SAASH,EAAiBpsB,EAAQC,GACrCpF,IAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,SACAC,cAID,SAASosB,EAAcrsB,EAAQC,EAAWgY,GAC7Cpd,IAAgBgH,aAAa,CACzBC,QAAS,8BACT9B,SACAC,YACAgY,gDCvCRlB,EAAAC,EAAAC,EAAA,sBAAAlE,IAAAgE,EAAAC,EAAAC,EAAA,sBAAAhD,IAAA8C,EAAAC,EAAAC,EAAA,sBAAAlH,IAAAgH,EAAAC,EAAAC,EAAA,sBAAAuV,IAAAzV,EAAAC,EAAAC,EAAA,sBAAAwV,IAAA1V,EAAAC,EAAAC,EAAA,sBAAAyV,IAAA3V,EAAAC,EAAAC,EAAA,sBAAA7K,IAAA2K,EAAAC,EAAAC,EAAA,sBAAA0V,IAAA5V,EAAAC,EAAAC,EAAA,sBAAAhH,IAAA,IAAA2c,EAAA7V,EAAA,KAAA8V,EAAA9V,EAAA+V,EAAAF,GAAAG,EAAAhW,EAAA,IAAAiW,EAAAjW,EAAA,IAAAkW,EAAAlW,EAAA,IAYA,SAAShE,EAAc3V,GACnB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKqV,OAAQ,OAAO,KAEzB,GAAIrV,EAAK1B,KAAOwxB,IACZ,MAAO,wBAGX,GAAI9vB,EAAKwN,MAA+B,gBAAvBxN,EAAKwN,KAAK,SACvB,MAAO,MAGX,OAAQxN,EAAKqV,OAAO,UAChB,IAAK,kBACD,MAAO,4BAEX,IAAK,sBACD,MAAO,2BAEX,IAAK,qBACD,MAAO,0BAEX,IAAK,oBAAqB,IAChB0a,EAAe/vB,EAAKqV,OAApB0a,WACN,IAAKA,EAAY,MAAO,UAExB,IAAMtb,EAAM,IAAIJ,KACV2b,EAAY,IAAI3b,KAAkB,IAAb0b,GAC3B,GAAIC,EAAYvb,EACZ,MAAO,qBAGX,IAAIwb,EAAO,IAAI5b,KAAKI,EAAMub,GAG1B,GAAIC,EAAKC,UAAY,IAAO,GACxB,MAAO,qBAIX,GAAID,EAAKC,UAAY,IAAO,KAAS,CACjC,IAAMC,EAAU5P,KAAKC,MAAMyP,EAAKC,UAAY,IAAO,IACnD,mBAAAtpB,OAAgC,IAAZupB,EAAgB,WAAaA,EAAU,WAA3D,QAIJ,IAAMC,EAAQ,IAAI/b,KAElB,GADA+b,EAAM7b,SAAS,EAAG,EAAG,EAAG,GACpByb,EAAYI,EAAO,CAEnB,GAAIH,EAAKC,UAAY,IAAO,MAAa,CACrC,IAAMG,EAAQ9P,KAAKC,MAAMyP,EAAKC,UAAY,IAAO,GAAK,IACtD,mBAAAtpB,OAA8B,IAAVypB,EAAc,SAAWA,EAAQ,SAArD,QAIJ,4BAAAzpB,OAA6B4N,IAAWwb,EAAW,SAIvD,IAAIM,EAAY,IAAIjc,KAGpB,OAFAic,EAAUxb,QAAQL,EAAII,UAAY,GAClCub,EAAM7b,SAAS,EAAG,EAAG,EAAG,GACpByb,EAAYM,EACZ,0BAAA1pB,OAAiC4N,IAAWwb,EAAW,SAG3D,aAAAppB,OAAoB4N,IAAWwb,EAAW,eAE9C,IAAK,mBACD,MAAO,SAEX,IAAK,qBACD,MAAO,qBAIf,OAAO,KAGX,SAASnZ,EAAa7W,GAClB,IAAKA,EAAM,OAAO,EADM,IAGhB1B,EAAqB0B,EAArB1B,GAAI+W,EAAiBrV,EAAjBqV,OAAQ7H,EAASxN,EAATwN,KACpB,QAAK6H,MACA7H,IACDlP,IAAOwxB,MAEgB,qBAApBza,EAAO,UAAqD,gBAAlB7H,EAAK,YAG1D,SAASmF,EAAgB3S,GACrB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKiS,YAAcjS,EAAKqb,UAAW,SAAAzU,OAAU5G,EAAKiS,WAAf,KAAArL,OAA6B5G,EAAKqb,WACzE,GAAIrb,EAAKiS,WAAY,OAAOjS,EAAKiS,WACjC,GAAIjS,EAAKqb,UAAW,OAAOrb,EAAKqb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAASxI,EAAiBnL,GACtB,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,IAAK1H,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKiS,WAAY,OAAOjS,EAAKiS,WACjC,GAAIjS,EAAKqb,UAAW,OAAOrb,EAAKqb,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAAS+T,EAAc1nB,GACnB,IAAMsO,EAAWrL,IAAUsL,YAAYvO,GACvC,QAAIsO,GACOA,EAASua,WAMxB,SAASlB,EAAervB,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAIwW,EAAQ7D,EAAgB3S,GACxByW,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ7U,OAAS,EACrB6U,EAGJzW,EAAKiS,WAAajS,EAAKiS,WAAW0E,OAAO,GAAK3W,EAAKqb,UAAYrb,EAAKqb,UAAU1E,OAAO,GAAK,GAGrG,SAAS2Y,EAAmBtvB,GACxB,IAAKA,EAAM,OAAO,EAClB,IAAKA,EAAKqV,OAAQ,OAAO,EACzB,GAA2B,gBAAvBrV,EAAKwN,KAAK,SAA4B,OAAO,EAEjD,OAAQxN,EAAKqV,OAAO,UAChB,IAAK,kBACD,OAAO,EAEX,IAAK,sBACD,OAAO,GAEX,IAAK,qBACD,OAAO,IAEX,IAAK,oBACD,OAAOrV,EAAKqV,OAAO0a,WAEvB,IAAK,mBACD,OAAO/vB,EAAKqV,OAAOmb,QAEvB,IAAK,qBACD,OAAO,KAKnB,SAASxhB,EAAgByhB,GACrB,IAAKA,EAAkB,OAAO,KADS,IAG/BnyB,EAAcmyB,EAAdnyB,GAAIqD,EAAU8uB,EAAV9uB,MACZ,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAM8uB,EAAiB/kB,YAAQhK,EAAOgvB,KAChCC,EAAejlB,YAAQhK,EAAOkvB,KAEpC,MAAO,CACHnsB,QAAS,eACTpG,GAAIA,EACJsQ,MAAO8hB,EAAelwB,MACtBqO,IAAK+hB,EAAapwB,OAI1B,SAAS+uB,EAAwBkB,GAC7B,IAAKA,EAAkB,OAAO,KADiB,IAGvCK,EAAeL,EAAfK,WACR,IAAKA,EAAY,OAAO,KAExB,IAAM1c,EAAO,IAAIC,KAAkB,IAAbyc,GACtB,OAAOtc,IAAWJ,EAAM,iHCrJtB7Y,EAAQ,gBAxDV,SAAAsa,IAAc,IAAApa,EAAA,OAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAia,IACVpa,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAAma,GAAA9Z,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOqZ,YAEhBna,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MACJ,IAAK,2BACDd,EAAKs1B,YAAYx0B,EAAOuZ,cAAevZ,EAAOy0B,sBAE9Cv1B,EAAKuB,KAAKT,EAAO,SAAUA,KApBzBd,EA2Bd8B,eAAiB,SAAAhB,KA3BHd,EA6Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA/BvC9B,EAkCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKw1B,cAAgB,IAAInsB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAuCV6C,GACA,OAAO1C,KAAKgD,MAAMC,IAAIP,+BAGtBsX,GACAha,KAAKgD,MAAM/B,IAAI+Y,EAAWtX,GAAIsX,uCAGtBtX,GACR,OAAO1C,KAAKq1B,cAAcpyB,IAAIP,uCAGtBA,EAAI0X,GACZpa,KAAKq1B,cAAcp0B,IAAIyB,EAAI0X,UArDLrO,iBA0D9BhC,OAAOiQ,WAAara,EACLA,4LC5Df,SAAS21B,EAAmB7uB,GACxB,QAAKA,GAEEke,KAAKkC,IAAIpgB,EAAU+I,MAAO/I,EAAUiJ,QAAU6lB,IAGzD,SAASpH,EAAczpB,GACnB,IAAKA,EAAO,OAAO,KADO,IAGlBgpB,EAAgChpB,EAAhCgpB,UAAW9S,EAAqBlW,EAArBkW,MAAO4a,EAAc9wB,EAAd8wB,UACpBC,EAAe7a,EAAQA,EAAM8a,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,GAAA3qB,OACE2qB,GAAoB,iBADtB,YAAA3qB,OAC4CyqB,GAAgB,iBAC7D/H,EAGV,SAASkI,EAAYC,GACjB,OAAOA,EAAKxI,OAAO,SAACrZ,EAAU/S,GAAX,OAAmB+S,EAAShJ,OAAO/J,EAAI+S,WAAW,IAGzE,SAAS8hB,EAA4B1wB,EAASywB,EAAME,GAChD,IAAM5rB,EAAS,GADiD6rB,EAyGpE,SAAqB5wB,EAASywB,EAAME,GAChC,IAAME,EAAWJ,EAAK9D,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAO0C,EAAQ6pB,SACtD,IAAkB,IAAdgH,EAAiB,MAAO,EAAE,GAAI,GAElC,IAAMC,EAAeL,EAAKI,GAAUjiB,SAAS+d,UAAU,SAAAtmB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0C,EAAQA,QAAQ1C,KAC7F,IAAsB,IAAlBwzB,EAAqB,MAAO,EAAE,GAAI,GAGtC,IADA,IAAIC,EAAW,EACNrwB,EAAI,EAAGA,EAAImwB,EAAUnwB,IAC1BqwB,GAAYxR,KAAKyR,KAAKP,EAAK/vB,GAAGkO,SAAShO,OAAS+vB,GAGpD,MAAO,CAACI,EAAWxR,KAAKC,MAAMsR,EAAeH,GAAiBG,EAAeH,GAnHvDM,CAAYjxB,EAASywB,EAAME,GAFeO,EAAAx2B,OAAAy2B,EAAA,EAAAz2B,CAAAk2B,EAAA,GAEzDQ,EAFyDF,EAAA,GAEpDG,EAFoDH,EAAA,GAGhE,IAAa,IAATE,EAAY,MAAO,GACvB,IAAgB,IAAZC,EAAe,MAAO,GAE1B,IAAMC,EAAcF,EAAM,EACpBG,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBK,EAAcL,EAAM,EAEpBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EAExBO,EAAcL,EAAU,EACxBM,EAAiBP,EAAc,EACnC,IAAKM,EAAa,CACd,GAAIF,GAAc,EAAG,CACjB,IAAIvkB,EAAQ2kB,EAAQP,EAASG,EAAYjB,EAAME,IAChC,IAAXxjB,IACAykB,GAAc,EAEdC,GAA4B,KAD5B1kB,EAAQ0kB,GAAkB,EAAIC,EAAQR,EAAaI,EAAYjB,EAAME,MAG1D,IAAXxjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAIA,EAAQykB,GAAe,EAAIE,EAAQP,EAASF,EAAQZ,EAAME,GAU9D,IATe,IAAXxjB,IACAykB,GAAc,EAEdC,GAA4B,KAD5B1kB,EAAQ0kB,GAAkB,EAAIC,EAAQR,EAAaD,EAAQZ,EAAME,MAGtD,IAAXxjB,GACApI,EAAOX,KAAK+I,GAGZwkB,EAAahB,EAAgB,CAC7B,IAAIxjB,EAAQykB,GAAe,EAAIE,EAAQP,EAASI,EAAYlB,EAAME,IACnD,IAAXxjB,IACAA,EAAQ0kB,GAAkB,EAAIC,EAAQR,EAAaK,EAAYlB,EAAME,KAE1D,IAAXxjB,GACApI,EAAOX,KAAK+I,IAKxB,GAAIukB,GAAc,EAAG,CACjB,IAAMvkB,EAAQ2kB,EAAQV,EAAKM,EAAYjB,EAAME,IAC9B,IAAXxjB,GACApI,EAAOX,KAAK+I,GAIpB,GAAIwkB,EAAahB,EAAgB,CAC7B,IAAMxjB,EAAQ2kB,EAAQV,EAAKO,EAAYlB,EAAME,IAC9B,IAAXxjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAI4kB,EAAYtB,EAAKxI,OAAO,SAAC8J,EAAWl2B,GAAZ,OAAoBk2B,EAAYxS,KAAKyR,KAAKn1B,EAAI+S,SAAShO,OAAS+vB,IAAiB,GACzGqB,EAAcR,GAAWO,EACzBE,EAAkBT,GAAWO,EACjC,IAAKC,EAAa,CACd,GAAIN,GAAc,EAAG,CACjB,IAAIvkB,EAAQ2kB,EAAQN,EAASE,EAAYjB,EAAME,IAChC,IAAXxjB,IACA6kB,GAAc,EAEdC,GAA6B,KAD7B9kB,EAAQ8kB,GAAmB,EAAIH,EAAQL,EAAaC,EAAYjB,EAAME,MAG3D,IAAXxjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAIA,EAAQ6kB,GAAe,EAAIF,EAAQN,EAASH,EAAQZ,EAAME,GAU9D,IATe,IAAXxjB,IACA6kB,GAAc,EAEdC,GAA6B,KAD7B9kB,EAAQ8kB,GAAmB,EAAIH,EAAQL,EAAaJ,EAAQZ,EAAME,MAGvD,IAAXxjB,GACApI,EAAOX,KAAK+I,GAGZwkB,EAAahB,EAAgB,CAC7B,IAAIxjB,EAAQ6kB,GAAe,EAAIF,EAAQN,EAASG,EAAYlB,EAAME,IACnD,IAAXxjB,IACAA,EAAQ8kB,GAAmB,EAAIH,EAAQL,EAAaE,EAAYlB,EAAME,KAE3D,IAAXxjB,GACApI,EAAOX,KAAK+I,IAKxB,IAAMvP,EAAQ4yB,EAAYC,GAC1B,OAAO1rB,EAAOqD,IAAI,SAAA/B,GAAC,OAAIzI,EAAMyI,KAkBjC,SAASyrB,EAAQV,EAAKC,EAAQZ,EAAME,GAIhC,IAHA,IAAIxjB,GAAS,EACT4kB,EAAY,EACZlB,GAAY,EACPnwB,EAAI,EAAGA,EAAI+vB,EAAK7vB,OAAQF,IAAK,CAGlC,IADAqxB,GADcxS,KAAKyR,KAAKP,EAAK/vB,GAAGkO,SAAShO,OAAS+vB,IAElCS,EAAK,CACjBP,EAAWnwB,EACX,OAGR,IAAkB,IAAdmwB,EAAiB,OAAO1jB,EAI5B,IAFA,IAAI+kB,EAASd,EACTe,EAAYd,EACP3wB,EAAI,EAAGA,EAAImwB,EAAUnwB,IAAK,CAE/BwxB,GADc3S,KAAKyR,KAAKP,EAAK/vB,GAAGkO,SAAShO,OAAS+vB,GAMtD,IAFAxjB,EAAQwjB,EAAiBuB,EAASC,IAErB1B,EAAKI,GAAUjiB,SAAShO,OAAQ,OAAQ,EAErD,IAAK,IAAIF,EAAI,EAAGA,EAAImwB,EAAUnwB,IAC1ByM,GAASsjB,EAAK/vB,GAAGkO,SAAShO,OAG9B,OAAOuM,4JCrKLilB,UAAc,CAAEC,OAAQ,yBAExBC,cACF,SAAAA,EAAYnY,GAAO,IAAA1f,EAAAC,OAAA63B,EAAA,EAAA73B,CAAAE,KAAA03B,IACf73B,EAAAC,OAAA4wB,EAAA,EAAA5wB,CAAAE,KAAAF,OAAA6wB,EAAA,EAAA7wB,CAAA43B,GAAAv3B,KAAAH,KAAMuf,KA8EVpe,aAAe,SAAAR,GACX,IAAMi3B,EAAc/3B,EAAKskB,MAAMjjB,KACzB22B,EAAWl3B,EAAOO,KAEpB02B,GAAeA,EAAYl1B,KAAOm1B,EAASn1B,IAC3C7C,EAAK4kB,SAAS,CAAEvjB,KAAM22B,EAAUC,SAAUF,KApF/B/3B,EAwFnBk4B,cAAgB,SAAC72B,EAAM42B,GACnB,IAAKj4B,EAAK0f,MAAMxS,SAAU,OAAO,EAEjC,IAAMirB,EAAYF,GAAYA,EAASl1B,OAASk1B,EAASl1B,MAAM0R,sBACzD2jB,EAAW/2B,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAElD,OAAO0jB,GAAaC,GA9FLp4B,EAiGnBq4B,YAAc,SAACh3B,EAAM42B,GACjB,IAAKj4B,EAAK0f,MAAM4Y,OAAQ,OAAO,EAE/B,IAAMH,EAAYF,GAAYA,EAASl0B,QAAUk0B,EAASl0B,OAAO6Q,oBAC3DwjB,EAAW/2B,GAAQA,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAEpD,OAAOujB,GAAaC,GAvGLp4B,EA0GnBu4B,kBAAoB,SAACl3B,EAAM42B,GAAa,IAC5Bl1B,EAAkB1B,EAAlB0B,MAAOgB,EAAW1C,EAAX0C,OAEXo0B,GAAY,EACZC,GAAW,EACXI,GAAc,EACdC,EAAe,EACfrsB,EAAO,EAqCX,OApCIpM,EAAKk4B,cAAc72B,EAAM42B,IACzBE,EAAYF,GAAYA,EAASl1B,OAASk1B,EAASl1B,MAAM0R,sBACzD2jB,EAAWr1B,EAAM0R,sBACjB+jB,EAAcz1B,EAAMG,yBACpBu1B,EAAe11B,EAAM2R,gBACrBtI,EAAO/K,EAAK+K,MAQLpM,EAAKq4B,YAAYh3B,EAAM42B,KAC9BE,EAAYF,GAAYA,EAASl0B,QAAUk0B,EAASl0B,OAAO6Q,oBAC3DwjB,EAAWr0B,EAAO6Q,oBAClB4jB,EAAcz0B,EAAOE,uBACrBw0B,EAAe10B,EAAO8Q,cACtBzI,EAAO/K,EAAK+K,MAkBT,CAAC+rB,EAAWC,EAAUI,EAAaC,EAAcrsB,IAnJxDpM,EAAK04B,mBAAoB,EAHV,IAIPr3B,EAASrB,EAAK0f,MAAdre,KAJO,OAKfrB,EAAKskB,MAAQ,CACTqU,cAAet3B,EACf42B,SAAU,KACV52B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GARrBrB,qFA2BGilB,EAAWC,GAAW,IAAAzF,EACStf,KAAKuf,MAA9CxS,EADgCuS,EAChCvS,SAAUorB,EADsB7Y,EACtB6Y,OAAQpV,EADczD,EACdyD,KAAM0V,EADQnZ,EACRmZ,aAEhC,GAAI3T,EAAU2T,eAAiBA,EAC3B,OAAO,EAGX,GAAI3T,EAAU/B,OAASA,EACnB,OAAO,EAGX,GAAI/iB,KAAK+3B,cAAchT,EAAU7jB,KAAM6jB,EAAU+S,YAAc/qB,EAC3D,OAAO,EAGX,GAAI/M,KAAKk4B,YAAYnT,EAAU7jB,KAAM6jB,EAAU+S,YAAcK,EACzD,OAAO,EAGX,IAAMO,EAAY3T,EAAU7jB,KAAO6jB,EAAU7jB,KAAK0B,MAAQ,KACpD+1B,EAAa5T,EAAU7jB,KAAO6jB,EAAU7jB,KAAKyB,QAAU,KACvDi2B,EAAY54B,KAAKmkB,MAAM2T,SAAW93B,KAAKmkB,MAAM2T,SAASl1B,MAAQ,KAC9Di2B,EAAa74B,KAAKmkB,MAAM2T,SAAW93B,KAAKmkB,MAAM2T,SAASn1B,QAAU,KACjEm2B,EACFF,GAAaF,IAAcE,EAAU71B,0BAA4B21B,EAAU31B,yBACzEg2B,EAAgBJ,IAAeE,EAErC,OAAI9T,EAAU7jB,KAAKwB,KAAO1C,KAAKmkB,MAAMjjB,KAAKwB,KAAMo2B,IAA0BC,KAItEhU,EAAU7jB,OAASlB,KAAKmkB,MAAMjjB,MAI9B6jB,EAAU+S,WAAa93B,KAAKmkB,MAAM2T,sDAQtC93B,KAAKg5B,OAAQ,EACbp5B,IAAU6hB,GAAG,aAAczhB,KAAKmB,6DAIhCnB,KAAKg5B,OAAQ,EACbp5B,IAAUoC,eAAe,aAAchC,KAAKmB,+CA6EvC,IAAAqJ,EAAAxK,KAAAygB,EAC4DzgB,KAAKuf,MAAhEkZ,EADDhY,EACCgY,aAAcQ,EADfxY,EACewY,aAAcC,EAD7BzY,EAC6ByY,OAAQnW,EADrCtC,EACqCsC,KAAMoW,EAD3C1Y,EAC2C0Y,aAD3CjV,EAEsBlkB,KAAKmkB,MAAxBjjB,EAFHgjB,EAEGhjB,KAAM42B,EAFT5T,EAES4T,SACd,IAAK52B,EAAM,OAAO,KAHb,IAAAk4B,EAK0Dp5B,KAAKo4B,kBAAkBl3B,EAAM42B,GALvFuB,EAAAv5B,OAAAy2B,EAAA,EAAAz2B,CAAAs5B,EAAA,GAKEpB,EALFqB,EAAA,GAKapB,EALboB,EAAA,GAKuBhB,EALvBgB,EAAA,GAKoCf,EALpCe,EAAA,GAKkDptB,EALlDotB,EAAA,GAODC,EAAarB,EACbsB,EAAW,EACXtB,IACAsB,EAAWjB,GAAgBrsB,EAAO,KAAQA,EAAOqsB,GAAgBrsB,EAAQ,IAAM,GAGpD+rB,IAAcC,IAEzCj4B,KAAKu4B,mBAAoB,EAEzBgB,EAAWlB,EAAc,IAAM,EAC/BiB,GAAa,EACbE,WAAW,WACPhvB,EAAK+tB,mBAAoB,EACpB/tB,EAAKwuB,OAGVxuB,EAAKia,SAAS,CAAEqT,SAAU,QAC3B2B,MAGP,IAAM9sB,EAAQ,CACVusB,OAAQA,EACRQ,WAAajB,GAAwC,qBAAjBA,EAAsC,sBAAP,MAuBvE,OAnBIv3B,GACAA,EAAK0B,QACJ1B,EAAK0B,MAAMG,0BAA4B7B,EAAKyB,SAAWzB,EAAK0B,MAAMkB,0BAClE9D,KAAKu4B,oBACLN,EAiBGkB,EAEIQ,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBnT,MAAOA,GAClCgtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,sBAAsBqZ,IAK1C,KAGPG,GAAct5B,KAAKu4B,kBAGfoB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBnT,MAAOA,GAClCgtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,2BACX6Z,EAAAn5B,EAAAkM,cAACktB,EAAAp5B,EAAD,CACIkgB,QAAS8W,EACT5Q,QAAQ,SACRtR,MAAOikB,EACPttB,KAAM,GACNgX,UAAW,KAGlBgW,GACGU,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,sBACX6Z,EAAAn5B,EAAAkM,cAACmtB,EAAAr5B,EAAD,QAOhBuiB,EAGI4W,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBnT,MAAOA,GAClCgtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,sBAAsBiD,IAK1C,wDA9OqBxD,EAAO4E,GAAO,IAClCjjB,EAASqe,EAATre,KACAs3B,EAAkBrU,EAAlBqU,cAER,OAAIt3B,GAAQs3B,GAAiBt3B,EAAKwB,KAAO81B,EAAc91B,GAC5C,CACH81B,cAAet3B,EACf42B,SAAU,KACV52B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzBY+e,IAAMC,WA2QjCwX,EAAa1W,aAAe,CACxBiY,cAAc,EACdlsB,UAAU,EACVorB,QAAQ,GAGGT,sKCjRTnL,qNAqCFuN,0BAA4B,SAAAn5B,GAAU,IAC1ByE,EAAYvF,EAAK0f,MAAMna,QAAvBA,QACA2C,EAAWpH,EAAXoH,OAEH3C,GAEDA,EAAQ1C,KAAOqF,GACflI,EAAK2hB,iBAIbuY,mCAAqC,SAAAp5B,GAAU,IACnC8F,EAAc5G,EAAK0f,MAAMna,QAAzBqB,UACR,GAAKA,EAAL,CAF2C,IAInCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK2hB,qGAtDSsD,EAAWC,EAAWC,GAAa,IAAA1F,EACKtf,KAAKuf,MAAvDvY,EAD6CsY,EAC7CtY,OAAQC,EADqCqY,EACrCrY,UAAW7B,EAD0Bka,EAC1Bla,QAAS40B,EADiB1a,EACjB0a,KAAM5Z,EADWd,EACXc,YAE1C,OAAIpZ,IAAW8d,EAAU9d,SAIrBC,IAAc6d,EAAU7d,YAIxB7B,IAAY0f,EAAU1f,UAItB40B,IAASlV,EAAUkV,MAInB5Z,IAAgB0E,EAAU1E,2DAQ9BxgB,IAAU6hB,GAAG,mCAAoCzhB,KAAK+5B,oCACtDn6B,IAAU6hB,GAAG,0BAA2BzhB,KAAK85B,0EAI7Cl6B,IAAUoC,eAAe,mCAAoChC,KAAK+5B,oCAClEn6B,IAAUoC,eAAe,0BAA2BhC,KAAK85B,4DAyBpD,IAAArZ,EACgFzgB,KAAKuf,MAAlFO,EADHW,EACGX,UAAWM,EADdK,EACcL,YAAa4Z,EAD3BvZ,EAC2BuZ,KAAe9zB,EAD1Cua,EACiCrb,QAAiBuH,EADlD8T,EACkD9T,MAAO6S,EADzDiB,EACyDjB,UAAWya,EADpExZ,EACoEwZ,QACjExzB,EAAsCP,EAAtCO,UAAWrB,EAA2Bc,EAA3Bd,QAASoK,EAAkBtJ,EAAlBsJ,MAAOE,EAAWxJ,EAAXwJ,OAE7B+oB,EAAerkB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD8c,EAAMtN,YAAOhP,GACb80B,EAAY5E,YAAmB7uB,GAE/B0zB,EAAU5Z,YAAW,CAAE/Q,MAAOA,EAAOE,OAAQA,GAAU0Q,GAC7D,IAAK+Z,EAAS,OAAO,KAErB,IAAMC,EAAYt6B,OAAAu6B,EAAA,EAAAv6B,CAAA,CACd0P,MAAO2qB,EAAQ3qB,MACfE,OAAQyqB,EAAQzqB,QACb/C,GAGP,OACIgtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,UAAWf,GAAYnT,MAAOytB,EAAcpa,QAASR,GAC3EkC,IAAQuY,EACLN,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE/D4X,EAAAn5B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,gBAAiB,CAAEyZ,gBAAiBJ,GAAaF,IACvElY,WAAW,EACXJ,IAAK+W,EACL1W,IAAI,aArFN9B,IAAMC,YAsG5BqM,EAAQvL,aAAe,CACnBha,OAAQ,EACRC,UAAW,EACXuY,UAAW,aACXwa,MAAM,EACN5Z,YAAama,KAGFhO,iGC3DT5sB,EAAQ,gBAzDV,SAAA4Z,IAAc,IAAA1Z,EAAA,OAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAuZ,IACV1Z,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAAyZ,GAAApZ,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO65B,aAEhB36B,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BACDd,EAAKs1B,YAAYx0B,EAAO6Y,eAAgB7Y,EAAO85B,uBAE/C56B,EAAKuB,KAAKT,EAAO,SAAUA,KArBzBd,EA4Bd8B,eAAiB,SAAAhB,KA5BHd,EA8Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAhCvC9B,EAmCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAlCpD9B,EAAKmD,MAAQ,IAAIkG,IACjBrJ,EAAKw1B,cAAgB,IAAInsB,IAEzBrJ,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,mEAwCV66B,GACA,OAAO16B,KAAKgD,MAAMC,IAAIy3B,+BAGtBC,GACA36B,KAAKgD,MAAM/B,IAAI05B,EAAMj4B,GAAIi4B,uCAGjBj4B,GACR,OAAO1C,KAAKq1B,cAAcpyB,IAAIP,uCAGtBA,EAAI0X,GACZpa,KAAKq1B,cAAcp0B,IAAIyB,EAAI0X,UAtDLrO,iBA2D9BhC,OAAO6wB,WAAaj7B,EACLA,uKCrDTogB,qNAuBF8a,uBAAyB,SAAAl6B,GACFd,EAAK0f,MAAhBzT,SAEOnL,EAAOmL,QAClBjM,EAAK2hB,iBAIbsZ,uBAAyB,SAAAn6B,GAAU,IACvBmL,EAAWjM,EAAK0f,MAAhBzT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOqG,QAClC,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAEtBjM,EAAK2hB,kBAMrBuZ,kBAAoB,SAAAp6B,GAAU,IAClBmL,EAAWjM,EAAK0f,MAAhBzT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAI7N,EAAK6N,KAAK9C,UAAYhD,EACtB,GAAKnL,EAAOiE,MAGL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAK2hB,kBAUzBwZ,kBAAoB,SAAAr6B,GAAU,IAClBmL,EAAWjM,EAAK0f,MAAhBzT,OAEF/H,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAAW/H,EAAKa,OAEtC/E,EAAK2hB,kBAMrByZ,aAAe,SAAA5vB,GAAS,IAAAiU,EACSzf,EAAK0f,MAA1BzT,EADYwT,EACZxT,OAAQovB,EADI5b,EACJ4b,SACXA,IAEL7vB,EAAMua,kBACNsV,EAASpvB,0FA1GSgZ,EAAWC,GAC7B,OAAID,EAAUhZ,SAAW9L,KAAKuf,MAAMzT,mDAQpClM,IAAU6hB,GAAG,uBAAwBzhB,KAAK66B,wBAC1Cj7B,IAAU6hB,GAAG,uBAAwBzhB,KAAK86B,wBAC1CloB,IAAU6O,GAAG,kBAAmBzhB,KAAK+6B,mBACrCnoB,IAAU6O,GAAG,kBAAmBzhB,KAAKg7B,kEAIrCp7B,IAAUoC,eAAe,uBAAwBhC,KAAK66B,wBACtDj7B,IAAUoC,eAAe,uBAAwBhC,KAAK86B,wBACtDloB,IAAU5Q,eAAe,kBAAmBhC,KAAK+6B,mBACjDnoB,IAAU5Q,eAAe,kBAAmBhC,KAAKg7B,oDA0F5C,IAAAva,EACwBzgB,KAAKuf,MAA1BzT,EADH2U,EACG3U,OAAQovB,EADXza,EACWya,SACV92B,EAASpE,KAAKuf,MAAdnb,KACN,IAAK0H,IAAW1H,EAAM,OAAO,KAG7B,KADAA,EAAO2K,IAAU9L,IAAI6I,IAAW1H,GACrB,OAAO,KANb,IAQGmP,EAAkBnP,EAAlBmP,cAEFsH,EAAU4Y,YAAervB,GACzB+D,EAAOoL,GAAiBA,EAAcP,MAAQpT,IAAUoI,QAAQuL,EAAcP,MAAMtQ,IAAM,KAC1Fgf,EAAM9hB,IAAU2I,WAAWJ,GAC3BgzB,EAAS,cAAAnwB,OAAkB2Z,KAAKyW,IAAItvB,GAAU,EAAK,GACnDgU,EAAYe,IAAW,aAAD/gB,OAAAu7B,EAAA,EAAAv7B,CAAA,GAAkBq7B,GAAahzB,GAAQ,CAAEmzB,QAASJ,IAE9E,OAAOxZ,EACHiY,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,GAAG/B,QAAShgB,KAAKi7B,eAE5EtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAWA,EAAWE,QAAShgB,KAAKi7B,cACrCtB,EAAAn5B,EAAAkM,cAAA,QAAMoT,UAAU,aAAajF,WAlIfqF,cA8IfH,0FCpETpgB,EAAQ,gBAjFV,SAAA47B,IAAc,IAAA17B,EAAA,OAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAu7B,IACV17B,EAAAC,OAAA07B,EAAA,EAAA17B,CAAAE,KAAAF,OAAA27B,EAAA,EAAA37B,CAAAy7B,GAAAp7B,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,6BAA8B,IACvB+6B,EAAoB/6B,EAApB+6B,gBACR,GAAI77B,EAAKiU,WAAY,KAAA6nB,EACY97B,EAAKiU,WAA1BpR,EADSi5B,EACTj5B,GAAIk5B,EADKD,EACLC,aACRA,IAAiBF,EAAgBlwB,KAAK,SAAAC,GAAC,OAAIA,IAAM/I,MACjD7C,EAAKiU,WAAahU,OAAO+7B,OAAO,GAAIh8B,EAAKiU,WAAY,CAAE8nB,cAAeA,KAI9E/7B,EAAKuB,KAAK,6BAA8BT,KArBtCd,EA6Bd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,0BACDd,EAAKuB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1Bm7B,EAASn7B,EAATm7B,KAERj8B,EAAKi8B,KAAOA,EAEZj8B,EAAKuB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3Bm7B,EAASn7B,EAATm7B,KAEJj8B,EAAKi8B,MAAQj8B,EAAKi8B,KAAKlK,YAAckK,EAAKlK,YAC1C/xB,EAAKi8B,KAAOh8B,OAAO+7B,OAAO,GAAIh8B,EAAKi8B,KAAM,CAAEC,cAAeD,EAAK9nB,YAGnEnU,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBmT,EAAenT,EAAfmT,WAERjU,EAAKiU,WAAaA,EAElBjU,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,KA9D1Cd,EAsEd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAxEvC9B,EA2EdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBA1EpD9B,EAAKiU,WAAa,KAClBjU,EAAKi8B,KAAO,KAEZj8B,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KAPXvJ,6BADSkM,iBAmF3BhC,OAAO3E,QAAUzF,EACFA,+KC3ET6gB,sBACF,SAAAA,EAAYjB,GAAO,IAAA1f,EAAAC,OAAA63B,EAAA,EAAA73B,CAAAE,KAAAwgB,IACf3gB,EAAAC,OAAA4wB,EAAA,EAAA5wB,CAAAE,KAAAF,OAAA6wB,EAAA,EAAA7wB,CAAA0gB,GAAArgB,KAAAH,KAAMuf,KAoBVyc,wBAA0B,SAAAr7B,GAAU,IACxBsF,EAAcpG,EAAKskB,MAAnBle,UACA8B,EAAWpH,EAAXoH,OAEH9B,GAEDA,EAAUrB,MAAMlC,KAAOqF,GACvBlI,EAAK2hB,eA5BM,IAGP5c,EAA+B2a,EAA/B3a,MAAOqH,EAAwBsT,EAAxBtT,KAAMgwB,EAAkB1c,EAAlB0c,cACfh2B,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACjCxF,EAAYsJ,YAAQnL,EAAMmB,MAAOk2B,GALxB,OAOfp8B,EAAKskB,MAAQ,CACTle,UAAWA,EACXQ,UAAWA,GATA5G,mFAcfD,IAAU6hB,GAAG,wBAAyBzhB,KAAKg8B,wEAI3Cp8B,IAAUoC,eAAe,wBAAyBhC,KAAKg8B,0DAclD,IAAA1c,EACmDtf,KAAKuf,MAArDa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UAAW0c,EAD3B5c,EAC2B4c,aAAcvvB,EADzC2S,EACyC3S,MADzCuX,EAE4BlkB,KAAKmkB,MAA9B1d,EAFHyd,EAEGzd,UAAWR,EAFdie,EAEcje,UAEnB,IAAKA,EAAW,OAAO,KAEvB,IAAMyb,EAAMtN,YAAOnO,EAAUrB,OACvB6zB,EAAerkB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpDs1B,EAAY5E,YAAmB7uB,GAE/B6Z,EAAeC,YAAWta,EAAWma,GAC3C,IAAKE,EAAc,OAAO,KAE1B,IAAM6b,EAAUr8B,OAAAu6B,EAAA,EAAAv6B,CAAA,CACZ0P,MAAO8Q,EAAa9Q,MACpBE,OAAQ4Q,EAAa5Q,QAClB/C,GAGP,OACIgtB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,QAAQnT,MAAOwvB,EAAYnc,QAASR,GAC9CkC,EACGiY,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,cAAcgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE7D4X,EAAAn5B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,cAAe,CAAEyZ,gBAAiBJ,IACxDpY,WAAW,EACXJ,IAAK+W,EACL1W,IAAI,KAGXma,GAAgBvC,EAAAn5B,EAAAkM,cAAC0vB,EAAA,EAAD,CAAcl7B,KAAM+E,EAAUrB,MAAOmI,UAAQ,EAACorB,QAAM,EAACc,cAAY,YAhE9EhZ,IAAMC,YAmF1BM,EAAMQ,aAAe,CACjB/U,KAAMgG,IACNgqB,cAAeI,IACfjc,YAAaa,IACbib,cAAc,GAGH1b,sKC1FT8b,qNACFrB,aAAe,SAAA5vB,GAAS,IAAAiU,EAC2Bzf,EAAK0f,MAA5CvY,EADYsY,EACZtY,OAAQ8E,EADIwT,EACJxT,OAAQyjB,EADJjQ,EACIiQ,SAAU4D,EADd7T,EACc6T,SAElC,OAAI5D,GAAYzjB,GACZT,EAAMua,uBAEN2W,YAAgBzwB,GAAQ,IAIxBqnB,GAAYnsB,GACZqE,EAAMua,uBAEN4W,YAAgBx1B,EAAQ,MAAM,SAHlC,2EAQK,IAAAyZ,EAC6CzgB,KAAKuf,MAA/ClI,EADHoJ,EACGpJ,EAAGrQ,EADNyZ,EACMzZ,OAAQ8E,EADd2U,EACc3U,OAAQyjB,EADtB9O,EACsB8O,SAAU4D,EADhC1S,EACgC0S,SAE/B/uB,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAI1H,EAAM,CACN,IAAM+2B,EAAYzf,YAAc1U,GAC1B,uBADY,cAAAgE,OAEG2Z,KAAKyW,IAAItvB,GAAU,EAAK,GACvCgU,EAAYe,IAAW,CAACsa,GAAY,kBAEpCzb,EAAW3I,YAAgB3S,GAEjC,OAAOmrB,EACHkN,EAAAj8B,EAAAkM,cAAA,KAAGoT,UAAWA,EAAWE,QAAShgB,KAAKi7B,cAClCvb,GAGL+c,EAAAj8B,EAAAkM,cAAA+vB,EAAAj8B,EAAA8kB,SAAA,KAAG5F,GAKX,GADa9M,IAAU3P,IAAI+D,GACjB,CACN,IAAM8Y,EAAYe,IAAW,uBAAwB,kBAE/CnB,EAAW3D,YAAa/U,GAAQ,EAAOqQ,GAE7C,OAAO8b,EACHsJ,EAAAj8B,EAAAkM,cAAA,KAAGoT,UAAWA,EAAWE,QAAShgB,KAAKi7B,cAClCvb,GAGL+c,EAAAj8B,EAAAkM,cAAA+vB,EAAAj8B,EAAA8kB,SAAA,KAAG5F,GAIX,OAAO,YAvDaO,IAAMC,YAkElCoc,EAActb,aAAe,CACzBuO,UAAU,EACV4D,UAAU,GAGC5L,kBAAkB+U,gFCGlBI,EADA,eAlFX,SAAAC,IAAc78B,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA28B,GACV38B,KAAK48B,KAAO,IAAI1zB,IAAI,CAChB,CAAC,MAAO,iiBACR,CAAC,MAAO,2DAIZwzB,GACA,OAAO18B,KAAK48B,KAAK35B,IAAIy5B,+BAGrBA,EAAUG,GACV78B,KAAK48B,KAAK37B,IAAIy7B,EAAUG,kCAGrBH,GACH,MAAiB,QAAbA,EACO,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GACpD,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GAC/I,EAEM,QAAbA,EACO,EAGJ,oCAGDK,EAAaL,GACnB,IAAMM,GAAUD,EAAYpY,KAAKsY,IAAI,GAAMj9B,KAAKk9B,OAAOR,KAAYxwB,QAAQ,GAC3E,SAAAlB,OAAUgyB,EAAV,KAAAhyB,OAAoBhL,KAAKiD,IAAIy5B,0HCxErC,IAAIS,EAAa,IAAIj0B,IAwBrB,SAAS4N,EAAiBxS,GACtB,QAAKA,MACAA,EAAQC,UAEN44B,EAAWr6B,IAAIwB,EAAQC,QAAQ,WAAaD,EAAQkpB,IAAM,IAwFrE,SAASC,EAAyBnpB,GAA2B,IAAlBirB,EAAkB7tB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACzD,IAAK4C,EAAS,OAAO,KACrB,IAAKA,EAAQC,QAAS,OAAO,KAE7B,IAAM64B,EAAa94B,EAAQ6M,iBAAmBpC,IAAUiN,UAClDjY,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAC7Bi3B,EAAmC,uBAAvBt5B,EAAK6N,KAAK,UAAqC7N,EAAK6N,KAAKuI,WAEnEqT,EAAiClpB,EAAjCkpB,IAAKrc,EAA4B7M,EAA5B6M,eAAgB5M,EAAYD,EAAZC,QAC7B,GAAIipB,EAAM,EACN,OAAQjpB,EAAQ,UACZ,IAAK,eACD,OAAI64B,EACO,mEAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,iEAIb,IAAK,eACD,OAAI6N,EACO,mEAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,iEAIb,QACI,OAAI6N,EACO,qEAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,mEAOrB,OAAQhrB,EAAQ,UACZ,IAAK,8BAA+B,IACxBqW,EAAUhI,IAAU3P,IAAIqB,EAAQ8B,SAAhCwU,MAER,OAAIwiB,EACA,yBAAApyB,OAA6B4P,EAA7B,QAIAiF,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,sBAAAvkB,OAEwB4P,EAFxB,SAMR,IAAK,wBACD,IAAMuB,EAAU5X,EAAQ+4B,gBACnB9vB,IAAI,SAAA/B,GAAC,OAAIoU,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAehlB,IAAK7L,EAAGK,OAAQL,EAAG8jB,SAAUA,MACrDlC,OAAO,SAACC,EAAaC,EAAShb,EAAOgrB,GAClC,IAAMC,EAAYjrB,IAAUgrB,EAAMv3B,OAAS,EAAI,QAAU,KACzD,OAAuB,OAAhBsnB,EAAuB,CAACC,GAAxB,GAAAviB,OAAAlL,OAAAwpB,EAAA,EAAAxpB,CAAuCwtB,GAAvC,CAAoDkQ,EAAWjQ,KACvE,MAEP,OAAI6P,EAC0C,IAAnC74B,EAAQ+4B,gBAAgBt3B,QAAgBzB,EAAQ+4B,gBAAgB,KAAOvuB,IAAUiN,UACpF,uBAEA6D,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK,aACAnJ,GAK6B,IAAnC5X,EAAQ+4B,gBAAgBt3B,QAAgBzB,EAAQ+4B,gBAAgB,KAAOh5B,EAAQ6M,eAClF0O,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,qBAGL1P,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,UACApT,GAIb,IAAK,yBACD,OAAIkhB,EACO,wBAGPD,EACO,0BAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,wBAMR,IAAK,yBAA0B,IACnB3U,EAAUrW,EAAVqW,MAER,OAAIyiB,EACA,mCAAAryB,OAAuC4P,EAAvC,QAGAwiB,EACA,iCAAApyB,OAAqC4P,EAArC,QAIAiF,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,8BAAAvkB,OAEgC4P,EAFhC,SAMR,IAAK,0BACD,OAAIwiB,EACO74B,EAAQuK,UAAYC,IAAUiN,UACjC,qBAEA6D,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK,eACDzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQvH,EAAQuK,QAASygB,SAAUA,KAKvDhrB,EAAQuK,UAAYqC,EACvB0O,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,mBAGL1P,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,YACD1P,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQvH,EAAQuK,QAASygB,SAAUA,KAI9D,IAAK,yBACD,OAAI8N,EACO,wBAGPD,EACO,0BAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,wBAIb,IAAK,wBACD,OAAI6N,EACO,uCAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,qCAIb,IAAK,oBAAqB,IACd/B,EAAQjpB,EAARipB,IACFiQ,EA/QlB,SAAsBjQ,GAClB,GAAIA,EAAM,GAAI,CACV,IAAMkQ,EAAkB,IAARlQ,EAAY,SAAW,UACvC,SAAAxiB,OAAUwiB,EAAV,KAAAxiB,OAAiB0yB,GAErB,GAAIlQ,EAAM,KAAS,CACf,IAAM+G,EAAmC,IAAzB5P,KAAKC,MAAM4I,EAAM,IAAY,SAAW,UACxD,SAAAxiB,OAAUwiB,EAAV,KAAAxiB,OAAiBupB,GAErB,GAAI/G,EAAM,MAAc,CACpB,IAAMiH,EAAsC,IAA9B9P,KAAKC,MAAM4I,EAAM,GAAK,IAAY,OAAS,QACzD,SAAAxiB,OAAUwiB,EAAV,KAAAxiB,OAAiBypB,GAErB,GAAIjH,EAAM,OAAkB,CACxB,IAAMmQ,EAA0C,IAAnChZ,KAAKC,MAAM4I,EAAM,GAAK,GAAK,IAAY,MAAQ,OAC5D,SAAAxiB,OAAUwiB,EAAV,KAAAxiB,OAAiB2yB,GAErB,OAAY,SAARnQ,EACO,SAGX,GAAAxiB,OAAUwiB,EAAV,YA0P0BoQ,CAAapQ,GAE/B,OAAIA,GAAO,EACH4P,EACO,uCAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,qCAKT6N,EACA,sCAAApyB,OAA6CyyB,GAI7C5d,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,mCAAAvkB,OAEwCyyB,IAIhD,IAAK,yBACD,MAAO,yCAEX,IAAK,uBACD,MAAO,iCAEX,IAAK,2BACD,OACI5d,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,yBAIb,IAAK,6BACD,OAAOhrB,EAAQmZ,KAEnB,IAAK,mBACD,IAAMmgB,EAAcpwB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQu5B,iBAC9D,GACID,GACAA,EAAYt5B,SACqB,gBAAjCs5B,EAAYt5B,QAAQ,UACpBs5B,EAAYt5B,QAAQS,KACtB,KACUA,EAAS64B,EAAYt5B,QAArBS,KAER,OAAIo4B,EACA,cAAApyB,OAAqBzG,EAAQw5B,MAA7B,YAAA/yB,OAA0ChG,EAAK4V,MAA/C,QAIAiF,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQ+xB,EAAY1sB,eAAgBoe,SAAUA,IADjE,WAAAvkB,OAEgBzG,EAAQw5B,MAFxB,YAAA/yB,OAEqChG,EAAK4V,MAF1C,SAOR,OAAIwiB,EACA,cAAApyB,OAAqBzG,EAAQw5B,OAI7Ble,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,WAAAvkB,OAEgBzG,EAAQw5B,QAIhC,IAAK,8BACD,MAAO,kCAEX,IAAK,0BACD,IAAMh6B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7B43B,EAAuBz5B,EAAQ05B,MAChCzwB,IAAI,SAAA/B,GAAC,OA1UtB,SAAsCmG,GAClC,OAAQA,EAAK,UACT,IAAK,6BACD,MAAO,UAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,kCACD,MAAO,QAEX,IAAK,kCACD,MAAO,gBAEX,IAAK,sCACD,MAAO,oBAEX,IAAK,8BACD,MAAO,WAEX,IAAK,0CACD,MAAO,wBAEX,IAAK,qCACD,MAAO,mBAEX,IAAK,iCACD,MAAO,eAEX,IAAK,qCACD,MAAO,oBAEX,IAAK,2CACD,MAAO,yBAEX,IAAK,iCACD,MAAO,eAIf,MAAO,GA+RessB,CAA6BzyB,KACtC4hB,OAAO,SAACC,EAAaC,GAClB,OAAuB,OAAhBD,EAAuB,CAACC,GAAxB,GAAAviB,OAAAlL,OAAAwpB,EAAA,EAAAxpB,CAAuCwtB,GAAvC,CAAoD,KAAMC,KAClE,MAEP,OACI1N,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQ/H,EAAK6N,KAAK9C,QAASygB,SAAUA,IACnD,sCACAyO,GAIb,IAAK,2BACD,IAAMj6B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7B+3B,EAAiB1wB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQ65B,oBACjE,GACID,GACAA,EAAe55B,SACqB,mBAApC45B,EAAe55B,QAAQ,UACvB45B,EAAe55B,QAAQ85B,QACzB,KACUA,EAAYF,EAAe55B,QAA3B85B,QAER,OACIxe,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,+CAAAta,OAC+C2xB,EAAS2B,UAChD/5B,EAAQg6B,aACRh6B,EAAQm4B,UAHhB,QAKI7c,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQ/H,EAAK6N,KAAK9C,QAASygB,SAAUA,IALxD,QAAAvkB,OAMaqzB,EAAQzjB,QAK7B,OACIiF,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,+CAAAta,OAC+C2xB,EAAS2B,UAChD/5B,EAAQg6B,aACRh6B,EAAQm4B,UAHhB,QAKI7c,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQ/H,EAAK6N,KAAK9C,QAASygB,SAAUA,KAIhE,IAAK,8BACD,MAAO,qBAEX,IAAK,oBACD,IAAMiP,EA/UlB,SAA0Bl6B,EAASirB,GAC/B,IAAKjrB,EAAS,OAAO,KADoB,IAGjC8B,EAA4B9B,EAA5B8B,QAAS+K,EAAmB7M,EAAnB6M,eAEjB,GAAuB,IAAnBA,EACA,OAAO0O,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAG5D,IAAMxrB,EAAO6O,IAAU3P,IAAImD,GAC3B,OAAKrC,EAEEA,EAAK6W,MAFM,KAqUK6jB,CAAiBn6B,EAASirB,GACnCmP,EAAgBjxB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQ8Z,YAChE,IAAKqgB,IAAkBA,EAAcn6B,QACjC,OACIsb,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACKkZ,EACA,qBAKb,IAAIG,EAAgB,oBACpB,GAAI7nB,EAAiB4nB,GACjBC,EAAgB,iCAEhB,OAAQD,EAAcn6B,QAAQ,UAC1B,IAAK,mBACDo6B,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,kBACDA,EAAgB,iBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,qBAChB,MAEJ,IAAK,kBACDA,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,cACD,IACMjhB,EAAOghB,EAAcn6B,QAAQmZ,KAAKA,KAEpCihB,EADAjhB,EAAK1X,QAFS,GAGD,eAAAgF,OAAe0S,EAAf,QAEA,eAAA1S,OAAe0S,EAAKsN,UAAU,EAL7B,IAKD,WAGjB,MAEJ,IAAK,qBACD2T,EAAgB,8BAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAM5B,OACI9e,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACKkZ,EACAG,GAIb,IAAK,yBACD,OAAIvB,EACO,yBAIPvd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IAChD,uBAIb,IAAK,8BAA+B,IACxB3U,EAAUrW,EAAVqW,MAER,OAAIyiB,EACO,kBAGPD,EACA,yBAAApyB,OAA6B4P,EAA7B,QAIAiF,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC4vB,EAAA,EAAD,CAAexwB,OAAQqF,EAAgBoe,SAAUA,IADrD,sBAAAvkB,OAEwB4P,EAFxB,SAMR,IAAK,qBACD,MAAO,sBAEX,IAAK,0BACD,mEAAA5P,OAAoEzG,EAAQq6B,YAA5E,KAIR,UAAA5zB,OAAW1G,EAAQC,QAAQ,SAA3B,KAtkBJ44B,EAAWl8B,IAAI,8BAA+B,+BAC9Ck8B,EAAWl8B,IAAI,wBAAyB,yBACxCk8B,EAAWl8B,IAAI,yBAA0B,0BACzCk8B,EAAWl8B,IAAI,yBAA0B,0BACzCk8B,EAAWl8B,IAAI,0BAA2B,2BAC1Ck8B,EAAWl8B,IAAI,yBAA0B,0BACzCk8B,EAAWl8B,IAAI,wBAAyB,yBACxCk8B,EAAWl8B,IAAI,oBAAqB,qBACpCk8B,EAAWl8B,IAAI,yBAA0B,0BACzCk8B,EAAWl8B,IAAI,uBAAwB,wBACvCk8B,EAAWl8B,IAAI,2BAA4B,4BAC3Ck8B,EAAWl8B,IAAI,6BAA8B,8BAC7Ck8B,EAAWl8B,IAAI,mBAAoB,oBACnCk8B,EAAWl8B,IAAI,8BAA+B,+BAC9Ck8B,EAAWl8B,IAAI,0BAA2B,2BAC1Ck8B,EAAWl8B,IAAI,2BAA4B,4BAC3Ck8B,EAAWl8B,IAAI,8BAA+B,+BAC9Ck8B,EAAWl8B,IAAI,oBAAqB,qBACpCk8B,EAAWl8B,IAAI,yBAA0B,0BACzCk8B,EAAWl8B,IAAI,8BAA+B,+BAC9Ck8B,EAAWl8B,IAAI,qBAAsB,sBACrCk8B,EAAWl8B,IAAI,0BAA2B,kLCZpC49B,qNAWFC,oCAAsC,SAAAn+B,GAAU,IACpC8F,EAAc5G,EAAK0f,MAAnB9Y,UACR,GAAKA,EAAL,CAEA,IAAMvF,EAAOuF,EAAU7B,MACvB,GAAK1D,EAAL,CAL4C,IAOpC6G,EAAWpH,EAAXoH,OAEJ7G,EAAKwB,KAAOqF,GACZlI,EAAK2hB,oGAnBT5hB,IAAU6hB,GAAG,oCAAqCzhB,KAAK8+B,qCACvDl/B,IAAU6hB,GAAG,iCAAkCzhB,KAAK8+B,oFAIpDl/B,IAAUoC,eAAe,oCAAqChC,KAAK8+B,qCACnEl/B,IAAUoC,eAAe,iCAAkChC,KAAK8+B,sEAiB3D,IAAAxf,EAC+Dtf,KAAKuf,MAAjEmB,EADHpB,EACGoB,QAASja,EADZ6Y,EACY7Y,UAAWvF,EADvBoe,EACuBpe,KAAM6hB,EAD7BzD,EAC6ByD,KAAMoW,EADnC7Z,EACmC6Z,aAAc3Z,EADjDF,EACiDE,UAEhDiZ,EAAerkB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpDkb,EAAYe,IAAW,aAAc,CAAEke,4BAA6BtG,IAE1E,OACIgE,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBE,QAASR,GACnCiZ,EACGgE,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAWA,EAAW4B,IAAK+W,EAAc3W,WAAW,EAAOC,IAAI,KAEpE0a,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAWY,EAAQgZ,aAE3Bx4B,GACGu7B,EAAAj8B,EAAAkM,cAACsyB,EAAA,EAAD,CACI99B,KAAMA,EACNu3B,aAAcA,EACd1rB,UAAQ,EACRorB,QAAM,EACNc,cAAY,EACZC,OAAQ,EACRnW,KAAMA,EACNoW,aAAcA,YA/CXlZ,IAAMC,YA+DlBgB,QAxEA,SAAAC,GAAK,MAAK,CACrBuY,WAAY,CACRA,WAAYvY,EAAM8d,QAAQC,QAAQC,KAClCC,aAAc,MACd5vB,MAAO,GACPE,OAAQ,MAmEkB,CAAE4X,WAAW,GAAhCpG,CAAwC2d,4LCnEjDxe,sBACF,SAAAA,EAAYd,GAAO,IAAA1f,EAAA,OAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAqgB,IACfxgB,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAAugB,GAAAlgB,KAAAH,KAAMuf,KA+BV8f,gBAAkB,WACd,IAAMnM,EAASrzB,EAAKy/B,SAAS/R,QACzB2F,IACIrzB,EAAK0/B,QAAU1/B,EAAK2/B,UAAY3/B,EAAK4/B,kBAAoB5/B,EAAK6/B,uBAE9DxM,EAAOyM,OAGPzM,EAAO0M,UAxCA//B,EA6CnBggC,wCAA0C,SAAAl/B,GACtCd,EAAK6/B,uBAAyBziB,QAAQ7E,IAAiB0nB,2BAEvDjgC,EAAKw/B,mBAhDUx/B,EAmDnBkgC,iCAAmC,SAAAp/B,GAC/Bd,EAAK4/B,gBAAkBxiB,QAAQ7E,IAAiB4nB,oBAEhDngC,EAAKw/B,mBAtDUx/B,EAyDnBogC,0BAA4B,SAAAt/B,GACxBd,EAAK2/B,QAAU7+B,EAAO6+B,QAEtB3/B,EAAKw/B,mBA5DUx/B,EA+DnBqgC,6BAA+B,SAAAv/B,GAAU,IAAA2e,EACPzf,EAAK0f,MAA3BvY,EAD6BsY,EAC7BtY,OAAQC,EADqBqY,EACrBrY,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBpH,EAAK0/B,OAAS5+B,EAAO4M,SAASzK,IAAIwU,GAElCzX,EAAKw/B,mBArEUx/B,EAwEnBsgC,4BAA8B,SAAAx/B,GAAU,IAC5B6D,EAAc3E,EAAK0f,MAAM/a,UAAzBA,UACAuD,EAAWpH,EAAXoH,OAEHvD,GAEDA,EAAU9B,KAAOqF,GACjBlI,EAAK2hB,eA/EM3hB,EAmFnBugC,qCAAuC,SAAAz/B,GAAU,IACrC8F,EAAc5G,EAAK0f,MAAM/a,UAAzBiC,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK2hB,gBAvFT3hB,EAAKy/B,SAAWrf,IAAMogB,YAEtBxgC,EAAK2/B,QAAUz1B,OAAOu2B,SACtBzgC,EAAK0/B,QAAS,EACd1/B,EAAK4/B,gBAAkBxiB,QAAQ7E,IAAiB4nB,oBAChDngC,EAAK6/B,uBAAyBziB,QAAQ7E,IAAiB0nB,2BARxCjgC,mFAYfD,IAAU6hB,GAAG,qCAAsCzhB,KAAKogC,sCACxDxgC,IAAU6hB,GAAG,4BAA6BzhB,KAAKmgC,6BAC/C/nB,IAAiBqJ,GAAG,0BAA2BzhB,KAAKigC,2BACpD7nB,IAAiBqJ,GAAG,iCAAkCzhB,KAAK+/B,kCAC3D3nB,IAAiBqJ,GAAG,wCAAyCzhB,KAAK6/B,yCAClEpyB,IAAagU,GAAG,6BAA8BzhB,KAAKkgC,6EAInDtgC,IAAUoC,eAAe,qCAAsChC,KAAKogC,sCACpExgC,IAAUoC,eAAe,4BAA6BhC,KAAKmgC,6BAC3D/nB,IAAiBpW,eAAe,0BAA2BhC,KAAKigC,2BAChE7nB,IAAiBpW,eAAe,iCAAkChC,KAAK+/B,kCACvE3nB,IAAiBpW,eACb,wCACAhC,KAAK6/B,yCAETpyB,IAAazL,eAAe,6BAA8BhC,KAAKkgC,+DAiE1D,IAAAzf,EACiCzgB,KAAKuf,MAAnCa,EADHK,EACGL,YAAaZ,EADhBiB,EACgBjB,UAAWnI,EAD3BoJ,EAC2BpJ,EAD3BkpB,EAEsDvgC,KAAKuf,MAAM/a,UAA9DiC,EAFH85B,EAEG95B,UAAWjC,EAFd+7B,EAEc/7B,UAAWg8B,EAFzBD,EAEyBC,UAAWhxB,EAFpC+wB,EAEoC/wB,MAAOE,EAF3C6wB,EAE2C7wB,OAE1C4Q,EAAeC,YAAW9Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAU0Q,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAM3T,EAAQ,CACV6C,MAAO8Q,EAAa9Q,MACpBE,OAAQ4Q,EAAa5Q,QAGnB+oB,EAAerkB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD8c,EAAMtN,YAAO5P,GAEb01B,EAAY5E,YAAmB7uB,GAC/Bg6B,EAAQxsB,YAAcusB,GAE5B,OACI/D,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,YAAYnT,MAAOA,EAAOqT,QAASR,GAC7CkC,EACG+e,EACIhE,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,6BAA6BnT,MAAOA,EAAO+U,IAAKA,EAAKK,IAAI,KAExE0a,EAAAj8B,EAAAkM,cAAA,SACIg0B,IAAK1gC,KAAKs/B,SACVxf,UAAU,6BACV4B,IAAKA,EACLif,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXvxB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,SAItB+sB,EAAAj8B,EAAAkM,cAAA+vB,EAAAj8B,EAAA8kB,SAAA,KACImX,EAAAj8B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,oBAAqB,CAAEyZ,gBAAiBJ,IAC9DvtB,MAAOA,EACP+U,IAAK+W,EACL1W,IAAI,KAER0a,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkB3T,YAAY3H,KAGrDi4B,EAAAj8B,EAAAkM,cAAC0vB,EAAA,EAAD,CACIl7B,KAAMsD,EACNuI,UAAQ,EACRorB,QAAM,EACNc,cAAY,EACZlW,KAAM0Z,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBzI,EAAE,wBApJrC4I,IAAMC,YAoK9BG,EAAUW,aAAe,CACrB/U,KAAMgG,IACNmO,YAAaa,KAGFsG,kBAAkBlH,uHChL3B2gB,qNACF7c,MAAQ,CACJwJ,MAAO,KACPsT,iBAAkB,QAiCtBC,kBAAoB,SAAA97B,GAAW,IAEnB1C,EADkB0C,EAAlBA,QACA1C,GAERb,IAAgBgJ,KAAK,CACjB/B,QAAS,mBACT1D,QAAS,CAAE0D,QAAS,cAAepG,QACpCyI,KAAK,SAAAhB,GACAtK,EAAK0f,MAAMna,UAAYA,GACvBvF,EAAK4kB,SAAS,CACVkJ,MAAOxjB,EAAOg3B,OAAOC,KAAK,4FA1BvBlc,EAAWC,EAAWC,GAAU,IACvChgB,EAAYpF,KAAKuf,MAAjBna,QAEJA,GAAWA,IAAY8f,EAAU9f,SACjCpF,KAAKkhC,kBAAkB97B,+CAIX,IACRA,EAAYpF,KAAKuf,MAAjBna,QAEJA,GACApF,KAAKkhC,kBAAkB97B,oCAoBtB,IACGA,EAAYpF,KAAKuf,MAAjBna,QACAuoB,EAAU3tB,KAAKmkB,MAAfwJ,MAER,OAAKvoB,EAGDq3B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,mBACX2c,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,yBAAyB6N,GACxC8O,EAAAj8B,EAAAkM,cAAC20B,EAAA,EAAD,CAASj8B,QAASA,EAASgb,YAAakhB,OAL3B,wDAlDO/hB,EAAO4E,GAAO,IAClC/e,EAAYma,EAAZna,QACA67B,EAAqB9c,EAArB8c,iBAER,OAAI77B,GAAW67B,EACJ,CACHA,iBAAkB77B,EAClBuoB,MAAO,MAIR,YAjBc1N,IAAMC,YAuEpB8gB,iKCeAO,sBAtFX,SAAAA,EAAYhiB,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAuhC,IACf1hC,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAyhC,GAAAphC,KAAAH,KAAMuf,KAkBVpe,aAAe,SAAAR,GACX,IAAMi3B,EAAc/3B,EAAKskB,MAAMjjB,KACzB22B,EAAWl3B,EAAOO,KAEpB02B,GAAeA,EAAYl1B,KAAOm1B,EAASn1B,IAC3C7C,EAAK4kB,SAAS,CAAEvjB,KAAM22B,EAAUC,SAAUF,KAxB/B,IAGP12B,EAASrB,EAAK0f,MAAdre,KAHO,OAIfrB,EAAKskB,MAAQ,CACTqU,cAAet3B,EACf42B,SAAU,KACV52B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAPrBrB,mFAYfD,IAAU6hB,GAAG,aAAczhB,KAAKmB,6DAIhCvB,IAAUoC,eAAe,aAAchC,KAAKmB,4DA2B1B2jB,EAAWC,GAAW,IAAAb,EACblkB,KAAKmkB,MAAxBjjB,EADgCgjB,EAChChjB,KAAM42B,EAD0B5T,EAC1B4T,SAEd,OAAI/S,EAAU7jB,OAASA,GAInB6jB,EAAU+S,WAAaA,mCAOtB,IACG52B,EAASlB,KAAKmkB,MAAdjjB,KACR,IAAKA,EAAM,OAAO,KAElB,IAAMsgC,EAAsBtgC,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAC/CmtB,EAAoBvgC,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAE/CxI,EAAOE,YAAYjL,GACrBo3B,EAAe,KACfkJ,EACAlJ,EAAejkB,YAAkBnT,GAC1BugC,IACPnJ,EAAe9jB,YAAgBtT,IAGnC,IAAMwgC,EAAapJ,EAAY,GAAAttB,OAAMstB,EAAN,KAAAttB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACI4T,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,YAAOg1B,uDAhDaniB,EAAO4E,GAAO,IAClCjjB,EAASqe,EAATre,KACAs3B,EAAkBrU,EAAlBqU,cAER,OAAIt3B,GAAQs3B,GAAiBt3B,EAAKwB,KAAO81B,EAAc91B,GAC5C,CACH81B,cAAet3B,EACf42B,SAAU,KACV52B,KAAMtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,GAIjC,YAzCc+e,IAAMC,YCG7BkM,2LACO,IAAA9M,EAC2Btf,KAAKuf,MAA7Bza,EADHwa,EACGxa,SAAU0a,EADbF,EACaE,UAClB,IAAK1a,EAAU,OAAO,KAFjB,IAIG2B,EAAyB3B,EAAzB2B,UAAWinB,EAAc5oB,EAAd4oB,UACbxsB,EAAO4D,EAASA,SAEtB,OACI+a,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACXD,EAAArf,EAAAkM,cAACmyB,EAAA,EAAD,CACIp4B,UAAWA,EACXvF,KAAMA,EACNse,UAAWA,EACXuD,KAAMlD,EAAArf,EAAAkM,cAACi1B,EAAAnhC,EAAD,MACN24B,aAActZ,EAAArf,EAAAkM,cAACk1B,EAAAphC,EAAD,QAElBqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAA,KACIoT,UAAU,gBACVE,QAASR,EACT5E,MAAO8S,EACPmU,YAAWnU,EACXoU,WAAU,IAAMntB,YAAa+Y,IAC5BA,IAGT7N,EAAArf,EAAAkM,cAACq1B,EAAD,CAAgB7gC,KAAMA,aA5BnB+e,IAAMC,YA0CdkM,qMCtCTF,6BACF,SAAAA,EAAY3M,GAAO,IAAA1f,EAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAAksB,IACfrsB,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAAosB,GAAA/rB,KAAAH,KAAMuf,KAmDVyiB,uBAAyB,SAAArhC,GAAU,IAAA2e,EACDzf,EAAK0f,MAA3BvY,EADuBsY,EACvBtY,OAAQC,EADeqY,EACfrY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CACVwd,QAAQ,EACR3Q,SAAS,EACTK,YAAa,KA3DN9xB,EAgEnBqiC,wBAA0B,SAAAvhC,GAAU,IAAA8f,EACO5gB,EAAK0f,MAApCvY,EADwByZ,EACxBzZ,OAAQC,EADgBwZ,EAChBxZ,UADgBwZ,EACL6Q,QAEvBtqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK4kB,SAAS,CAAE6M,SAAS,IAEzBzxB,EAAK4kB,SAAS,CAAE6M,SAAS,KAtEdzxB,EA0EnBsiC,yBAA2B,SAAAxhC,GAAU,IAAA2nB,EACHzoB,EAAK0f,MAA3BvY,EADyBshB,EACzBthB,OAAQC,EADiBqhB,EACjBrhB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CAAE6M,SAAS,KA9EdzxB,EAkFnBuiC,0BAA4B,SAAAzhC,GAAU,IAAAmoB,EACJjpB,EAAK0f,MAA3BvY,EAD0B8hB,EAC1B9hB,OAAQC,EADkB6hB,EAClB7hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKskB,MAAM8d,QACZpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbL,SAAS,IAGVzxB,EAAKskB,MAAM8d,QAClBpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbL,SAAS,KAjGF,IAGPtqB,EAAsBuY,EAAtBvY,OAAQC,EAAcsY,EAAdtY,UAER6pB,EAA2BL,IAA3BK,KAAMxsB,EAAqBmsB,IAArBnsB,QAASgtB,EAAYb,IAAZa,QACjB2Q,EAAS39B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKskB,MAAQ,CACT8d,OAAQA,EACR3Q,UAAS2Q,GAAS3Q,EAClBK,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDD,SAAUuQ,GAAUnR,EAAOA,EAAKY,SAAW,GAZhC7xB,qFAgBGilB,EAAWC,EAAWC,GAAa,IAAAd,EACFlkB,KAAKmkB,MAAhD8d,EAD6C/d,EAC7C+d,OAAQ3Q,EADqCpN,EACrCoN,QAASK,EAD4BzN,EAC5ByN,YAAaD,EADexN,EACfwN,SAEtC,OAAI3M,EAAUkd,SAAWA,IAIrBld,EAAUuM,UAAYA,IAItBvM,EAAU4M,cAAgBA,GAI1B5M,EAAU2M,WAAaA,gDAQ3BjB,IAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,IAAYhP,GAAG,wBAAyBzhB,KAAKkiC,yBAC7CzR,IAAYhP,GAAG,yBAA0BzhB,KAAKmiC,0BAC9C1R,IAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5CvR,IAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,IAAYzuB,eAAe,wBAAyBhC,KAAKkiC,yBACzDzR,IAAYzuB,eAAe,yBAA0BhC,KAAKmiC,0BAC1D1R,IAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yDAqDnD,IAAAK,EAC2CriC,KAAKuf,MAA7CvY,EADHq7B,EACGr7B,OAAQC,EADXo7B,EACWp7B,UAAWvC,EADtB29B,EACsB39B,MAAO8a,EAD7B6iB,EAC6B7iB,UAC1B8R,EAAYtxB,KAAKmkB,MAAjBmN,QACR,IAAK5sB,EAAO,OAAO,KAHd,IAKG2B,EAAiD3B,EAAjD2B,sBAAuBqrB,EAA0BhtB,EAA1BgtB,SAAiBxwB,EAASwD,EAAhBA,MAEnCkW,EAAQuT,YAAczpB,GAE5B,OACI+3B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,YACX2c,EAAAj8B,EAAAkM,cAAC41B,EAAA,EAAD,CACI77B,UAAWJ,EACXnF,KAAMA,EACNse,UAAWA,EACXuD,KAAM0Z,EAAAj8B,EAAAkM,cAAC61B,EAAA/hC,EAAD,MACN24B,aAAc7H,EAAUmL,EAAAj8B,EAAAkM,cAAC81B,EAAAhiC,EAAD,MAAgBi8B,EAAAj8B,EAAAkM,cAAC+1B,EAAAjiC,EAAD,QAE5Ci8B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,oBACX2c,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,kBACX2c,EAAAj8B,EAAAkM,cAAA,KAAGoT,UAAU,gBAAgBE,QAASR,EAAW5E,MAAOA,GACnDA,IAGT6hB,EAAAj8B,EAAAkM,cAACg2B,EAAA,EAAD,CAAa17B,OAAQA,EAAQC,UAAWA,EAAWyqB,SAAUA,EAAUxwB,KAAMA,aA/H7E+e,IAAMC,YA6IXgM,qIClJTyW,sBACF,SAAAA,EAAYpjB,GAAO,IAAA1f,EAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAA2iC,IACf9iC,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAA6iC,GAAAxiC,KAAAH,KAAMuf,KA2DVyiB,uBAAyB,SAAArhC,GAAU,IAAA2e,EACSzf,EAAK0f,MAArCvY,EADuBsY,EACvBtY,OAAQC,EADeqY,EACfrY,UAAWyqB,EADIpS,EACJoS,SADIxN,EAENrkB,EAAKskB,MAAdjjB,GAFegjB,EAEvB+d,OAFuB/d,EAEfhjB,MAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbiR,WAAY/iC,EAAKgjC,cAAc,EAAGnR,GAAU,EAAOxwB,MApE5CrB,EAyEnBijC,wBAA0B,SAAAniC,GAAU,IAAA8f,EACQ5gB,EAAK0f,MAArCvY,EADwByZ,EACxBzZ,OAAQC,EADgBwZ,EAChBxZ,UAAWyqB,EADKjR,EACLiR,SADKqR,EAEPljC,EAAKskB,MAAtB8d,EAFwBc,EAExBd,OAAQ/gC,EAFgB6hC,EAEhB7hC,KAEZ8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CACVkN,YAAahxB,EAAOgxB,YACpBD,SAAU/wB,EAAO+wB,UAAYA,EAC7BkR,WAAY/iC,EAAKgjC,cAAcliC,EAAOgxB,YAAahxB,EAAO+wB,UAAYA,EAAUuQ,EAAQ/gC,MAjFjFrB,EAsFnBuiC,0BAA4B,SAAAzhC,GAAU,IAAA2nB,EACMzoB,EAAK0f,MAArCvY,EAD0BshB,EAC1BthB,OAAQC,EADkBqhB,EAClBrhB,UAAWyqB,EADOpJ,EACPoJ,SADOsR,EAEInjC,EAAKskB,MAAnC8d,EAF0Be,EAE1Bf,OAAQtQ,EAFkBqR,EAElBrR,YAAazwB,EAFK8hC,EAEL9hC,KAEzB8F,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAasQ,EAAStQ,EAAc,EACpCiR,WAAY/iC,EAAKgjC,cAAcZ,EAAStQ,EAAc,EAAGD,GAAU,EAAMxwB,KAEtE+gC,GACPpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbiR,WAAY/iC,EAAKgjC,cAAc,EAAGnR,GAAU,EAAOxwB,MApG5CrB,EAyGnBsB,aAAe,SAAAR,GACX,IAAMi3B,EAAc/3B,EAAKskB,MAAMjjB,KACzB22B,EAAWl3B,EAAOO,KAEpB02B,GAAeA,EAAYl1B,KAAOm1B,EAASn1B,IAC3C7C,EAAK4kB,SAAS,CAAEvjB,KAAM22B,EAAUC,SAAUF,KA9G/B/3B,EAkHnBgjC,cAAgB,SAAClR,EAAaD,EAAUuQ,EAAQ/gC,GAC5C,IAAM43B,EAAyB53B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDkgC,GAFuB/hC,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAEjCo/B,YAAkBve,KAAKC,MAAM8M,GAAY,KAC1DyR,EAAoBD,YAAkBve,KAAKC,MAAM+M,GAAe,IAEtE,OAAOsQ,GAAUnJ,EAAV,GAAA9tB,OAAsCm4B,EAAtC,KAAAn4B,OAA2Di4B,GAA3D,GAAAj4B,OAAiFi4B,IAzHzE,IAGP3+B,EAAkBmsB,IAAlBnsB,QAASwsB,EAASL,IAATK,KAHFhI,EAI+BjpB,EAAK0f,MAA3CvY,EAJO8hB,EAIP9hB,OAAQC,EAJD6hB,EAIC7hB,UAAWyqB,EAJZ5I,EAIY4I,SAAUxwB,EAJtB4nB,EAIsB5nB,KAE/B+gC,EAAS39B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjE0qB,EAAcsQ,GAAUnR,EAAOA,EAAKa,YAAc,EAClDyR,EAAgBnB,GAAUnR,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EAClEkG,EAAch4B,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAT/B,OAWfrB,EAAKskB,MAAQ,CACT8d,OAAQA,EACRtQ,YAAaA,EACbD,SAAU0R,EACVR,WAAY/iC,EAAKgjC,cAAclR,EAAaD,EAAUuQ,EAAQrK,GAE9DE,SAAU,KACV52B,KAAM02B,GAlBK/3B,qFAsBGilB,EAAWC,GAAW,IAAAse,EACOrjC,KAAKmkB,MAA5C8d,EADgCoB,EAChCpB,OAAQW,EADwBS,EACxBT,WAAY1hC,EADYmiC,EACZniC,KAAM42B,EADMuL,EACNvL,SAElC,OAAI/S,EAAU6d,aAAeA,IAIzB7d,EAAUkd,SAAWA,IAIrBld,EAAU7jB,OAASA,GAInB6jB,EAAU+S,WAAaA,gDAQ3Bl4B,IAAU6hB,GAAG,aAAczhB,KAAKmB,cAEhCsvB,IAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,IAAYhP,GAAG,wBAAyBzhB,KAAK8iC,yBAC7CrS,IAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5CpiC,IAAUoC,eAAe,aAAchC,KAAKmB,cAE5CsvB,IAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,IAAYzuB,eAAe,wBAAyBhC,KAAK8iC,yBACzDrS,IAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yDAmEnD,IAAAsB,EACwBtjC,KAAKmkB,MAA1BjjB,EADHoiC,EACGpiC,KAAM0hC,EADTU,EACSV,WACd,IAAK1hC,EAAM,OAAO,KAElB,IAAMsgC,EAAsBtgC,EAAK0B,OAAS1B,EAAK0B,MAAM0R,sBAC/CmtB,EAAoBvgC,EAAK0C,QAAU1C,EAAK0C,OAAO6Q,oBAC/CqkB,EAAyB53B,EAAK0B,OAAS1B,EAAK0B,MAAMG,yBAGlDkJ,GAFuB/K,EAAK0C,QAAU1C,EAAK0C,OAAOE,uBAE3CqI,YAAYjL,IACrBo3B,EAAe,KACfkJ,EACAlJ,EAAejkB,YAAkBnT,GAC1BugC,IACPnJ,EAAe9jB,YAAgBtT,IAEnC,IAAMwgC,EAAapJ,EAAY,GAAAttB,OAAMstB,EAAN,KAAAttB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACIwwB,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,iBACTgZ,GAA0B2D,EAAAj8B,EAAAkM,cAAA,eAAA1B,OAAU02B,EAAV,OAC5BjF,EAAAj8B,EAAAkM,cAAA,YAAOk2B,WAlJG3iB,IAAMC,YA+JjByiB,+KC5JTlW,qNASF8W,iCAAmC,SAAA5iC,GAAU,IACjC8F,EAAc5G,EAAK0f,MAAMja,MAAzBmB,UACAsB,EAAWpH,EAAXoH,OAEHtB,GAEDA,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK2hB,kGAdT5hB,IAAU6hB,GAAG,iCAAkCzhB,KAAKujC,iFAIpD3jC,IAAUoC,eAAe,iCAAkChC,KAAKujC,mEAc3D,IAAAjkB,EAC8Btf,KAAKuf,MAAhCa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UADhBgkB,EAEiDxjC,KAAKuf,MAAMja,MAAzDmB,EAFH+8B,EAEG/8B,UAAWnB,EAFdk+B,EAEcl+B,MAAOkK,EAFrBg0B,EAEqBh0B,MAAOE,EAF5B8zB,EAE4B9zB,OAAQgiB,EAFpC8R,EAEoC9R,SAEnCpR,EAAeC,YAAW9Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAU0Q,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAM3T,EAAQ,CACV6C,MAAO8Q,EAAa9Q,MACpBE,OAAQ4Q,EAAa5Q,QAGnBxO,EAAOuF,EAAYA,EAAU7B,MAAQ,KACrCuD,EAAOjH,EAAOtB,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAAO,KACxDuZ,EAAM9hB,IAAU2I,WAAWJ,GAC3B+xB,EAAY5E,YAAmB7uB,GAErC,OACIg2B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,QAAQnT,MAAOA,EAAOqT,QAASR,GAC1Cid,EAAAj8B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,gBAAiB,CAAEyZ,gBAAiBJ,IAC1DvtB,MAAOA,EACP+U,IAAKA,EACLK,IAAI,KAER0a,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,cACX2c,EAAAj8B,EAAAkM,cAAC+1B,EAAAjiC,EAAD,OAEJi8B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,cAAcojB,YAAkBxR,GAAY,IAAMvlB,YAAY7G,YAhDzE2a,IAAMC,YA+D1BuM,EAAMzL,aAAe,CACjB/U,KAAMgG,IACNmO,YAAaa,KAGFwL,+PC7DT+K,UAAc,CAChBC,OAAQ,+BAGN/K,cACF,SAAAA,EAAYnN,GAAO,IAAA1f,EAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAA0sB,IACf7sB,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAA4sB,GAAAvsB,KAAAH,KAAMuf,KA6FV8f,gBAAkB,WACd,IAAMnM,EAASrzB,EAAKy/B,SAAS/R,QAC7B,GAAI2F,EACA,GAAIrzB,EAAK0/B,QAAU1/B,EAAK2/B,UAAY3/B,EAAK4/B,kBAAoB5/B,EAAK6/B,uBAE9DxM,EAAOyM,WACJ,CACH,GAAI9/B,EAAKskB,MAAM8d,OACX,OAIJ/O,EAAO0M,UA1GA//B,EA+GnBggC,wCAA0C,SAAAl/B,GACtCd,EAAK6/B,uBAAyBziB,QAAQ7E,IAAiB0nB,2BAEvDjgC,EAAKw/B,mBAlHUx/B,EAqHnBkgC,iCAAmC,SAAAp/B,GAC/Bd,EAAK4/B,gBAAkBxiB,QAAQ7E,IAAiB4nB,oBAEhDngC,EAAKw/B,mBAxHUx/B,EA2HnBogC,0BAA4B,SAAAt/B,GACxBd,EAAK2/B,QAAU7+B,EAAO6+B,QAEtB3/B,EAAKw/B,mBA9HUx/B,EAiInBqgC,6BAA+B,SAAAv/B,GAAU,IAAA2e,EACPzf,EAAK0f,MAA3BvY,EAD6BsY,EAC7BtY,OAAQC,EADqBqY,EACrBrY,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBpH,EAAK0/B,OAAS5+B,EAAO4M,SAASzK,IAAIwU,GAElCzX,EAAKw/B,mBAvIUx/B,EA0InB4jC,iCAAmC,SAAA9iC,GAAU,IAAA8f,EACX5gB,EAAK0f,MAA3BvY,EADiCyZ,EACjCzZ,OAAQC,EADyBwZ,EACzBxZ,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKy/B,SAAS/R,SAEzB1tB,EAAK4kB,SAAS,CAAEif,UAAW/iC,EAAOkxB,QAAU,WACxChyB,EAAK8jC,qBAhJF9jC,EAsJnBijC,wBAA0B,SAAAniC,GAAU,IAAA2nB,EACFzoB,EAAK0f,MAA3BvY,EADwBshB,EACxBthB,OAAQC,EADgBqhB,EAChBrhB,UACZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,YAClCpH,EAAKy/B,SAAS/R,SAEzB1tB,EAAK4kB,SAAS,CACVkN,YAAahxB,EAAOgxB,YACpBiS,cAAejjC,EAAO+wB,aA7JnB7xB,EAmKnBmiC,uBAAyB,SAAArhC,GAAU,IAAAmoB,EACDjpB,EAAK0f,MAA3BvY,EADuB8hB,EACvB9hB,OAAQC,EADe6hB,EACf7hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SACD,CACIwd,QAAQ,EACRyB,UAAW,KACX/R,YAAa,GAEjB,WACI,IAAMuB,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELrzB,EAAK8jC,iBAEA55B,OAAOu2B,UACRpN,EAAO0M,YApLR//B,EA2LnBuiC,0BAA4B,SAAAzhC,GAAU,IAAA0hC,EACJxiC,EAAK0f,MAA3BvY,EAD0Bq7B,EAC1Br7B,OAAQC,EADkBo7B,EAClBp7B,UACEpH,EAAK0f,MAAMhY,UAArBjC,MAEJ0B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7CpH,EAAKskB,MAAM8d,QAEXpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,OAGd9xB,EAAKskB,MAAM8d,QAClBpiC,EAAK4kB,SACD,CACIwd,QAAQ,EACRyB,UAAW,KACX/R,YAAa,GAEjB,WACI,IAAMuB,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELrzB,EAAK8jC,iBAEA55B,OAAOu2B,UACRpN,EAAO0M,YArNR//B,EA4NnBgkC,4BAA8B,SAAAljC,GAAU,IAC5B2E,EAAUzF,EAAK0f,MAAMhY,UAArBjC,MACAyC,EAAWpH,EAAXoH,OAEHzC,GAEDA,EAAM5C,KAAOqF,GACblI,EAAK4kB,SACD,CACI/C,IAAKtN,YAAO9O,IAEhB,WACIzF,EAAK8jC,oBAxOF9jC,EA8OnBikC,qCAAuC,SAAAnjC,GAAU,IACrC8F,EAAc5G,EAAK0f,MAAMhY,UAAzBd,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWpH,EAAXoH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1ClI,EAAK2hB,gBArPM3hB,EAyPnBkkC,cAAgB,aAtPZlkC,EAAKy/B,SAAWrf,IAAMogB,YAHP,IAKPr5B,EAAsBuY,EAAtBvY,OAAQC,EAAcsY,EAAdtY,UACR3B,EAAUia,EAAMhY,UAAhBjC,MAEAwrB,EAA+BL,IAA/BK,KAAMxsB,EAAyBmsB,IAAzBnsB,QAASysB,EAAgBN,IAAhBM,YACjBkR,EAAS39B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EATxD,OAWfpH,EAAKskB,MAAQ,CACT8d,OAAQA,EACRyB,UAAWzB,EAASlR,EAAc,KAClCrP,IAAKtN,YAAO9O,GACZqsB,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDiS,cAAe3B,GAAUnR,EAAOA,EAAKY,SAAW,GAGpD7xB,EAAK2/B,QAAUz1B,OAAOu2B,SACtBzgC,EAAK0/B,QAAS,EACd1/B,EAAK4/B,gBAAkBxiB,QAAQ7E,IAAiB4nB,oBAChDngC,EAAK6/B,uBAAyBziB,QAAQ7E,IAAiB0nB,2BAtBxCjgC,gFAyBF,IAAAqkB,EACclkB,KAAKmkB,MAAxBuf,EADKxf,EACLwf,UAAWhiB,EADNwC,EACMxC,IAEbwR,EAASlzB,KAAKs/B,SAAS/R,QAC7B,GAAK2F,EAEL,GAAIwQ,EAEAxQ,EAAOwQ,UAAYA,MAFvB,CAMA,IAAM7R,EAASqB,EAAOwQ,UACtB,GAAI7R,EAEeA,EAAOmS,YAEf5gC,QAAQ,SAAA6gC,GAEXA,EAAM1iC,SAIV2xB,EAAOwQ,YAEPxQ,EAAOwQ,UAAY,MAEnBxQ,EAAOxR,MAAQA,IACfwR,EAAOxR,IAAMA,gDAKjB1hB,KAAK2jC,iBAEL/jC,IAAU6hB,GAAG,qCAAsCzhB,KAAK8jC,sCACxDlkC,IAAU6hB,GAAG,4BAA6BzhB,KAAK6jC,6BAE/Cp2B,IAAagU,GAAG,6BAA8BzhB,KAAKkgC,8BAEnD9nB,IAAiBqJ,GAAG,0BAA2BzhB,KAAKigC,2BACpD7nB,IAAiBqJ,GAAG,iCAAkCzhB,KAAK+/B,kCAC3D3nB,IAAiBqJ,GAAG,wCAAyCzhB,KAAK6/B,yCAElEpP,IAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,IAAYhP,GAAG,iCAAkCzhB,KAAKyjC,kCACtDhT,IAAYhP,GAAG,wBAAyBzhB,KAAK8iC,yBAC7CrS,IAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5CpiC,IAAUoC,eAAe,qCAAsChC,KAAK8jC,sCACpElkC,IAAUoC,eAAe,4BAA6BhC,KAAK6jC,6BAE3Dp2B,IAAazL,eAAe,6BAA8BhC,KAAKkgC,8BAE/D9nB,IAAiBpW,eAAe,0BAA2BhC,KAAKigC,2BAChE7nB,IAAiBpW,eAAe,iCAAkChC,KAAK+/B,kCACvE3nB,IAAiBpW,eACb,wCACAhC,KAAK6/B,yCAGTpP,IAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,IAAYzuB,eAAe,iCAAkChC,KAAKyjC,kCAClEhT,IAAYzuB,eAAe,wBAAyBhC,KAAK8iC,yBACzDrS,IAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yDA0KnD,IAAAkC,EACiDlkC,KAAKuf,MAAtCvY,GADhBk9B,EACG9jB,YADH8jB,EACgBl9B,QAAQC,EADxBi9B,EACwBj9B,UAAWuY,EADnC0kB,EACmC1kB,UADnCujB,EAE0C/iC,KAAKmkB,MAA5C8d,EAFHc,EAEGd,OAAQtQ,EAFXoR,EAEWpR,YAAaiS,EAFxBb,EAEwBa,cAFxBO,EAGkCnkC,KAAKuf,MAAMhY,UAA1Cd,EAHH09B,EAGG19B,UAAWnB,EAHd6+B,EAGc7+B,MAAOosB,EAHrByS,EAGqBzS,SAG1B,IADgBjkB,IAAaxK,IAAI+D,EAAQC,GAC3B,OAAO,KAErB,IAAM0F,EAAQ,CAAE6C,MAAO,IAAKE,OAAQ,KACpC,IAAK/C,EAAO,OAAO,KAEnB,IAAM8rB,EAAerkB,YAAO3N,EAAYA,EAAU7B,MAAQ,MACpD8c,EAAMtN,YAAO9O,GACb40B,EAAY5E,YAAmB7uB,GAEjC8yB,EAAW,EACXqK,GAAiBjS,IAEjB4H,GADqB5H,EAAc,KACRiS,EAAiB,KAGhD,OACInH,EAAAj8B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,aAAc,CAAEujB,qBAAsBnC,IAC5Dt1B,MAAOA,EACPqT,QAASR,GACRkC,EACG+a,EAAAj8B,EAAAkM,cAAA+vB,EAAAj8B,EAAA8kB,SAAA,KACImX,EAAAj8B,EAAAkM,cAAA,SACIg0B,IAAK1gC,KAAKs/B,SACVxf,UAAWe,IAAW,6BAA8B,oBACpD8f,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACXvxB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,OACd20B,UAAWrkC,KAAK+jC,gBAEpBtH,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,qBACX2c,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,uBACX2c,EAAAj8B,EAAAkM,cAAC43B,EAAA9jC,EAAD,CACIkgB,QAAS8W,EACT5Q,QAAQ,SACRtR,MAAOikB,EACPttB,KAAM,IACNgX,UAAW,KAGnBwZ,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,kBACVojB,YAAkBjB,EAAStd,KAAKC,MAAM+M,GAAeD,GACtD+K,EAAAj8B,EAAAkM,cAAC63B,EAAA,EAAD,CAAav9B,OAAQA,EAAQC,UAAWA,EAAW8b,KAAM,gBAE7D0Z,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,oBACX2c,EAAAj8B,EAAAkM,cAAC83B,EAAAhkC,EAAD,SAKZi8B,EAAAj8B,EAAAkM,cAAA+vB,EAAAj8B,EAAA8kB,SAAA,KACImX,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,oBACX2c,EAAAj8B,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,oBAAqB,CAAEyZ,gBAAiBJ,IAC9DvtB,MAAOA,EACP+U,IAAK+W,EACL1W,IAAI,MAGZ0a,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,kBACVojB,YAAkBxR,GAAY,IAAMvlB,YAAY7G,GACjDm3B,EAAAj8B,EAAAkM,cAAC63B,EAAA,EAAD,CAAav9B,OAAQA,EAAQC,UAAWA,EAAW8b,KAAM,gBAE7D0Z,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,oBACX2c,EAAAj8B,EAAAkM,cAAC83B,EAAAhkC,EAAD,QAIZi8B,EAAAj8B,EAAAkM,cAAC+3B,EAAA,EAAD,CAAcvjC,KAAMoE,EAAOyH,UAAQ,EAACorB,QAAM,EAACc,cAAY,EAAClW,KAAM0Z,EAAAj8B,EAAAkM,cAACg4B,EAAAlkC,EAAD,gBApVtDyf,IAAMC,WAmW9BwM,EAAU1L,aAAe,CACrB/U,KAAMgG,IACNmO,YAAaa,KAGFyL,oHCzXTiY,cACF,SAAAA,EAAYplB,GAAO,IAAA1f,EAAAC,OAAAoe,EAAA,EAAApe,CAAAE,KAAA2kC,IACf9kC,EAAAC,OAAAqe,EAAA,EAAAre,CAAAE,KAAAF,OAAAse,EAAA,EAAAte,CAAA6kC,GAAAxkC,KAAAH,KAAMuf,KAiBVqlB,6BAA+B,SAAAjkC,GAAU,IAAA2e,EACPzf,EAAK0f,MAA3BvY,EAD6BsY,EAC7BtY,OAAQC,EADqBqY,EACrBrY,UAEZD,IAAWrG,EAAOyF,SAAWa,IAActG,EAAO0d,YAClDxe,EAAK4kB,SAAS,CAAEogB,SAAU5W,YAAgBjnB,EAAQC,MAtBvC,IAAAwZ,EAGe5gB,EAAK0f,MAA3BvY,EAHOyZ,EAGPzZ,OAAQC,EAHDwZ,EAGCxZ,UAHD,OAKfpH,EAAKskB,MAAQ,CACT0gB,SAAU5W,YAAgBjnB,EAAQC,IANvBpH,mFAWf4N,IAAagU,GAAG,6BAA8BzhB,KAAK4kC,6EAInDn3B,IAAazL,eAAe,6BAA8BhC,KAAK4kC,+DAW1D,IAAAtc,EACwBtoB,KAAKuf,MAA1BwD,EADHuF,EACGvF,KAAM+hB,EADTxc,EACSwc,WAGd,OAFqB9kC,KAAKmkB,MAAlB0gB,SAEUC,EAAa/hB,SA/Bb9C,IAAMC,WA0ChCykB,EAAY3jB,aAAe,CACvB+B,KAAM,KACN+hB,WAAY,MAGDH,wMCnCTI,qNASFC,mBAAqB,SAAA76B,GAAU,IAAAmV,EACGzf,EAAK0f,MAA3BvY,EADmBsY,EACnBtY,OAAQC,EADWqY,EACXrY,UAEZD,IAAWmD,EAAO/D,SAAWa,IAAckD,EAAOzH,IAClD7C,EAAK2hB,iBAIbkE,YAAc,SAAAra,GACVA,EAAMua,qBAGVqf,WAAa,SAAA55B,GACTA,EAAMua,kBADY,IAAAnF,EAGY5gB,EAAK0f,MAA3BvY,EAHUyZ,EAGVzZ,OAAQC,EAHEwZ,EAGFxZ,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,OAAK3C,EACDorB,YAAiBprB,GAAiB,UAEtC6uB,YAASnsB,EAAQC,GAHI,yFAzBrBwG,IAAagU,GAAG,mBAAoBzhB,KAAKglC,mEAIzCv3B,IAAazL,eAAe,mBAAoBhC,KAAKglC,qDA2BhD,IAAA1c,EACqCtoB,KAAKuf,MAAvCmB,EADH4H,EACG5H,QAASrJ,EADZiR,EACYjR,EAAGrQ,EADfshB,EACethB,OAAQC,EADvBqhB,EACuBrhB,UAEtB3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GAErC2T,EAAStW,EAAiBymB,YAASzmB,GAAhB,KACnBC,EAAWD,EAAyBiT,YAAWjT,EAAS+S,GAAnCA,EAAE,WACrBpR,EAAY0pB,YAAkB3oB,EAAQC,GAO5C,OALIyoB,YAAiBprB,KACjBsW,EAAQ,KACRrW,EAAU8S,EAAE,mBAIZsiB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,QAAQolB,YAAallC,KAAKilC,WAAYjlB,QAAShgB,KAAK0lB,aAC/DiU,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,iBACX6Z,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClD7a,GAAa0zB,EAAAn5B,EAAAkM,cAACy4B,EAAA,EAAD,CAAWn+B,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1E0zB,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,iBACVlF,GACG+e,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,sBAAuBH,EAAQK,kBAAmBnG,GAEjF+e,EAAAn5B,EAAAkM,cAAA,OAAKoT,UAAU,0BAA0Bvb,aAxD7C0b,IAAMC,YAqEpB4G,EAAUC,YACZ7F,IA1EW,SAAAC,GAAK,OAAArhB,OAAAslC,EAAA,EAAAtlC,CAAA,GACbuhB,YAAaF,KAyEG,CAAEmG,WAAW,IAChCC,eAGWT,MAAQie,mJClFjBM,qNAqBFrJ,wBAA0B,SAAAr7B,GAAU,IAAA2e,EACSzf,EAAK0f,MAAtCvY,EADwBsY,EACxBtY,OAAQC,EADgBqY,EAChBrY,UAAWhB,EADKqZ,EACLrZ,UAC3B,GAAKA,EAAL,CAFgC,IAIxBrB,EAAUqB,EAAVrB,MACHA,GAEDjE,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GAAatG,EAAOoH,SAAWnD,EAAMlC,IACtF7C,EAAK2hB,mGA3BT5hB,IAAU6hB,GAAG,qCAAsCzhB,KAAKg8B,yBACxDp8B,IAAU6hB,GAAG,iCAAkCzhB,KAAKg8B,yBACpDp8B,IAAU6hB,GAAG,oCAAqCzhB,KAAKg8B,yBACvDp8B,IAAU6hB,GAAG,wBAAyBzhB,KAAKg8B,yBAC3Cp8B,IAAU6hB,GAAG,mCAAoCzhB,KAAKg8B,yBACtDp8B,IAAU6hB,GAAG,iCAAkCzhB,KAAKg8B,yBACpDp8B,IAAU6hB,GAAG,qCAAsCzhB,KAAKg8B,wEAIxDp8B,IAAUoC,eAAe,qCAAsChC,KAAKg8B,yBACpEp8B,IAAUoC,eAAe,iCAAkChC,KAAKg8B,yBAChEp8B,IAAUoC,eAAe,oCAAqChC,KAAKg8B,yBACnEp8B,IAAUoC,eAAe,wBAAyBhC,KAAKg8B,yBACvDp8B,IAAUoC,eAAe,mCAAoChC,KAAKg8B,yBAClEp8B,IAAUoC,eAAe,iCAAkChC,KAAKg8B,yBAChEp8B,IAAUoC,eAAe,qCAAsChC,KAAKg8B,0DAe/D,IAAAvb,EACoCzgB,KAAKuf,MAAtCvY,EADHyZ,EACGzZ,OAAQC,EADXwZ,EACWxZ,UAAWhB,EADtBwa,EACsBxa,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGrB,EAAUqB,EAAVrB,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM8c,EAAMtN,YAAOxP,GACbs1B,EAAY5E,YAAmB1wB,GAC/B0gC,EAAc/W,YAAavnB,EAAQC,GAEzC,OACIw1B,EAAAj8B,EAAAkM,cAAA,OAAKoT,UAAU,cACX2c,EAAAj8B,EAAAkM,cAAA,OACIoT,UAAWe,IACP,mBACA,CAAE0kB,yBAA0BD,GAC5B,CAAEE,4BAA6B9jB,GAC/B,CAAE4Y,gBAAiBJ,IAEvBpY,WAAW,EACXJ,IAAKA,EACLK,IAAI,aAvDA9B,IAAMC,YAoEfmlB,4JCjETI,cACF,SAAAA,EAAYlmB,GAAO,IAAA1f,EAAAC,OAAA63B,EAAA,EAAA73B,CAAAE,KAAAylC,IACf5lC,EAAAC,OAAA4wB,EAAA,EAAA5wB,CAAAE,KAAAF,OAAA6wB,EAAA,EAAA7wB,CAAA2lC,GAAAtlC,KAAAH,KAAMuf,KAsCVmmB,iCAAmC,SAAC/kC,GAAW,IACnCqG,EAAWnH,EAAK0f,MAAhBvY,OACR,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAItC,EAAOyF,SAC7BrC,GAELlE,EAAK4kB,SAAS,CAAEkhB,QAAS5tB,YAAYhU,OA/CtBlE,EAkDnB+lC,kCAAoC,SAACjlC,GAAW,IACpCqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAOklC,MAAM,UACjB,IAAK,sCAE0B,uBAAvB9hC,EAAK6N,KAAK,UACa,uBAAvB7N,EAAK6N,KAAK,UAEV/R,EAAK4kB,SAAS,CAAEkhB,QAAS5tB,YAAYhU,KAEzC,MAEJ,IAAK,wCAE0B,oBAAvBA,EAAK6N,KAAK,UACa,mBAAvB7N,EAAK6N,KAAK,UAEV/R,EAAK4kB,SAAS,CAAEkhB,QAAS5tB,YAAYhU,OAtElClE,EA6EnBimC,2BAA6B,WACzBjmC,EAAK4kB,SAAS,CAAEkhB,SAAU9lC,EAAKskB,MAAMwhB,UACrC9lC,EAAKkmC,wCA/EUlmC,EAkFnBmmC,4BAA8B,WAAM,IACxBh/B,EAAWnH,EAAK0f,MAAhBvY,OACA2+B,EAAY9lC,EAAKskB,MAAjBwhB,QACF5hC,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,IACAA,EAAKkU,uBAEUF,YAAYhU,KACZ4hC,GAApB,CAIA,IAAMM,EAAUN,EAAUO,IAAkBC,IACtCC,EAAuBtmC,OAAAu6B,EAAA,EAAAv6B,CAAA,GACtBiE,EAAKkU,sBADiB,CAEzBD,sBAAsB,EACtBE,SAAU+tB,IAGdpkC,IAAgBgJ,KAAK,CACjB/B,QAAS,8BACT1C,QAASY,EACTiR,sBAAuBmuB,MAxGZ,IAGPp/B,EAAWuY,EAAXvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrB2+B,EAAU5tB,YAAYhU,GALb,OAOflE,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZ2+B,QAASA,GAGb9lC,EAAKkmC,qCAAuCO,YAASzmC,EAAKmmC,4BAA6BO,KAZxE1mC,mFA8Bf+S,IAAU6O,GAAG,iCAAkCzhB,KAAK0lC,kCACpDttB,IAAiBqJ,GAAG,kCAAmCzhB,KAAK4lC,kFAI5DhzB,IAAU5Q,eAAe,iCAAkChC,KAAK0lC,kCAChEttB,IAAiBpW,eAAe,kCAAmChC,KAAK4lC,sFArB5CrmB,EAAO4E,GACnC,GAAI5E,EAAMvY,SAAWmd,EAAMkiB,WAAY,KAC3Br/B,EAAWuY,EAAXvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrB2+B,EAAU5tB,YAAYhU,GAE5B,MAAO,CACHsiC,WAAY9mB,EAAMvY,OAClB2+B,QAASA,GAGjB,OAAO,YA3BoB1lB,IAAMC,WA8G1BulB,ykBCnGTe,8MACFriB,MAAQ,CACJsiB,SAAU,QAGdC,gBAAkB,SAAAr7B,GACdxL,EAAK4kB,SAAS,CAAEgiB,SAAUp7B,EAAMs7B,mBAGpCC,gBAAkB,WACd/mC,EAAK4kB,SAAS,CAAEgiB,SAAU,UAG9BI,kBAAoB,WAChBhnC,EAAK+mC,kBADiB,IAGdE,EAAkBjnC,EAAK0f,MAAvBunB,cACHA,GAELtN,WAAW,kBAAMsN,KAAiBrN,SAGtCsN,qBAAuB,WACnBlnC,EAAK+mC,kBADoB,IAGjBI,EAAqBnnC,EAAK0f,MAA1BynB,iBACHA,GAELxN,WAAW,kBAAMwN,KAAoBvN,SAGzCwN,iBAAmB,WACfpnC,EAAK+mC,kBADgB,IAGbM,EAAiBrnC,EAAK0f,MAAtB2nB,aACHA,GAELA,6EAGK,IAAA5nB,EAC0Btf,KAAKuf,MAA5BmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EAAGrQ,EADfsY,EACetY,OACZy/B,EAAazmC,KAAKmkB,MAAlBsiB,SAER,OACI5mB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WACnBC,aAAW,SACXp9B,KAAMgT,QAAQwpB,GACdzmB,QAAShgB,KAAK0mC,iBACd7mB,EAAArf,EAAAkM,cAAC46B,EAAA9mC,EAAD,CAAgBsf,UAAU,0BAE9BD,EAAArf,EAAAkM,cAAC66B,EAAA/mC,EAAD,CACIkC,GAAG,cACH+jC,SAAUA,EACVx8B,KAAMgT,QAAQwpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB7d,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBL,QAAS1pB,KAAK4mC,iBACd/mB,EAAArf,EAAAkM,cAACyd,EAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK6mC,kBAAmBc,UAAWxqB,aAAcnW,IAChE6Y,EAAArf,EAAAkM,cAACk7B,EAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAACm7B,EAAArnC,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,EAAAtnC,EAAD,CAAc0+B,QAAS7nB,EAAE,kBAE7BwI,EAAArf,EAAAkM,cAACyd,EAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK+mC,qBAAsBY,UAAWvqB,aAAiBpW,IACtE6Y,EAAArf,EAAAkM,cAACk7B,EAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAACk1B,EAAAphC,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,EAAAtnC,EAAD,CAAc0+B,QAAS7nB,EAAE,sBAE3BqE,aAAc1U,IACZ6Y,EAAArf,EAAAkM,cAACyd,EAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKinC,iBAAkBU,UAAWtqB,aAAarW,IAC9D6Y,EAAArf,EAAAkM,cAACk7B,EAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAACq7B,GAAAvnC,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,EAAAtnC,EAAD,CAAc0+B,QAAS7nB,EAAE,oBAtF1B4I,IAAMC,WA2GlB4G,GALCC,YACZ7F,IA7GW,CACXkmB,WAAY,CACRngB,OAAQ,UA2GO,CAAEK,WAAW,IAChCC,cAGWT,CAAQ0f,gICnIhB,SAASwB,GAAUC,GAAqB,IAAfC,EAAexmC,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAC3C,GAAKumC,EAAL,CAEA,GAAIC,GAASD,EAAKE,YAAcF,EAAKE,WAAWniC,OAAS,EAAG,CACxD,IAAMoiC,EAAWH,EAAKE,WAAWF,EAAKE,WAAWniC,OAAS,GACpDqiC,EAAQvjC,SAASwjC,cACvBD,EAAME,SAASH,EAAUA,EAASpiC,QAClCqiC,EAAMG,UAAS,GAEf,IAAMC,EAAY1+B,OAAO2+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBJ,EAAKY,UAAYZ,EAAKa,aAG1Bb,EAAKc,sBCfHv3B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFw3B,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGPjf,GACN,MAA0C,qBAA5BlqB,KAAKipC,QAAQ/e,EAAEkf,UAEjCC,eANiB,SAMFnf,GACX,MAA+C,qBAAjClqB,KAAKkpC,aAAahf,EAAEkf,WAI1CJ,GAAMC,QAAQz3B,KAAqB,EACnCw3B,GAAMC,QAAQz3B,KAAiB,EAC/Bw3B,GAAMC,QAAQz3B,KAAgB,EAC9Bw3B,GAAMC,QAAQz3B,KAAe,EAC7Bw3B,GAAMC,QAAQz3B,KAAkB,EAEhCw3B,GAAME,aAAa13B,KAAmB,EACtCw3B,GAAME,aAAa13B,KAAqB,EACxCw3B,GAAME,aAAa13B,KAAqB,EACxCw3B,GAAME,aAAa13B,KAAsB,wBCFnC83B,uBACF,SAAAA,EAAY/pB,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAspC,IACfzpC,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwpC,GAAAnpC,KAAAH,KAAMuf,KASVsM,QAAU,WACN,OAAOhsB,EAAK0pC,cAAchc,QAAQic,WAXnB3pC,EAcnBkpC,MAAQ,WAAmB,IAAlBb,EAAkBxmC,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAGvBsmC,GAFanoC,EAAK0pC,cAAchc,QAEhB2a,IAjBDroC,EAoBnB4pC,aAAe,WAAM,IAAAnqB,EACYzf,EAAK0f,MAA1BwG,EADSzG,EACTyG,OAAQ2jB,EADCpqB,EACDoqB,SACX3jB,GACA2jB,GAELA,EAAS3jB,EAAOrjB,KAzBD7C,EA4BnB8pC,YAAc,SAAAt+B,GAAS,IACX0a,EAAWlmB,EAAK0f,MAAhBwG,OAER1a,EAAMsd,iBAEN,IAAMsf,EAAOpoC,EAAK0pC,cAAchc,QAC1BvnB,EAASiiC,EAAK2B,QAAQ5jC,OAEtB0X,GADYuqB,EAAK2B,QAAQC,UAClBhqC,EAAKgsB,WAElBhsB,EAAK4kB,SAAS,CACVqlB,aAAc9jC,EAAS0X,EAAK1X,SAGhCnE,KAAgBgH,aAAa,CACzBC,QAAS,yBACTpG,GAAIqjB,EAAOrjB,GACXgb,UA7CW7d,EAiDnBkqC,cAAgB,SAAA1+B,GACZ,IAAM48B,EAAOpoC,EAAK0pC,cAAchc,QAC1Bsc,EAAY5B,EAAK2B,QAAQC,UAEzB7jC,EADYnG,EAAKgsB,UACE7lB,OAErBgkC,GAAe,EACbvB,EAAY1+B,OAAO2+B,eACnBS,EAAYH,GAAMG,UAAU99B,GAC5Bg+B,EAAiBL,GAAMK,eAAeh+B,GAM5C,OAJIo9B,IACAuB,IAAiBvB,EAAUwB,YAGvB5+B,EAAMiM,KACV,IAAK,YAED,IADazX,EAAKgsB,UACP,KAAApL,EACsB5gB,EAAK0f,MAA1BwG,EADDtF,EACCsF,OAAQ2jB,EADTjpB,EACSipB,SAMhB,OALIA,GACAA,EAAS3jB,EAAOrjB,IAAI,GAGxB2I,EAAMsd,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAL,EACsBzoB,EAAK0f,MAA7BwG,EADEuC,EACFvC,OAAQmkB,EADN5hB,EACM4hB,YAMhB,OALInkB,GAAUmkB,GACVA,EAAYnkB,EAAOrjB,IAGvB2I,EAAMsd,kBACC,EAEX,IAAK,UACD,IAAM8f,EAAY1+B,OAAO2+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMC,EAAanC,EAAKE,YAAcF,EAAKE,WAAWniC,OAAS,EAAIiiC,EAAKE,WAAW,GAAK,KAExF,IAAKiC,GAAe3B,EAAU4B,aAAeD,IAAe3B,EAAU6B,aAAe,KAAAxhB,EACjDjpB,EAAK0f,MAA7BwG,EADyE+C,EACzE/C,OAAQwkB,EADiEzhB,EACjEyhB,YAMhB,OALIA,GACAA,EAAYxkB,EAAOrjB,IAGvB2I,EAAMsd,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM8f,EAAY1+B,OAAO2+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAWniC,OAAS,EAAIiiC,EAAKE,WAAWF,EAAKE,WAAWniC,OAAS,GAAK,KAElG,IAAKwkC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAUxkC,OAAS,KAAAq8B,EACnExiC,EAAK0f,MAA7BwG,EAD2Fsc,EAC3Ftc,OAAQmkB,EADmF7H,EACnF6H,YAMhB,OALIA,GACAA,EAAYnkB,EAAOrjB,IAGvB2I,EAAMsd,kBACC,GAOnB,SAAIwgB,IAAaE,OAIbrjC,GAAU6jC,IAAcG,KACxB3+B,EAAMsd,kBACC,KAvII9oB,EA6InB4qC,YAAc,SAAAp/B,GACVA,EAAMsd,iBAEN,IACMkhB,EADOhqC,EAAK0pC,cAAchc,QACTqc,QAAQC,UAEzBpB,EAAY1+B,OAAO2+B,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAY3pC,EAAKgsB,UACvB,KAAI2d,EAAUxjC,OAASyiC,EAAUziC,QAAU6jC,GAA3C,CAEA,IAAIc,EAAYt/B,EAAMu/B,cAAcC,QAAQ,cACvCF,IAELA,EAAYA,EAAUG,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDtB,EAAUxjC,OAAS0kC,EAAgB1kC,OAAS2kC,EAAU3kC,OAAS6jC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAUxjC,OAAS0kC,EAAgB1kC,SAEnFlB,SAASkmC,YAAY,cAAc,EAAOL,MA9J1C9qC,EAAK0pC,cAAgBtpB,IAAMogB,YAE3BxgC,EAAKskB,MAAQ,CACT2lB,aAAcmB,MANHprC,wEAoKV,IAAAqkC,EACkBlkC,KAAKuf,MAApBmB,EADHwjB,EACGxjB,QAASrJ,EADZ6sB,EACY7sB,EACTyyB,EAAiB9pC,KAAKmkB,MAAtB2lB,aAER,OACIjqB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBACXD,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKupC,cACV7mC,GAAG,0BACHwoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa/zB,EAAE,UACfg0B,cAAaC,KACbC,kBAAiBN,KACjBO,QAASxrC,KAAK2pC,YACd8B,UAAWzrC,KAAK+pC,cAChB2B,QAAS1rC,KAAKyqC,cAElB5qB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCACXD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQ0mB,WAAYpnB,QAAShgB,KAAKypC,cACrD5pB,EAAArf,EAAAkM,cAACi/B,GAAAnrC,EAAD,CAAWyhB,SAAS,YAG5BpC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,mCAAD/gB,OAAAymB,GAAA,EAAAzmB,CAAA,GAAwC4gB,EAAQ8F,aAAc,MACvFsjB,GAAgBwB,KAAqBM,MAClC/rB,EAAArf,EAAAkM,cAACm/B,GAAA,EAAD,CACIC,MAAM,SACNhsB,UAAWY,EAAQqrB,YACnB7pB,MAAO4nB,GAAgB,EAAI,gBAAkB,QAC7CljB,QAAQ,aACPkjB,WAnMM7pB,IAAMC,YAyNtB4G,GAPCC,YACZilB,eACA9qB,IAlOW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBsnC,WAAY,CACR7jB,QAAS,GAEbwoB,YAAa,CACT5oB,SAAU,WACV+D,MAAO,GACPC,OAAQ,EACR8kB,SAAU,GACVC,WAAY,SAEb7kB,aAAYlG,MAwNfoG,cACA4kB,eAGWrlB,CAAQwiB,ICtPhB,SAAS8C,GAAYnkB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAAS/iB,QAAUqmC,KAXrBC,CAAgBvjB,GAAW,OAAO,EAEvC,IAAMwjB,EAAmBvjB,EAAQtd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QACvD,QAAI6uB,EAAiBvmC,QAAU,IAExBumC,EAAiBljB,MAAMmjB,IASlC,SAASA,GAAczmB,GACnB,QAAKA,MACAA,EAAOrI,MAELqI,EAAOrI,KAAK1X,QAAUslC,oBC8E3B3rC,GAAQ,gBAlGV,SAAA8sC,IAAc,IAAA5sC,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAysC,IACV5sC,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA2sC,GAAAtsC,KAAAH,QAQJI,SAAW,SAAAO,KATGd,EAWd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,sBACDd,EAAKoB,IAAI,CACLyB,GAAI+V,KAAKI,MACTkQ,SAAU,GACVC,QAAS,KAGbnpB,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBooB,EAAapoB,EAAbooB,SAERlpB,EAAKg8B,OAAOh8B,EAAKooB,KAAM,CAAEc,aAEzBlpB,EAAKuB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnB+B,EAAa/B,EAAb+B,GAAIgb,EAAS/c,EAAT+c,KACJsL,EAAYnpB,EAAKooB,KAAjBe,QAERnpB,EAAKg8B,OAAOh8B,EAAKooB,KAAM,CAAEe,QAASA,EAAQxb,IAAI,SAAA/B,GAAC,OAAKA,EAAE/I,KAAOA,EAAT5C,OAAAshB,EAAA,EAAAthB,CAAA,GAAmB2L,EAAnB,CAAsBiS,SAAtB5d,OAAAshB,EAAA,EAAAthB,CAAA,GAAoC2L,OAExF5L,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBolB,EAAWplB,EAAXolB,OACAiD,EAAYnpB,EAAKooB,KAAjBe,QAERnpB,EAAKg8B,OAAOh8B,EAAKooB,KAAM,CAAEe,QAAO,GAAAhe,OAAAlL,OAAAwpB,GAAA,EAAAxpB,CAAMkpB,GAAN,CAAejD,MAC/ClmB,EAAKuB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzB+B,EAAO/B,EAAP+B,GACAsmB,EAAYnpB,EAAKooB,KAAjBe,QAERnpB,EAAKg8B,OAAOh8B,EAAKooB,KAAM,CAAEe,QAASA,EAAQtd,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOA,MAC/D7C,EAAKuB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDd,EAAKoB,IAAI,MAETpB,EAAKuB,KAAK,yBAA0BT,KA3DlCd,EAmEd+B,iBAAmB,WACfC,KAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,KAAgBC,YAAY,eAAgBjC,EAAK8B,iBArEvC9B,EAwEdkC,oBAAsB,WAClBF,KAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,KAAgBG,eAAe,eAAgBnC,EAAK8B,iBAvEpD9B,EAAKooB,KAAO,KAEZpoB,EAAK+B,mBACL/B,EAAKsJ,gBAAgBC,KANXvJ,sEA6EP6sC,EAASC,GACZ3sC,KAAKiB,IAAInB,OAAO+7B,OAAO,GAAI6Q,EAASC,gCAGpC1kB,GACAjoB,KAAKioB,KAAOA,gDAIZ,IAAKjoB,KAAKioB,KAAM,OAAO,KACvB,IAAKmkB,GAAYpsC,KAAKioB,MAAO,OAAO,KAFlB,IAAA2kB,EAGY5sC,KAAKioB,KAEnC,MAAO,CACHnf,QAAS,mBACTigB,SAPc6jB,EAGV7jB,SAKJC,QARc4jB,EAGA5jB,QAKGtd,OAAO,SAAAD,GAAC,OAAIwR,QAAQxR,EAAEiS,QAAOlQ,IAAI,SAAA/B,GAAC,OAAIA,EAAEiS,qBA9F7C3R,eAoGxBhC,OAAOke,KAAOtoB,GACCA,UCrDTktC,uBACF,SAAAA,EAAYttB,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA6sC,IACfhtC,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+sC,GAAA1sC,KAAAH,KAAMuf,KA8BVutB,0BAA4B,SAAAnsC,GAAU,IAC1BsnB,EAASwkB,GAATxkB,KAERpoB,EAAK4kB,SAAS,CACVsoB,SAAS,EACTjD,aAAckD,KACd/kB,UArCWpoB,EAyCnBotC,+BAAiC,SAAAtsC,GAAU,IAC/BsnB,EAASwkB,GAATxkB,KAEFggB,EAAOpoC,EAAKqtC,YAAY3f,QACxBvnB,EAASiiC,EAAK2B,QAAQ5jC,OACtBwjC,EAAYvB,EAAKuB,UAEvB3pC,EAAK4kB,SAAS,CACVqlB,aAAc9jC,EAASwjC,EAAUxjC,OACjCiiB,UAlDWpoB,EAsDnBstC,uBAAyB,SAAAxsC,GAAU,IACvBsnB,EAASwkB,GAATxkB,KAERpoB,EAAK4kB,SAAS,CAAEwD,UAzDDpoB,EA4DnButC,gCAAkC,SAAAzsC,GAAU,IAChCsnB,EAASwkB,GAATxkB,KAERpoB,EAAK4kB,SAAS,CAAEwD,QAAQ,WACpBuR,WAAW,WACM35B,EAAKwtC,cAAcpqC,IAAIglB,EAAKe,QAAQhjB,OAAS,GAErD+iC,OAAM,QAnEJlpC,EAkFnBkqC,cAAgB,SAAA1+B,GACZ,IAAM48B,EAAOpoC,EAAKqtC,YAAY3f,QACxBsc,EAAY5B,EAAK2B,QAAQC,UAEzB7jC,EADYiiC,EAAKuB,UACExjC,OAErBgkC,GAAe,EACbvB,EAAY1+B,OAAO2+B,eACnBS,EAAYH,GAAMG,UAAU99B,GAC5Bg+B,EAAiBL,GAAMK,eAAeh+B,GAM5C,OAJIo9B,IACAuB,IAAiBvB,EAAUwB,YAGvB5+B,EAAMiM,KACV,IAAK,QACD,IAAKjM,EAAMiiC,SAIP,OAHAztC,EAAK0tC,sBAAsB,GAE3BliC,EAAMsd,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM8f,EAAY1+B,OAAO2+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAWniC,OAAS,EAAIiiC,EAAKE,WAAWF,EAAKE,WAAWniC,OAAS,GAAK,KAElG,IAAKwkC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAUxkC,OAI1F,OAHAnG,EAAK0tC,sBAAsB,GAE3BliC,EAAMsd,kBACC,EAOnB,SAAIwgB,IAAaE,OAIbrjC,GAAU6jC,IAAcG,KACxB3+B,EAAMsd,kBACC,KArII9oB,EA2InB4qC,YAAc,SAAAp/B,GACVA,EAAMsd,iBAEN,IAAMsf,EAAOpoC,EAAKqtC,YAAY3f,QACxBsc,EAAY5B,EAAK2B,QAAQC,UAEzBpB,EAAY1+B,OAAO2+B,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAYvB,EAAKuB,UACvB,KAAIA,EAAUxjC,OAASyiC,EAAUziC,QAAU6jC,GAA3C,CAEA,IAAIc,EAAYt/B,EAAMu/B,cAAcC,QAAQ,cACvCF,IAEDnB,EAAUxjC,OAAS0kC,EAAgB1kC,OAAS2kC,EAAU3kC,OAAS6jC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAUxjC,OAAS0kC,EAAgB1kC,SAEnFlB,SAASkmC,YAAY,cAAc,EAAOL,MA7J3B9qC,EAgKnB8pC,YAAc,SAAAt+B,GACVA,EAAMsd,iBAEN,IAAMsf,EAAOpoC,EAAKqtC,YAAY3f,QAGxBic,EAAYvB,EAAKuB,UAGL,SAFAvB,EAAKuF,YAGnBvF,EAAKuB,UAAY,IAOrB3nC,KAAgBgH,aAAa,CACzBC,QAAS,2BACTigB,SAAUygB,KAnLC3pC,EAuLnB4tC,gBAAkB,WAAM,IACZxlB,EAASpoB,EAAKskB,MAAd8D,KACR,GAAKA,KAEeA,EAAZe,QACIhjB,QAAU0nC,MAAtB,CAEA,IAAM3nB,EAAS,CACXrjB,GAAI+V,KAAKI,MACT6E,KAAM,IAGV7b,KAAgBgH,aAAa,CACzBC,QAAS,4BACTid,aArMWlmB,EAyMnB8tC,mBAAqB,SAACjrC,GAA0BhB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GAExC7B,EAAK+tC,wBAAwBlrC,GAE7B7C,EAAK4pC,aAAa/mC,IA7MP7C,EAiNnB4pC,aAAe,SAAA/mC,GACXb,KAAgBgH,aAAa,CACzBC,QAAS,+BACTpG,QApNW7C,EAwNnB+tC,wBAA0B,SAAAlrC,GAAM,IACpBulB,EAASpoB,EAAKskB,MAAd8D,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBe,EAAYf,EAAZe,QAEFzW,EAAQyW,EAAQ+I,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOA,IACxCmrC,EAAYt7B,EAAQ,EACtBu7B,GAAe,EACVhoC,EAAIyM,EAAOzM,EAAIkjB,EAAQhjB,OAAQF,IAAK,CAEzC,GADiBkjB,EAAQljB,GAAjB4X,KACE,CACNowB,GAAe,EACf,OAIJA,GACAjuC,EAAK8tC,mBAAmBjrC,GAG5B,IAAMqrC,EAAWluC,EAAKwtC,cAAcpqC,IAAI4qC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgBnoC,EAAKqtC,YAAY3f,SAEd,KAjPR1tB,EAwPnBmuC,sBAAwB,SAAAtrC,GAAM,IAClBulB,EAASpoB,EAAKskB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAOpB4lB,EAHc5lB,EAAZe,QAEc+I,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOA,IACpB,EAEpBqrC,EAAWluC,EAAKwtC,cAAcpqC,IAAI4qC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgBnoC,EAAKqtC,YAAY3f,SAEd,KArQR1tB,EA4QnB0tC,sBAAwB,SAAA7qC,GAAM,IAClBulB,EAASpoB,EAAKskB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAIlBe,EAAYf,EAAZe,QAEFzW,EAAQyW,EAAQ+I,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOA,IACxCwvB,EAAY3f,EAAQ,EAEpB07B,EAAWpuC,EAAKwtC,cAAcpqC,IAAIivB,GACxC,GAAK+b,EAULA,EAASlF,MAAMkF,GAAU,OAVzB,CACI,IAAMvwB,EAAOnL,GAAS,GAAKA,EAAQyW,EAAQhjB,OAASgjB,EAAQzW,GAAOmL,KAAO,GAC1E,GAAIsL,EAAQhjB,SAAW0X,EACnB,OAGJ7d,EAAK4tC,qBA5RM5tC,EAmSnBquC,QAAU,WAAM,IACJjmB,EAASpoB,EAAKskB,MAAd8D,KACR,GAAKA,EAAL,CAFY,IAIJe,EAAYf,EAAZe,QAEFmlB,EAAWT,KAAyB1kB,EAAQhjB,OAElD,OAAImoC,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAAnjC,OAAsB0iC,KAAyB1kB,EAAQhjB,OAAvD,oBAlTenG,EAqTnBuuC,YAAc,YF9UX,SAAqBnmB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,QAAID,GAEGC,EAAQxd,KAAK,SAAAC,GAAC,OAAIwR,QAAQxR,EAAEiS,QE2U3B2wB,CAFaxuC,EAAKskB,MAAd8D,MAKJpoB,EAAKyuC,yBAFLzuC,EAAK4kB,SAAS,CAAEsoB,SAAS,KAzTdltC,EA+TnB0uC,WAAa,WAAM,IACPC,EAAW3uC,EAAK0f,MAAhBivB,OAEFC,EAAmBhC,GAAUiC,sBAC9BD,IAELD,EAAOC,GAEP5uC,EAAKyuC,2BAvUUzuC,EA0UnB8uC,wBAA0B,WACtB9uC,EAAK4kB,SAAS,CAAEsoB,SAAS,KA3UVltC,EA8UnByuC,uBAAyB,WACrBzuC,EAAK8uC,0BAEL9sC,KAAgBgH,aAAa,CACzBC,QAAS,4BA/UbjJ,EAAKqtC,YAAcjtB,IAAMogB,YACzBxgC,EAAKwtC,cAAgB,IAAInkC,IAEzBrJ,EAAKskB,MAAQ,CACT8D,KAAM,KACN8kB,SAAS,EACTjD,aAAckD,MATHntC,mFAcf4sC,GAAUhrB,GAAG,yBAA0BzhB,KAAKmtC,wBAC5CV,GAAUhrB,GAAG,+BAAgCzhB,KAAKmtC,wBAClDV,GAAUhrB,GAAG,sBAAuBzhB,KAAK8sC,2BACzCL,GAAUhrB,GAAG,4BAA6BzhB,KAAKotC,iCAC/CX,GAAUhrB,GAAG,yBAA0BzhB,KAAKmtC,wBAC5CV,GAAUhrB,GAAG,2BAA4BzhB,KAAKitC,+EAI9CR,GAAUzqC,eAAe,yBAA0BhC,KAAKmtC,wBACxDV,GAAUzqC,eAAe,+BAAgChC,KAAKmtC,wBAC9DV,GAAUzqC,eAAe,sBAAuBhC,KAAK8sC,2BACrDL,GAAUzqC,eAAe,4BAA6BhC,KAAKotC,iCAC3DX,GAAUzqC,eAAe,yBAA0BhC,KAAKmtC,wBACxDV,GAAUzqC,eAAe,2BAA4BhC,KAAKitC,2EA4C3C/nB,EAAWC,EAAWC,GAAU,IAAA5a,EAAAxK,KAC9BA,KAAKmkB,MAAd8D,OAEK9C,EAAU8C,MACnBuR,WAAW,WACPwO,GAAUx9B,EAAK0iC,YAAY3f,SAAS,IACrC,oCAwQF,IAAAqhB,EAAA5uC,KAAAsf,EACkBtf,KAAKuf,MAApBmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EADZ6M,EAEmClkB,KAAKmkB,MAArC2lB,EAFH5lB,EAEG4lB,aAAciD,EAFjB7oB,EAEiB6oB,QAAS9kB,EAF1B/D,EAE0B+D,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAMe,EAAUf,EAAOA,EAAKe,QAAU,GAEtChpB,KAAKqtC,cAAcluB,QACnB,IAAMnc,EAAQgmB,EAAQxb,IAAI,SAAC/B,EAAG3F,GAAJ,OACtB+Z,EAAArf,EAAAkM,cAACmiC,GAAD,CACInO,IAAK,SAAAoO,GAAE,OAAIF,EAAKvB,cAAcpsC,IAAI6E,EAAGgpC,IACrCx3B,IAAK7L,EAAE/I,GACPqjB,OAAQta,EACRi+B,SAAUkF,EAAKjB,mBACfpD,YAAaqE,EAAKZ,sBAClB9D,YAAa0E,EAAKrB,0BAIpBwB,EAAerB,KAAyB1kB,EAAQhjB,OAAS,EACzD81B,EAAO97B,KAAKkuC,UAElB,OACIruB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACIsf,UAAWY,EAAQsuB,WACnB/kC,MAAI,EACJogB,mBAAoB,EACpBX,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,gBAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,gBAAgB2U,EAAE,YAClCwI,EAAArf,EAAAkM,cAAC8d,EAAAhqB,EAAD,CAAekgB,QAAS,CAAEgC,KAAMhC,EAAQuuB,cACpCpvB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,qCACXD,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,UAAU0E,QAAQ,YAAYja,MAAO,CAAEwiC,SAAU,IAC9D93B,EAAE,aAENyyB,GAAgBuC,KAAuB+C,MACpCvvB,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAO4nB,GAAgB,EAAI,gBAAkB,QAASljB,QAAQ,aACrEkjB,IAIbjqB,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKktC,YACVxqC,GAAG,8BACHwoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa/zB,EAAE,gBACfg0B,cAAagB,KACbd,kBAAiByB,KACjBtB,QAAS1rC,KAAKyqC,YACdgB,UAAWzrC,KAAK+pC,cAChByB,QAASxrC,KAAK2pC,cAElB9pB,EAAArf,EAAAkM,cAAC2iC,GAAA7uC,EAAD,CAASsf,UAAWY,EAAQ4uB,cAC5BzvB,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,UAAU0E,QAAQ,aAC/BvP,EAAE,gBAEPwI,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,CAAMkgB,QAAS,CAAEgC,KAAMhC,EAAQ8uB,WAC1BxsC,EACA+rC,GACGlvB,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CACIye,UAAU,EACVa,UAAWY,EAAQgvB,SACnBC,QAAM,EACN3vB,QAAShgB,KAAKytC,iBACd5tB,EAAArf,EAAAkM,cAACo7B,EAAAtnC,EAAD,CAAcovC,mBAAiB,EAAC1Q,QAAS7nB,EAAE,mBAIvDwI,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,KAAas7B,IAEjBjc,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAKouC,aACjC/2B,EAAE,WAEN+0B,GAAYnkB,IACTpI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAKuuC,YACjCl3B,EAAE,WAKnBwI,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACIsf,UAAWY,EAAQsuB,WACnB/kC,KAAM8iC,EACN1iB,mBAAoB,EACpBX,QAAS1pB,KAAK2uC,wBACdrkB,kBAAgB,gBAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,gBAAgB2U,EAAE,yBAClCwI,EAAArf,EAAAkM,cAAC8d,EAAAhqB,EAAD,CAAekgB,QAAS,CAAEgC,KAAMhC,EAAQuuB,cAAgB53B,EAAE,wBAC1DwI,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAK2uC,yBACjCt3B,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAKsuC,wBACjCj3B,EAAE,iBAvbA4I,IAAMC,YA2ctB4G,GAPCC,YACZilB,eACA9qB,IA3dW,SAAAC,GAAK,MAAK,CACrB6tB,WAAY,CACR9sB,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,SAE9B+P,YAAa,CACTz/B,MAAO,KAEX8/B,YAAa,CACTroB,OAAQ,aAEZuoB,SAAU,CACNvoB,OAAQ,WAEZyoB,SAAU,CACNnsB,QAAS,YACTrB,MAAO,UACPxS,OAAQ,IAEZmgC,eAAgB,MA0chBtoB,cACA4kB,eAGWrlB,CAAQ+lB,mCC1ejBiD,sNACF1B,YAAc,WACVvsC,KAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQnH,EAAK0f,MAAMvY,OACnBC,UAAW,6EAIV,IAAAqY,EACkCtf,KAAKuf,MAApCmB,EADHpB,EACGoB,QAAS1Z,EADZsY,EACYtY,OAAQC,EADpBqY,EACoBrY,UACzB,OAAKD,GACAC,EAGD4Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BACXD,EAAArf,EAAAkM,cAACqjC,GAAAvvC,EAAD,CAAWsf,UAAWY,EAAQsvB,aAElCnwB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iCACXD,EAAArf,EAAAkM,cAACujC,GAAA,EAAD,CAAOjpC,OAAQA,EAAQC,UAAWA,KAEtC4Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQwvB,gBAAiB7I,aAAW,QAAQrnB,QAAShgB,KAAKouC,aAC7EvuB,EAAArf,EAAAkM,cAACi/B,GAAAnrC,EAAD,SAbI,YAXCyf,IAAMC,YAqCpBgB,OA/CA,SAAAC,GAAK,MAAK,CACrB6uB,UAAW,CACPzsB,QAAS,GACTrB,MAAOf,EAAM8d,QAAQ1pB,OAAO0sB,QAEhCiO,gBAAiB,CACbjpB,OAAQ,KAyCD/F,CAAmB4uB,IC1BnBK,cA3BX,SAAAA,EAAYnpC,GAASlH,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAmwC,GACjBnwC,KAAKgH,OAASA,EACdhH,KAAKowC,WAAa,2DAGZ76B,GACN,GAAKvV,KAAKgH,OAAV,CAEA,GAAIhH,KAAKowC,YAAcpwC,KAAKowC,WAAW,WAAa76B,EAAO,SAAU,CACjE,IAAIsD,EAAM,IAAIJ,KAEd,GADAI,EAAIw3B,WAAWx3B,EAAIy3B,aAAeC,OAC9BvwC,KAAKwwC,gBAAkBxwC,KAAKwwC,eAAiB33B,EAC7C,OAIR7Y,KAAKowC,WAAa76B,EAClBvV,KAAKwwC,eAAiB,IAAI/3B,KAE1B5W,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASpG,KAAKgH,OACduO,OAAQA,wECKdk7B,WAAoBxwB,IAAMywB,KAAK,kBAAM/mC,QAAAgnC,IAAA,CAAA5yB,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA/e,KAAA4S,EAAA6yB,KAAA,cAYrCC,eACF,SAAAA,EAAYtxB,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA6wC,IACfhxC,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+wC,GAAA1wC,KAAAH,KAAMuf,KAgEVuxB,0BAA4B,SAAAnwC,GAAU,IACjB0C,EAAS1C,EAAlByE,QACR,GAAK/B,EAAL,CAFkC,IAI1B+B,EAAsC/B,EAAtC+B,QAASqB,EAA6BpD,EAA7BoD,UAAW+I,EAAkBnM,EAAlBmM,MAAOE,EAAWrM,EAAXqM,OACnC,GAAKtK,EAAL,CAEAvF,EAAKkxC,cAAcxjB,QAAQic,UAAY,KACvC3pC,EAAKkxC,cAAcxjB,QAAQsC,YAAc,KACzChwB,EAAK2tC,UAAY,KAEjB,IAAMjpC,EAAU,CACZuE,QAAS,sBACT1D,QAAS,CACL0D,QAAS,cACTpG,GAAI0C,EAAQ1C,IAEhB8M,QACAE,UAGJ,GAAIjJ,EAAW,KACIuqC,EAAmDvqC,EAA1D+I,MAA+ByhC,EAA2BxqC,EAAnCiJ,OAAyB9K,EAAU6B,EAAV7B,MAExDL,EAAQkC,UAAY,CAChBA,UAAW,CACPqC,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd8M,MAAOwhC,EACPthC,OAAQuhC,GAIhBpxC,EAAKqxC,eAAe3sC,GAAS,EAAM,SAAA4F,MAEnCtI,KAAgBgH,aAAa,CACzBC,QAAS,gCACTgzB,KAAM,UAvGKj8B,EA2GnBsxC,oBAAsB,SAAAxwC,GAAU,IACZywC,EAAkBvxC,EAAKskB,MAA/Bnd,OACAA,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEZmqC,IAAkBpqC,IAItBnH,EAAK4kB,SAAS,CAAE7G,iBAAkB3W,IAE9BA,GACApH,EAAKwxC,kBAtHMxxC,EA0HnByxC,qBAAuB,SAAA3wC,GACAd,EAAKskB,MAAhBnd,SACOrG,EAAO4wC,aAEtB1xC,EAAK2tC,UAAY,KACjB3tC,EAAK4kB,SAAS,CACVzd,OAAQrG,EAAO4wC,WACf3zB,iBAAkBD,aAA6Bhd,EAAO4wC,YACtDC,iBAAiB,MAlIN3xC,EAsInB4xC,SAAW,WAAM,IACLzqC,EAAWnH,EAAKskB,MAAhBnd,OAEF0qC,EAAU7xC,EAAKkxC,cAAcxjB,QAE7BokB,EAAQn0B,aAAaxW,GACvB2qC,GACAD,EAAQlI,UAAYmI,EAAMj0B,KAC1B7d,EAAK2tC,UAAYmE,EAAMj0B,OAEvBg0B,EAAQlI,UAAY,KACpB3pC,EAAK2tC,UAAY,OAjJN3tC,EAsKnBwxC,cAAgB,WACZ7X,WAAW,WACP,GAAI35B,EAAKkxC,cAAcxjB,QAAS,CAC5B,IAAMmkB,EAAU7xC,EAAKkxC,cAAcxjB,QAEnC,GAAImkB,EAAQvJ,WAAWniC,OAAS,EAAG,CAC/B,IAAMqiC,EAAQvjC,SAASwjC,cACvBD,EAAME,SAASmJ,EAAQvJ,WAAW,GAAIuJ,EAAQvJ,WAAW,GAAGniC,QAC5DqiC,EAAMG,UAAS,GAEf,IAAMC,EAAY1+B,OAAO2+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBqJ,EAAQ3I,UAEb,MAtLYlpC,EAyLnB+xC,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9B7qC,EAAyB6qC,EAAzB7qC,OAAQ8qC,EAAiBD,EAAjBC,aACX9qC,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,sBACT1C,QAASY,EACT4M,cAAek+B,MAlMJjyC,EAsMnBkyC,uBAAyB,SAAC/qC,EAAQ4W,GAC9B,IAAI7Z,EAAO6O,KAAU3P,IAAI+D,GACzB,GAAKjD,EAAL,CACA,IAAMiuC,EAAWnyC,EAAKoyC,eAElBC,EAAgB,GAChBC,EAA2B,EACvBv+B,EAAkB7P,EAAlB6P,cACR,GAAIA,GAAiBA,EAAc6J,oBAAsB7J,EAAc6J,mBAAmBC,KAAM,KACpFtM,EAA4CwC,EAA5CxC,oBAAqBqM,EAAuB7J,EAAvB6J,mBAE7B00B,EAA2B/gC,EACvBqM,GAAsBA,EAAmBC,OACzCw0B,EAAgBz0B,EAAmBC,KAAKA,MAIhD,OAAIs0B,IAAaE,GAAiBt0B,IAAqBu0B,EAgB5C,CAAEnrC,OAAQA,EAAQ8qC,aAfJ,CACjBhpC,QAAS,eACTsI,oBAAqBwM,EACrBH,mBAAoB,CAChB3U,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMs0B,EACN7mB,SAAU,MAEdinB,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQxyC,EA6OnByyC,aAAe,WACX,IAAI50B,EAAO7d,EAAKoyC,eAOhB,GALApyC,EAAKkxC,cAAcxjB,QAAQic,UAAY,KACvC3pC,EAAKkxC,cAAcxjB,QAAQsC,YAAc,KACzChwB,EAAK2tC,UAAY,KACjB3tC,EAAK8pC,cAEAjsB,EAAL,CAEA,IAAMnZ,EAAU,CACZuE,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNyN,SAAU,MAEdinB,0BAA0B,EAC1BC,aAAa,GAGjBxyC,EAAKqxC,eAAe3sC,GAAS,EAAO,SAAA4F,QAlQrBtK,EAqQnBonC,iBAAmB,WACfplC,KAAgBgH,aAAa,CACzBC,QAAS,yBAvQEjJ,EA2QnBgnC,kBAAoB,WACXhnC,EAAK0yC,gBAEV1yC,EAAK0yC,eAAehlB,QAAQrgB,SA9QbrN,EAiRnB2yC,0BAA4B,WACxB,IAAIC,EAAQ5yC,EAAK0yC,eAAehlB,QAAQklB,MACnB,IAAjBA,EAAMzsC,SAEV0sC,MAAMruB,KAAKouB,GAAOrvC,QAAQ,SAAAlC,GACtByxC,aAAczxC,EAAM,SAAAiJ,GAChBtK,EAAK+yC,gBAAgBzoC,OAI7BtK,EAAK0yC,eAAehlB,QAAQjY,MAAQ,KA3RrBzV,EA8RnBknC,qBAAuB,WACdlnC,EAAKgzC,mBAEVhzC,EAAKgzC,kBAAkBtlB,QAAQrgB,SAjShBrN,EAoSnBizC,6BAA+B,WAC3B,IAAIL,EAAQ5yC,EAAKgzC,kBAAkBtlB,QAAQklB,MACtB,IAAjBA,EAAMzsC,SAEV0sC,MAAMruB,KAAKouB,GAAOrvC,QAAQ,SAAAlC,GACtBrB,EAAKkzC,mBAAmB7xC,KAG5BrB,EAAKgzC,kBAAkBtlB,QAAQjY,MAAQ,KA5SxBzV,EA0TnBmzC,YAAc,WAAM,IACRhsC,EAAWnH,EAAKskB,MAAhBnd,OAER,IAAIyT,aAASzT,GAAb,CAEA,IAAMjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAMylC,EAAY3pC,EAAKkxC,cAAcxjB,QAAQic,UACvCgE,EAAY3tC,EAAKkxC,cAAcxjB,QAAQigB,UAM7C,GAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE3tC,EAAKkxC,cAAcxjB,QAAQigB,UAAY,IAGtChE,GAEiBzlC,EAAKosC,sBAAwBpsC,EAAKosC,oBAAsB,IAAIA,GAAoBpsC,EAAKrB,MAE7FuwC,UAAU,CAAEnqC,QAAS,wBA7UpBjJ,EAgVnBkqC,cAAgB,SAAA7f,GACMrqB,EAAKkxC,cAAcxjB,QAAQic,UAA7C,IACMgE,EAAY3tC,EAAKkxC,cAAcxjB,QAAQigB,UAC7C3tC,EAAK2tC,UAAYA,EAEH,UAAVtjB,EAAE5S,KAAoB4S,EAAEojB,WACxBpjB,EAAEvB,iBACF9oB,EAAKyyC,iBAvVMzyC,EA2VnB+yC,gBAAkB,SAAA1xC,GACd,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,oBACTlE,MAAO,CAAEkE,QAAS,gBAAiBoqC,KAAMhyC,EAAKgyC,KAAMjoC,KAAM/J,GAC1DsO,MAAOtO,EAAKiyC,WACZzjC,OAAQxO,EAAKkyC,aAGjBvzC,EAAKqxC,eAAe3sC,GAAS,EAAM,SAAA4F,GAC/B,IAAMkpC,EAAgB5lC,KAAaxK,IAAIkH,EAAO/D,QAAS+D,EAAOzH,IACzC,MAAjB2wC,GACAxzC,EAAKyzC,qBAAqBD,EAAenyC,GAG7CtB,KAAU2zC,WAAWppC,EAAO5F,QAAQK,MAAMmB,MAAM,GAAGnB,MAAMlC,GAAIyH,OA3WlDtK,EA+WnB2zC,eAAiB,SAAAvrB,GACbpoB,EAAKqxC,eAAejpB,GAAM,EAAM,eAhXjBpoB,EAmXnBkzC,mBAAqB,SAAA7xC,GACjB,GAAKA,EAAL,CAEA,IAAMqD,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiBoqC,KAAMhyC,EAAKgyC,KAAMjoC,KAAM/J,IAGjErB,EAAKqxC,eAAe3sC,GAAS,EAAM,SAAA4F,GAAM,OAAIvK,KAAU2zC,WAAWppC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OA3XxFtK,EA8XnB4qC,YAAc,SAAAp/B,GAIV,IAHA,IAAMrI,GAASqI,EAAMu/B,eAAiBv/B,EAAMooC,cAAc7I,eAAe5nC,MAEnEyvC,EAAQ,GACL3sC,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IACQ,IAAlC9C,EAAM8C,GAAG4tC,KAAKC,QAAQ,SACtBlB,EAAMjpC,KAAKxG,EAAM8C,GAAG8tC,aAI5B,GAAInB,EAAMzsC,OAAS,EAKf,OAJAqF,EAAMsd,iBAEN9oB,EAAK4yC,MAAQA,OACb5yC,EAAK4kB,SAAS,CAAE+sB,iBAAiB,IAIrC,IAAMqC,EAAYxoC,EAAMu/B,cAAcC,QAAQ,cAC9C,OAAIgJ,GACAxoC,EAAMsd,iBACN7jB,SAASkmC,YAAY,cAAc,EAAO6I,QAC1Ch0C,EAAK2tC,UAAYqG,SAHrB,GAjZeh0C,EAyZnBi0C,oBAAsB,WAClBj0C,EAAKk0C,mBAEL,IAAMtB,EAAQ5yC,EAAK4yC,MACdA,GACAA,EAAMzsC,SAEXysC,EAAMrvC,QAAQ,SAAAlC,GACVrB,EAAKkzC,mBAAmB7xC,KAG5BrB,EAAK4yC,MAAQ,OApaE5yC,EAuanBk0C,iBAAmB,WACfl0C,EAAK4kB,SAAS,CAAE+sB,iBAAiB,KAxalB3xC,EA2anByzC,qBAAuB,SAAChvC,EAAS6D,GAC7B,GAAI7D,GAAWA,EAAQwa,eAAoD,+BAAnCxa,EAAQwa,cAAc,UACtDxa,EAAQC,SAAwC,iBAA7BD,EAAQC,QAAQ,UAA+BD,EAAQC,QAAQK,MAAO,CACzF,IAAIqH,EAAO8D,aAAQzL,EAAQC,QAAQK,MAAMmB,MAAOkM,MAChD,IAAKhG,EAAM,OAEX,IAAI/K,EAAO+K,EAAKrH,MACZ1D,GAAQA,EAAK0B,OAAS1B,EAAK0B,MAAMG,2BAA6B7B,EAAKiH,OACnEjH,EAAKiH,KAAOA,EACZvI,KAAUuG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIxB,EAAKwB,OApbzD7C,EA0bnBqxC,eA1bmB,eAAA7wC,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA0bF,SAAAC,EAAO6D,EAAS0vC,EAAY5qC,GAA5B,IAAA6a,EAAAld,EAAA4W,EAAAzT,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAmjB,EACwBrkB,EAAKskB,MAAlCnd,EADKkd,EACLld,OAAQ4W,EADHsG,EACGtG,iBAEX5W,EAHQ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOHqX,KAAiB87B,sBAAjB,mCAAAlpC,OAA0EhE,IAPvE,cAAAnG,EAAAE,KAAA,GASUc,KAAgBgJ,KAAK,CACpC/B,QAAS,cACT1C,QAASY,EACToK,oBAAqBwM,EACrBu2B,sBAAuB5vC,IAblB,QASL4F,EATKtJ,EAAAkK,KAgBTlL,EAAK4kB,SAAS,CAAE7G,iBAAkB,GAAK,WACnC,GAAIq2B,EAAY,CACZ,IAAMG,EAAsBv0C,EAAKkyC,uBAC7BlyC,EAAKskB,MAAMnd,OACXnH,EAAKskB,MAAMvG,kBAEf/d,EAAK+xC,oBAAoBwC,MAKjCvyC,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAASY,EACT4E,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAjCAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SAmCTwzC,MAAM,qBAAuBC,KAAKC,UAAL1zC,EAAAG,KAnCpB,yBAAAH,EAAAU,SAAAb,EAAA,kBA1bE,gBAAAc,EAAAc,EAAAuwB,GAAA,OAAAxyB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAienB20C,kBAAoB,SAAA7mB,GACXA,IAEL9tB,EAAKkxC,cAAcxjB,QAAQic,WAAa7b,EAAM8mB,OAC9C50C,EAAK8pC,gBAreU9pC,EAwenB8pC,YAxemB,eAAA1nC,EAAAnC,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAweL,SAAAyB,EAAMmJ,GAAN,IAAAm+B,EAAAxoC,EAAA0zC,EAAAC,EAAAC,EAAAhjB,EAAA,OAAA1C,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACJyoC,EAAY3pC,EAAKkxC,cAAcxjB,QAAQic,cAC3BA,EAAUxjC,OAAS,IAF3B,CAAA7D,EAAApB,KAAA,eAGWw6B,KAATO,MAEJj6B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTgzB,KAAM,OAPR35B,EAAAd,OAAA,oBAcJL,EAAK6zC,YAAYh8B,MACjB67B,EAAQxkB,MACVykB,EAAQD,EAAMvkB,KAAKqZ,GACjBoL,EAAKC,YAAYh8B,MACvBnV,QAAQ4F,IAAI,YAAcsrC,EAAK5zC,GAAM,KAAM2zC,GACtCA,GAASnL,IAAcmL,EAAM,GAnBxB,CAAAxyC,EAAApB,KAAA,gBAoBWw6B,KAATO,MAEJj6B,KAAgBgH,aAAa,CACzBC,QAAS,gCACTgzB,KAAM,OAxBR35B,EAAAd,OAAA,kBA+BJuwB,EAAYnZ,KAAKI,MACvBhX,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT6kB,MAAOgnB,EAAM,GACb/hB,MAAO,MACRznB,KAAK,SAAA6I,GACJnS,KAAgBgH,aAAa,CACzBC,QAAS,gCACTgzB,KAAM,CACFlK,YACAjE,MAAOgnB,EAAM,GACb3gC,gBAKZnS,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT6kB,MAAOgnB,EAAM,GACb/hB,MAAO,MACRznB,KAAK,SAAA6I,GACJnS,KAAgBgH,aAAa,CACzBC,QAAS,iCACTgzB,KAAM,CACFlK,YACAjE,MAAOgnB,EAAM,GACb3gC,gBAzDF,yBAAA7R,EAAAZ,SAAAW,MAxeK,gBAAAgJ,GAAA,OAAAjJ,EAAAR,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKgzC,kBAAoB5yB,IAAMogB,YAC/BxgC,EAAK0yC,eAAiBtyB,IAAMogB,YAC5BxgC,EAAKkxC,cAAgB9wB,IAAMogB,YAE3B,IAAMr5B,EAASoR,KAAiB08B,YAPjB,OASfj1C,EAAK2tC,UAAY,KACjB3tC,EAAKskB,MAAQ,CACTnd,OAAQA,EACR4W,iBAAkBD,aAA6B3W,GAC/CwqC,iBAAiB,GAbN3xC,qFAiBGilB,EAAWC,GAAW,IAAAzF,EACnBtf,KAAKuf,MAAlB4B,EADgC7B,EAChC6B,MAAO9J,EADyBiI,EACzBjI,EADyB0rB,EAEc/iC,KAAKmkB,MAAnDnd,EAFgC+7B,EAEhC/7B,OAAQ4W,EAFwBmlB,EAExBnlB,iBAAkB4zB,EAFMzO,EAENyO,gBAElC,OAAI1sB,EAAU3D,QAAUA,IAIpB2D,EAAUzN,IAAMA,IAIhB0N,EAAU/d,SAAWA,IAIrB+d,EAAUnH,mBAAqBA,GAI/BmH,EAAUysB,kBAAoBA,iDAUlCp5B,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,sBAC/C7jC,KAAagU,GAAG,oBAAqBzhB,KAAKmxC,qBAC1C5V,KAAa9Z,GAAG,0BAA2BzhB,KAAK8wC,2BAEhD9wC,KAAKqxC,gBACLrxC,KAAKyxC,WACLzxC,KAAK2pC,6DAIL,IAAMyK,EAAsBp0C,KAAK+xC,uBAAuB/xC,KAAKmkB,MAAMnd,OAAQhH,KAAKmkB,MAAMvG,kBACtF5d,KAAK4xC,oBAAoBwC,GAEzBh8B,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,sBAC3D7jC,KAAazL,eAAe,oBAAqBhC,KAAKmxC,qBACtD5V,KAAav5B,eAAe,0BAA2BhC,KAAK8wC,sEAuF7C5rB,EAAWC,EAAWC,GAErCplB,KAAK4xC,oBAAoBxsB,GAErBD,EAAUne,SAAWhH,KAAKmkB,MAAMnd,SAChChH,KAAKqxC,gBACLrxC,KAAKyxC,WACLzxC,KAAK2pC,+DAIWzkB,EAAWC,GAC/B,OAAIA,EAAUne,SAAWhH,KAAKmkB,MAAMnd,OAAe,KAE5ChH,KAAK+xC,uBAAuB5sB,EAAUne,OAAQme,EAAUvH,yDA6I/D,IAAI4rB,EAAYxpC,KAAK+wC,cAAcxjB,QAAQic,UACvCgE,EAAYxtC,KAAK+wC,cAAcxjB,QAAQigB,UAM3C,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzExtC,KAAK+wC,cAAcxjB,QAAQigB,UAAY,IAGpChE,mCAgPF,IAAA/oB,EACkBzgB,KAAKuf,MAApBmB,EADHD,EACGC,QAASrJ,EADZoJ,EACYpJ,EADZ2rB,EAEiDhjC,KAAKmkB,MAAnDnd,EAFHg8B,EAEGh8B,OAAQ4W,EAFXolB,EAEWplB,iBAAkB4zB,EAF7BxO,EAE6BwO,gBAE5BjtC,EAA6B,OAAnBvE,KAAKwtC,UAAqBxtC,KAAKwtC,UAAY,KAE3D,OACI3tB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,aAC5C3G,EAAArf,EAAAkM,cAACqoC,GAAD,CAAgB/tC,OAAQA,EAAQC,UAAW2W,IAC3CiC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAACmT,EAAArf,EAAMw0C,SAAP,CACIC,SACIp1B,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQ0mB,WAAYC,aAAW,YAClDxnB,EAAArf,EAAAkM,cAACwoC,EAAA10C,EAAD,QAGRqf,EAAArf,EAAAkM,cAAC+jC,GAAD,CAAmBvV,SAAUl7B,KAAKw0C,sBAG1C30B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BACXD,EAAArf,EAAAkM,cAAA,OACIhK,GAAG,mBACHg+B,IAAK1gC,KAAK+wC,cACVz5B,IAAK,IAAImB,KACT2yB,YAAa/zB,EAAE,WACf6zB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWzrC,KAAK+pC,cAChBoL,QAASn1C,KAAKgzC,YACdtH,QAAS1rC,KAAKyqC,YACde,QAASxrC,KAAK2pC,aACbplC,IAGTsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,yBACXD,EAAArf,EAAAkM,cAAA,SACIg0B,IAAK1gC,KAAK6yC,kBACV/yB,UAAU,yBACVlO,KAAK,OACLwjC,SAAS,WACT7yB,SAAUviB,KAAK8yC,+BAEnBjzB,EAAArf,EAAAkM,cAAA,SACIg0B,IAAK1gC,KAAKuyC,eACVzyB,UAAU,yBACVlO,KAAK,OACLwjC,SAAS,WACTC,OAAO,UACP9yB,SAAUviB,KAAKwyC,4BAEnB3yB,EAAArf,EAAAkM,cAAC4oC,GAAD,CACItuC,OAAQA,EACR8/B,cAAe9mC,KAAK6mC,kBACpBG,iBAAkBhnC,KAAK+mC,qBACvBG,aAAclnC,KAAKinC,mBAMvBpnB,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACI0hB,MAAM,UACNpC,UAAWY,EAAQ0mB,WACnBC,aAAW,OACXrnB,QAAShgB,KAAKsyC,cACdzyB,EAAArf,EAAAkM,cAAC6oC,EAAA/0C,EAAD,WAKdkb,aAAc1U,IAAW6Y,EAAArf,EAAAkM,cAAC8oC,GAAD,CAAkBhH,OAAQxuC,KAAKwzC,iBAC1D3zB,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAMunC,EACN9nB,QAAS1pB,KAAK+zC,iBACdzpB,kBAAgB,uBAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,uBAAuB2U,EAAE,YACzCwI,EAAArf,EAAAkM,cAAC8d,EAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+d,EAAAjqB,EAAD,KACKR,KAAKyyC,OAASzyC,KAAKyyC,MAAMzsC,OAAS,EAC7B,uCACA,wCAGd6Z,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAK+zC,iBAAkB7xB,MAAM,WACzC7K,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAK8zC,oBAAqB5xB,MAAM,WAC5C7K,EAAE,iBAnoBD6I,aAipBf4G,GALCC,YACZ7F,IAvpBW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBsnC,WAAY,CACRngB,OAAQ,SAEZipB,gBAAiB,CACbjpB,OAAQ,IAETI,aAAYlG,KAgpBI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQ+pB,yBC7qBjB4E,4LACO,IAAAn2B,EACmCtf,KAAKuf,MAArCmB,EADHpB,EACGoB,QAASiL,EADZrM,EACYqM,QAAS+pB,EADrBp2B,EACqBo2B,UAE1B,OACI71B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BACXD,EAAArf,EAAAkM,cAACipC,GAAAn1C,EAAD,CAAQ0hB,MAAM,UAAUpC,UAAWY,EAAQivB,OAAQ3vB,QAAS01B,GACvD/pB,YARG1L,IAAMC,YAgBnBgB,OAxBA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChB6vC,OAAQ,CACJ1oB,OAAQ,OACRglB,SAAU,UAEX5kB,aAAYlG,KAmBJD,CAAmBu0B,ICTnBG,eAjBX,SAAAA,EAAYr2B,GAAO,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA41C,GAAA91C,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA81C,GAAAz1C,KAAAH,KACTuf,0EAGD,IAECoM,EADc3rB,KAAKmkB,MAAjBwhB,QACkB,SAAW,OAErC,OACI9lB,EAAArf,EAAAkM,cAACmpC,GAAD,CACIlqB,QAASA,EACT+pB,UAAW11C,KAAK8lC,2CAZUL,uBCOpCqQ,uBACF,SAAAA,EAAYv2B,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA81C,IACfj2C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAg2C,GAAA31C,KAAAH,KAAMuf,KAqBVw2B,mBAAqB,SAAAp1C,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OAEJqV,aAAgBrV,EAAQrG,EAAO65B,YAAY93B,KAC3C7C,EAAK2hB,eA1BM3hB,EA8BnBm2C,mBAAqB,SAAAr1C,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OAEJyV,aAAgBzV,EAAQrG,EAAOqZ,WAAWtX,KAC1C7C,EAAK2hB,eAlCM3hB,EAsCnBo2C,WAAa,WAAM,IACPjvC,EAAWnH,EAAK0f,MAAhBvY,OACHA,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,KA5CEnH,EAgDnBq2C,oBAAsB,WAAM,IAChBlvC,EAAWnH,EAAK0f,MAAhBvY,OACHA,GAELnF,KAAgBgJ,KAAK,CACjB/B,QAAS,oBACT1C,QAASY,EACTmvC,uBAAuB,KAvDZt2C,qFAIGilB,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,mDAQpCuS,KAAgBkI,GAAG,mBAAoBzhB,KAAK+1C,oBAC5C97B,KAAgBwH,GAAG,mBAAoBzhB,KAAKg2C,mEAI5Cz8B,KAAgBvX,eAAe,mBAAoBhC,KAAK+1C,oBACxD97B,KAAgBjY,eAAe,mBAAoBhC,KAAKg2C,qDA8CnD,IACGhvC,EAAWhH,KAAKuf,MAAhBvY,OACFjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAM0H,EAAaC,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAOoG,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,yBACD,OAAOv2B,EAAArf,EAAAkM,cAACmpC,GAAD,CAAelqB,QAAQ,kBAAkB+pB,UAAW11C,KAAKk2C,sBAEpE,IAAK,0BACD,OAAOr2B,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOv2B,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,6BACD,OAAI98B,EAAWG,OAAOqC,UACbxC,EAAWG,OAAO8D,kBAIhBsC,EAAArf,EAAAkM,cAAC0pC,GAAD,MAHI,KAKJv2B,EAAArf,EAAAkM,cAACmpC,GAAD,CAAelqB,QAAQ,OAAO+pB,UAAW11C,KAAKi2C,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOp2B,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,qBACD,IAAMp8B,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAOoG,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,yBACD,OAAOv2B,EAAArf,EAAAkM,cAACmpC,GAAD,CAAelqB,QAAQ,kBAAkB+pB,UAAW11C,KAAKk2C,sBAEpE,IAAK,0BACD,OAAOr2B,EAAArf,EAAAkM,cAAC0pC,GAAD,MAEX,IAAK,uBACD,OAAOv2B,EAAArf,EAAAkM,cAACmpC,GAAD,CAAelqB,QAAQ,OAAO+pB,UAAW11C,KAAKi2C,aAEzD,IAAK,yBACD,OAAIj8B,EAAWG,WACJ0F,EAAArf,EAAAkM,cAAC2pC,GAAD,CAA6BrvC,OAAQA,IAErC6Y,EAAArf,EAAAkM,cAAC0pC,GAAD,MAGf,IAAK,6BACD,OAAIp8B,EAAWP,OAAOqC,UACb9B,EAAWP,OAAO8D,kBAIhBsC,EAAArf,EAAAkM,cAAC0pC,GAAD,MAHI,KAKJv2B,EAAArf,EAAAkM,cAACmpC,GAAD,CAAelqB,QAAQ,OAAO+pB,UAAW11C,KAAKi2C,cAQ7E,OAAO,YAzJMh2B,IAAMC,YA6JZ41B,uOCjJTQ,sBACF,SAAAA,EAAY/2B,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAs2C,IACfz2C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAw2C,GAAAn2C,KAAAH,KAAMuf,KA2CVg3B,MAAQ,WAAM,IACF7kB,EAAa7xB,EAAK0f,MAAlBmS,SAGM,IAFI7xB,EAAKskB,MAAf7O,OAGJzV,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,IAGjB6H,WAAW,WACiB35B,EAAKskB,MAArBwN,aAEJ9xB,EAAK4kB,SAAS,CACVnP,MAAOzV,EAAK22C,SAAS,EAAG9kB,GAAU,MAG3C+kB,MAEH52C,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbrc,MAAOzV,EAAK22C,SAAS,EAAG9kB,GAAU,MAlE3B7xB,EAuEnBmiC,uBAAyB,SAAArhC,GAAU,IAAA2e,EACDzf,EAAK0f,MAA3BvY,EADuBsY,EACvBtY,OAAQC,EADeqY,EACfrY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK02C,SA3EM12C,EA+EnBijC,wBAA0B,SAAAniC,GAAU,IAAA8f,EACQ5gB,EAAK0f,MAArCvY,EADwByZ,EACxBzZ,OAAQC,EADgBwZ,EAChBxZ,UAAWyqB,EADKjR,EACLiR,SACnBuQ,EAAWpiC,EAAKskB,MAAhB8d,OAEJj7B,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CACVkN,YAAahxB,EAAOgxB,YACpBD,SAAU/wB,EAAO+wB,UAAYA,EAC7Bpc,MAAOzV,EAAK22C,SAAS71C,EAAOgxB,YAAahxB,EAAO+wB,UAAYA,EAAUuQ,MAvF/DpiC,EA4FnBuiC,0BAA4B,SAAAzhC,GAAU,IAAA2nB,EACMzoB,EAAK0f,MAArCvY,EAD0BshB,EAC1BthB,OAAQC,EADkBqhB,EAClBrhB,UAAWyqB,EADOpJ,EACPoJ,SADOxN,EAEFrkB,EAAKskB,MAA7B8d,EAF0B/d,EAE1B+d,OAAQtQ,EAFkBzN,EAElByN,YAEZ3qB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAasQ,EAAStQ,EAAc,EACpCrc,MAAOzV,EAAK22C,SAASvU,EAAStQ,EAAc,EAAGD,GAAU,KAEtDuQ,GACPpiC,EAAK02C,SAvGM12C,EA2GnB22C,SAAW,SAAC7kB,EAAaD,EAAUuQ,GAC/B,OAAOA,EAAStQ,EAAcD,EAAW,GA5G1B,IAGPptB,EAAkBmsB,IAAlBnsB,QAASwsB,EAASL,IAATK,KAHFhI,EAIyBjpB,EAAK0f,MAArCvY,EAJO8hB,EAIP9hB,OAAQC,EAJD6hB,EAIC7hB,UAAWyqB,EAJZ5I,EAIY4I,SAErBuQ,EAAS39B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjE0qB,EAAcsQ,GAAUnR,EAAOA,EAAKa,YAAc,EAClDyR,EAAgBnB,GAAUnR,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EARzD,OAUf7xB,EAAKskB,MAAQ,CACT8d,OAAQA,EACRtQ,YAAaA,EACbD,SAAU0R,EACV9tB,MAAOzV,EAAK22C,SAAS7kB,EAAayR,EAAenB,IAdtCpiC,qFAkBGilB,EAAWC,GAAW,IAAAge,EACd/iC,KAAKmkB,MAAvB8d,EADgCc,EAChCd,OAAQ3sB,EADwBytB,EACxBztB,MAEhB,OAAIyP,EAAUzP,QAAUA,GAIpByP,EAAUkd,SAAWA,8CAQzBxR,IAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,IAAYhP,GAAG,wBAAyBzhB,KAAK8iC,yBAC7CrS,IAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5CvR,IAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,IAAYzuB,eAAe,wBAAyBhC,KAAK8iC,yBACzDrS,IAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yDAsEnD,IACGthB,EAAY1gB,KAAKuf,MAAjBmB,QACApL,EAAUtV,KAAKmkB,MAAf7O,MAER,OACIuK,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,qBACXD,EAAArf,EAAAkM,cAACgqC,EAAAl2C,EAAD,CACIsf,UAAWY,EAAQi2B,OACnBj2B,QAAS,CACLujB,MAAOvjB,EAAQujB,MACf2S,aAAcl2B,EAAQk2B,aACtBC,MAAOn2B,EAAQm2B,OAEnBC,IAAK,EACLjwB,IAAK,EACLvR,MAAOA,YA/HG2K,IAAMC,YA4IrBgB,MA3JA,CACXy1B,OAAQ,CACJI,SAAU,KAEd9S,MAAO,CACH7c,WAAY,yEAEhBwvB,aAAc,CACVxvB,WAAY,4BAEhByvB,MAAO,CACHzvB,WAAY,wDAgJLlG,CAAmBo1B,GCtJ5B3pB,6BACF,SAAAA,EAAYpN,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA2sB,IACf9sB,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA6sB,GAAAxsB,KAAAH,KAAMuf,KAmDVyiB,uBAAyB,SAAArhC,GAAU,IAAA2e,EACDzf,EAAK0f,MAA3BvY,EADuBsY,EACvBtY,OAAQC,EADeqY,EACfrY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CACVwd,QAAQ,EACR3Q,SAAS,EACTK,YAAa,KA3DN9xB,EAgEnBqiC,wBAA0B,SAAAvhC,GAAU,IAAA8f,EACO5gB,EAAK0f,MAApCvY,EADwByZ,EACxBzZ,OAAQC,EADgBwZ,EAChBxZ,UADgBwZ,EACL6Q,QAEvBtqB,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UACjDpH,EAAK4kB,SAAS,CAAE6M,SAAS,IAEzBzxB,EAAK4kB,SAAS,CAAE6M,SAAS,KAtEdzxB,EA0EnBsiC,yBAA2B,SAAAxhC,GAAU,IAAA2nB,EACHzoB,EAAK0f,MAA3BvY,EADyBshB,EACzBthB,OAAQC,EADiBqhB,EACjBrhB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CAAE6M,SAAS,KA9EdzxB,EAkFnBuiC,0BAA4B,SAAAzhC,GAAU,IAAAmoB,EACJjpB,EAAK0f,MAA3BvY,EAD0B8hB,EAC1B9hB,OAAQC,EADkB6hB,EAClB7hB,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC5CpH,EAAKskB,MAAM8d,QACZpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbL,SAAS,IAGVzxB,EAAKskB,MAAM8d,QAClBpiC,EAAK4kB,SAAS,CACVwd,QAAQ,EACRtQ,YAAa,EACbL,SAAS,KAjGF,IAGPtqB,EAAsBuY,EAAtBvY,OAAQC,EAAcsY,EAAdtY,UAER6pB,EAA2BL,IAA3BK,KAAMxsB,EAAqBmsB,IAArBnsB,QAASgtB,EAAYb,IAAZa,QACjB2Q,EAAS39B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfpH,EAAKskB,MAAQ,CACT8d,OAAQA,EACR3Q,UAAS2Q,GAAS3Q,EAClBK,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDD,SAAUuQ,GAAUnR,EAAOA,EAAKY,SAAW,GAZhC7xB,qFAgBGilB,EAAWC,EAAWC,GAAa,IAAAd,EACFlkB,KAAKmkB,MAAhD8d,EAD6C/d,EAC7C+d,OAAQ3Q,EADqCpN,EACrCoN,QAASK,EAD4BzN,EAC5ByN,YAAaD,EADexN,EACfwN,SAEtC,OAAI3M,EAAUkd,SAAWA,IAIrBld,EAAUuM,UAAYA,IAItBvM,EAAU4M,cAAgBA,GAI1B5M,EAAU2M,WAAaA,gDAQ3BjB,IAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,IAAYhP,GAAG,wBAAyBzhB,KAAKkiC,yBAC7CzR,IAAYhP,GAAG,yBAA0BzhB,KAAKmiC,0BAC9C1R,IAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5CvR,IAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,IAAYzuB,eAAe,wBAAyBhC,KAAKkiC,yBACzDzR,IAAYzuB,eAAe,yBAA0BhC,KAAKmiC,0BAC1D1R,IAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yDAqDnD,IAAAK,EACwDriC,KAAKuf,MAA1DvY,EADHq7B,EACGr7B,OAAQC,EADXo7B,EACWp7B,UAAWG,EADtBi7B,EACsBj7B,UAAWoY,EADjC6iB,EACiC7iB,UAC9B8R,GAFH+Q,EAC4C3hB,QAC7B1gB,KAAKmkB,MAAjBmN,SACR,IAAKlqB,EAAW,OAAO,KAHlB,IAKGsqB,EAA0BtqB,EAA1BsqB,SAAiBxwB,EAASkG,EAAhBC,MAIlB,OACIwY,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACXD,EAAArf,EAAAkM,cAACmyB,EAAA,EAAD,CACIp4B,UAAW,KACXvF,KAAMA,EACNse,UAAWA,EACXuD,KAAMlD,EAAArf,EAAAkM,cAACi1B,EAAAnhC,EAAD,MACN24B,aAAc7H,EAAUzR,EAAArf,EAAAkM,cAACsqC,EAAAx2C,EAAD,MAAgBqf,EAAArf,EAAAkM,cAACuqC,EAAAz2C,EAAD,QAE5Cqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBACXD,EAAArf,EAAAkM,cAACwqC,EAAD,CAAiBlwC,OAAQA,EAAQC,UAAWA,EAAWyqB,SAAUA,EAAUxwB,KAAMA,IACjF2e,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAACi2B,EAAA,EAAD,CAAa37B,OAAQA,EAAQC,UAAWA,EAAWyqB,SAAUA,EAAUxwB,KAAMA,IAC7E2e,EAAArf,EAAAkM,cAACi4B,EAAA,EAAD,CAAa39B,OAAQA,EAAQC,UAAWA,EAAW8b,KAAM,yBA7HzD9C,IAAMC,YA4IfyM,6gECrIAwqB,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAAv3C,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAq3C,GAAAv3C,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAu3C,GAAA51C,MAAAzB,KAAA0B,YAAA,OAAA5B,OAAAy3C,EAAA,EAAAz3C,CAAAu3C,EAAAC,GAAAx3C,OAAA03C,EAAA,EAAA13C,CAAAu3C,EAAA,EAAA//B,IAAA,SAAAhC,MAAA,WAGzC,OACIuK,EAAArf,EAAAkM,cAAC+qC,EAAA,iBAAD,CAAkBC,SAAUC,KACxB93B,EAAArf,EAAAkM,cAAC0qC,EAAqBp3C,KAAKuf,YALM83B,EAAA,CACdp3B,IAAMC,WAWzC,OAFAm3B,EAAqBO,YAArB,6BAAA5sC,OAAgE6sC,YAAeT,GAA/E,KAEOC,0MCYLS,sBACF,SAAAA,EAAYv4B,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA83C,IACfj4C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAg4C,GAAA33C,KAAAH,KAAMuf,KAmBVw4B,mBAAqB,SAAAp3C,GAAU,IACnBmL,EAAWjM,EAAKskB,MAAhBrY,OAER,GADoBnL,EAAZmO,UACQhD,EAAhB,CAEA,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GACtB1H,GAELvE,EAAK4kB,SAAS,CACVuzB,OAAQ/8B,YAAa7W,OA1BzB,IAAM0H,EAASoH,YAAcqM,EAAMvY,QAC7B5C,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMfjM,EAAKskB,MAAQ,CACTrY,OAAQA,EACRksC,OAAQ/8B,YAAa7W,IARVvE,mFAafkP,IAAU0S,GAAG,mBAAoBzhB,KAAK+3C,mEAItChpC,IAAU/M,eAAe,mBAAoBhC,KAAK+3C,qDAgB7C,IAAAz4B,EAC4Ctf,KAAKuf,MAA9CmB,EADHpB,EACGoB,QAASzU,EADZqT,EACYrT,KAAMgsC,EADlB34B,EACkB24B,WAAYn4B,EAD9BR,EAC8BQ,UAEnC,OADmB9f,KAAKmkB,MAAhB6zB,OAIJn4B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWf,EAAWY,EAAQgC,MAAO/V,MAAO,CAAE6C,MAAOvD,EAAMyD,OAAQzD,IAC/E4T,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWY,EAAQqC,KAAMpW,MAAO,CAAE4W,QAAS00B,IAC5Cp4B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWY,EAAQw3B,kBALhB,YArCHj4B,IAAMC,YAuD/B43B,EAAW92B,aAAe,CACtB/U,KAAM,GACNgsC,WAAY,GAGD/2B,UAhFA,SAAAC,GAAK,MAAK,CACrBuB,KAAM,CACFgX,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,UAC/E/Y,aAAc,MACdgZ,SAAU,UAEdr1B,KAAM,CACF2W,WAAY,cACZlqB,MAAO,OACPE,OAAQ,OACR2oC,UAAW,cAEfH,cAAe,CACX1oC,MAAO,OACPE,OAAQ,OACR0vB,aAAc,MACd1F,WAAY,aAgELxY,CAAmB42B,8BCnE5BQ,qNA2BFC,uBAAyB,SAAA53C,GACrBd,EAAK2hB,iBAGTsZ,uBAAyB,SAAAn6B,GACFd,EAAK0f,MAAhBvY,SAEOrG,EAAOqG,QAClBnH,EAAK2hB,iBAIbuZ,kBAAoB,SAAAp6B,GAAU,IAClBqG,EAAWnH,EAAK0f,MAAhBvY,OAGR,GAFoBrG,EAAZyF,UAEQY,EAAhB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAK2hB,kBAObwZ,kBAAoB,SAAAr6B,GAAU,IAClBqG,EAAWnH,EAAK0f,MAAhBvY,OAER,GAAKrG,EAAOyF,SACRzF,EAAOyF,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKrG,EAAOiE,MAEL,CACH,IAAMjF,EAAQC,IAAUuD,WACxBsQ,YAAgB9T,EAAOoE,QAHvBlE,EAAK2hB,kBAObyZ,aAAe,SAAA5vB,GAAS,IAAAiU,EACSzf,EAAK0f,MAA1BvY,EADYsY,EACZtY,OAAQk0B,EADI5b,EACJ4b,SACXA,IAEL7vB,EAAMua,kBACNsV,EAASl0B,0FAzES8d,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,QAIhC8d,EAAU3D,QAAUnhB,KAAKuf,MAAM4B,kDAQnCvO,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD34C,IAAU6hB,GAAG,uBAAwBzhB,KAAK86B,wBAC1CloB,IAAU6O,GAAG,kBAAmBzhB,KAAK+6B,mBACrCnoB,IAAU6O,GAAG,kBAAmBzhB,KAAKg7B,kEAIrCpoB,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE34C,IAAUoC,eAAe,uBAAwBhC,KAAK86B,wBACtDloB,IAAU5Q,eAAe,kBAAmBhC,KAAK+6B,mBACjDnoB,IAAU5Q,eAAe,kBAAmBhC,KAAKg7B,oDAqD5C,IAAAva,EACgEzgB,KAAKuf,MAAlEmB,EADHD,EACGC,QAAS1Z,EADZyZ,EACYzZ,OAAQwxC,EADpB/3B,EACoB+3B,WAAYh+B,EADhCiG,EACgCjG,kBAAmB0gB,EADnDza,EACmDya,SAExD,GAAIzgB,YAASzT,IAAWwT,EAAmB,CACvC,IAAMsF,EAAYe,IAAW,aAAc,eAAgB,CAAEya,QAASJ,IACtE,OACIrb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWA,EAAWE,QAAShgB,KAAKi7B,cACrCpb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAAC+rC,EAAAj4C,EAAD,QAMhB,IAAMuD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAfb,IAiBGa,EAAUb,EAAVa,MAEFiW,EAAUF,YAAe5W,GACzBoE,EAAOvD,GAASA,EAAMoO,MAAQpT,IAAUoI,QAAQpD,EAAMoO,MAAMtQ,IAAM,KAClEgf,EAAM9hB,IAAU2I,WAAWJ,GAE3BgzB,EAAS,cAAAnwB,OAAkB2Z,KAAKyW,IAAIp0B,GAAU,EAAK,GACnD8Y,EAAYe,IAAW,aAAD/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GAAkBq7B,GAAahzB,GAAQ,CAAEmzB,QAASJ,IAE9E,OACIrb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YAAYE,QAAShgB,KAAKi7B,cACpCvZ,EACG7B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,KAE3DlC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWA,GACZD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,aAAajF,IAGpC29B,GAAc98B,YAAc1U,IACzB6Y,EAAArf,EAAAkM,cAACgsC,EAAD,CACIh4B,QAAS,CACLgC,KAAMhC,EAAQi4B,WACd51B,KAAMrC,EAAQk4B,WACdV,cAAex3B,EAAQw3B,eAE3BlxC,OAAQA,YAvHFkZ,cAuI9Bo4B,EAAgBt3B,aAAe,CAC3BxG,mBAAmB,EACnBg+B,YAAY,GAGDt3B,UAtJA,CACXy3B,WAAY,CACRx1B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR+R,OAAQ,GAEZ0f,WAAY,IA+IkB,CAAEtxB,WAAW,GAAhCpG,CAAwCo3B,GC5IjDO,4LACO,IAAAv5B,EAC2Ctf,KAAKuf,MAA7CmB,EADHpB,EACGoB,QAAS1Z,EADZsY,EACYtY,OAAQiY,EADpBK,EACoBL,SAAUic,EAD9B5b,EAC8B4b,SAE7B4d,EAAah8B,YAAkB9V,GAAQ,GAE7C,OACI6Y,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,sBAAuB,CAAEk4B,+BAAgC95B,IAC/Ee,QAASkb,GACTrb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,4BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQwT,mBAAiB,KAErDyE,GAAYY,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,gCAAiCH,EAAQu4B,UACjFp5B,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IACP,2BACA5B,EAAWyB,EAAQw4B,aAAex4B,EAAQy4B,kBAGlDt5B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mCAEnBD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BAA6Bg5B,WAvB5B74B,IAAMC,YAmCvBgB,OAjDA,SAAAC,GAAK,MAAK,CACrB83B,OAAQ,CACJzyB,YAAarF,EAAM8d,QAAQC,QAAQC,MAEvC+Z,aAAc,CACVE,UAAW,oBAAsBj4B,EAAM8d,QAAQC,QAAQC,KACvD8Z,OAAQ,aAAe93B,EAAM8d,QAAQvF,WAAW2f,OAEpDF,eAAgB,CACZC,UAAW,iBAAmBj4B,EAAM8d,QAAQC,QAAQC,KACpD8Z,OAAQ,2BAuCkB,CAAE3xB,WAAW,GAAhCpG,CAAwC23B,ICzDnDS,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMxzC,OAAQ,OAAO,KAE1BszC,GAAgBA,IAzCT,IAAIpwuwC,EAAS,GACJ3zC,EAAI,EAAGA,EAAI0zC,EAAMxzC,OAAQF,IAAK,CACnC,IAAIwzC,GAAcx2C,IAAI02C,EAAM1zC,IAGxB,OAAO,KAFP2zC,GAAUH,GAAcr2C,IAAIu2C,EAAM1zC,IAM1C,MAAkB,KAAX2zC,EAAgB,KAAOA,EAGlC,IAAIC,GAAa,KAwCjB,SAASC,GAAcH,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMxzC,OAAQ,OAAO,KAE1B0zC,GAAaA,IAzCN,IAAIxwuwC,EAAS,GACJ3zC,EAAI,EAAGA,EAAI0zC,EAAMxzC,OAAQF,IAAK,CACnC,IAAI4zC,GAAW52C,IAAI02C,EAAM1zC,IAGrB,OAAO,KAFP2zC,GAAUC,GAAWz2C,IAAIu2C,EAAM1zC,IAMvC,MAAkB,KAAX2zC,EAAgB,KAAOA,2CClE5BG,uBACF,SAAAA,EAAYr6B,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA45C,IACf/5C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA85C,GAAAz5C,KAAAH,KAAMuf,KAmBVs6B,YApBmB/5C,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAoBL,SAAAC,IAAA,IAAAo5C,EAAAC,EAAAC,EAAA/3C,EAAAwI,EAAAwvC,EAAAC,EAAAv6C,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVlB,EAAKs6C,uBAECL,EAAW,GACXC,EAAkBl4C,KAAgBgJ,KAAK,CACzC/B,QAAS,WACTsxC,aAAc,sBACdC,eAAgB,EAChBznB,MAAO,MAEXknB,EAAStwC,KAAKuwC,GAERC,EAAuBn4C,KAAgBgJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAUiN,UACnBs+B,OAAO,IAEXR,EAAStwC,KAAKwwC,GAjBJn5C,EAAAE,KAAA,EAmB2B4I,QAAQgnC,IAAImJ,EAAStsC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAwgB,GAAC,OAAI,UAnBtE,OAAAjoB,EAAApB,EAAAkK,KAAAN,EAAA3K,OAAAy6C,EAAA,EAAAz6C,CAAAmC,EAAA,GAmBHg4C,EAnBGxvC,EAAA,GAmBIyvC,EAnBJzvC,EAAA,GAqBV5K,EAAK4kB,SAAS,CACV+1B,QAASP,EAAMQ,SACfP,cAAeA,IAGbv6C,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOs6C,EAAMQ,UA3BpB,yBAAA55C,EAAAU,SAAAb,MApBKb,EAkDnBs6C,qBAlDmBr6C,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAkDI,SAAAyB,IAAA,IAAAod,EAAAtY,EAAAsG,EAAAnD,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAue,EACYzf,EAAK0f,MAA5BvY,EADWsY,EACXtY,OAAQsG,EADGgS,EACHhS,WACXtG,EAFc,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAGdiM,EAHc,CAAAnL,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,sBAIfiM,EAAWtH,OAAS,GAJL,CAAA7D,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAKdkb,YAAavV,GALC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAMd8Z,YAAgBnU,GANF,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAQEc,KAAgBgJ,KAAK,CACtC/B,QAAS,uBACT1C,QAASY,EACTqX,WAAY/Q,EAAW,GACvBotC,WAAW,IAZI,QAQbvwC,EARahI,EAAA4I,KAenBlL,EAAK4kB,SAAS,CACVk2B,kBAAmBxwC,IAhBJ,yBAAAhI,EAAAZ,SAAAW,MAlDJrC,EAsEnBuuC,YAAc,WACVvsC,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,QAzEK/6C,EA6EnBg7C,eAAiB,WAAM,IACXxjC,EAAMxX,EAAK0f,MAAXlI,EACAsjC,EAAsB96C,EAAKskB,MAA3Bw2B,kBAER,GAAKA,GACAA,EAAkBG,KAAvB,CAEA,IAAMxjC,EAAG,aAAAtM,OAAgB2vC,EAAkBG,MACrCx2C,EAAU+S,EAAE,cAGlB0jC,IAAKJ,EAAkBG,MAEvBj7C,EAAKm7C,sBAAsB1jC,EAAKhT,EAJjB,QAtFAzE,EA6FnBm7C,sBAAwB,SAAC1jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAAmJ,EAGT5gB,EAAK0f,MAAlC07B,EAHsCx6B,EAGtCw6B,gBAAiBv6B,EAHqBD,EAGrBC,QACzB,GAAKu6B,EAAL,CAII7iC,KAAiB8iC,mBAAmB5jC,EAAK6jC,IAAqC,IAAsB5lC,IAEpG0lC,EAAgB32C,EAAS,CACrB82C,iBAAkBD,IAClB5lC,OAAQ,CACJsK,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACI8W,IAAI,QACJ+vB,aAAW,QACXnlB,MAAM,UACNpC,UAAWY,EAAQkQ,MACnB5Q,QAAS,kBAAM5H,KAAiBijC,sBAAsB/jC,KACtDuI,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,aAhHDX,EAuHnBy7C,oBAAsB,SAACt0C,EAAQsG,GAC3B,GAA0B,IAAtBA,EAAWtH,OAAc,OAAO,KAEpC,IAAM1B,EAAUmJ,KAAaxK,IAAI+D,EAAQsG,EAAW,IACpD,IAAKhJ,EAAS,OAAO,KAJqB,IAMlCi3C,EAA8Bj3C,EAA9Bi3C,iBAAkBh3C,EAAYD,EAAZC,QAC1B,IAAKg3C,GAAyC,2BAArBh3C,EAAQ,SAAuC,KAC5DK,EAAUL,EAAVK,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DmB,EAAUnB,EAAVmB,MACR,GAAIA,GAASA,EAAMC,OACf,OAAOD,EAAMA,EAAMC,OAAS,GAIpC,OAAO,MAxIQnG,EA2InB0uC,WAAa,WACT1uC,EAAKuuC,cADU,IAAA9lB,EAGiCzoB,EAAK0f,MAA7CvY,EAHOshB,EAGPthB,OAAQsG,EAHDgb,EAGChb,WAAYrH,EAHbqiB,EAGariB,UAAW60C,EAHxBxyB,EAGwBwyB,KACvC,GAAK9zC,GAAWsG,GAAeA,GAAerH,GAAc60C,EAA5D,CAEA,IAAMp9B,EAAO7d,EAAK27C,aAAa37C,EAAK47C,WAAWluB,SAE/C1tB,EAAK67C,YAAYt4C,QAAQ,SAAAu4C,GACrB,GAAIb,EAyCA,OAxCIp9B,GACA7b,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAASu1C,EACTvqC,oBAAqB,EACrBwqC,uBAAuB,EACvBC,iBAAiB,EACjBv9B,aAAc,KACd61B,sBAAuB,CACnBrrC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNyN,SAAU,MAEdinB,0BAA0B,EAC1BC,aAAa,UAKzBxwC,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAASu1C,EACTvqC,oBAAqB,EACrBwqC,uBAAuB,EACvBC,iBAAiB,EACjBv9B,aAAc,KACd61B,sBAAuB,CACnBrrC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMo9B,EACN3vB,SAAU,MAEdinB,0BAA0B,EAC1BC,aAAa,KAOzB,IAAMpmC,EAAOhG,GAAapG,EAAKy7C,oBAAoBt0C,EAAQsG,GAC3D,GAAIrB,EAAJ,CAAU,IACEuD,EAAyBvD,EAAzBuD,MAAOE,EAAkBzD,EAAlByD,OAAQ9K,EAAUqH,EAAVrH,MAEvB/C,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAASu1C,EACTvqC,oBAAqB,EACrBwqC,uBAAuB,EACvBC,iBAAiB,EACjBv9B,aAAc,KACd61B,sBAAuB,CACnBrrC,QAAS,oBACTlE,MAAO,CACHkE,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd+D,UAAW,KACXq1C,uBAAwB,GACxBtsC,MAAOA,EACPE,OAAQA,EACRoc,QAAS,CACLhjB,QAAS,gBACT4U,KAAMA,EACNyN,SAAU,MAEdqC,IAAK,UAOb9P,GACA7b,KAAgBgJ,KAAK,CACjB/B,QAAS,cACT1C,QAASu1C,EACTvqC,oBAAqB,EACrBwqC,uBAAuB,EACvBC,iBAAiB,EACjBv9B,aAAc,KACd61B,sBAAuB,CACnBrrC,QAAS,mBACT4U,KAAM,CACF5U,QAAS,gBACT4U,KAAMA,EACNyN,SAAU,MAEdinB,0BAA0B,EAC1BC,aAAa,KAKzBxwC,KAAgBgJ,KAAK,CACjB/B,QAAS,kBACT1C,QAASu1C,EACTI,aAAc/0C,EACd4E,YAAa0B,EACbsuC,uBAAuB,EACvBC,iBAAiB,EACjBG,UAAU,QA7PHn8C,EAkQnBo8C,sBAAwB,SAAAj1C,GAChBnH,EAAK67C,YAAY54C,IAAIkE,GACrBnH,EAAK67C,YAAYx4C,OAAO8D,GAExBnH,EAAK67C,YAAYz6C,IAAI+F,EAAQA,GAGjCtD,QAAQ4F,IAAIzJ,EAAK67C,aAEjB77C,EAAK2hB,eA3QU3hB,EA8QnB27C,aAAe,SAAAU,GACX,IAAM1S,EAAY0S,EAAI1S,UAChBgE,EAAY0O,EAAI1O,UAMtB,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE0O,EAAI1O,UAAY,IAGbhE,GAtRQ3pC,EAyRnBs8C,oBAAsB,SAAA9wC,GACI,KAAlBA,EAAM+9B,SACN/9B,EAAMsd,kBA3RK9oB,EA+RnBu8C,kBAAoB,WAAM,IAAAl4B,EACarkB,EAAKskB,MAAhCq2B,EADct2B,EACds2B,QAASN,EADKh2B,EACLg2B,cAEX1M,EAAY3tC,EAAKw8C,UAAU9uB,QAAQigB,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC3tC,EAAKw8C,UAAU9uB,QAAQigB,UAAY,IAGvC,IAAMhE,EAAY3pC,EAAK27C,aAAa37C,EAAKw8C,UAAU9uB,SAASmI,OAC5D,GAAK8T,EAAL,CAKA,IAAM8S,EAAY3C,GAAcnQ,GAC1B+S,EAAehD,GAAiB/P,GAMhCgT,GAJctC,EACd,CAACA,EAAcx3C,IAAIsI,OAAOwvC,EAAQ9uC,OAAO,SAAAD,GAAC,OAAIA,IAAMyuC,EAAcx3C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnG+uC,GAE4B9uC,OAC9B,SAAAD,GAAC,OACG5L,EAAK48C,cAAchxC,EAAG+9B,IACrB8S,GAAaz8C,EAAK48C,cAAchxC,EAAG6wC,IACnCC,GAAgB18C,EAAK48C,cAAchxC,EAAG8wC,KAG/C18C,EAAK4kB,SAAS,CAAEi4B,WAAYlT,EAAWgT,cAAeA,SAlBlD38C,EAAK4kB,SAAS,CAAEi4B,WAAY,KAAMF,cAAe,MAzStC38C,EA8TnB88C,kBAAoB,SAAAtxC,GAChB,IAAMwoC,EAAYxoC,EAAMu/B,cAAcC,QAAQ,cAC1CgJ,IACAxoC,EAAMsd,iBACN7jB,SAASkmC,YAAY,cAAc,EAAO6I,KAlU/Bh0C,EAsUnB+8C,mBAAqB,WACjB,IAAMpP,EAAY3tC,EAAK47C,WAAWluB,QAAQigB,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC3tC,EAAK47C,WAAWluB,QAAQigB,UAAY,KAzUzB3tC,EA6UnBg9C,mBAAqB,SAAAxxC,GACjB,IAAMwoC,EAAYxoC,EAAMu/B,cAAcC,QAAQ,cAC1CgJ,IACAxoC,EAAMsd,iBACN7jB,SAASkmC,YAAY,cAAc,EAAO6I,KAjV/Bh0C,EAqVnB48C,cAAgB,SAACz1C,EAAQ01C,GAAe,IAC5BrlC,EAAMxX,EAAK0f,MAAXlI,EACA6iC,EAAkBr6C,EAAKskB,MAAvB+1B,cAER,GAAIA,GAAiBlzC,IAAWkzC,EAAcx3C,KAE2B,KADvDqZ,YAAa/U,GAAQ,EAAMqQ,IAAM,IACrCylC,oBAAoBnJ,QAAQ+I,EAAWvoC,eAC7C,OAAO,EAKf,OAAsE,KADvD4H,YAAa/U,GAAQ,EAAOqQ,IAAM,IACtCylC,oBAAoBnJ,QAAQ+I,EAAWvoC,iBAKsB,KADvDgH,YAAgBnU,IAAW,IAC/B81C,oBAAoBnJ,QAAQ+I,EAAWvoC,gBAtWrCtU,EA6WnBk9C,eAAiB,WACbvjB,WAAW,WACH35B,EAAKw8C,UAAU9uB,SACC1tB,EAAKw8C,UAAU9uB,QAEvBwb,SAEb,MAjXHlpC,EAAKskB,MAAQ,CACTq2B,QAAS,GACTN,cAAe,MAGnBr6C,EAAKw8C,UAAYp8B,IAAMogB,YACvBxgC,EAAK47C,WAAax7B,IAAMogB,YAExBxgC,EAAK67C,YAAc,IAAIxyC,IAXRrJ,mFAefG,KAAK65C,cAEL75C,KAAK+8C,kDAsWA,IAAAvyC,EAAAxK,KAAA8oB,EACkB9oB,KAAKuf,MAApBmB,EADHoI,EACGpI,QAASrJ,EADZyR,EACYzR,EADZ0rB,EAE4E/iC,KAAKmkB,MAA9Eq2B,EAFHzX,EAEGyX,QAASkC,EAFZ3Z,EAEY2Z,WAAYF,EAFxBzZ,EAEwByZ,cAAetC,EAFvCnX,EAEuCmX,cAAeS,EAFtD5X,EAEsD4X,kBAMrDV,GAJcC,EACd,CAACA,EAAcx3C,IAAIsI,OAAOwvC,EAAQ9uC,OAAO,SAAAD,GAAC,OAAIA,IAAMyuC,EAAcx3C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI6R,YAAgB7R,KACnG+uC,GAEoBhtC,IAAI,SAAA/B,GAAC,OAC3BoU,EAAArf,EAAAkM,cAACswC,GAAD,CACI1lC,IAAK7L,EACLzE,OAAQyE,EACRwT,SAAUzU,EAAKkxC,YAAY54C,IAAI2I,GAC/ByvB,SAAU,kBAAM1wB,EAAKyxC,sBAAsBxwC,QAI7CwxC,GAAcT,GAAiB,IAAIhvC,IAAI,SAAA/B,GAAC,OAC1CoU,EAAArf,EAAAkM,cAACswC,GAAD,CACI1lC,IAAK7L,EACLzE,OAAQyE,EACRwT,SAAUzU,EAAKkxC,YAAY54C,IAAI2I,GAC/ByvB,SAAU,kBAAM1wB,EAAKyxC,sBAAsBxwC,QAInD,OACIoU,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACIyJ,MAAI,EACJyf,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,uBAChB4yB,mBAAiB,6BACjBp9B,UAAWY,EAAQ+G,QACnB5H,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,wBAAwB2U,EAAE,gBAC1CwI,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKq8C,UACV35C,GAAG,wBACHwoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa/zB,EAAE,UACfo0B,UAAWzrC,KAAKm8C,oBAChBhH,QAASn1C,KAAKo8C,kBACd1Q,QAAS1rC,KAAK28C,oBAElB98B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBAAuBm6B,GACrCyC,GACG78B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQy8B,WAAY,+BAAgCF,IAGtFj9C,KAAK07C,YAAYzvC,KAAO,GACrB4T,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKy7C,WACV/4C,GAAG,yBACHwoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAa/zB,EAAE,gBACf89B,QAASn1C,KAAK48C,mBACdlR,QAAS1rC,KAAK68C,qBAGtBh9B,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKouC,YAAalsB,MAAM,WACpC7K,EAAE,WAENrX,KAAK07C,YAAYzvC,KAAO,GACrB4T,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKuuC,WAAYrsB,MAAM,UAAUk7B,WAAS,GACtD/lC,EAAE,UAGTrX,KAAK07C,YAAYzvC,MAAQ0uC,GACvB96B,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAK66C,eAAgB34B,MAAM,WACvC7K,EAAE,sBAhcH4I,IAAMC,YAqdnB4G,GANCC,YACZ7F,IAleW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChB8wB,MAAO,CACHrN,QAASpC,EAAMk8B,QAAQC,KAAO,GAElC71B,OAAQ,CACJvF,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,SAE9Bqe,cAAe,CACXh6B,QAAS,EACT3W,QAAS,OACTuW,SAAU,YAEdg6B,WAAY,CACRzjB,WAAYvY,EAAM8d,QAAQvF,WAAW2f,QAEtChyB,aAAYlG,KAmdI,CAAEmG,WAAW,IAChCC,cACAi2B,eAGW12B,CAAQ8yB,qWChcR6D,uBA7DX,SAAAA,EAAYl+B,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAy9C,IACf59C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA29C,GAAAt9C,KAAAH,KAAMuf,KAeVm+B,YAAc,WACV,IAAM7kC,EAAM,IAAIJ,KACVilB,EAAU79B,EAAK89C,OAAS9kC,EACxBvD,EAAQ,IAAOooB,EAAU79B,EAAK0f,MAAMq+B,QAAW,IAErD/9C,EAAK4kB,SAAS,CACViZ,QAASA,EAAU,EAAIA,EAAU,EACjCpoB,MAAOA,EAAQ,IAAM,IAAMA,IAG3BuD,GAAOhZ,EAAK89C,QACR99C,EAAKg+C,UACLC,cAAcj+C,EAAKg+C,SACnBh+C,EAAKg+C,QAAU,OA1BvBh+C,EAAKskB,MAAQ,CACTuZ,QAAS79B,EAAK0f,MAAMq+B,QAAU,IAC9BtoC,MAAO,GALIzV,mFAUfG,KAAKokB,UAAY,IAAI3L,KACrBzY,KAAK29C,OAAS39C,KAAKokB,UACnBpkB,KAAK29C,OAAOI,gBAAgB/9C,KAAK29C,OAAOK,kBAAoBh+C,KAAKuf,MAAMq+B,SACvE59C,KAAK69C,QAAUI,YAAYj+C,KAAK09C,YAAa,oDAsBzC19C,KAAK69C,UACLC,cAAc99C,KAAK69C,SACnB79C,KAAK69C,QAAU,uCAId,IAAA35B,EACsBlkB,KAAKmkB,MAAxB7O,EADH4O,EACG5O,MAAOooB,EADVxZ,EACUwZ,QAEf,OACI7d,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,2BACXD,EAAArf,EAAAkM,cAACm/B,GAAA,EAAD,CAAY3pB,MAAM,YAAYwb,EAAU,KAAMxxB,YAElD2T,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BACXD,EAAArf,EAAAkM,cAACsW,GAAAxiB,EAAD,CAAkByL,KAAM,GAAIqJ,MAAO,IAAMA,EAAOsR,QAAQ,oBAnD5C3G,IAAMC,sBCwBhCg+B,WAAmB,CACrBp0B,SAAU,SACVC,WAAY,UAGVo0B,GAAsB,CACxBr0B,SAAU,MACVC,WAAY,SAGVq0B,8MACFC,oBAAsB,SAAAr3C,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,8CAAA5G,OAA+CjH,EAAK6W,MAApD,KAEJ,IAAK,qBACD,IAAMZ,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAX,0CAAAnP,OACyCjH,EAAK6W,MAD9C,6CAAA5P,OAEuCjH,EAAK6W,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAA5P,OAAoD8R,YAAkB9V,GAAtE,KAIR,OAAO,8EAGF,IAAAsY,EACiCtf,KAAKuf,MAAnCmK,EADHpK,EACGoK,QAAS1iB,EADZsY,EACYtY,OAAWs3C,EADvBx+C,OAAAy+C,GAAA,EAAAz+C,CAAAwf,EAAA,sBAGL,OACIO,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAADV,OAAA+7B,OAAA,CACIxR,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZg0B,GACJz+B,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,uBAAuBoa,YAAkB9V,IACzD6Y,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,yBACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,IACzB6Y,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,CAAmBkC,GAAG,6BACjB1C,KAAKq+C,oBAAoBr3C,MAItC6Y,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUk7B,WAAS,GAA/D,eAnDUn9B,IAAMC,WA4D9Bs+B,oLACO,IAAA/9B,EACiCzgB,KAAKuf,MAAnCmK,EADHjJ,EACGiJ,QAAS1iB,EADZyZ,EACYzZ,OAAWs3C,EADvBx+C,OAAAy+C,GAAA,EAAAz+C,CAAA2gB,EAAA,sBAGL,OACIZ,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAADV,OAAA+7B,OAAA,CACIxR,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZg0B,GACJz+B,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,uBAAuBoa,YAAkB9V,IACzD6Y,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,yBACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,IACzB6Y,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,CAAmBkC,GAAG,6BAAtB,0CAKRmd,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAUk7B,WAAS,GAA/D,eAvBan9B,IAAMC,WAgCjCu+B,eACF,SAAAA,EAAYl/B,GAAO,IAAA/U,EAAA,OAAA1K,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAy+C,IACfj0C,EAAA1K,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA2+C,GAAAt+C,KAAAH,KAAMuf,KASVm/B,kBAAoB,SAAArzC,GAChBb,EAAKia,SAAS,CAAEgiB,SAAUp7B,EAAMs7B,iBAXjBn8B,EAcnBo8B,gBAAkB,WACdp8B,EAAKia,SAAS,CAAEgiB,SAAU,QAfXj8B,EAkBnBm0C,eAAiB,WACbn0C,EAAKo8B,kBACLpN,WAAW,kBAAMhvB,EAAK+U,MAAMq/B,mBAAmB,MApBhCp0C,EAuBnBq0C,mBAAqB,WACjBr0C,EAAKo8B,kBAELp8B,EAAKia,SAAS,CAAEq6B,kBAAkB,KA1BnBt0C,EA6BnBu0C,2BAA6B,SAAA50C,GAGzB,GAFAK,EAAKia,SAAS,CAAEq6B,kBAAkB,IAE7B30C,EAAL,CAEA,IAAMnD,EAASoR,KAAiB08B,YAE1BhrC,EAAU,CACZhB,QAAS,oBACT1C,QAASY,EACTmvC,uBAAuB,GAG3B3rC,EAAKwwC,sBAAsBh0C,EAAQ,2BAPnB,mBAOwD8C,KA1CzDU,EA6CnBw0C,YAAc,WACVx0C,EAAKo8B,kBAELp8B,EAAKia,SAAS,CAAEw6B,YAAY,KAhDbz0C,EAmDnB00C,oBAAsB,SAAA/0C,GAGlB,GAFAK,EAAKia,SAAS,CAAEw6B,YAAY,IAEvB90C,EAAL,CAEA,IAAMnD,EAASoR,KAAiB08B,YAC1BxwC,EAAUkG,EAAK20C,yBAAyBn4C,GACxC8C,EAAU4R,YAAc1U,GACxB,CAAE8B,QAAS,oBAAqB1C,QAASY,EAAQmvC,uBAAuB,GACxE,CAAErtC,QAAS,YAAa1C,QAASY,GAEvCwD,EAAKwwC,sBAAsBh0C,EAAQ,wBAAyB1C,EAASwF,KA9DtDU,EAiEnBwwC,sBAAwB,SAACh0C,EAAQo4C,EAAkB96C,EAASwF,GACxD,GAAKs1C,EAAL,CAEA,IAAM9nC,EAAG,GAAAtM,OAAMo0C,EAAN,YAAAp0C,OAAiChE,GACpCuO,EAAM,eAAAlV,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAAG,SAAAC,IAAA,OAAAwuB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDc,KAAgBgJ,KAAKf,GAFpB,cAAAjJ,EAAAC,KAAA,EAIPe,KAAgBgH,aAAa,CAAEC,QAASs2C,EAAkBp4C,OAAQA,EAAQsyB,YAAY,IAJ/Ez4B,EAAAw+C,OAAA,2BAAAx+C,EAAAU,SAAAb,EAAA,oBAAH,yBAAAL,EAAAoB,MAAAzB,KAAA0B,YAAA,GAJwD49C,EAe/B90C,EAAK+U,MAAlC07B,EAf4DqE,EAe5DrE,gBAf4DqE,EAe3C5+B,QACzB,GAAKu6B,EAAL,CAGI7iC,KAAiB8iC,mBAAmB5jC,EAAK6jC,IAAoC5lC,EARlE,WACX1T,KAAgBgH,aAAa,CAAEC,QAASs2C,EAAkBp4C,OAAQA,EAAQsyB,YAAY,QAQtFz3B,KAAgBgH,aAAa,CAAEC,QAASs2C,EAAkBp4C,OAAQA,EAAQsyB,YAAY,IACtF2hB,EAAgB32C,EAAS,CACrB82C,iBAAkBD,IAAqC,IACvD5lC,OAAQ,CACJsK,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAY8W,IAAI,WAAW4K,MAAM,UAAUpC,UAAU,mBACjDD,EAAArf,EAAAkM,cAAC6yC,GAAD,CAAmB3B,QAASzC,OAEhCt7B,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CACI8W,IAAI,OACJ4K,MAAM,UACNjW,KAAK,QACL+T,QAAS,kBAAM5H,KAAiBijC,sBAAsB/jC,KAJ1D,eA5FG9M,EAwGnBg1C,kBAAoB,SAAAx4C,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQ3P,EAkInB20C,yBAA2B,SAAAn4C,GACvB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,MAAO,eAClB,IAAKA,EAAK6N,KAAM,MAAO,eAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMoI,EAAaC,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eACjD,OAAIF,EACOA,EAAWG,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJP3P,EAAK2Z,MAAQ,CACTsiB,SAAU,KACVwY,YAAY,EACZH,kBAAkB,GANPt0C,wEA4JV,IACGkW,EAAY1gB,KAAKuf,MAAjBmB,QADHwD,EAE8ClkB,KAAKmkB,MAAhDsiB,EAFHviB,EAEGuiB,SAAUwY,EAFb/6B,EAEa+6B,WAAYH,EAFzB56B,EAEyB46B,iBAExB93C,EAASoR,KAAiB08B,YAC1B2K,EAAeziC,YAAgBhW,GAC/B04C,EAAaxiC,YAAclW,GAC3B24C,EAAiB3/C,KAAKw/C,kBAAkBx4C,GAE9C,OACI6Y,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIo/C,YAAWnZ,EAAW,cAAgB,KACtCoZ,gBAAc,OACd//B,UAAWY,EAAQo/B,eACnBzY,aAAW,OACXrnB,QAAShgB,KAAK0+C,mBACd7+B,EAAArf,EAAAkM,cAACqzC,GAAAv/C,EAAD,OAEJqf,EAAArf,EAAAkM,cAAC66B,GAAA/mC,EAAD,CACIkC,GAAG,YACH+jC,SAAUA,EACVx8B,KAAMgT,QAAQwpB,GACd/c,QAAS1pB,KAAK4mC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB7d,aAAcq0B,GACdl0B,gBAAiBm0B,IACjBt+B,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK2+C,gBAAxB,aACCc,GAAgB5/B,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK6+C,oBAAxB,iBAChBa,GAAcC,GAAkB9/B,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKg/C,aAAcW,IAE3E9/B,EAAArf,EAAAkM,cAACszC,GAAD,CAAiBh5C,OAAQA,EAAQiD,KAAMg1C,EAAYv1B,QAAS1pB,KAAKk/C,sBACjEr/B,EAAArf,EAAAkM,cAACuzC,GAAD,CAAoBj5C,OAAQA,EAAQiD,KAAM60C,EAAkBp1B,QAAS1pB,KAAK++C,qCA/L7D9+B,IAAMC,WA0MpB4G,GALCC,YACZ7F,IAlTW,SAAAC,GAAK,MAAK,CACrB2+B,eAAgB,CACZ74B,OAAQ,qBAiTZu2B,eAGW12B,CAAQ23B,cC9TjByB,uBACF,SAAAA,EAAY3gC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAkgD,IACfrgD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAogD,GAAA//C,KAAAH,KAAMuf,KA0DVw4B,mBAAqB,SAAAp3C,GAAU,IACnBmL,EAAWjM,EAAK0f,MAAhBzT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAEvBA,IAAWnL,EAAOmO,SAClBjP,EAAK4kB,SAAS,CAAEhL,OAAQM,YAAc3V,GAAO+7C,SAAUllC,YAAa7W,MAhEzD,IAGP0H,EAAWjM,EAAK0f,MAAhBzT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMfjM,EAAKskB,MAAQ,CACTi8B,WAAYt0C,EACZ2N,OAAQM,YAAc3V,GACtB+7C,SAAUllC,YAAa7W,IATZvE,qFA4BGilB,EAAWC,GAAW,IAAAzF,EACdtf,KAAKuf,MAAvBzT,EADgCwT,EAChCxT,OAAQqV,EADwB7B,EACxB6B,MADwB+C,EAEXlkB,KAAKmkB,MAA1B1K,EAFgCyK,EAEhCzK,OAAQ0mC,EAFwBj8B,EAExBi8B,SAEhB,OAAIr7B,EAAU3D,QAAUA,IAIpB2D,EAAUhZ,SAAWA,IAIrBiZ,EAAUtL,SAAWA,GAIrBsL,EAAUo7B,WAAaA,gDAQ3BpxC,IAAU0S,GAAG,mBAAoBzhB,KAAK+3C,mEAItChpC,IAAU/M,eAAe,mBAAoBhC,KAAK+3C,qDAY7C,IACGr3B,EAAY1gB,KAAKuf,MAAjBmB,QADHqiB,EAEwB/iC,KAAKmkB,MAA1B1K,EAFHspB,EAEGtpB,OAAQ0mC,EAFXpd,EAEWod,SAEhB,OACItgC,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,iBAAkBH,EAAQ2/B,mBAA3BvgD,OAAAymB,EAAA,EAAAzmB,CAAA,CACjBwgD,eAAgBH,GACfz/B,EAAQ6/B,yBAA2BJ,KAEvC1mC,sDAjEmB8F,EAAO4E,GACnC,GAAI5E,EAAMzT,SAAWqY,EAAMi8B,WAAY,KAC3Bt0C,EAAWyT,EAAXzT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAE3B,MAAO,CACHs0C,WAAYt0C,EACZ2N,OAAQM,YAAc3V,GACtB+7C,SAAUllC,YAAa7W,IAI/B,OAAO,YA1BiB6b,IAAMC,YAqFvBgB,OA9FA,SAAAC,GAAK,MAAK,CACrBk/B,mBAAoB,CAChBn+B,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAK8iC,UAAY,WAE1ED,yBAA0B,CACtBr+B,MAAOf,EAAM8d,QAAQC,QAAQuhB,KAAO,gBAyFV,CAAEn5B,WAAW,GAAhCpG,CAAwCg/B,ICjDxCQ,sNAvCXh7B,YAAc,WAAM,IAAApG,EACazf,EAAK0f,MAA1BzT,EADQwT,EACRxT,OAAQovB,EADA5b,EACA4b,SAEV92B,EAAO2K,IAAU9L,IAAI6I,GACtB1H,GACA82B,GAELA,EAAS92B,yFAXS0gB,EAAWC,GAC7B,OAAOD,EAAUhZ,SAAW9L,KAAKuf,MAAMzT,wCAalC,IACGA,EAAW9L,KAAKuf,MAAhBzT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAErB4T,EAAW3I,YAAgB3S,GAEjC,OACIyb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,OAAOE,QAAShgB,KAAK0lB,aAChC7F,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAACqT,GAAA,EAAD,CAAiBjU,OAAQA,IACzB+T,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBJ,IAEnCG,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAACi0C,GAAD,CAAmB70C,OAAQA,eA9B7BmU,IAAMC,YCD1B0gC,sNAuBFrI,uBAAyB,SAAA53C,GACrBd,EAAK2hB,iBAGTwZ,kBAAoB,SAAAr6B,GAAU,IAClBqG,EAAWnH,EAAK0f,MAAhBvY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAK2hB,oGA/BasD,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,QAIhC8d,EAAUzN,IAAMrX,KAAKuf,MAAMlI,8CAQ/BzE,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD3lC,IAAU6O,GAAG,kBAAmBzhB,KAAKg7B,kEAIrCpoB,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE3lC,IAAU5Q,eAAe,kBAAmBhC,KAAKg7B,oDAe5C,IAAA1b,EACoCtf,KAAKuf,MAAtClI,EADHiI,EACGjI,EAAGrQ,EADNsY,EACMtY,OAAQwT,EADd8E,EACc9E,kBAEbI,EAAQmB,YAAa/U,EAAQwT,EAAmBnD,GAEtD,OAAOwI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBlF,UAxCbqF,IAAMC,YAiDvC0gC,GAAmB5/B,aAAe,CAC9BxG,mBAAmB,GAGR+M,qBAAkBq5B,cCzC3BC,uBACF,SAAAA,EAAYthC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA6gD,IACfhhD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+gD,GAAA1gD,KAAAH,KAAMuf,KA8DVw4B,mBAAqB,SAAAp3C,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CAEA,IAAIkvC,GAAiB,EACrB,OAAQ/8C,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,KAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQ4kC,KAAK,SAAAt1C,GAAC,OAAIA,EAAEqD,UAAYnO,EAAOmO,YAE3DgyC,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACG/8C,EAAK6N,KAAK9C,UAAYnO,EAAOmO,UAC7BgyC,GAAiB,GASzBA,GACAjhD,EAAKihD,eAAe/8C,KAnGTlE,EAuGnBihD,eAAiB,SAAA/8C,GACblE,EAAK4kB,SAAS,CACVu8B,SAAU3nC,YAA6BtV,EAAKrB,IAC5Cy9C,SAAUnlC,YAAkCjX,EAAKrB,OA1GtC7C,EA8GnBohD,qBAAuB,SAAAtgD,GAAU,IACrBqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAKihD,eAAe/8C,KAxHTlE,EA4HnBqhD,2BAA6B,SAAAvgD,GAAU,IAC3BqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,gBAEpC3Z,EAAKihD,eAAe/8C,IAtITlE,EA0InBshD,2BAA6B,SAAAxgD,GAAU,IAC3BqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAKihD,eAAe/8C,IApJTlE,EAwJnBk2C,mBAAqB,SAAAp1C,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO65B,YAAY93B,IAEhD7C,EAAKihD,eAAe/8C,IAlKTlE,EAsKnBm2C,mBAAqB,SAAAr1C,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOqZ,WAAWtX,IAE9C7C,EAAKihD,eAAe/8C,IAhLT,IAGPiD,EAAWnH,EAAK0f,MAAhBvY,OAHO,OAKfnH,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZg6C,SAAU3nC,YAA6BrS,GACvCm5C,SAAUnlC,YAAkChU,IARjCnH,qFA0BGilB,EAAWC,GAAW,IAChC/d,EAAWhH,KAAKuf,MAAhBvY,OADgCkd,EAETlkB,KAAKmkB,MAA5B68B,EAFgC98B,EAEhC88B,SAAUb,EAFsBj8B,EAEtBi8B,SAElB,OAAIr7B,EAAU9d,SAAWA,IAIrB+d,EAAUi8B,WAAaA,GAIvBj8B,EAAUo7B,WAAaA,+CAQ3BpxC,IAAU0S,GAAG,mBAAoBzhB,KAAK+3C,oBACtCx+B,KAAgBkI,GAAG,mBAAoBzhB,KAAK+1C,oBAC5C97B,KAAgBwH,GAAG,mBAAoBzhB,KAAKg2C,oBAC5CjnC,IAAU0S,GAAG,qBAAsBzhB,KAAKihD,sBACxC1nC,KAAgBkI,GAAG,2BAA4BzhB,KAAKkhD,4BACpDjnC,KAAgBwH,GAAG,2BAA4BzhB,KAAKmhD,2EAIpDpyC,IAAU/M,eAAe,mBAAoBhC,KAAK+3C,oBAClDx+B,KAAgBvX,eAAe,mBAAoBhC,KAAK+1C,oBACxD97B,KAAgBjY,eAAe,mBAAoBhC,KAAKg2C,oBACxDjnC,IAAU/M,eAAe,qBAAsBhC,KAAKihD,sBACpD1nC,KAAgBvX,eAAe,2BAA4BhC,KAAKkhD,4BAChEjnC,KAAgBjY,eAAe,2BAA4BhC,KAAKmhD,6DAwH3D,IACGzgC,EAAY1gB,KAAKuf,MAAjBmB,QADHqiB,EAE0B/iC,KAAKmkB,MAA5B68B,EAFHje,EAEGie,SAAUb,EAFbpd,EAEaod,SAElB,OACItgC,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IACP,gBACAs/B,EAAWz/B,EAAQ0gC,qBAAuB1gC,EAAQ2gC,iBAErDL,sDAlLmBzhC,EAAO4E,GACnC,GAAI5E,EAAMvY,SAAWmd,EAAMkiB,WAAY,KAC3Br/B,EAAWuY,EAAXvY,OAER,MAAO,CACHq/B,WAAYr/B,EACZg6C,SAAU3nC,YAA6BrS,GACvCm5C,SAAUnlC,YAAkChU,IAIpD,OAAO,YAxBmBiZ,IAAMC,YAqMzBgB,OA9MA,SAAAC,GAAK,MAAK,CACrBkgC,eAAgB,CACZn/B,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAK8iC,UAAY,WAE1EY,qBAAsB,CAClBl/B,MAAOf,EAAM8d,QAAQC,QAAQuhB,KAAO,gBAyMV,CAAEn5B,WAAW,GAAhCpG,CAAwC2/B,IChNjDS,uBACF,SAAAA,EAAY/hC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAshD,IACfzhD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwhD,GAAAnhD,KAAAH,KAAMuf,KAaVmG,YAAc,WAAM,IAAApG,EACazf,EAAK0f,MAA1BvY,EADQsY,EACRtY,OAAQk0B,EADA5b,EACA4b,SAChB,GAAKA,EAAL,CAEA,IAAMn3B,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAELm3B,EAASn3B,KArBMlE,qFAUGilB,EAAWC,GAC7B,OAAOD,EAAU9d,SAAWhH,KAAKuf,MAAMvY,wCAalC,IAAAyZ,EAC2DzgB,KAAKuf,MAA7DvY,EADHyZ,EACGzZ,OAAQu6C,EADX9gC,EACW8gC,aAAcC,EADzB/gC,EACyB+gC,WAAYhnC,EADrCiG,EACqCjG,kBAE1C,OACIqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,OAAOE,QAAShgB,KAAK0lB,aAChC7F,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQk0B,SAAUqmB,EAAc/mC,kBAAmBA,IAC5EqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAC+0C,GAAD,CAAoBz6C,OAAQA,EAAQwT,kBAAmBA,KAE1DgnC,IAAehnC,GACZqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAACg1C,GAAD,CAAqB16C,OAAQA,eAtCnCiZ,IAAMC,YAwDhCohC,GAAYtgC,aAAe,CACvBxG,mBAAmB,EACnBgnC,YAAY,GAGDF,+BClDTK,uBACF,SAAAA,EAAYpiC,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA2hD,GAAA7hD,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA6hD,GAAAxhD,KAAAH,KACVuf,0EAGD,IAAAD,EACwDtf,KAAKuf,MAA1DmB,EADHpB,EACGoB,QAAS1Z,EADZsY,EACYtY,OAAQqQ,EADpBiI,EACoBjI,EAAGuqC,EADvBtiC,EACuBsiC,WAAY5hC,EADnCV,EACmCU,QAAS0J,EAD5CpK,EAC4CoK,QAE7CkxB,EAAOvjC,EAAE,YAOb,OANIqE,YAAc1U,GACd4zC,EAAOvjC,EAAE,QACFuE,YAAc5U,KACrB4zC,EAAOvjC,EAAE,gBAITwI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACV8hC,GACG/hC,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQmhC,eAAgB7hC,QAAS0J,GACpD7J,EAAArf,EAAAkM,cAACo1C,GAAAthD,EAAD,OAGRqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCAAoCE,QAASA,GACxDH,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyB86B,KAE3CgH,GACE/hC,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQqhC,gBAAiB/hC,QAAS0J,GACrD7J,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,eA3BQyf,IAAMC,YAwCvB4G,GALCC,YACZQ,cACArG,IA9CW,CACX2gC,eAAgB,CACZ56B,OAAQ,qBAEZ86B,gBAAiB,CACb96B,OAAQ,sBAyCO,CAAEK,WAAW,IAGrBR,CAAQ66B,wFCvCjBK,eACF,SAAAA,EAAYziC,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAgiD,GAAAliD,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAkiD,GAAA7hD,KAAAH,KACVuf,0EAGD,IAAAD,EACkBtf,KAAKuf,MAApBmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EACTsuB,EAAY3lC,KAAKmkB,MAAjBwhB,QAER,OACI9lB,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAK8lC,4BACxDjmB,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KAAgBmlC,EAAwC9lB,EAAArf,EAAAkM,cAACu1C,GAAAzhD,EAAD,MAA9Bqf,EAAArf,EAAAkM,cAACw1C,GAAA1hD,EAAD,OAC1Bqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B9qC,EAAE,oBAIfwI,EAAArf,EAAAkM,cAAC01C,GAAA5hD,EAAD,KACIqf,EAAArf,EAAAkM,cAAC21C,GAAA7hD,EAAD,CAAQ0hB,MAAM,UAAUK,SAAUviB,KAAK8lC,2BAA4BljB,SAAU+iB,oBApB7DF,GAgCrB3e,GALCC,YACZQ,cACArG,IAnCW,CACXwuB,SAAU,CACNnsB,QAAS,cAiCM,CAAE+D,WAAW,IAGrBR,CAAQk7B,wFC3BjBM,eACF,SAAAA,EAAY/iC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAsiD,IACfziD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwiD,GAAAniD,KAAAH,KAAMuf,KAoBVgjC,gBAAkB,WACd1iD,EAAK4kB,SAAS,CAAE+9B,UAAW3iD,EAAKskB,MAAMq+B,YAtBvB3iD,EAyBnB4iD,kBAAoB,WAChB,IAAMrR,EAAgBh5B,KAAiB08B,YAC/B9tC,EAAWnH,EAAK0f,MAAhBvY,OACJoqC,IAAkBpqC,GAGlBnF,KAAgB6gD,UAAU17C,IA/BfnH,EAmCnB8iD,YAAc,WAAM,IACR37C,EAAWnH,EAAKskB,MAAhBnd,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CALgB,IAOR9C,EAAY/K,EAAK6N,KAAjB9C,QACHA,GAELjN,KAAgBgJ,KAAK,CACjB/B,QAAS0qB,YAAc1kB,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGP9H,EAAWnH,EAAK0f,MAAhBvY,OAHO,OAIfnH,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZw7C,UAAU,GANC3iD,wEAmDV,IAAAyf,EAC0Btf,KAAKuf,MAA5BlI,EADHiI,EACGjI,EAAGrQ,EADNsY,EACMtY,OAAQ0Z,EADdpB,EACcoB,QACX8hC,EAAaxiD,KAAKmkB,MAAlBq+B,SAEFz+C,EAAO6O,IAAU3P,IAAI+D,GAErB47C,EAAUjnC,YAAY3U,GACxB67C,GAAY,GACXD,GAAW7+C,EAAK6N,OACjBixC,EAAYrvB,YAAczvB,EAAK6N,KAAK9C,UAExC,IAAMg0C,EAAWjnC,YAAa7U,GACxBq2B,EAAYzhB,YAAc5U,GAEhC,OACI6Y,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAKuiD,iBACxD1iC,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAACq2C,GAAAviD,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B9qC,EAAE,WAIdmrC,EAAW3iC,EAAArf,EAAAkM,cAACs2C,GAAAxiD,EAAD,MAAiBqf,EAAArf,EAAAkM,cAACu2C,GAAAziD,EAAD,OAEjCqf,EAAArf,EAAAkM,cAACw2C,GAAA1iD,EAAD,CAAU2iD,GAAIX,EAAU5E,QAAQ,OAAOwF,eAAa,GAChDvjC,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,CAAM6iD,UAAU,MAAMC,gBAAc,IAC9BV,GACE/iC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAKyiD,mBACxD5iC,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B9qC,EAAE,mBAKnBwI,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAK2iD,aACxD9iC,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,YAAY0E,QAAQ,UAAUu7B,QAAM,GACrC9qC,EAAZwrC,EAAc,UAAe,qBAOrDD,GAAWE,GACRjjC,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,UAChC7vB,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,YAAY0E,QAAQ,UAAUu7B,QAAM,GACrC9qC,EAAZgmB,EAAc,eAAoB,kBAMtDulB,IAAYE,GACTjjC,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,UAChC7vB,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,YAAY0E,QAAQ,UAAUu7B,QAAM,GACjD9qC,EAAE,wEAlHXkI,EAAO4E,GACnC,OAAI5E,EAAMvY,SAAWmd,EAAMkiB,WAChB,CACHA,WAAY9mB,EAAMvY,OAClBw7C,UAAU,GAIX,YAnBYviC,IAAMC,WA+IlB4G,GALCC,YACZQ,cACArG,IAlJW,CACXwuB,SAAU,CACNnsB,QAAS,cAgJM,CAAE+D,WAAW,IAGrBR,CAAQw7B,gCCjGjBkB,uBACF,SAAAA,EAAYjkC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAwjD,IACf3jD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA0jD,GAAArjD,KAAAH,KAAMuf,KAmGV2hC,2BAA6B,SAAAvgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAK0f,MAAMvY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,iBAEpC3Z,EAAK4jD,mBAEL5jD,EAAK2hB,gBA/GM3hB,EAmHnBshD,2BAA6B,SAAAxgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAK0f,MAAMvY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAK2hB,eA5HM3hB,EAgInBohD,qBAAuB,SAAAtgD,GACnB,IAAMoD,EAAO6O,IAAU3P,IAAIpD,EAAK0f,MAAMvY,QACjCjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAK2hB,gBAzIM3hB,EA6InBk4C,mBAAqB,SAAAp3C,GACbd,EAAKsc,QAAQrZ,IAAInC,EAAOmO,UACxBjP,EAAK2hB,eA/IM3hB,EAmJnB4jD,iBAAmB,WACf5jD,EAAKwa,cAELxa,EAAK6jD,oBAEL7jD,EAAK8jD,oBAxJU9jD,EA2JnB8jD,iBAAmB,WAAM,IACb38C,EAAWnH,EAAK0f,MAAhBvY,OAEFrH,EAAQC,IAAUuD,WAExBuQ,YAAiB/T,EAAO,CAACqH,IACzB,IAAMmV,EAAUF,YAAoBjV,GAAQwG,IAAI,SAAA/B,GAAC,OAAIA,EAAEqD,UACvDwC,YAAiB3R,EAAOwc,IAlKTtc,EAqKnBwa,YAAc,WAAM,IACRrT,EAAWnH,EAAK0f,MAAhBvY,OAERoV,YAAgBpV,IAxKDnH,EA2KnB6jD,kBA3KmB5jD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA2KC,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRiG,EAAWnH,EAAK0f,MAAhBvY,QAEQ2U,YAAY3U,GAHZ,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,qBAMHoZ,YAASzT,GANN,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EASKc,KAAgBgJ,KAAK,CACtC/B,QAAS,oBACTgG,QAASoE,YAAclM,GACvBqzC,eAAgB,EAChBznB,MAAO,IAbK,OASVzoB,EATUtJ,EAAAkK,KAgBhBlL,EAAK4kB,SAAS,CAAEm/B,kBAAmBz5C,EAAOswC,SAASz0C,OAAS,IAhB5C,yBAAAnF,EAAAU,SAAAb,MA3KDb,EA8LnBgkD,mBAAqB,WAAM,IAAAvkC,EACDzf,EAAK0f,MAAnBlI,EADeiI,EACfjI,EAAGrQ,EADYsY,EACZtY,OACLoU,EAAWD,YAAgBnU,GACjC,GAAKoU,EAAL,CAEA,IAAM0oC,EAAoBC,KAAY9gD,IAAI,YACpC+gD,EAAeF,EAAoBA,EAAkBxuC,MAAQ,wBAEnEylC,IAAKiJ,EAAe5oC,GAEpB,IAAM9D,EAAG,GAAAtM,OAAMhE,EAAN,kBACH1C,EAAU+S,EAAE,cAGlBxX,EAAKm7C,sBAAsB1jC,EAAKhT,EAFjB,QA1MAzE,EA+MnBm7C,sBAAwB,SAAC1jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAAmJ,EAGT5gB,EAAK0f,MAAlC07B,EAHsCx6B,EAGtCw6B,gBAAiBv6B,EAHqBD,EAGrBC,QACzB,GAAKu6B,EAAL,CAII7iC,KAAiB8iC,mBAAmB5jC,EAAK6jC,IAAqC,IAAsB5lC,IAEpG0lC,EAAgB32C,EAAS,CACrB82C,iBAAkBD,IAClB5lC,OAAQ,CACJsK,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACI8W,IAAI,QACJ+vB,aAAW,QACXnlB,MAAM,UACNpC,UAAWY,EAAQkQ,MACnB5Q,QAAS,kBAAM5H,KAAiBijC,sBAAsB/jC,KACtDuI,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,aAlODX,EAyOnBokD,gBAAkB,WAAM,IAAA37B,EACEzoB,EAAK0f,MAAnBlI,EADYiR,EACZjR,EAAGrQ,EADSshB,EACTthB,OACLk9C,EAAc7oC,YAAmBrU,GACvC,GAAKk9C,EAAL,CAEAnJ,IAAKn7B,aAAkBskC,IAEvB,IAAM5sC,EAAG,GAAAtM,OAAMhE,EAAN,eACH1C,EAAU+S,EAAE,eAGlBxX,EAAKm7C,sBAAsB1jC,EAAKhT,EAFjB,QAlPAzE,EAuPnBskD,kBAAoB,WAChBtkD,EAAKukD,mBAAmB72B,QAAQsb,UAAY,GAxP7BhpC,EA2PnBwkD,iBAAmB,WAAM,IACbr9C,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GACAA,EAAKa,OAEVwT,KAAiBksC,6BAA6B,CAAEt9C,OAAQA,KAjQzCnH,EAoQnB0kD,eAAiB,WAAM,IAAAz7B,EACOjpB,EAAK0f,MAAvBvY,EADW8hB,EACX9hB,OAAQusB,EADGzK,EACHyK,MAEhBJ,aAASnsB,EAAQ,MAAM,GAEnBusB,GACA1xB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KA5QDnH,EAiRnB2kD,iBAAmB,WACf,OAAK3kD,EAAKukD,mBAEHvkD,EAAKukD,mBAAmB72B,QAAQk3B,aAFF,GA/QrC5kD,EAAKukD,mBAAqBnkC,IAAMogB,YAHjB,IAKPr5B,EAAWnH,EAAK0f,MAAhBvY,OALO,OAOfnH,EAAKsc,QAAU,IAAIjT,IACnBrJ,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZ48C,mBAAmB,GAVR/jD,uFAyBKqlB,EAAWC,GAAW,IAClCne,EAAWhH,KAAKuf,MAAhBvY,OAEF41B,EAAO58B,KAAKokD,mBAAmB72B,QAC7Bsb,EAA0CjM,EAA1CiM,UAAWC,EAA+BlM,EAA/BkM,aAAc4b,EAAiB9nB,EAAjB8nB,aAC3Bt/B,EAAW,CACbyjB,UAAWA,EACXC,aAAcA,EACd4b,aAAcA,GAOlB,OAJAhhD,QAAQ4F,IAAR,gDAAA0B,OACoDhE,EADpD,eAAAgE,OACwE69B,EADxE,kBAAA79B,OACkG89B,EADlG,kBAAA99B,OAC+H05C,IAGxHt/B,gDAGWN,EAAWC,GAAW,IAAAsd,EACdriC,KAAKuf,MAAvBvY,EADgCq7B,EAChCr7B,OAAQma,EADwBkhB,EACxBlhB,MACRyiC,EAAsB5jD,KAAKmkB,MAA3By/B,kBAER,OAAI9+B,EAAU9d,SAAWA,IAIrB8d,EAAU3D,QAAUA,GAIpB4D,EAAU6+B,oBAAsBA,8CAOrB1+B,EAAWC,EAAWC,GAAU,IACvCpe,EAAWhH,KAAKuf,MAAhBvY,OACJke,EAAUle,SAAWA,GACrBhH,KAAKyjD,mBAGT//C,QAAQ4F,IAAI,qBAAsBtJ,KAAKokD,oBACvC,IAAMxnB,EAAO58B,KAAKokD,mBAAmB72B,QAC7Bsb,EAA0CzjB,EAA1CyjB,UAAWC,EAA+B1jB,EAA/B0jB,aAA+B1jB,EAAjBs/B,aACjChhD,QAAQ4F,IAAR,kDAAA0B,OACsDhE,EADtD,oBAAAgE,OAEQ4xB,EAAKiM,UAFb,uBAAA79B,OAG0B4xB,EAAK8nB,aAH/B,uBAAA15C,OAGiE4xB,EAAKkM,eAEtElM,EAAKiM,UAAYA,GAAajM,EAAKkM,aAAeA,GAClDplC,QAAQ4F,IAAR,iDAAA0B,OACqDhE,EADrD,oBAAAgE,OAEQ4xB,EAAKiM,UAFb,uBAAA79B,OAG0B4xB,EAAK8nB,aAH/B,uBAAA15C,OAGiE4xB,EAAKkM,2DAKtE9oC,KAAKyjD,mBAEL10C,IAAU0S,GAAG,mBAAoBzhB,KAAK+3C,oBACtChpC,IAAU0S,GAAG,qBAAsBzhB,KAAKihD,sBACxC1nC,KAAgBkI,GAAG,2BAA4BzhB,KAAKkhD,4BACpDjnC,KAAgBwH,GAAG,2BAA4BzhB,KAAKmhD,2EAIpDpyC,IAAU/M,eAAe,mBAAoBhC,KAAK+3C,oBAClDhpC,IAAU/M,eAAe,qBAAsBhC,KAAKihD,sBACpD1nC,KAAgBvX,eAAe,2BAA4BhC,KAAKkhD,4BAChEjnC,KAAgBjY,eAAe,2BAA4BhC,KAAKmhD,6DAsL3D,IAAA32C,EAAAxK,KAAAkkC,EAWDlkC,KAAKuf,MATLlI,EAFC6sB,EAED7sB,EACAyI,EAHCokB,EAGDpkB,UACA9Y,EAJCk9B,EAIDl9B,OACA0Z,EALCwjB,EAKDxjB,QACAikC,EANCzgB,EAMDygB,kBACAC,EAPC1gB,EAOD0gB,qBACArxB,EARC2Q,EAQD3Q,MACAquB,EATC1d,EASD0d,WACAl4B,EAVCwa,EAUDxa,QAEIk6B,EAAsB5jD,KAAKmkB,MAA3By/B,kBAEF7/C,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EACD,OACI8b,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAACm4C,GAAD,CAAmBn7B,QAASA,IAC5B7J,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAKokD,mBAAoBtkC,UAAU,uBAKzD,IAAM1E,EAAWD,YAAgBnU,GAC3Bk9C,EAAc7oC,YAAmBrU,GACjCwU,EAAMD,YAAWvU,GACjB47C,EAAUjnC,YAAY3U,GACtB89C,EAAOrqC,YAASzT,GAEhBmV,EAAUF,YAAoBjV,GAC9BiK,EAAQ,GACdjR,KAAKmc,QAAU,IAAIjT,IACnBiT,EAAQ/Y,QAAQ,SAAA2hD,GACZ,IAAM3gD,EAAO2K,IAAU9L,IAAI8hD,EAAOj2C,SAC9B1K,IACAoG,EAAK2R,QAAQlb,IAAImD,EAAK1B,GAAI0B,EAAK1B,IAC/BuO,EAAMzH,KAAKpF,MAInB,IAGMpB,EAHciO,EAAM+zC,KAAK,SAACv5C,EAAGw5C,GAC/B,OAAOvxB,YAAmBuxB,GAAKvxB,YAAmBjoB,KAE5B+B,IAAI,SAAApJ,GAAI,OAC9Byb,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAUp4B,IAAKlT,EAAK1B,IACpDmd,EAAArf,EAAAkM,cAACw4C,GAAD,CAAap5C,OAAQ1H,EAAK1B,GAAIw4B,SAAU1wB,EAAK26C,sBAI7CvgD,EAAUb,EAAVa,MAEFL,EACFsb,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACm4C,GAAD,CACI79C,OAAQA,EACR46C,WAAYA,EACZl4B,QAASA,EACT1J,QAAShgB,KAAKmkD,oBAElBtkC,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAKokD,mBAAoBtkC,UAAU,qBACzCD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,qBACXD,EAAArf,EAAAkM,cAAC04C,GAAD,CACIp+C,OAAQA,EACRw6C,WAAYjuB,EACZ/Y,mBAAoB+Y,EACpBguB,aAAc38C,EAAQ5E,KAAKqkD,iBAAmB,SAGpDjpC,GAAY8oC,GAAe1oC,IACzBqE,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,KACK4a,GACGyE,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAK6jD,oBACxDhkC,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC24C,GAAA7kD,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B/mC,MAMpB8oC,GACGrkC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAKikD,iBACxDpkC,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC44C,GAAA9kD,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/BviC,aAAkBskC,QAO1C1oC,GACGqE,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUsf,UAAWY,EAAQgvB,UACzB7vB,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC64C,GAAA/kD,EAAD,CAAkBsf,UAAU,4BAEhCD,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QAAS1jB,EACT7O,MAAO,CAAE64C,WAAY,WAAYC,SAAU,kBAM/D5lC,EAAArf,EAAAkM,cAAC2iC,GAAA7uC,EAAD,MACAqf,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,MACMskD,GAAQjlC,EAAArf,EAAAkM,cAACg5C,GAAD,CAAuB1+C,OAAQA,IACxC47C,GAAW/iC,EAAArf,EAAAkM,cAACi5C,GAAD,CAAc3+C,OAAQA,KAChC47C,GACE/iC,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAShgB,KAAKukD,gBACxD1kC,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAY0hB,MAAM,UAAU0E,QAAQ,UAAUu7B,QAAM,GAC/C9qC,EAAE,eAAeuuC,mBAO1C/lC,EAAArf,EAAAkM,cAAC2iC,GAAA7uC,EAAD,MACAqf,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAChI,UAAQ,EAAC7nB,UAAWY,EAAQgvB,SAAU1vB,QAAS2kC,GAC5D9kC,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAACm7B,GAAArnC,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI0+B,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B9qC,EAAE,mBAKlBusC,GACG/jC,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAAS4kC,GACnD/kC,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CACI+iD,OAAK,EACLrkB,QACIrf,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,UAAUu7B,QAAM,GAC/B9qC,EAAE,uBAO1BrU,EAAMgD,OAAS,GACZ6Z,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC2iC,GAAA7uC,EAAD,MACAqf,EAAArf,EAAAkM,cAAC6iC,GAAA/uC,EAAD,KAAOwC,MAO3B,OAAOuwB,EAAQ1T,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG/gB,GAAcsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,eAAgBf,IAAavb,sDAjb5Dgb,EAAO4E,GACnC,OAAI5E,EAAMvY,SAAWmd,EAAMkiB,WAChB,CACHA,WAAY9mB,EAAMvY,OAClB48C,mBAAmB,GAIpB,YAvBW3jC,IAAMC,YAodjB4G,GARCC,YACZilB,cACAzkB,cACArG,IA9dW,SAAAC,GAAK,MAAK,CACrB+uB,gBAAiB,CACbjpB,OAAQ,qBAEZ4+B,OAAQ,GAGRj1B,MAAO,CACHrN,QAASpC,EAAMk8B,QAAQC,KAAO,GAElC5N,SAAU,CACNnsB,QAAS,eAmdM,CAAE+D,WAAW,IAChCk2B,eACArR,cAGWrlB,CAAQ08B,IC9gBjBsC,uBACF,SAAAA,EAAYvmC,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA8lD,GAAAhmD,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAgmD,GAAA3lD,KAAAH,KACVuf,0EAGD,IAAAD,EACwBtf,KAAKuf,MAA1BmB,EADHpB,EACGoB,QAASgJ,EADZpK,EACYoK,QAEjB,OACI7J,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACXD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQqlC,eAAgB/lC,QAAS0J,GACpD7J,EAAArf,EAAAkM,cAACo1C,GAAAthD,EAAD,OAEJqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,qCACXD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAhB,6BAdeG,IAAMC,YAyB1BgB,OA/BA,CACX6kC,eAAgB,CACZ9+B,OAAQ,sBA6BD/F,CAAmB4kC,IC1B5BE,uBACF,SAAAA,EAAYzmC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAgmD,IACfnmD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAkmD,GAAA7lD,KAAAH,KAAMuf,KA0BV0b,aAAe,SAAAl3B,GAAQ,IACXwvB,EAAU1zB,EAAK0f,MAAfgU,MAERJ,aAASpvB,EAAKrB,IAEV6wB,GACA1xB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KAhChBnH,EAAKskB,MAAQ,CACTq2B,QAAS,IAJE36C,mFAQC,IAAA2K,EAAAxK,KACRgH,EAAWhH,KAAKuf,MAAhBvY,OAEF8E,EAASoH,YAAclM,GACxB8E,GAELjK,KAAgBgJ,KAAK,CACjB/B,QAAS,oBACTgG,QAAShD,EACTuuC,eAAgB,EAChBznB,MAAO,MACRznB,KAAK,SAAAhB,GACJ,IAAMxK,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOwK,EAAOswC,UAE/BjwC,EAAKia,SAAS,CAAE+1B,QAASrwC,EAAOswC,8CAiB/B,IAAA7L,EAAA5uC,KAAAsf,EACiCtf,KAAKuf,MAAnC0mC,EADH3mC,EACG2mC,UAAWv8B,EADdpK,EACcoK,QAAS6J,EADvBjU,EACuBiU,MAGtB0mB,EAFcj6C,KAAKmkB,MAAjBq2B,QAEchtC,IAAI,SAAA/B,GAAC,OACvBoU,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAACr4B,IAAK7L,GAClBoU,EAAArf,EAAAkM,cAAC04C,GAAD,CAAap+C,OAAQyE,EAAGyvB,SAAU0T,EAAK3T,kBAIzC12B,EACFsb,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACw5C,GAAD,CAAsBx8B,QAASA,IAC/B7J,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBnT,MAAO,CAAEs5C,cAC3ChM,IAKb,OAAO1mB,EAAQ1T,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG/gB,GAAcsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBAAoBvb,UA5D9C0b,IAAMC,YAuEnC8lC,GAAehlC,aAAe,CAC1BuS,OAAO,EACP0yB,UAAW,GAGAD,oDC5ETG,uBACF,SAAAA,EAAY5mC,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAmmD,GAAArmD,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAqmD,GAAAhmD,KAAAH,KACVuf,0EAGD,IAAAD,EACsBtf,KAAKuf,MAAxBmB,EADHpB,EACGoB,QAASkQ,EADZtR,EACYsR,MAEjB,OACI/Q,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACXD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQqlC,eAAgB/lC,QAAS4Q,GACpD/Q,EAAArf,EAAAkM,cAACo1C,GAAAthD,EAAD,OAEJqf,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,qCACXD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAhB,yBAdmBG,IAAMC,YAqB9BgB,OA3BA,CACX6kC,eAAgB,CACZ9+B,OAAQ,sBAyBD/F,CAAmBilC,ICzB5BC,sNACFjiC,MAAQ,CACJ7O,MAAO,KAGX+wC,aAAe,SAACh7C,EAAOiK,GACnBzV,EAAK4kB,SAAS,CAAEnP,mFAGX,IAAAgK,EACsBtf,KAAKuf,MAAxBmK,EADHpK,EACGoK,QAAS6J,EADZjU,EACYiU,MACTje,EAAUtV,KAAKmkB,MAAf7O,MAEF/Q,EACFsb,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC45C,GAAD,CAA0B11B,MAAOlH,IACjC7J,EAAArf,EAAAkM,cAAC65C,GAAA/lD,EAAD,CACI8U,MAAOA,EACPiN,SAAUviB,KAAKqmD,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT/mC,EAAArf,EAAAkM,cAACm6C,GAAArmD,EAAD,CAAKsmD,MAAM,QAAQn6C,MAAO,CAAEs/B,SAAU,UACtCpsB,EAAArf,EAAAkM,cAACm6C,GAAArmD,EAAD,CAAKsmD,MAAM,OAAOn6C,MAAO,CAAEs/B,SAAU,UACrCpsB,EAAArf,EAAAkM,cAACm6C,GAAArmD,EAAD,CAAKsmD,MAAM,QAAQn6C,MAAO,CAAEs/B,SAAU,UACtCpsB,EAAArf,EAAAkM,cAACm6C,GAAArmD,EAAD,CAAKsmD,MAAM,QAAQn6C,MAAO,CAAEs/B,SAAU,YAKlD,OAAO1Y,EAAQ1T,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG/gB,GAAcsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBvb,UAhC7C0b,IAAMC,YA2ChCkmC,GAAYplC,aAAe,CACvBuS,OAAO,EACP0yB,UAAW,GAGAG,UCrCTW,uBACF,SAAAA,EAAYxnC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA+mD,IACflnD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAinD,GAAA5mD,KAAAH,KAAMuf,KAmBV+xB,qBAAuB,SAAA3wC,GACDd,EAAK0f,MAAfgU,OAGR1zB,EAAK4kB,SAAS,CACVzd,OAAQrG,EAAO4wC,WACfyV,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BTrnD,EAgCnBsnD,sBAAwB,WACpBtnD,EAAK4kB,SAAS,CAAEwiC,iBAAiB,KAjClBpnD,EAoCnBunD,uBAAyB,WACrBvnD,EAAK4kB,SAAS,CAAEwiC,iBAAiB,KArClBpnD,EAwCnBwnD,yBAA2B,SAAA33C,GACvBhM,QAAQ4F,IAAI,oCAAqCoG,GACjD7P,EAAK4kB,SAAS,CAAEyiC,oBAAoB,KA1CrBrnD,EA6CnBynD,0BAA4B,WACxBznD,EAAK4kB,SAAS,CAAEyiC,oBAAoB,KA9CrBrnD,EAiDnB0nD,uBAAyB,WAAM,IACnBh0B,EAAU1zB,EAAK0f,MAAfgU,MACe1zB,EAAKskB,MAApB6iC,WAEJnnD,EAAK4kB,SAAS,CAAEuiC,WAAY,OACrBzzB,EACP1xB,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,IAGZoR,KAAiBovC,6BAA4B,IA5DlC3nD,EAgEnBslD,iBAhEmB,eAAA9kD,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAgEA,SAAAC,EAAM0D,GAAN,IAAAL,EAAA,OAAAmrB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVqD,EADU,CAAAvD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGEc,KAAgBgJ,KAAK,CAClC/B,QAAS,oBACTgG,QAAS1K,EAAK1B,GACd43C,OAAO,IANI,UAGXv2C,EAHWlD,EAAAkK,KASfhH,EAAO6O,IAAU3P,IAAIc,EAAKrB,KAAOqB,EATlB,CAAAlD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAYfxB,EAAK4kB,SAAS,CAAEuiC,WAAYjjD,EAAKrB,KAZlB,wBAAA7B,EAAAU,SAAAb,MAhEA,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAK4nD,WAAaxnC,IAAMogB,YAHT,IAKP9M,EAAUhU,EAAVgU,MALO,OAOf1zB,EAAKskB,MAAQ,CACTnd,OAAQusB,EAAQnb,KAAiBsvC,aAAetvC,KAAiBpR,QARtDnH,mFAafuY,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,qEAI/Cl5B,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,uDA8DtD,IAAAhyB,EACiCtf,KAAKuf,MAAnCmB,EADHpB,EACGoB,QAASZ,EADZR,EACYQ,UAAWyT,EADvBjU,EACuBiU,MADvBrP,EAE+DlkB,KAAKmkB,MAAjEnd,EAFHkd,EAEGld,OAAQggD,EAFX9iC,EAEW8iC,WAAYC,EAFvB/iC,EAEuB+iC,gBAAiBC,EAFxChjC,EAEwCgjC,mBACvC9V,EAAgBpqC,GAAUggD,EAC1Bf,EAAYjmD,KAAKynD,YAAcznD,KAAKynD,WAAWl6B,QAAUvtB,KAAKynD,WAAWl6B,QAAQi3B,mBAAqB,EAExGjgD,EAAU,KAiCd,OA/BIA,EADA0iD,EAEIpnC,EAAArf,EAAAkM,cAACi7C,GAAD,CACI3gD,OAAQoqC,EACR7d,MAAOA,EACP0yB,UAAWA,EACXv8B,QAAS1pB,KAAKonD,yBAGfF,EAEHrnC,EAAArf,EAAAkM,cAACk7C,GAAD,CACI5gD,OAAQoqC,EACR7d,MAAOA,EACP0yB,UAAWA,EACXv8B,QAAS1pB,KAAKsnD,4BAKlBznC,EAAArf,EAAAkM,cAACm7C,GAAD,CACInnB,IAAK1gC,KAAKynD,WACVzgD,OAAQoqC,EACR7d,MAAOA,EACPquB,WAAYoF,IAAehgD,EAC3B29C,kBAAmB3kD,KAAKmnD,sBACxBvC,qBAAsB5kD,KAAKqnD,yBAC3B39B,QAAS1pB,KAAKunD,yBAKnBh0B,EACH1T,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG/gB,GAEHsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,CAAEshC,gBAAiBv0B,GAASzT,IAAavb,UA1H9E0b,IAAMC,YAqI7B6mC,GAAS/lC,aAAe,CACpBlB,UAAW,KACXY,QAAS,KACT6S,OAAO,GAGIrS,WAAWmG,KAAXnG,CAAwB6lC,cC9IjCgB,4LACO,IAAAzoC,EACoDtf,KAAKuf,MAA7CvY,GADZsY,EACGoB,QADHpB,EACYtY,QAAQk0B,EADpB5b,EACoB4b,SAAU1gB,EAD9B8E,EAC8B9E,kBAE7Bs+B,EAAah8B,YAAkB9V,EAAQwT,GAE7C,OACIqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQk0B,SAAUA,EAAU1gB,kBAAmBA,EAAmBg+B,YAAU,IACrG34B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBg5B,WAT3B74B,IAAM+nC,gBAqB5BD,GAAQ/mC,aAAe,CACnBxG,mBAAmB,GAGR0G,WAlCA,CACX+mC,eAAgB,CACZ9kC,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR+R,OAAQ,IA6BDhY,CAAmB6mC,IC3B5BG,4LACO,IAAA5oC,EACgCtf,KAAKuf,MAAlCvY,EADHsY,EACGtY,OAAQgZ,EADXV,EACWU,QAASU,EADpBpB,EACoBoB,QAEzB,OACIb,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAASA,GACnDH,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQwT,mBAAiB,IAClDqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAC+0C,GAAD,CAAoBz6C,OAAQA,gBAX5BiZ,IAAM+nC,gBA0BvB9mC,OAhCA,CACXwuB,SAAU,CACNnsB,QAAS,QA8BFrC,CAAmBgnC,ICjB5BC,uBACF,SAAAA,EAAY5oC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAmoD,IACftoD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAqoD,GAAAhoD,KAAAH,KAAMuf,KAkCV+xB,qBAAuB,SAAA3wC,GAAU,IACrB4wC,EAA+B5wC,EAA/B4wC,WAAY6W,EAAmBznD,EAAnBynD,eAEpBvoD,EAAK4kB,SAAS,CACV8sB,WAAYA,EACZ6W,eAAgBA,KAxCLvoD,EA4CnB6lB,YAAc,WAAM,IAAApG,EACazf,EAAK0f,MAA1BvY,EADQsY,EACRtY,OAAQk0B,EADA5b,EACA4b,SACXA,GAELA,EAASl0B,IA7CTnH,EAAKskB,MAAQ,CACTotB,WAAYn5B,KAAiB08B,YAC7BsT,eAAgB,MALLvoD,qFASGilB,EAAWC,GAAW,IAAAtE,EACdzgB,KAAKuf,MAAvBvY,EADgCyZ,EAChCzZ,OAAQma,EADwBV,EACxBU,MAEhB,OAAI4D,EAAUwsB,aAAevqC,IAIzB+d,EAAUqjC,iBAAmBphD,GAI7B8d,EAAU3D,QAAUA,+CAQxB/I,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,qEAI/Cl5B,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,uDAmBtD,IAAA+W,EAAA//B,EACgCtoB,KAAKuf,MAAlCvY,EADHshB,EACGthB,OAAQgZ,EADXsI,EACWtI,QAASU,EADpB4H,EACoB5H,QACnB4nC,EAAiBtoD,KAAKmkB,MAAMotB,WAE5Bn2B,EAAWD,YAAgBnU,GAC3BuhD,EAAexrC,YAAyB/V,GAC1CwhD,EAAoB,GAKxB,OAJID,EAAe,IACfC,EAAqC,IAAjBD,EAAqB,iBAArB,KAAAv9C,OAA6Cu9C,EAA7C,iBAIpB1oC,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAACjvB,QAAS,CAAEgC,KAAMhC,EAAQgvB,UAAY1vB,QAASA,GAC3DH,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,qBAADwnC,EAAA,GAAAvoD,OAAAymB,EAAA,EAAAzmB,CAAAuoD,EAChB3nC,EAAQ+nC,iBAAmBzhD,IAAWshD,GADtBxoD,OAAAymB,EAAA,EAAAzmB,CAAAuoD,EAEjB,oBAAqBrhD,IAAWshD,GAFfD,IAIrBroC,QAAShgB,KAAK0lB,aACd7F,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,IACzB6Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAC+0C,GAAD,CAAoBz6C,OAAQA,KAEhC6Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,iBAAkBH,EAAQgoC,0BAArD,IACMttC,EACDotC,cA/EHvoC,IAAMC,YA8FrBgB,OA1GA,SAAAC,GAAK,MAAK,CACrBuuB,SAAU,CACNnsB,QAAS,GAEbklC,iBAAkB,CACdzhC,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KAAO,cAElDupB,wBAAyB,CACrBxmC,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAK8iC,UAAY,aAkG5C,CAAEl5B,WAAW,GAAhCpG,CAAwCinC,cCzFjDQ,uBACF,SAAAA,EAAYppC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA2oD,IACf9oD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA6oD,GAAAxoD,KAAAH,KAAMuf,KAkCV+xB,qBAAuB,SAAA3wC,GACnBd,EAAK4kB,SAAL3kB,OAAAshB,EAAA,EAAAthB,CAAA,GACOa,KAlCPd,EAAKskB,MAAQ,CACTotB,WAAYn5B,KAAiB08B,YAC7B8T,cAAexwC,KAAiBywC,gBALrBhpD,qFASGilB,EAAWC,GAAW,IAAAzF,EACHtf,KAAKuf,MAAlCvY,EADgCsY,EAChCtY,OAAQC,EADwBqY,EACxBrY,UAAWka,EADa7B,EACb6B,MAE3B,OAAI4D,EAAUwsB,aAAevqC,GAAU+d,EAAU6jC,gBAAkB3hD,IAI/D8d,EAAUqjC,iBAAmBphD,GAAU+d,EAAU+jC,oBAAsB7hD,GAIvE6d,EAAU3D,QAAUA,+CAQxB/I,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,qEAI/Cl5B,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,uDAStD,IAAA7wB,EAC0DzgB,KAAKuf,MAA5DvY,EADHyZ,EACGzZ,OAAQC,EADXwZ,EACWxZ,UAAW8hD,EADtBtoC,EACsBsoC,WAAY/oC,EADlCS,EACkCT,QAASU,EAD3CD,EAC2CC,QAASrJ,EADpDoJ,EACoDpJ,EACnDixC,EAAiBtoD,KAAKmkB,MAAMotB,WAC5ByX,EAAoBhpD,KAAKmkB,MAAMykC,cAC/BtkD,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEjCkK,EAAmB7M,EAAnB6M,eAEFqH,EAAOD,YAAejU,GACtB2kD,EAAajyC,YAAqB1S,GAClC4kD,EAAiBryC,YAAyBvS,GAC1CC,EAAUgT,aAAWjT,EAAS+S,IAAM,OAEpC8xC,EACFh4C,GAAkB43C,EACdlpC,EAAArf,EAAAkM,cAACqT,GAAA,EAAD,CAAiBjU,OAAQqF,IAEzB0O,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,IAGjC,OACI6Y,EAAArf,EAAAkM,cAAC+iC,GAAAjvC,EAAD,CAAUmvC,QAAM,EAAC7vB,UAAWY,EAAQgvB,SAAU1vB,QAASA,GACnDH,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IACP,gBADiB/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GAEd4gB,EAAQ0oC,iBAAmBpiD,IAAWshD,GAAkBrhD,IAAc+hD,GACzE,CAAEK,oBAAqBriD,IAAWshD,GAAkBrhD,IAAc+hD,KAErEG,EACDtpC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACVipC,GAAcG,EACXrpC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBopC,GAE/BrpC,EAAArf,EAAAkM,cAAC+0C,GAAD,CAAoBz6C,OAAQA,IAEhC6Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,mBAAoBH,EAAQ4oC,uBAAwB9wC,IAEnFqH,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,iBAAkBH,EAAQ4oC,uBAE7CzpC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,MACMyjC,GAAcE,GACZppC,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyBmpC,EAAzC,MAEH1kD,eAvFd0b,IAAMC,YA+GlB4G,GALCC,YACZ7F,IAvHW,SAAAC,GAAK,MAAK,CACrBuuB,SAAU,CACNnsB,QAAS,GAEb6lC,iBAAkB,CACd1vB,WAAYvY,EAAM8d,QAAQC,QAAQC,KAAO,cAE7CmqB,qBAAsB,CAClBpnC,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAK8iC,UAAY,aA+GvD,CAAEl5B,WAAW,IAChCC,cAGWT,CAAQ6hC,WCtGRznC,WA/BA,SAAAC,GAAK,MAAK,CACrBooC,cAAe,CACX7vB,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQuqB,KAAK,KAAO,aAAe,UACrFtnC,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAKwhB,QAAU,aAAe,WAEvFuqB,qBAAsB,CAClBvnC,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAKwhB,QAAU,aAAe,aAyBzD,CAAE5X,WAAW,GAAhCpG,CArBf,SAAuB3B,GAAO,IAClBuM,EAAuCvM,EAAvCuM,QAASH,EAA8BpM,EAA9BoM,QAAS3L,EAAqBT,EAArBS,QAASU,EAAYnB,EAAZmB,QAEnC,OACIb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,iBAAkBH,EAAQ6oC,gBACjD1pC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBgM,GACtC7O,QAAQ0O,IACL9L,EAAArf,EAAAkM,cAAA,KAAGoT,UAAWY,EAAQ+oC,qBAAsBzpC,QAASA,GAChD2L,MCef+9B,uBACF,SAAAA,EAAYnqC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA0pD,IACf7pD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA4pD,GAAAvpD,KAAAH,KAAMuf,KA6CVoqC,yBAA2B,SAAAhpD,GAAU,IAG3BipD,EAFWjpD,EAAT+c,KAEiBgY,OAEpBk0B,EAGD/pD,EAAK68C,WAAWkN,GAFhB/pD,EAAKg6C,eApDMh6C,EA0DnBgqD,oBAAsB,SAAAC,GAIlB,IAHA,IAAMrnD,EAAM,GACN+K,EAAM,IAAItE,IAEPpD,EAAI,EAAGA,EAAIgkD,EAAQ9jD,OAAQF,IAAK,CACrC,IAAIqE,EAAS2/C,EAAQhkD,GAAG20C,SACxB,GAAItwC,EACA,IAAK,IAAI4/C,EAAI,EAAGA,EAAI5/C,EAAOnE,OAAQ+jD,IAC1Bv8C,EAAI1K,IAAIqH,EAAO4/C,MAChBv8C,EAAIvM,IAAIkJ,EAAO4/C,GAAI5/C,EAAO4/C,IAC1BtnD,EAAI+G,KAAKW,EAAO4/C,KAUhC,OAJAtnD,EAAIuiD,KAAK,SAACxkD,EAAGwpD,GACT,OAAOC,aAAar3C,IAAU3P,IAAI+mD,GAAGE,MAAOt3C,IAAU3P,IAAIzC,GAAG0pD,SAG1DznD,GA9EQ5C,EAiFnB68C,WAjFmB,eAAAr8C,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAiFN,SAAAC,EAAMgd,GAAN,IAAAysC,EAAAxqD,EAAAqH,EAAAkzC,EAAAJ,EAAAsQ,EAAA9N,EAAA+N,EAAA9N,EAAA+N,EAAAR,EAAAlnD,EAAAyU,EAAAqlC,EAAA6N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAr9C,EAAA0sC,EAAAhpC,EAAAnL,EAAA,OAAAopB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTlB,EAAKsqD,UAAY,IAAI1xC,KACrB5Y,EAAK6d,KAAOA,EACNysC,EAAYtqD,EAAKsqD,UACnBxqD,EAAQ,KAEJqH,EAAWnH,EAAK0f,MAAhBvY,OACAkzC,EAAkBr6C,EAAKskB,MAAvB+1B,cAEHlzC,EATI,CAAAnG,EAAAE,KAAA,gBAUC+4C,EAAW,GACXsQ,EAAevoD,KAAgBgJ,KAAK,CACtC/B,QAAS,cACT4pB,MAAOhV,EACPkV,MAAO,MAEXknB,EAAStwC,KAAK4gD,IAER9N,EAAY3C,GAAcj8B,MAEtB2sC,EAAoBxoD,KAAgBgJ,KAAK,CAC3C/B,QAAS,cACT4pB,MAAO4pB,EACP1pB,MAAO,MAEXknB,EAAStwC,KAAK6gD,KAGZ9N,EAAehD,GAAiB77B,MAE5B4sC,EAAuBzoD,KAAgBgJ,KAAK,CAC9C/B,QAAS,cACT4pB,MAAO6pB,EACP3pB,MAAO,MAEXknB,EAAStwC,KAAK8gD,IAnCbzpD,EAAAE,KAAA,GAsCiB4I,QAAQgnC,IAAImJ,EAAStsC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAwgB,GAAC,OAAI,UAtC5D,WAsCC4/B,EAtCDjpD,EAAAkK,KAuCCnI,EAAQ/C,EAAKgqD,oBAAoBC,GAEnCK,IAActqD,EAAKsqD,UAzClB,CAAAtpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,qBA6CD64C,IACQ7iC,EAAMxX,EAAK0f,MAAXlI,EAEFqlC,EAAah/B,EAAKkoC,gBAClB2E,EAAuB,CAAC,iBAAkBlzC,EAAE,iBAAiBuuC,gBAG1Cp6C,KAAK,SAAAsjC,GAAE,OAAIA,EAAGhS,SAAS4f,MAC3CJ,GAAaiO,EAAqB/+C,KAAK,SAAAsjC,GAAE,OAAIA,EAAGhS,SAASwf,EAAUsJ,mBAEpEhjD,EAAMioD,OAAO,EAAG,EAAG3Q,EAAcx3C,KAIzC7C,EAAK4kB,SAAS,CACVrB,IAAK,KACL0nC,cAAe,KACfloD,MAAOA,EACPgoD,OAAQ,KACRr9C,SAAU,OAGd5N,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAAOiD,KAEpB8a,EAAK1X,QAAU+kD,MAtEd,CAAAlqD,EAAAE,KAAA,gBAuEKypD,EAAiB,GAEjBC,EAAgB5oD,KAAgBgJ,KAAK,CACvC/B,QAAS,oBACT4pB,MAAOhV,IAEX8sC,EAAehhD,KAAKihD,GAEhBnO,IACMoO,EAAqB7oD,KAAgBgJ,KAAK,CAC5C/B,QAAS,oBACT4pB,MAAO4pB,IAEXkO,EAAehhD,KAAKkhD,IApFvB7pD,EAAAE,KAAA,GAuF2B4I,QAAQgnC,IAAI6Z,EAAeh9C,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAwgB,GAAC,OAAI,UAvF5E,WAuFKygC,EAvFL9pD,EAAAkK,KAwFK6/C,EAAS/qD,EAAKgqD,oBAAoBc,GAEpCR,IAActqD,EAAKsqD,UA1FtB,CAAAtpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA8FDxB,EAAK4kB,SAAS,CACVmmC,OAAQA,IAGZjrD,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAAOirD,GAnGvB,WAuGLr9C,EAAW,IACXvG,EAxGK,CAAAnG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyGYc,KAAgBgJ,KAAK,CAClC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAOhV,EACPvM,eAAgB,EAChBwhB,gBAAiB,EACjBtH,OAAQ,EACRuH,MAAO,GACPlnB,OAAQ,OAjHP,QAyGL6B,EAzGK1M,EAAAkK,KAAAlK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAoHYc,KAAgBgJ,KAAK,CAClC/B,QAAS,iBACT4pB,MAAOhV,EACPstC,YAAa,EACb3Q,eAAgB,EAChB4Q,kBAAmB,EACnBr4B,MAAO,KA1HN,QAoHLrlB,EApHK1M,EAAAkK,KAAA,WA8HT0C,KAAaC,SAASH,EAASA,UAE3B48C,IAActqD,EAAKsqD,UAhId,CAAAtpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA0IT,IANAxB,EAAK4kB,SAAS,CACVlX,SAAUA,IAGR0sC,EAAQ,IAAI/wC,IACZ+H,EAAQ,IAAI/H,IACTpD,EAAI,EAAGA,EAAIyH,EAASA,SAASvH,OAAQF,IAC1Cm0C,EAAMh5C,IAAIsM,EAASA,SAASzH,GAAGM,QAASmH,EAASA,SAASzH,GAAGM,SACzDmH,EAASA,SAASzH,GAAGqL,gBACrBF,EAAMhQ,IAAIsM,EAASA,SAASzH,GAAGqL,eAAgB5D,EAASA,SAASzH,GAAGqL,gBAI5ExR,EAAQC,IAAUuD,WAClBuQ,YAAiB/T,EAADG,OAAAwpB,GAAA,EAAAxpB,CAAYm6C,EAAMzoC,SAClCF,YAAiB3R,EAADG,OAAAwpB,GAAA,EAAAxpB,CAAYmR,EAAMO,SAnJzB,yBAAA3Q,EAAAU,SAAAb,MAjFM,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAuOnBg6C,YAvOmB/5C,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAuOL,SAAAyB,IAAA,IAAAgpD,EAAAC,EAAAnR,EAAAvvC,EAAA2gD,EAAAhoC,EAAA0nC,EAAA5Q,EAAAv6C,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACSlB,EAAK0f,MAAhBvY,OADE,CAAA7E,EAAApB,KAAA,eAGNlB,EAAK4kB,SAAS,CACVrB,IAAK,KACL0nC,cAAe,KACfloD,MAAO,KACPgoD,OAAQ,KACRr9C,SAAU,OARRpL,EAAAd,OAAA,wBAcJ6pD,EAAarpD,KAAgBgJ,KAAK,CACpC/B,QAAS,cACTuiD,SAAU,CAAEviD,QAAS,wBACrB8pB,MAAO,KACRlpB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS2xC,SAAU,MAGnC0Q,EAAuBtpD,KAAgBgJ,KAAK,CAC9C/B,QAAS,cACT4pB,MAAO,GACPE,MAAO,MACRlpB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAAS2xC,SAAU,MAGnCT,EAAuBn4C,KAAgBgJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAUiN,UACnBs+B,OAAO,IACR5wC,MAAM,SAAA/F,MAlCCxB,EAAApB,KAAA,EAoCwC4I,QAAQgnC,IAAI,CAC1Dua,EACAC,EACAnR,IAvCM,OAAAvvC,EAAAtI,EAAA4I,KAAAqgD,EAAAtrD,OAAAy6C,EAAA,EAAAz6C,CAAA2K,EAAA,GAoCH2Y,EApCGgoC,EAAA,GAoCEN,EApCFM,EAAA,GAoCiBlR,EApCjBkR,EAAA,GA0CVvrD,EAAK4kB,SAAS,CACVrB,IAAKA,EACL0nC,cAAeA,EACf5Q,cAAeA,EACft3C,MAAO,KACPgoD,OAAQ,KACRr9C,SAAU,OAGR5N,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOyjB,EAAIq3B,UAC5B/mC,YAAiB/T,EAAOmrD,EAAcrQ,UArD5B,yBAAAt4C,EAAAZ,SAAAW,MAvOKrC,EA+RnByrD,oBA/RmBxrD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA+RG,SAAA8qD,IAAA,IAAAtR,EAAAn0C,EAAA,OAAAopB,EAAA1uB,EAAAI,KAAA,SAAA4qD,GAAA,cAAAA,EAAA1qD,KAAA0qD,EAAAzqD,MAAA,cAAAyqD,EAAAzqD,KAAA,EACEc,KAAgBgJ,KAAK,CACrC/B,QAAS,WACTsxC,aAAc,sBACdC,eAAgB,EAChBznB,MAAO,KALO,OAQlB,IAPMqnB,EADYuR,EAAAzgD,KAQTjF,EAAIm0C,EAAMQ,SAASz0C,OAAS,EAAGF,GAAK,EAAGA,IAC5CjE,KAAgBgJ,KAAK,CACjB/B,QAAS,uBACT1C,QAAS6zC,EAAMQ,SAAS30C,KAXd,wBAAA0lD,EAAAjqD,SAAAgqD,MA/RH1rD,EA+SnB4rD,yBAA2B,SAAApgD,GACvBA,EAAMua,kBAEN/jB,KAAgBgJ,KAAK,CACjB/B,QAAS,4BAGbjJ,EAAK4kB,SAAS,CAAEqmC,cAAe,QAtThBjrD,EAyTnB6rD,oBAAsB,SAAC1kD,EAAQC,EAAW0kD,EAAaC,GAAa,IACxDC,EAAoBhsD,EAAK0f,MAAzBssC,gBAEJF,GACA9pD,KAAgBgJ,KAAK,CACjB/B,QAAS,uBACT1C,QAASY,IAIjB6kD,EAAgB7kD,EAAQC,EAAW2kD,IAnUpB/rD,EAsUnBisD,aAAe,WACX,IAAMlvB,EAAO/8B,EAAKksD,QAAQx+B,QAEtBqP,EAAKiM,UAAYjM,EAAK8nB,eAAiB9nB,EAAKkM,cAC5CjpC,EAAKmsD,kBA1UMnsD,EA8UnBosD,UAAY,SAAA1+C,GACR,IAAMvH,EAASuH,EAAWA,EAASA,SAASvH,OAAS,EAMrD,MAAO,CACHglD,YALehlD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGwS,KAAO,EAMjE6hC,eALiBr0C,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGI,QAAU,EAMtE6kD,kBALoBjlD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGtD,GAAK,IAnVzD7C,EA4VnBqsD,eAAiB,SAAC3+C,EAAUpD,GACxB,OAAKA,GACAA,EAAOoD,SAASvH,OAEhBuH,GACAA,EAASA,SAASvH,OAEhB,CACHusB,YAAapoB,EAAOooB,YACpBhlB,SAAUA,EAASA,SAASvC,OAAOb,EAAOoD,WALxBpD,EAHFoD,GA7VL1N,EAyWnBmsD,eAzWmBlsD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAyWF,SAAAiK,IAAA,IAAA1D,EAAAmjD,EAAA58C,EAAA8d,EAAAlhB,EAAA8vC,EAAAhpC,EAAAnL,EAAAnG,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,WACTlB,EAAKssD,QADI,CAAAvhD,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,oBAGL2F,EAAWnH,EAAK0f,MAAhBvY,OAEFmjD,EAAYtqD,EAAKsqD,UAEf58C,EAAa1N,EAAKskB,MAAlB5W,SAEF8d,EAASxrB,EAAKosD,UAAU1+C,GAE9B1N,EAAKssD,SAAU,EACXhiD,EAAS,IACTnD,EAbS,CAAA4D,EAAA7J,KAAA,gBAAA6J,EAAA7J,KAAA,GAcMc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO7yB,EAAK6d,KACZvM,eAAgB,EAChBwhB,gBAAiBtH,EAAO4/B,kBACxBr4B,MAAO,GACPlnB,OAAQ,OArBH,QAcTvB,EAdSS,EAAAG,KAAAH,EAAA7J,KAAA,wBAAA6J,EAAA7J,KAAA,GAwBMc,KAAgBgJ,KAAhB/K,OAAAshB,EAAA,EAAAthB,CAAA,CACXgJ,QAAS,iBACT4pB,MAAO7yB,EAAK6d,MACT2N,EAHQ,CAIXuH,MAAO,MA5BF,QAwBTzoB,EAxBSS,EAAAG,KAAA,WA+BblL,EAAKssD,SAAU,EAEf/+B,aAAejjB,EAAQoD,EAAWA,EAASA,SAAW,IAEtDE,KAAaC,SAASvD,EAAOoD,UAEzB48C,IAActqD,EAAKsqD,UArCV,CAAAv/C,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,kBA+Cb,IANAxB,EAAK4kB,SAAS,CACVlX,SAAU1N,EAAKqsD,eAAe3+C,EAAUpD,KAGtC8vC,EAAQ,IAAI/wC,IACZ+H,EAAQ,IAAI/H,IACTpD,EAAI,EAAGA,EAAIqE,EAAOoD,SAASvH,OAAQF,IACxCm0C,EAAMh5C,IAAIkJ,EAAOoD,SAASzH,GAAGM,QAAS+D,EAAOoD,SAASzH,GAAGM,SACrD+D,EAAOoD,SAASzH,GAAGqL,gBACnBF,EAAMhQ,IAAIkJ,EAAOoD,SAASzH,GAAGqL,eAAgBhH,EAAOoD,SAASzH,GAAGqL,gBAIlExR,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAADG,OAAAwpB,GAAA,EAAAxpB,CAAYm6C,EAAMzoC,SAClCF,YAAiB3R,EAADG,OAAAwpB,GAAA,EAAAxpB,CAAYmR,EAAMO,SAxDrB,yBAAA5G,EAAArJ,SAAAmJ,MAzWE7K,EAoanBusD,qBAAuB,SAAA/gD,GACnBA,EAAMua,mBAraS/lB,EAwanBuuC,YAAc,YAGV1kB,EAFoB7pB,EAAK0f,MAAjBmK,YAtaR7pB,EAAKksD,QAAU9rC,IAAMogB,YAHN,IAAA/gB,EAKUzf,EAAK0f,MAAtBvY,EALOsY,EAKPtY,OAAQ0W,EALD4B,EAKC5B,KALD,OAOf7d,EAAKskB,MAAQ,CACTkoC,gBAAiBrlD,EACjBslD,cAAe5uC,EAEf0F,IAAK,KACL0nC,cAAe,KACfloD,MAAO,KACPgoD,OAAQ,KACRr9C,SAAU,MAfC1N,mFAqCfG,KAAK65C,cAELzhC,KAAiBqJ,GAAG,yBAA0BzhB,KAAK2pD,yEAInDvxC,KAAiBpW,eAAe,yBAA0BhC,KAAK2pD,2DAmY1D,IAAAn/C,EAAAxK,KAAAygB,EACuBzgB,KAAKuf,MAAzBmB,EADHD,EACGC,QAAS1Z,EADZyZ,EACYzZ,OADZkd,EAEmDlkB,KAAKmkB,MAArDf,EAFHc,EAEGd,IAAK0nC,EAFR5mC,EAEQ4mC,cAAeloD,EAFvBshB,EAEuBthB,MAAOgoD,EAF9B1mC,EAE8B0mC,OAAQr9C,EAFtC2W,EAEsC3W,SAErCxJ,EAAO6O,IAAU3P,IAAI+D,GAErBulD,EACFnpC,GAAOA,EAAIq3B,SACLr3B,EAAIq3B,SAASjtC,IAAI,SAAA/B,GAAC,OACdoU,EAAArf,EAAAkM,cAAC8/C,GAAD,CAASl1C,IAAK7L,EAAGzE,OAAQyE,EAAGyvB,SAAU,kBAAM1wB,EAAKkhD,oBAAoBjgD,EAAG,MAAM,GAAO,QAEzF,GAEJghD,EACF3B,GAAiBA,EAAcrQ,SACzBqQ,EAAcrQ,SAASjtC,IAAI,SAAA/B,GAAC,OACxBoU,EAAArf,EAAAkM,cAACggD,GAAD,CACIp1C,IAAK7L,EACLzE,OAAQyE,EACRuU,QAAS,kBAAMxV,EAAKkhD,oBAAoBjgD,EAAG,MAAM,GAAM,QAG/D,GAEJkhD,EAAa/pD,EACbA,EAAM4K,IAAI,SAAA/B,GAAC,OACPoU,EAAArf,EAAAkM,cAACggD,GAAD,CACIp1C,IAAK7L,EACLzE,OAAQyE,EACRuU,QAAS,kBAAMxV,EAAKkhD,oBAAoBjgD,EAAG,MAAM,GAAM,QAG/D,GAEAmhD,EAAchC,EACdA,EAAOp9C,IAAI,SAAA/B,GAAC,OACRoU,EAAArf,EAAAkM,cAACmgD,GAAD,CAAiBv1C,IAAK7L,EAAGzE,OAAQyE,EAAGuU,QAAS,kBAAMxV,EAAKkhD,oBAAoBjgD,EAAG,MAAM,GAAM,QAE/F,GAEAqhD,EACFv/C,GAAYA,EAASA,SACfA,EAASA,SAASC,IAAI,SAAA/B,GAAC,OACnBoU,EAAArf,EAAAkM,cAACqgD,GAAD,CACIz1C,IAAG,GAAAtM,OAAKS,EAAErF,QAAP,KAAA4E,OAAkBS,EAAE/I,IACvBsE,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACbqmD,WAAY9rC,QAAQjW,GACpBgZ,QAAS,kBAAMxV,EAAKkhD,oBAAoBjgD,EAAErF,QAASqF,EAAE/I,IAAI,GAAO,QAGxE,GAENsqD,EAAkB,oBAKtB,OAJIz/C,GAAYA,EAASglB,cACrBy6B,EAA2C,IAAzBz/C,EAASglB,YAAoB,kBAA7B,SAAAvnB,OAA0DuC,EAASglB,YAAnE,cAIlB1S,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAK+rD,QAASjsC,UAAWe,IAAWH,EAAQusC,OAAQ,UAAWC,SAAUltD,KAAK8rD,cACnF/nD,GACG8b,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,eACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAAQ,uBACvBjM,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAAC04C,GAAD,CAAap+C,OAAQA,EAAQw6C,YAAY,KAE7C3hC,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0sC,sBACnB/lB,aAAW,SACXnC,YAAallC,KAAKouC,aAClBvuB,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,SAKf+rD,EAASvmD,OAAS,GACf6Z,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAAQ,WACvBjM,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBotC,SAAUltD,KAAKosD,sBAClDvsC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iCACdysC,EACD1sC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mCAI1B2sC,EAAmBzmD,OAAS,GACzB6Z,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAAQ,SAASH,QAAQ,QAAQ3L,QAAShgB,KAAKyrD,2BAC7DgB,GAGRE,EAAW3mD,OAAS,GACjB6Z,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAAQ,uBACtB6gC,GAGRC,EAAY5mD,OAAS,GAClB6Z,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAAQ,kBACtB8gC,GAGRr/C,GACGsS,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAACygD,GAAD,CAAerhC,QAASkhC,IACvBF,uDAtgBWvtC,EAAO4E,GACnC,OAAI5E,EAAMvY,SAAWmd,EAAMkoC,iBAAmB9sC,EAAM7B,OAASyG,EAAMmoC,cACxD,CACHD,gBAAiB9sC,EAAMvY,OACvBslD,cAAe/sC,EAAM7B,KAErB0F,IAAK,KACL0nC,cAAe,KACfloD,MAAO,KACPgoD,OAAQ,KACRr9C,SAAU,MAIX,YAlCM0S,IAAMC,YA8iBZ4G,GALCC,YACZ7F,IAtjBW,SAAAC,GAAK,MAAK,CACrBisC,sBAAuB,CACnBnmC,OAAQ,kBAEZyoB,SAAU,CACNnsB,QAAS,OAEb0pC,OAAQ,CACJvzB,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,aA8iBhE,CAAE7wB,WAAW,IAChCC,cAGWT,CAAQ4iC,iVC7gBjB2D,eACF,SAAAA,EAAY9tC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAqtD,IACfxtD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAutD,GAAAltD,KAAAH,KAAMuf,KASV8mC,aAAe,SAAAh7C,GACXxL,EAAK4kB,SAAS,CAAE7S,KAAMvG,EAAMC,OAAOgK,QAEnC8C,KAAiBhX,KAAK,4BAA6B,CAC/CwQ,KAAMvG,EAAMC,OAAOgK,MACnB4pB,QAASr/B,EAAKytD,SAASztD,EAAKskB,MAAMjC,UAfvBriB,EAmBnB0tD,mBAAqB,SAAAliD,GACjBxL,EAAK4kB,SAAS,CAAEvC,MAAO7W,EAAMC,OAAOgK,QAEpC8C,KAAiBhX,KAAK,4BAA6B,CAC/CwQ,KAAM/R,EAAKskB,MAAMvS,KACjBstB,QAASr/B,EAAKytD,SAASjiD,EAAMC,OAAOgK,UAxBzBzV,EA4BnB2tD,eAAiB,SAAAl4C,GACb,OAAQA,GACJ,KAAKm4C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQluD,EAiDnBytD,SAAW,SAAAh4C,GACP,OAAQA,GACJ,IAAK,MACD,OAAOm4C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQluD,EAsEnBuuC,YAAc,WACVvuC,EAAK4kB,SAAS,CAAExa,MAAM,KAvEPpK,EA0EnBoK,KAAO,WACHpK,EAAK4kB,SAAS,CAAExa,MAAM,KAxEtBpK,EAAKskB,MAAQ,CACTla,MAAM,EACN2H,KAAM/R,EAAK0f,MAAM4B,MAAM8d,QAAQrtB,KAC/BsQ,MAAOriB,EAAK2tD,eAAe3tD,EAAK0f,MAAM4B,MAAM8d,QAAQC,QAAQC,OANjDt/B,wEA8EV,IACG6gB,EAAY1gB,KAAKuf,MAAjBmB,QADHwD,EAEmBlkB,KAAKmkB,MAArBvS,EAFHsS,EAEGtS,KAAMsQ,EAFTgC,EAEShC,MAEd,OACIrC,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAMjK,KAAKmkB,MAAMla,KACjByf,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,qBAChB4yB,mBAAiB,4BACjBr9B,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,sBAAhB,cACAmd,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACshD,GAAAxtD,EAAD,CAAa6iD,UAAU,WAAWvjC,UAAWY,EAAQutC,aACjDpuC,EAAArf,EAAAkM,cAACwhD,GAAA1tD,EAAD,CAAWg/B,SAAO,EAAC6jB,UAAU,UAA7B,SAGAxjC,EAAArf,EAAAkM,cAACyhD,GAAA3tD,EAAD,CACI6mC,aAAW,QACX6L,KAAK,SACLpzB,UAAWY,EAAQia,MACnBrlB,MAAO1D,EACP2Q,SAAUviB,KAAKqmD,cACfxmC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CAAkB8U,MAAM,QAAQ+4C,QAASxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CAAO0hB,MAAM,YAAc4kC,MAAM,UAC1EjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CAAkB8U,MAAM,OAAO+4C,QAASxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CAAO0hB,MAAM,YAAc4kC,MAAM,WAGjFjnC,EAAArf,EAAAkM,cAACshD,GAAAxtD,EAAD,CAAa6iD,UAAU,WAAWvjC,UAAWY,EAAQutC,aACjDpuC,EAAArf,EAAAkM,cAACwhD,GAAA1tD,EAAD,CAAWg/B,SAAO,EAAC6jB,UAAU,UAA7B,UAGAxjC,EAAArf,EAAAkM,cAACyhD,GAAA3tD,EAAD,CACI6mC,aAAW,SACX6L,KAAK,UACLpzB,UAAWY,EAAQia,MACnBrlB,MAAO4M,EACPK,SAAUviB,KAAKutD,oBACf1tC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,MACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQ4tC,QACd1rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,QAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,SACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQ6tC,WACd3rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,WAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,QACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQ8tC,UACd5rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,UAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,QACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQ+tC,UACd7rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,UAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,OACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQguC,SACd9rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,SAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,SACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQiuC,WACd/rC,QAASlC,EAAQkC,WAI7BkkC,MAAM,WAEVjnC,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8U,MAAM,aACN+4C,QACIxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CACIkgB,QAAS,CACLgC,KAAMhC,EAAQkuC,eACdhsC,QAASlC,EAAQkC,WAI7BkkC,MAAM,2BAtMZ7mC,IAAMC,WAkNjBgB,OAtQA,SAAAC,GAAK,MAAK,CACrB8sC,YAAa,CACThnC,OAA6B,EAArB9F,EAAMk8B,QAAQC,MAE1B3iB,MAAO,CACH1T,OAAM,GAAAjc,OAAKmW,EAAMk8B,QAAQC,KAAnB,SAEVgR,QAAS,CACLpsC,MAAOurC,KAAI,KACXoB,YAAa,CACT3sC,MAAOurC,KAAI,OAGnBc,WAAY,CACRrsC,MAAOwrC,KAAO,KACdmB,YAAa,CACT3sC,MAAOwrC,KAAO,OAGtBc,UAAW,CACPtsC,MAAOyrC,KAAM,KACbkB,YAAa,CACT3sC,MAAOyrC,KAAM,OAGrBc,UAAW,CACPvsC,MAAO0rC,KAAM,KACbiB,YAAa,CACT3sC,MAAO0rC,KAAM,OAGrBc,SAAU,CACNxsC,MAAO2rC,KAAK,KACZgB,YAAa,CACT3sC,MAAO2rC,KAAK,OAGpBc,WAAY,CACRzsC,MAAO4rC,KAAO,KACde,YAAa,CACT3sC,MAAO4rC,KAAO,OAGtBc,eAAgB,CACZ1sC,MAAO6rC,KAAW,KAClBc,YAAa,CACT3sC,MAAO6rC,KAAW,OAG1BnrC,QAAS,KAqNqB,CAAE0E,WAAW,GAAhCpG,CAAwCmsC,aCjQjDyB,eACF,SAAAA,EAAYvvC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA8uD,IACfjvD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAgvD,GAAA3uD,KAAAH,KAAMuf,KAWV8mC,aAAe,SAAAh7C,GACXxL,EAAK4kB,SAAS,CAAEsqC,SAAU1jD,EAAMC,OAAOgK,QAEvCzT,KAAgBgH,aAAa,CAAEC,QAAS,6BAA8BimD,SAAU1jD,EAAMC,OAAOgK,SAf9EzV,EAkBnBuuC,YAAc,WACVvuC,EAAK4kB,SAAS,CAAExa,MAAM,KAnBPpK,EAsBnBoK,KAAO,WACHpK,EAAK4kB,SAAS,CAAExa,MAAM,KAvBP,IAGP+kD,EAASzvC,EAATyvC,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMflvD,EAAKskB,MAAQ,CACTla,MAAM,EACN8kD,SAAUA,GAAY,MARXlvD,wEA0BV,IAAAyf,EACkBtf,KAAKuf,MAAXlI,GADZiI,EACGoB,QADHpB,EACYjI,GADZ6M,EAEsBlkB,KAAKmkB,MAAxBla,EAFHia,EAEGja,KAAM8kD,EAFT7qC,EAES6qC,SAGRE,GAFOC,KAAkBtU,MAAQ,CAAEuU,eAAgB,KAElCA,eAAe3hD,IAAI,SAAA/B,GAAC,OACvCoU,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI8W,IAAK7L,EAAE/I,GACP4S,MAAO7J,EAAE/I,GACT2rD,QAASxuC,EAAArf,EAAAkM,cAAC+V,GAAAjiB,EAAD,CAAO0hB,MAAM,YACtB4kC,MAAK,GAAA97C,OAAKS,EAAEynC,KAAP,SAAAloC,OAAmBS,EAAE2jD,YAArB,SAIb,OACIvvC,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAMA,EACNyf,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,wBAChB4yB,mBAAiB,+BACjBr9B,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,yBAAyB2U,EAAE,aAC3CwI,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACshD,GAAAxtD,EAAD,CAAa6iD,UAAU,YACnBxjC,EAAArf,EAAAkM,cAACyhD,GAAA3tD,EAAD,CACI6mC,aAAW,WACX6L,KAAK,YACL59B,MAAOy5C,EACPxsC,SAAUviB,KAAKqmD,cACd4I,aAxDAhvC,IAAMC,WA0EpB4G,GAPCC,YACZilB,cACAzkB,cACArG,IA/EW,SAAAC,GAAK,MAAK,CACrB8sC,YAAa,CACThnC,OAA6B,EAArB9F,EAAMk8B,QAAQC,MAE1B3iB,MAAO,CACH1T,OAAM,GAAAjc,OAAKmW,EAAMk8B,QAAQC,KAAnB,WA0ES,CAAEh2B,WAAW,IAChC6kB,cAGWrlB,CAAQgoC,IC3EjB5Q,UAAmB,CACrBp0B,SAAU,SACVC,WAAY,SAGV00B,eACF,SAAAA,EAAYl/B,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAy+C,IACf5+C,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA2+C,GAAAt+C,KAAAH,KAAMuf,KAgBVje,2BAA6B,SAAAX,GACzBd,EAAK4kB,SAAS,CAAE4qC,mBAAoB1uD,EAAOyB,uBAlB5BvC,EAqBnByvD,eAAiB,SAAAjkD,GAAS,IACdgkD,EAAuBxvD,EAAKskB,MAA5BkrC,mBACHE,aAAqBF,IAE1BxvD,EAAK4kB,SAAS,CAAEgiB,SAAUp7B,EAAMs7B,iBAzBjB9mC,EA4BnB+mC,gBAAkB,WACd/mC,EAAK4kB,SAAS,CAAEgiB,SAAU,QA7BX5mC,EAgCnB2vD,aAAe,WACX3vD,EAAK+mC,kBAEL/mC,EAAK0f,MAAMkwC,YAnCI5vD,EAsCnB6vD,mBAtCmB5vD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAsCE,SAAAC,IAAA,IAAAyJ,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBlB,EAAK+mC,kBADY/lC,EAAAE,KAAA,EAGI4uD,MAAK,GAAA3kD,OAAI4kD,KAAJ,kBAAA5kD,OAAmC6kD,OAH5C,OAGX1lD,EAHWtJ,EAAAkK,KAIjBrH,QAAQ4F,IAAI,cAAea,GAJV,wBAAAtJ,EAAAU,SAAAb,MAtCFb,EA8CnBiwD,iBAAmB,SAAAzkD,GACfxL,EAAK+mC,kBAEL/mC,EAAKkwD,YAAY9lD,QAjDFpK,EAoDnBmwD,eAAiB,SAAA3kD,GACbxL,EAAK+mC,kBAEL/mC,EAAKowD,eAAehmD,QAvDLpK,EA0DnBqwD,OAAS,SAAAxvB,GACLh9B,QAAQ4F,IAARxJ,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,KACAA,EAAKowD,eAAiBvvB,GAzDtB7gC,EAAKskB,MAAQ,CACTkrC,mBAAoBj3C,KAAiBg4C,wBACrC3pB,SAAU,MALC5mC,mFAUfuY,KAAiBqJ,GAAG,2BAA4BzhB,KAAKsB,2EAIrD8W,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,6DAiD5D,IAAAkJ,EAAAxK,KAAAsf,EACkBtf,KAAKuf,MAApBmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EADZ6M,EAEoClkB,KAAKmkB,MAAtCsiB,EAFHviB,EAEGuiB,SAAU4oB,EAFbnrC,EAEamrC,mBAEZgB,EAAkBd,aAAqBF,GACzCxvC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC66B,GAAA/mC,EAAD,CACIkC,GAAG,YACH+jC,SAAUA,EACVx8B,KAAMgT,QAAQwpB,GACd/c,QAAS1pB,KAAK4mC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB7d,aAAcq0B,IACdr+B,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK0vD,oBAAqBr4C,EAAE,mBAC/CwI,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK8vD,kBAAmBz4C,EAAE,eAC7CwI,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKgwD,gBAAiB34C,EAAE,aAC3CwI,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKwvD,cAAen4C,EAAE,aAGjD,KAEJ,OACIwI,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIo/C,YAAWnZ,EAAW,cAAgB,KACtCoZ,gBAAc,OACd//B,UAAWY,EAAQo/B,eACnBzY,aAAW,OACXrnB,QAAShgB,KAAKsvD,gBACdzvC,EAAArf,EAAAkM,cAAC4jD,GAAA9vD,EAAD,OAEH6vD,EACDxwC,EAAArf,EAAAkM,cAAC6jD,GAAD,CAAaC,SAAU,SAAA9vB,GAAG,OAAKl2B,EAAKulD,YAAcrvB,KAClD7gB,EAAArf,EAAAkM,cAAC+jD,GAAD,CAAgB/vB,IAAK,SAAAA,GAAG,OAAKl2B,EAAKylD,eAAiBvvB,aAnGtCzgB,IAAMC,WA8GpB4G,GALCC,YACZQ,cACArG,IAzHW,CACX4+B,eAAgB,CACZ74B,OAAQ,qBAEZypC,iBAAkB,CACdzpC,OAAQ,mBAoHO,CAAEK,WAAW,IAGrBR,CAAQ23B,IC3GjBkS,uBACF,SAAAA,EAAYpxC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA2wD,IACf9wD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA6wD,GAAAxwD,KAAAH,KAAMuf,KA8BVje,2BAA6B,SAAAX,GACzBd,EAAK4kB,SAAS,CAAE4qC,mBAAoB1uD,EAAOyB,uBAhC5BvC,EAmCnB2vD,aAAe,WACX3vD,EAAK4kB,SAAS,CAAExa,MAAM,KApCPpK,EAuCnB+wD,WAAa,WACT/wD,EAAKuuC,cACLvsC,KAAgBgvD,UAzCDhxD,EA4CnBuuC,YAAc,WACVvuC,EAAK4kB,SAAS,CAAExa,MAAM,KA7CPpK,EAgDnBixD,aAAe,WAAM,IAAAxxC,EACgBzf,EAAK0f,MAA9BwxC,EADSzxC,EACTyxC,SAAUC,EADD1xC,EACC0xC,WACV3B,EAAuBxvD,EAAKskB,MAA5BkrC,mBACHE,aAAqBF,IAE1B0B,GAAUC,IArDKnxD,EAwDnBkqC,cAAgB,SAAA1+B,GACU,KAAlBA,EAAM+9B,SACN/9B,EAAMsd,kBA1DK9oB,EA8DnBmzC,YAAc,WACV,IAAMxJ,EAAY3pC,EAAKoxD,YAAY1jC,QAAQic,UACrCgE,EAAY3tC,EAAKoxD,YAAY1jC,QAAQigB,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtC3tC,EAAKoxD,YAAY1jC,QAAQigB,UAAY,IAGzCp1B,KAAiBhX,KAAK,yBAA0B,CAAEsc,KAAM8rB,KAtEzC3pC,EAyEnB4qC,YAAc,SAAAp/B,GACV,IAAMwoC,EAAYxoC,EAAMu/B,cAAcC,QAAQ,cAC1CgJ,IACAxoC,EAAMsd,iBACN7jB,SAASkmC,YAAY,cAAc,EAAO6I,KA1E9Ch0C,EAAKoxD,YAAchxC,IAAMogB,YAEzBxgC,EAAKskB,MAAQ,CACTkrC,mBAAoBj3C,KAAiBg4C,wBACrCnmD,MAAM,GAGVpK,EAAK8pC,YAAcrD,aAASzmC,EAAK8pC,YAAa,KAV/B9pC,kFAaAqlB,EAAWC,EAAWC,GAAU,IAAA5a,EAAAxK,KAC3CA,KAAKuf,MAAMyxC,YAAchxD,KAAKuf,MAAMyxC,aAAe9rC,EAAU8rC,YAC7Dx3B,WAAW,WACHhvB,EAAKymD,YAAY1jC,SACjB/iB,EAAKymD,YAAY1jC,QAAQwb,SAE9B,iDAKP3wB,KAAiBqJ,GAAG,2BAA4BzhB,KAAKsB,2EAIrD8W,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,6DAqD5D,IAAAmf,EACuCzgB,KAAKuf,MAAzCmB,EADHD,EACGC,QAASV,EADZS,EACYT,QAASgxC,EADrBvwC,EACqBuwC,WAAY35C,EADjCoJ,EACiCpJ,EAC9BpN,EAASjK,KAAKmkB,MAAdla,KAEFinD,EAAsBjnD,EACxB4V,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CAAQ9mC,mBAAoB,EAAGpgB,KAAMA,EAAMyf,QAAS1pB,KAAKouC,YAAa9jB,kBAAgB,qBAClFzK,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CAAazuD,GAAG,qBAAqB2U,EAAE,YACvCwI,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,KACItxC,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CAAmBrxC,UAAWY,EAAQ0wC,YAAa/5C,EAAE,sBAEzDwI,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,KACItxC,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CAAQnxC,QAAShgB,KAAKouC,YAAalsB,MAAM,WACpC7K,EAAE,WAEPwI,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CAAQnxC,QAAShgB,KAAK4wD,WAAY1uC,MAAM,WACnC7K,EAAE,SAIf,KAEJ,OACIwI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACTkxC,EASEnxC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,4BACXD,EAAArf,EAAAkM,cAAA,OACIhK,GAAG,yBACHg+B,IAAK1gC,KAAKixD,YACV7lB,YAAa/zB,EAAE,UACfC,IAAKmB,OACLyyB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWzrC,KAAK+pC,cAChBoL,QAASn1C,KAAKgzC,YACdtH,QAAS1rC,KAAKyqC,gBAnB1B5qB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC2kD,GAAD,CAAgB5B,SAAUzvD,KAAKwvD,eAC9B0B,EACDrxC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCAAoCE,QAASA,GACxDH,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyBzI,EAAE,cAoBvDwI,EAAArf,EAAAkM,cAACykD,GAAA,EAAD,CACIrxC,UAAWY,EAAQ4wC,iBACnBjqB,aAAYhwB,EAAE,UACd6tB,YAAallC,KAAK8wD,cAClBjxC,EAAArf,EAAAkM,cAAC6kD,GAAA/wD,EAAD,CAAeyJ,KAAM+mD,EAAYjuC,KAAMlD,EAAArf,EAAAkM,cAAC8kD,GAAAhxD,EAAD,MAAgBixD,SAAU5xC,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,iBAtIzDyf,IAAMC,YAyJnB4G,GALCC,YACZQ,cACArG,IA/JW,CACXowC,iBAAkB,CACdrqC,OAAQ,kBAEZmqC,WAAY,CACR5L,WAAY,cA6JL1+B,CAAQ6pC,IC7KjBe,6NA+BFC,2BAA6B,SAAAhxD,GACNd,EAAK0f,MAAhBvY,SAEOrG,EAAOqG,SAClBnH,EAAK4/C,aAAe9+C,EAAO24B,WAC3Bz5B,EAAK2hB,kBAIb+2B,uBAAyB,SAAA53C,GACrBd,EAAK2hB,iBAGTphB,SAAW,SAAAO,GACYd,EAAK0f,MAAhBvY,SAEOrG,EAAOyF,SAEtBvG,EAAK2hB,oGAhDasD,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,QAIhC8d,EAAUzN,IAAMrX,KAAKuf,MAAMlI,8CAQ/BzE,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD3lC,IAAU6O,GAAG,2BAA4BzhB,KAAK2xD,4BAC9C/+C,IAAU6O,GAAG,yBAA0BzhB,KAAKI,UAC5CwS,IAAU6O,GAAG,wBAAyBzhB,KAAKI,UAC3CwS,IAAU6O,GAAG,sBAAuBzhB,KAAKI,UACzCwS,IAAU6O,GAAG,uBAAwBzhB,KAAKI,yDAI1CwS,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE3lC,IAAU5Q,eAAe,2BAA4BhC,KAAK2xD,4BAC1D/+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,uBAAwBhC,KAAKI,2CAwBjD,IAAAkf,EACiBtf,KAAKuf,MAAnBvY,EADHsY,EACGtY,OAAQqQ,EADXiI,EACWjI,EAEhB,GAAIrX,KAAKy/C,aAAc,OAAO5/B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkB,QAE/D,IAAM/b,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO8b,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkB,QAEnD,IAAI8xC,EAAiB,KACf18C,EAAeH,YAAoB/N,GAKzC,GAJIkO,IACA08C,EAAiB/xC,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyB5K,KAGzD08C,EAAgB,CACjB,IAAMjgB,EAAQn0B,YAAaxW,GAC3B,GAAIoS,YAAcpS,GAAS,CACvB,IAAM0W,EAAOi0B,EAAMj0B,MAAQ,OAE3Bk0C,EACI/xC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,wBAAwBzI,EAAE,SAAW,MACpDqG,IAMjB,IAAKk0C,EAAgB,CACjB,IAAMrtD,EAAU6S,YAAsBrT,EAAMsT,IAAM,OAC5C4xC,EAAa/xC,YAAyBnT,GAC5C6tD,EACI/xC,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2jC,GAAcppC,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyBmpC,EAAzC,MACd1kD,GAKb,OAAOsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkB8xC,UA3Fb3xC,IAAMC,YA+F1BqH,iBAAkBmqC,ICpF3BG,sNAyCFF,2BAA6B,SAAAhxD,GACNd,EAAK0f,MAAhBvY,SAEOrG,EAAOqG,SAClBnH,EAAK4/C,aAAe9+C,EAAO24B,WAC3Bz5B,EAAK2hB,kBAIb+2B,uBAAyB,SAAA53C,GACrBd,EAAK2hB,iBAGTphB,SAAW,SAAAO,GAAU,IACTqG,EAAWnH,EAAK0f,MAAhBvY,OAEJrG,EAAOyF,UAAYY,GAEvBnH,EAAK2hB,iBAGTokB,kCAAoC,SAAAjlC,GAAU,IAClCqG,EAAWnH,EAAK0f,MAAhBvY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQpD,EAAOklC,MAAM,UACjB,IAAK,sCAC0B,uBAAvB9hC,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,UACzD/R,EAAK2hB,cAET,MAEJ,IAAK,wCAC0B,oBAAvBzd,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACtD/R,EAAK2hB,qGA5ECsD,EAAWC,GAAW,IAAAzF,EACdtf,KAAKuf,MAAvBvY,EADgCsY,EAChCtY,OAAQma,EADwB7B,EACxB6B,MAEhB,OAAI2D,EAAU9d,SAAWA,GAIrB8d,EAAU3D,QAAUA,8CAQxBvO,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD3lC,IAAU6O,GAAG,2BAA4BzhB,KAAK2xD,4BAC9C/+C,IAAU6O,GAAG,yBAA0BzhB,KAAKI,UAC5CwS,IAAU6O,GAAG,6BAA8BzhB,KAAKI,UAChDwS,IAAU6O,GAAG,qBAAsBzhB,KAAKI,UACxCwS,IAAU6O,GAAG,iCAAkCzhB,KAAKI,UACpDwS,IAAU6O,GAAG,sBAAuBzhB,KAAKI,UACzCwS,IAAU6O,GAAG,uBAAwBzhB,KAAKI,UAC1CwS,IAAU6O,GAAG,+BAAgCzhB,KAAKI,UAClDgY,KAAiBqJ,GAAG,kCAAmCzhB,KAAK4lC,kFAI5DhzB,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE3lC,IAAU5Q,eAAe,2BAA4BhC,KAAK2xD,4BAC1D/+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,6BAA8BhC,KAAKI,UAC5DwS,IAAU5Q,eAAe,qBAAsBhC,KAAKI,UACpDwS,IAAU5Q,eAAe,iCAAkChC,KAAKI,UAChEwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,uBAAwBhC,KAAKI,UACtDwS,IAAU5Q,eAAe,+BAAgChC,KAAKI,UAC9DgY,KAAiBpW,eAAe,kCAAmChC,KAAK4lC,oEA+CxE,GAAI5lC,KAAKy/C,aAAc,OAAO,KADzB,IAAAh/B,EAGuBzgB,KAAKuf,MAAzBmB,EAHHD,EAGGC,QAAS1Z,EAHZyZ,EAGYzZ,OAEXjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,IAAM+tD,EAAoBt6C,YAAyBzT,GAC7CguD,EAAcp6C,YAAmB5T,GACjCiuD,EAAqBn6C,YAA0B9T,GAC/CkuD,EAAkBF,EAAc,GAAsB,IAAhBA,GAAqBC,EAAqB,EAChFE,EAAgB94C,YAAcrV,EAAKrB,IAEzC,OACImd,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACKwsC,IAAsBI,GAAiBryC,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,wBACpDkyC,GACGnyC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,eAAgBH,EAAQyxC,cAC/CtyC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAf,MAGPmyC,EACGpyC,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GACf4gB,EAAQ0xC,iBAAmBr6C,YAAYhU,IAC1C,eACA2c,EAAQyxC,cAEZtyC,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,qBAAqBiyC,IAEzChuD,EAAKsuD,YAAcP,EACnBjyC,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,wBACb,aArHaG,IAAMC,YA2HxBgB,OApIA,SAAAC,GAAK,MAAK,CACrBgxC,YAAa,CACTz4B,WAAYvY,EAAM8d,QAAQC,QAAQC,MAEtCizB,iBAAkB,CACd14B,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAKiqB,SAAW,aA+HhD,CAAErgB,WAAW,GAAhCpG,CAAwC2wC,IC5ExCS,uBAhEX,SAAAA,EAAY/yC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAsyD,IACfzyD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwyD,GAAAnyD,KAAAH,KAAMuf,KA+BVoyC,2BAA6B,SAAAhxD,GACNd,EAAK0f,MAAhBvY,SAEOrG,EAAOqG,SAClBnH,EAAK4/C,aAAe9+C,EAAO24B,WAC3Bz5B,EAAK2hB,gBArCM3hB,EAyCnB04C,uBAAyB,SAAA53C,GACrBd,EAAK2hB,eA1CU3hB,EA6CnBO,SAAW,SAAAO,GACYd,EAAK0f,MAAhBvY,SAEOrG,EAAOyF,SAEtBvG,EAAK2hB,eAlDU3hB,qFAIGilB,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,mDAQpC4L,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD3lC,IAAU6O,GAAG,2BAA4BzhB,KAAK2xD,4BAC9C/+C,IAAU6O,GAAG,yBAA0BzhB,KAAKI,UAC5CwS,IAAU6O,GAAG,wBAAyBzhB,KAAKI,UAC3CwS,IAAU6O,GAAG,sBAAuBzhB,KAAKI,UACzCwS,IAAU6O,GAAG,+BAAgCzhB,KAAKI,UAClDwS,IAAU6O,GAAG,2BAA4BzhB,KAAKI,yDAI9CwS,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE3lC,IAAU5Q,eAAe,2BAA4BhC,KAAK2xD,4BAC1D/+C,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,sBAAuBhC,KAAKI,UACrDwS,IAAU5Q,eAAe,+BAAgChC,KAAKI,UAC9DwS,IAAU5Q,eAAe,2BAA4BhC,KAAKI,2CAyB1D,GAAIJ,KAAKy/C,aAAc,OAAO,KADzB,IAGGz4C,EAAWhH,KAAKuf,MAAhBvY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GACrBwR,EAAOW,YAAmBpV,GAEhC,OAAO8b,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG9M,GAAQqH,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBAAoBtH,WA9D7ByH,IAAMC,YCiDhCqyC,uBACF,SAAAA,EAAYhzC,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAuyD,IACf1yD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAyyD,GAAApyD,KAAAH,KAAMuf,KAkCV+xB,qBAAuB,SAAA3wC,GAAU,IACrBqG,EAAWnH,EAAK0f,MAAhBvY,OAEJA,IAAWrG,EAAOynD,gBAAkBphD,IAAWrG,EAAO4wC,YACtD1xC,EAAK2hB,eAvCM3hB,EA2CnBo7B,aAAe,WACX9H,aAAStzB,EAAK0f,MAAMvY,SAzCpBnH,EAAK4nB,OAASxH,IAAMogB,YAEpB,IAAMt8B,EAAO6O,IAAU3P,IAAIpD,EAAK0f,MAAMvY,QALvB,OAMfnH,EAAKskB,MAAQ,CACTpgB,KAAMA,GAPKlE,qFAWGilB,EAAWC,GAC7B,OAAID,EAAU9d,SAAWhH,KAAKuf,MAAMvY,SAIhC8d,EAAU3D,QAAUnhB,KAAKuf,MAAM4B,OAI/B2D,EAAUxC,SAAWtiB,KAAKuf,MAAM+C,oDAQpClK,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,qEAI/Cl5B,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,uDAetD,IAAAhyB,EACkDtf,KAAKuf,MAApDmB,EADHpB,EACGoB,QAAS1Z,EADZsY,EACYtY,OAAQwT,EADpB8E,EACoB9E,kBAEzB,GAHK8E,EACuCgD,OAEhC,OAAO,KAEnB,IACMkwC,EADgBp6C,KAAiB08B,cACF9tC,EAErC,OACI6Y,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKynB,OACV3H,UAAWe,IACP2xC,EAAa9xC,EAAQ+xC,aAAe/xC,EAAQ+G,OAC5C+qC,EAAa,gBAAkB,UAEnCttB,YAAallC,KAAKi7B,cAClBpb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAACssC,EAAD,CACIhyC,OAAQA,EACRwT,kBAAmBA,EACnBg+B,YAAU,EACV93B,QAAS,CACLi4B,WAAYj4B,EAAQi4B,WACpBC,WAAYl4B,EAAQk4B,WACpBV,cAAex3B,EAAQw3B,iBAG/Br4B,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBACXD,EAAArf,EAAAkM,cAAC+0C,GAAD,CAAoBz6C,OAAQA,IAC5B6Y,EAAArf,EAAAkM,cAACgmD,GAAD,CAAmB1rD,OAAQA,KAE/B6Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAACimD,GAAD,CAAsB3rD,OAAQA,IAC9B6Y,EAAArf,EAAAkM,cAACkmD,GAAD,CAAoB5rD,OAAQA,eAlF5BkZ,cAiG5BqyC,GAAcvxC,aAAe,CACzBsB,QAAQ,EACR9H,mBAAmB,GAGR0G,WA9IA,SAAAC,GAAK,MAAK,CACrBw3B,WAAY,CACRx1B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR+R,OAAQ,GAEZ0f,WAAY,GACZV,cAAe,CACXxe,WAAY,WAEhB+4B,aAAc,CACVvwC,MAAO,OACP8E,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KACvCC,aAAc,EACdyzB,OAAQ,UACR5rC,OAAQ,SACR6rC,gBAAiB,CACbp5B,WAAYvY,EAAM8d,QAAQC,QAAQC,MAEtC4zB,mBAAoB,CAChBr5B,WAAY,YAGpBjS,OAAQ,CACJ2X,aAAc,EACdyzB,OAAQ,UACR5rC,OAAQ,SACR+rC,UAAW,CACPhsC,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KAAO,KAC9C2zB,gBAAiB,CACbp5B,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,WAEnF8a,gBAAiB,CACbv5B,WAAYvY,EAAM8d,QAAQC,QAAQC,KAAO,UA4GvB,CAAE7X,WAAW,GAAhCpG,CAAwCqxC,IC2LxCW,uBAxUX,SAAAA,EAAY3zC,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAkzD,IACfrzD,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAozD,GAAA/yD,KAAAH,KAAMuf,KA0DV4zC,wBAA0B,SAAAxyD,GAClBA,EAAO24B,WACPz5B,EAAKuzD,YAAYnyD,IAAIN,EAAOqG,OAAQrG,EAAOqG,QAE3CnH,EAAKuzD,YAAYlwD,OAAOvC,EAAOqG,QAGnCnH,EAAK2hB,eAlEU3hB,EAqEnByB,2BAA6B,SAAAX,GAAU,IAC3ByB,EAAwBzB,EAAxByB,oBAERvC,EAAK4kB,SAAS,CAAE4qC,mBAAoBjtD,GAAuB,kBAAMvC,EAAKwzD,oBAxEvDxzD,EA2EnB04C,uBAAyB,SAAA53C,GACrBd,EAAKyzD,YAAW,IA5EDzzD,EAgFnB0zD,wBAA0B,SAAA5yD,GACtB,IAAM6yD,EAAqB7yD,EAAOwjB,MAC1BsvC,EAAoB5zD,EAAKskB,MAAzBsvC,iBAER5zD,EAAK4kB,SAAS,CAAEgvC,gBAAiBD,IAG7BC,GAC6B,4BAA7BA,EAAgB,UACgB,4BAAhCD,EAAmB,YAGG5gD,IAAU8gD,eAAe1tD,OAAS,IAG5D4M,IAAU8gD,eAAiB,GAC3B7zD,EAAK4kB,SAAS,CAAEw1B,MAAO,IAAM,kBAAMp6C,EAAKyzD,YAAW,QAhGpCzzD,EAmGnBwzD,eAnGmBvzD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAmGF,SAAAC,IAAA,IAAA2uD,EAAA,OAAAngC,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACLsuD,EAAuBxvD,EAAKskB,MAA5BkrC,qBACkD,4BAAhCA,EAAmB,SAFhC,CAAAxuD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGHnB,IAAUyC,OAAO,kBAAMxC,EAAKyzD,eAHzB,wBAAAzyD,EAAAU,SAAAb,MAnGEb,EA0GnB8zD,kBAAoB,SAAAhzD,GAIhB,GAAqB,MAAjBA,EAAOupD,OACEt3C,IAAU3P,IAAItC,EAAOyF,SAClC,CAKIzF,EAAOyF,UAAYgS,KAAiB08B,cACpCjzC,KAAgB6gD,UAAU,GAC1BtqC,KAAiBovC,6BAA4B,IAIjD,IADA,IAAIhN,EAAU,GACL10C,EAAI,EAAGA,EAAIjG,EAAKskB,MAAM81B,MAAMj0C,OAAQF,IAAK,CAC9C,IAAI/B,EAAO6O,IAAU3P,IAAIpD,EAAKskB,MAAM81B,MAAMn0C,IAC1C,GAAI/B,GAAuB,MAAfA,EAAKmmD,MACb,OAAQnmD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBAClCC,OAAO,UAClB+gC,EAAQhxC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACD83C,EAAQhxC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBuX,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eAClCT,OAAO,UAClB+gC,EAAQhxC,KAAKzF,EAAKrB,KAQtC7C,EAAK+zD,aAAapZ,KAzJH36C,EA4JnBO,SAAW,SAAAO,GAAU,IACTyF,EAAmBzF,EAAnByF,QACR,GAAc,MADazF,EAAVupD,MACjB,CACA,IAAMnmD,EAAO6O,IAAU3P,IAAImD,GAC3B,GAAKrC,GAAuB,MAAfA,EAAKmmD,MAAlB,CAJiB,IAQTjQ,EAAUp6C,EAAKskB,MAAf81B,MAEJ4Z,EAAa,GACjB,GAAI5Z,EAAMj0C,OAAS,EAEf,IADqBi0C,EAAM8G,KAAK,SAAAt1C,GAAC,OAAIA,IAAMrF,IACxB,CACf,IAAM0tD,EAAelhD,IAAU3P,IAAIg3C,EAAMA,EAAMj0C,OAAS,IAAIkkD,MAC5D,GAA+C,IAA3CD,aAAa6J,EAAc/vD,EAAKmmD,OAChC,OAEJ2J,EAAWrqD,KAAKzF,EAAKrB,IAM7B,IADA,IAAI83C,EAAU,GACL10C,EAAI,EAAGA,EAAIm0C,EAAMj0C,OAAQF,IAAK,CACnC,IAAI/B,EAAO6O,IAAU3P,IAAIg3C,EAAMn0C,IAC/B,GAAI/B,GAAuB,MAAfA,EAAKmmD,MACb,OAAQnmD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhB2H,KAAgBtW,IAAIc,EAAK6N,KAAK4H,gBAClCC,OAAO,UAClB+gC,EAAQhxC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACD83C,EAAQhxC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBuX,KAAgBhX,IAAIc,EAAK6N,KAAKsI,eAClCT,OAAO,UAClB+gC,EAAQhxC,KAAKzF,EAAKrB,KAQtC7C,EAAK+zD,aAAapZ,EAASqZ,EAAY,WACnCh0D,EAAK8jD,iBAAiBkQ,QAnNXh0D,EA+OnBisD,aAAe,WACX,IAAMlvB,EAAO/8B,EAAKksD,QAAQx+B,QAEtBqP,GAAQA,EAAKiM,UAAYjM,EAAK8nB,cAAgB9nB,EAAKkM,cACnDjpC,EAAKyzD,cAnPMzzD,EAuPnByzD,WAvPmBxzD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAuPN,SAAAyB,IAAA,IAAA4oC,EAAAmP,EAAA8Z,EAAAC,EAAAjwD,EAAAoG,EAAA8pD,EAAAvyD,UAAA,OAAAwtB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAO+pC,EAAPmpB,EAAAjuD,OAAA,QAAAsI,IAAA2lD,EAAA,IAAAA,EAAA,GACDha,EAAUp6C,EAAKskB,MAAf81B,OAEJp6C,EAAKssD,QAHA,CAAAhqD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,wBAKL0yD,EAAc,sBACdC,EAAe,GACdlpB,GAAWmP,GAASA,EAAMj0C,OAAS,IAC9BjC,EAAO6O,IAAU3P,IAAIg3C,EAAMA,EAAMj0C,OAAS,OAE5C+tD,EAAchwD,EAAKmmD,MACnB8J,EAAejwD,EAAKrB,IAI5B7C,EAAKssD,SAAU,EAfNhqD,EAAApB,KAAA,GAgBYc,KAAgBgJ,KAAK,CACtC/B,QAAS,WACTuxC,eAAgB2Z,EAChB5Z,aAAc2Z,EACdnhC,MAAOshC,MACRC,QAAQ,WACPt0D,EAAKssD,SAAU,EACftqD,KAAgBgH,aAAa,CAAEC,QAAS,+BAvBnC,SAgBHqB,EAhBGhI,EAAA4I,MA4BE0vC,SAASz0C,OAAS,GAAKmE,EAAOswC,SAAS,KAAOuZ,GACrD7pD,EAAOswC,SAAS2Z,QAGhBtpB,EACAjrC,EAAKw0D,aAAalqD,EAAOswC,SAAU,kBAAM56C,EAAK8jD,iBAAiBx5C,EAAOswC,YAEtE56C,EAAKy0D,YAAYnqD,EAAOswC,SAAU,kBAAM56C,EAAK8jD,iBAAiBx5C,EAAOswC,YAnChE,yBAAAt4C,EAAAZ,SAAAW,MApPTrC,EAAKuzD,YAAc,IAAIlqD,IAEvBrJ,EAAKksD,QAAU9rC,IAAMogB,YAErBxgC,EAAKskB,MAAQ,CACT81B,MAAO,GACPoV,mBAAoBj3C,KAAiBg4C,wBACrCqD,gBAAiBr7C,KAAiBm8C,sBAVvB10D,qFAcGilB,EAAWC,GAC7B,OAAIA,EAAUk1B,QAAUj6C,KAAKmkB,MAAM81B,sDAOf/0B,EAAWC,GAG/B,MAAO,CAAE0jB,UAFiB7oC,KAAK+rD,QAAvBx+B,QAEiBsb,sDAGV3jB,EAAWC,EAAWC,GAAU,IAC9BwX,EAAS58B,KAAK+rD,QAAvBx+B,QACAsb,EAAczjB,EAAdyjB,UAERjM,EAAKiM,UAAYA,8CAIjB7oC,KAAKqzD,iBAELj7C,KAAiBqJ,GAAG,2BAA4BzhB,KAAKsB,4BAErDsR,IAAU6O,GAAG,mCAAoCzhB,KAAKu4C,wBACtD3lC,IAAU6O,GAAG,yBAA0BzhB,KAAKI,UAC5CwS,IAAU6O,GAAG,qBAAsBzhB,KAAKI,UACxCwS,IAAU6O,GAAG,wBAAyBzhB,KAAKI,UAC3CwS,IAAU6O,GAAG,kBAAmBzhB,KAAK2zD,mBACrC/gD,IAAU6O,GAAG,wBAAyBzhB,KAAKmzD,wEAI3C/6C,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,4BAEjEsR,IAAU5Q,eAAe,mCAAoChC,KAAKu4C,wBAClE3lC,IAAU5Q,eAAe,yBAA0BhC,KAAKI,UACxDwS,IAAU5Q,eAAe,qBAAsBhC,KAAKI,UACpDwS,IAAU5Q,eAAe,wBAAyBhC,KAAKI,UACvDwS,IAAU5Q,eAAe,kBAAmBhC,KAAK2zD,mBACjD/gD,IAAU5Q,eAAe,wBAAyBhC,KAAKmzD,8DA+J9C3Y,GAAoC,IAA3BqZ,EAA2BnyD,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAd,GAAI2H,EAAU3H,UAAAsE,OAAA,EAAAtE,UAAA,QAAA4M,EACvCkmD,EAAiBha,EAAQxvC,OAAO6oD,GAAY7O,KAAK,SAACxkD,EAAGwpD,GACvD,OAAOC,aAAar3C,IAAU3P,IAAI+mD,GAAGE,MAAOt3C,IAAU3P,IAAIzC,GAAG0pD,SAG5DgJ,EAAYuB,iBAAiBz0D,KAAKmkB,MAAM81B,MAAOua,IAIpDx0D,KAAKykB,SAAS,CAAEw1B,MAAOua,GAAkBnrD,4CA8D5B4wC,GACb,IAAMt6C,EAAQC,IAAUuD,WACxBuQ,YAAiB/T,EAAOs6C,uCAGhBA,EAAO5wC,GACM,IAAjB4wC,EAAMj0C,QAEVhG,KAAKykB,SAAS,CAAEw1B,MAAOj6C,KAAKmkB,MAAM81B,MAAMjvC,OAAOivC,IAAU5wC,wCAGhD4wC,EAAO5wC,GAChBrJ,KAAKykB,SAAS,CAAEw1B,MAAOA,GAAS5wC,yCAInBrJ,KAAK+rD,QAAQx+B,QACrBsb,UAAY,mCAGZ,IAAAr+B,EAAAxK,KAGC00D,EAFY10D,KAAKmkB,MAAf81B,MAEczsC,IAAI,SAAA/B,GAAC,OAAIoU,EAAArf,EAAAkM,cAACioD,GAAD,CAAer9C,IAAK7L,EAAGzE,OAAQyE,EAAG6W,OAAQ9X,EAAK4oD,YAAYtwD,IAAI2I,OAW9F,OACIoU,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAK+rD,QAASjsC,UAAU,eAAeotC,SAAUltD,KAAK8rD,cAC3D4I,8CA/FWE,EAAYf,GAChC,GAAIe,EAAW5uD,SAAW6tD,EAAW7tD,OAAQ,CACzC,IAAK,IAAIF,EAAI,EAAGA,EAAI8uD,EAAW5uD,OAAQF,IACnC,GAAI8uD,EAAW9uD,KAAO+tD,EAAW/tD,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,SA7OWma,IAAMC,YCE1B20C,eACF,SAAAA,EAAYt1C,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA60D,IACfh1D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+0D,GAAA10D,KAAAH,KAAMuf,KAeVu1C,kCAAoC,WAChCj1D,EAAK4kB,SAAS,CAAEswC,qBAAqB,KAjBtBl1D,EAoBnBm1D,aAAe,WACPn1D,EAAKo1D,UAETp1D,EAAKo1D,SAAU,EACfz7B,WAAW,WACPzvB,OAAO7E,SAASgwD,UACjB,OAvBHr1D,EAAKskB,MAAQ,CACT4wC,qBAAqB,GAJVl1D,mFASfuY,KAAiBqJ,GAAG,kCAAmCzhB,KAAK80D,kFAI5D18C,KAAiBpW,eAAe,kCAAmChC,KAAK80D,oEAgBnE,IACGC,EAAwB/0D,KAAKmkB,MAA7B4wC,oBACAr0C,EAAY1gB,KAAKuf,MAAjBmB,QAEFnc,EAAUwwD,EACZl1C,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQomB,QAAQ,YAAY1E,MAAM,UAAUpC,UAAWY,EAAQgC,KAAM1C,QAAShgB,KAAKg1D,cAAnF,UAGA,KAEJ,OAAOn1C,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG/gB,UAxCQ0b,IAAMC,WA4CjBgB,OAvDA,CACXwB,KAAM,CACFuE,OAAQ,EACR1D,QAAS,OACT/T,MAAO,OACP4vB,aAAc,EACdld,MAAO,QACPizC,UAAW,SAgDJj0C,CAAmB2zC,IC3C5BO,uBACF,SAAAA,EAAY71C,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAo1D,IACfv1D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAs1D,GAAAj1D,KAAAH,KAAMuf,KA4CV81C,0BAA4B,SAAA10D,GACxBd,EAAK2hB,eA9CU3hB,EAiDnBy1D,oCAAsC,SAAA30D,GAClCd,EAAK4kB,SAAS,CACV8wC,qBAAsBn9C,KAAiBm9C,wBAnD5B11D,EAuDnB21D,yBAA2B,SAAA70D,GACvBd,EAAK4kB,SAAS,CACVusC,YAAY,EACZyE,aAAc90D,EAAOqG,OACrB01C,WAAY,QA3DD78C,EA+DnBskD,kBAAoB,WAChBtkD,EAAK61D,YAAYnoC,QAAQooC,eAhEV91D,EAmEnBixD,aAAe,SAAA8E,GACX/1D,EAAK4kB,SAAS,CACVusC,WAAY4E,EACZH,aAAc,EACd/Y,WAAY,QAvED78C,EA2EnB6rD,oBAAsB,SAAC1kD,EAAQC,EAAW+pD,GAAe,IAC7C6E,EAAiBh2D,EAAK0f,MAAtBs2C,aAER1iC,aAASnsB,EAAQC,GAEjB4uD,EAAa7uD,EAAQC,GAErB,IAAMwuD,EAAezE,EAAanxD,EAAKskB,MAAMsxC,aAAe,EACtD/Y,EAAasU,EAAanxD,EAAKskB,MAAMu4B,WAAa,KAExD78C,EAAK4kB,SAAS,CACVusC,WAAYA,EACZyE,aAAcA,EACd/Y,WAAYA,KAxFD78C,EA4FnBuuC,YAAc,WACVvuC,EAAK4kB,SAAS,CACVusC,YAAY,EACZyE,aAAc,EACd/Y,WAAY,QAhGD78C,EAoGnBi2D,uBAAyB,SAAAp4C,GACrB7d,EAAK4kB,SAAS,CACVi4B,WAAYh/B,KAnGhB7d,EAAK61D,YAAcz1C,IAAMogB,YAEzBxgC,EAAKskB,MAAQ,CACToxC,qBAAsBn9C,KAAiBm9C,qBACvCvE,YAAY,EACZyE,aAAc,EACd/Y,WAAY,MATD78C,qFAaGilB,EAAWC,GAC7B,OAAIA,EAAUwwC,uBAAyBv1D,KAAKmkB,MAAMoxC,uBAI9CxwC,EAAUisC,aAAehxD,KAAKmkB,MAAM6sC,aAIpCjsC,EAAU0wC,eAAiBz1D,KAAKmkB,MAAMsxC,cAItC1wC,EAAU23B,aAAe18C,KAAKmkB,MAAMu4B,yDAQxCtkC,KAAiBqJ,GAAG,oCAAqCzhB,KAAKs1D,qCAC9Dl9C,KAAiBqJ,GAAG,yBAA0BzhB,KAAKw1D,0BACnDp9C,KAAiBqJ,GAAG,0BAA2BzhB,KAAKq1D,0EAIpDj9C,KAAiBpW,eAAe,oCAAqChC,KAAKs1D,qCAC1El9C,KAAiBpW,eAAe,yBAA0BhC,KAAKw1D,0BAC/Dp9C,KAAiBpW,eAAe,0BAA2BhC,KAAKq1D,4DAgE3D,IACG30C,EAAY1gB,KAAKuf,MAAjBmB,QADHwD,EAEkElkB,KAAKmkB,MAApEoxC,EAFHrxC,EAEGqxC,qBAAsBvE,EAFzB9sC,EAEyB8sC,WAAYyE,EAFrCvxC,EAEqCuxC,aAAc/Y,EAFnDx4B,EAEmDw4B,WAExD,OACI78B,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAWH,EAAQ8F,YAAa,UAAW,CAClDuvC,uBAAwBR,KAE5B11C,EAAArf,EAAAkM,cAACspD,GAAD,CACIhF,WAAYA,EACZhxC,QAAShgB,KAAKmkD,kBACd4M,SAAU/wD,KAAK8wD,aACfmF,mBAAoBj2D,KAAK81D,yBAE7Bj2C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAACwpD,GAAD,CAAax1B,IAAK1gC,KAAK01D,cACtB1E,GACGnxC,EAAArf,EAAAkM,cAACypD,GAAD,CACInvD,OAAQyuD,EACR/3C,KAAMg/B,EACNmP,gBAAiB7rD,KAAK0rD,oBACtBhiC,QAAS1pB,KAAKouC,eAI1BvuB,EAAArf,EAAAkM,cAAC0pD,GAAD,cArIMl2C,cA+IPgB,OAnJA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,GACbunB,aAAYlG,KAkJJD,CAAmBk0C,ICvI5BiB,sNACFlyC,MAAQ,CACJnd,OAAQoR,KAAiBsvC,gBAiB7B4O,+BAAiC,SAAA31D,GAAU,IAC/BqG,EAAWrG,EAAXqG,OAERnH,EAAK4kB,SAAS,CAAEzd,cAGpBonC,YAAc,WACVvsC,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,0FAvBM8d,EAAWC,EAAWC,GAAa,IAC7Che,EAAWhH,KAAKmkB,MAAhBnd,OAER,OAAO+d,EAAU/d,SAAWA,8CAI5BoR,KAAiBqJ,GAAG,2BAA4BzhB,KAAKs2D,+EAIrDl+C,KAAiBpW,eAAe,2BAA4BhC,KAAKs2D,iEAgB5D,IACG51C,EAAY1gB,KAAKuf,MAAjBmB,QACA1Z,EAAWhH,KAAKmkB,MAAhBnd,OACR,OAAKA,EAGD6Y,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACIyJ,MAAI,EACJogB,mBAAoB,EACpBX,QAAS1pB,KAAKouC,YACd1tB,QAAS,CAAEgC,KAAMhC,EAAQsuB,WAAYunB,UAAW71C,EAAQ81C,cAAend,MAAO34B,EAAQ+1C,YACtF52C,EAAArf,EAAAkM,cAACgqD,GAAD,CAAU52C,UAAWY,EAAQi2C,aAAc3vD,OAAQA,EAAQusB,OAAK,KARpD,YAnCCtT,IAAMC,YAmDpBgB,OAnEA,SAAAC,GAAK,MAAK,CACrBw1C,aAAc,CACVnnD,MAAO,KAEXgnD,cAAe,CACXI,WAAY,SAEhB5nB,WAAY,CACR9sB,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,QAC1BhG,OAAQ/X,EAAM+X,OAAO29B,OAEzBJ,UAAW,CACPjnD,MAAO,OAuDA0R,CAAmBm1C,mCC3C5BS,uBACF,SAAAA,EAAYv3C,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA82D,IACfj3D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAg3D,GAAA32D,KAAAH,KAAMuf,KAOVsG,aAAe,WACXhkB,KAAgBgH,aAAa,CAAEC,QAAS,gCATzBjJ,EAYnB4pC,aAAe,WACX,IAAIstB,GAA0B,EADbphD,GAAA,EAAAC,GAAA,EAAAC,OAAAvH,EAAA,IAEjB,QAAAwH,EAAAC,EAAkCtI,KAAayR,cAAc7J,SAA7DW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAhV,QAAAmV,MAAAP,GAAA,EAAuE,KAAA1T,EAAA6T,EAAAR,MAA5DtO,EAA4D/E,EAA5D+E,OAAQC,EAAoDhF,EAApDgF,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVyyD,GAA0B,EAC1B,MAEJ,IAAKzyD,EAAQ0yD,6BAA8B,CACvCD,GAA0B,EAC1B,QAVS,MAAA5gD,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAcjBhW,EAAK4kB,SAAS,CACVwyC,kBAAkB,EAClBF,wBAAyBA,EACzBlrD,OAAQkrD,KA7BGl3D,EAiCnBq3D,qBAAuB,WAAM,IAGrBx0D,EAFImJ,EAAWhM,EAAKskB,MAAhBtY,OAGFyB,EAAa,GAJMiJ,GAAA,EAAAC,GAAA,EAAAC,OAAAnI,EAAA,IAKzB,QAAAoI,EAAAC,EAAkClJ,KAAayR,cAAc7J,SAA7DW,OAAAC,cAAAM,GAAAG,EAAAC,EAAA5V,QAAAmV,MAAAK,GAAA,EAAuE,KAAA60C,EAAA10C,EAAApB,MAA5DtO,EAA4DokD,EAA5DpkD,OAAQC,EAAoDmkD,EAApDnkD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IAPK,MAAAkP,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAUzB5W,EAAKgmB,eAELhkB,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAAS1D,EACTkJ,YAAa0B,EACbzB,OAAQA,KAjDGhM,EAqDnBs3D,mBAAqB,WACjBt3D,EAAK4kB,SAAS,CAAE5Y,QAAShM,EAAKskB,MAAMtY,UAtDrBhM,EAyDnBu3D,kBAAoB,WAChBv3D,EAAK4kB,SAAS,CAAEwyC,kBAAkB,KA1DnBp3D,EA6DnBw3D,cAAgB,WACZ,IAAI30D,EACE4K,EAAa,GAFDgqD,GAAA,EAAAC,GAAA,EAAAC,OAAAlpD,EAAA,IAGlB,QAAAmpD,EAAAC,EAAkCjqD,KAAayR,cAAc7J,SAA7DW,OAAAC,cAAAqhD,GAAAG,EAAAC,EAAA32D,QAAAmV,MAAAohD,GAAA,EAAuE,KAAAK,EAAAF,EAAAniD,MAA5DtO,EAA4D2wD,EAA5D3wD,OAAQC,EAAoD0wD,EAApD1wD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IALF,MAAAkP,GAAAohD,GAAA,EAAAC,EAAArhD,EAAA,YAAAmhD,GAAA,MAAAI,EAAAthD,QAAAshD,EAAAthD,SAAA,WAAAmhD,EAAA,MAAAC,GAQlB33D,EAAKgmB,eAELhkB,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,CACF5zC,OAAQtE,EACR4K,WAAYA,MA3ELzN,EAgFnB+3D,YAAc,WACV,GAAwC,IAApCnqD,KAAayR,cAAcjT,KAA/B,CADgB,IAAA4rD,EAGcpqD,KAAayR,cAAc7J,SAAStU,OAAOuU,MAAjEtO,EAHQ6wD,EAGR7wD,OAAQC,EAHA4wD,EAGA5wD,UAEhBpH,EAAKgmB,eAELhkB,KAAgBgH,aAAa,CAAEC,QAAS,oBAAqB9B,OAAQA,EAAQC,UAAWA,MApFxFpH,EAAKskB,MAAQ,CACT8yC,kBAAkB,GAJPp3D,wEA0FV,IAAAyf,EACyBtf,KAAKuf,MAA3BmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EAAGqC,EADf4F,EACe5F,MADfwK,EAEyDlkB,KAAKmkB,MAA3D8yC,EAFH/yC,EAEG+yC,iBAAkBF,EAFrB7yC,EAEqB6yC,wBAAyBlrD,EAF9CqY,EAE8CrY,OAE7C7E,EAASoR,KAAiB08B,YAE5BgjB,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAA3pD,EAAA,IAOL,QAAA4pD,EAAAC,EAAkC1qD,KAAayR,cAAc7J,SAA7DW,OAAAC,cAAA8hD,GAAAG,EAAAC,EAAAp3D,QAAAmV,MAAA6hD,GAAA,EAAuE,KAAAK,EAAAF,EAAA5iD,MAA5DtO,EAA4DoxD,EAA5DpxD,OAAQC,EAAoDmxD,EAApDnxD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVwzD,GAAe,EACf,MAEJ,IAAKxzD,EAAQ+zD,+BAAiC/zD,EAAQ0yD,6BAA8B,CAChFc,GAAe,EACf,QAfH,MAAA3hD,GAAA6hD,GAAA,EAAAC,EAAA9hD,EAAA,YAAA4hD,GAAA,MAAAI,EAAA/hD,QAAA+hD,EAAA/hD,SAAA,WAAA4hD,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAnqD,EAAA,IAoBL,QAAAoqD,EAAAC,EAAkClrD,KAAayR,cAAc7J,SAA7DW,OAAAC,cAAAsiD,GAAAG,EAAAC,EAAA53D,QAAAmV,MAAAqiD,GAAA,EAAuE,KAAAK,EAAAF,EAAApjD,MAA5DtO,EAA4D4xD,EAA5D5xD,OAAQC,EAAoD2xD,EAApD3xD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVg0D,GAAiB,EACjB,MAEJ,IAAKh0D,EAAQi3C,iBAAkB,CAC3Buc,GAAe,EACf,QA5BH,MAAA3hD,GAAAqiD,GAAA,EAAAC,EAAAtiD,EAAA,YAAAoiD,GAAA,MAAAI,EAAAviD,QAAAuiD,EAAAviD,SAAA,WAAAoiD,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVn/C,GAAe4D,YAAgBtW,GAEpD,OACI6Y,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC3C8xC,GACGz4C,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUpC,UAAWY,EAAQo4C,WAAY94C,QAAShgB,KAAKq3D,eAChE39C,GAAS,EAAIrC,EAAE,WAAf,GAAArM,OAA+BqM,EAAE,WAAjC,KAAArM,OAA+C0O,IAGvDo+C,GACGj4C,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUpC,UAAWY,EAAQo4C,WAAY94C,QAAShgB,KAAKypC,cAChE/vB,GAAS,EAAIrC,EAAE,UAAf,GAAArM,OAA8BqM,EAAE,UAAhC,KAAArM,OAA6C0O,IAGrDm/C,GACGh5C,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUpC,UAAWY,EAAQo4C,WAAY94C,QAAShgB,KAAK43D,aAChEvgD,EAAE,UAGXwI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,yBACfD,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUpC,UAAWY,EAAQq4C,YAAa/4C,QAAShgB,KAAK6lB,cACjExO,EAAE,YAGXwI,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAMgtD,EACNvtC,QAAS1pB,KAAKo3D,kBACd9sC,kBAAgB,uBAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,uBAAhB,WACAmd,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,KACe,IAAVkZ,EACK,6CADL,mCAAA1O,OAEwC0O,EAFxC,eAIJq9C,GACGl3C,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACI6tD,QACIxuC,EAAArf,EAAAkM,cAACssD,GAAAx4D,EAAD,CAAUoiB,QAAS/W,EAAQ0W,SAAUviB,KAAKm3D,mBAAoBj1C,MAAM,YAExE4kC,MACIprC,YAAc1U,GAAd,cAAAgE,OAAsC8R,YAAkB9V,IAAY,oBAKpF6Y,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKo3D,kBAAmBl1C,MAAM,WAA/C,UAGArC,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKk3D,qBAAsBh1C,MAAM,WAAlD,gBA/KIjC,IAAMC,YAkMnB4G,GALCC,YACZ7F,IA1MW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBg5D,WAAY,CACR7xC,OAAQ,mBACRglB,SAAU,SAEd8sB,YAAa,CACT9xC,OAAQ,mBACRglB,SAAU,UAEX5kB,aAAYlG,KAiMI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQgwC,aCzLjBmC,eACF,SAAAA,EAAY15C,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAi5D,IACfp5D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAm5D,GAAA94D,KAAAH,KAAMuf,KA8DV25C,8BAAgC,SAAAv4D,GAC5B,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAK2hB,eApEU3hB,EAuEnBs5D,8BAAgC,SAAAx4D,GAC5Bd,EAAK4kB,SAAS,CAAE20C,eAAgB3rD,KAAayR,cAAcjT,QAxE5CpM,EA2EnByxC,qBAAuB,SAAA3wC,GACnBd,EAAK2hB,eA5EU3hB,EA+EnB0zD,wBAA0B,SAAA5yD,GACtBd,EAAK4kB,SAAS,CAAEgvC,gBAAiB9yD,EAAOwjB,SAhFzBtkB,EAmFnByB,2BAA6B,SAAAX,GACzBd,EAAK4kB,SAAS,CAAE4qC,mBAAoB1uD,EAAOyB,uBApF5BvC,EAuFnBm7B,kBAAoB,SAAAr6B,GAChB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GACDA,EAAKrB,KAAO/B,EAAOyF,SAEvBvG,EAAK2hB,eA5FU3hB,EA+FnBk4C,mBAAqB,SAAAp3C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aAC5C,GAAK/wC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwI,EAAWb,KAAgBc,YAAYtW,EAAK6N,KAAK4H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQ4kC,KAAK,SAAAt1C,GAAC,OAAIA,EAAEqD,UAAYnO,EAAOmO,WAE3DjP,EAAK2hB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGzd,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAC7BjP,EAAK2hB,gBAvHF3hB,EAiInBw5D,uBAAyB,SAAA14D,GACCyX,KAAiB08B,cAEjBn0C,EAAOyF,SACzBvG,EAAK2hB,eArIM3hB,EAyInBk2C,mBAAqB,SAAAp1C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO65B,YAAY93B,IAEhD7C,EAAK2hB,eAlJM3hB,EAsJnBm2C,mBAAqB,SAAAr1C,GACjB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOqZ,WAAWtX,IAE9C7C,EAAK2hB,eA/JM3hB,EAmKnBqhD,2BAA6B,SAAAvgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK4H,iBAAmB7Y,EAAO6Y,gBAEpC3Z,EAAK2hB,eA5KM3hB,EAgLnBshD,2BAA6B,SAAAxgD,GACzB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKsI,gBAAkBvZ,EAAOuZ,eAEnCra,EAAK2hB,eAzLM3hB,EA6LnBohD,qBAAuB,SAAAtgD,GACnB,IAAMoD,EAAO6O,IAAU3P,IAAImV,KAAiB08B,aACvC/wC,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYnO,EAAOmO,SAE7BjP,EAAK2hB,gBAtMM3hB,EA0MnB++C,gBAAkB,WACd,IAAM53C,EAASoR,KAAiB08B,YACnBliC,IAAU3P,IAAI+D,IAG3BoR,KAAiBovC,6BAA4B,IA/M9B3nD,EAkNnBy5D,iBAAmB,WACf,IAAMtyD,EAASoR,KAAiB08B,YACnBliC,IAAU3P,IAAI+D,IAG3BoR,KAAiBmhD,WAAWvyD,IAvNbnH,EA0NnB25D,SAAW,SAAAC,GAGP,OAAOpiD,EAFOxX,EAAK0f,MAAXlI,GAECoiD,GACJ3uB,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlBjrC,EAAKskB,MAAQ,CACTkrC,mBAAoBj3C,KAAiBg4C,wBACrCqD,gBAAiBr7C,KAAiBm8C,sBALvB10D,qFASGilB,EAAWC,GAC7B,OAAIA,IAAc/kB,KAAKmkB,QAInBW,EAAU3D,QAAUnhB,KAAKuf,MAAM4B,OAI/B2D,EAAUzN,IAAMrX,KAAKuf,MAAMlI,+CAQ/Be,KAAiBqJ,GAAG,wBAAyBzhB,KAAKuzD,yBAClDn7C,KAAiBqJ,GAAG,2BAA4BzhB,KAAKsB,4BACrD8W,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,sBAE/C7jC,KAAagU,GAAG,8BAA+BzhB,KAAKm5D,+BACpD1rD,KAAagU,GAAG,6BAA8BzhB,KAAKm5D,+BAEnDvmD,IAAU6O,GAAG,8BAA+BzhB,KAAKk5D,+BACjDtmD,IAAU6O,GAAG,kBAAmBzhB,KAAKg7B,mBACrCjsB,IAAU0S,GAAG,mBAAoBzhB,KAAK+3C,oBACtCnlC,IAAU6O,GAAG,uBAAwBzhB,KAAKq5D,wBAC1CtqD,IAAU0S,GAAG,qBAAsBzhB,KAAKihD,sBACxC1nC,KAAgBkI,GAAG,2BAA4BzhB,KAAKkhD,4BACpDjnC,KAAgBwH,GAAG,2BAA4BzhB,KAAKmhD,4BACpD5nC,KAAgBkI,GAAG,mBAAoBzhB,KAAK+1C,oBAC5C97B,KAAgBwH,GAAG,mBAAoBzhB,KAAKg2C,mEAI5C59B,KAAiBpW,eAAe,wBAAyBhC,KAAKuzD,yBAC9Dn7C,KAAiBpW,eAAe,2BAA4BhC,KAAKsB,4BACjE8W,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,sBAE3D7jC,KAAazL,eAAe,8BAA+BhC,KAAKm5D,+BAChE1rD,KAAazL,eAAe,6BAA8BhC,KAAKm5D,+BAE/DvmD,IAAU5Q,eAAe,8BAA+BhC,KAAKk5D,+BAC7DtmD,IAAU5Q,eAAe,kBAAmBhC,KAAKg7B,mBACjDjsB,IAAU/M,eAAe,mBAAoBhC,KAAK+3C,oBAClDnlC,IAAU5Q,eAAe,uBAAwBhC,KAAKq5D,wBACtDtqD,IAAU/M,eAAe,qBAAsBhC,KAAKihD,sBACpD1nC,KAAgBvX,eAAe,2BAA4BhC,KAAKkhD,4BAChEjnC,KAAgBjY,eAAe,2BAA4BhC,KAAKmhD,4BAChE5nC,KAAgBvX,eAAe,mBAAoBhC,KAAK+1C,oBACxD97B,KAAgBjY,eAAe,mBAAoBhC,KAAKg2C,qDAsKnD,IAAA12B,EACkBtf,KAAKuf,MAApBmB,EADHpB,EACGoB,QAASrJ,EADZiI,EACYjI,EADZ6M,EAE2DlkB,KAAKmkB,MAA7DkrC,EAFHnrC,EAEGmrC,mBAAoBoE,EAFvBvvC,EAEuBuvC,gBAAiB2F,EAFxCl1C,EAEwCk1C,eAE7C,GAAIA,EACA,OAAOv5C,EAAArf,EAAAkM,cAACgtD,GAAD,CAAehgD,MAAO0/C,IAGjC,IAAMpyD,EAASoR,KAAiB08B,YAC1B/wC,EAAO6O,IAAU3P,IAAI+D,GAErB2yD,EAAmBz+C,YAAqBlU,GAC1C4T,EAAQmB,YAAa/U,GAAQ,EAAMqQ,GACnC2pC,EAAWzmC,YAAgBvT,GAAQ,GACnC4yD,GAAwB,EAE5B,GAAInG,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACD74C,EAAQ5a,KAAKw5D,SAAS,cACtBxY,EAAW,GACX4Y,GAAwB,EACxB,MACJ,IAAK,mCACDh/C,EAAQ5a,KAAKw5D,SAAS,uBACtBxY,EAAW,GACX4Y,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACDh/C,EAAQ5a,KAAKw5D,SAAS,YACtBxY,EAAW,GACX4Y,GAAwB,EACxB,MACJ,IAAK,mCACDh/C,EAAQ5a,KAAKw5D,SAAS,uBACtBxY,EAAW,GACX4Y,GAAwB,OAG7B,GAAIvK,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,6BACD,MACJ,IAAK,+BACDz0C,EAAQ5a,KAAKw5D,SAAS,eACtBxY,EAAW,GACX4Y,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACDh/C,EAAQ5a,KAAKw5D,SAAS,WACtBxY,EAAW,GACX4Y,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACDh/C,EAAQ5a,KAAKw5D,SAAS,WACtBxY,EAAW,GACX4Y,GAAwB,OAIhCh/C,EAAQ5a,KAAKw5D,SAAS,WACtBxY,EAAW,GACX4Y,GAAwB,EAG5B,OACI/5C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC5C3G,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,gBAAiB,OAAQ9c,EAAO,iBAAmB,kBACzEic,QAAShgB,KAAK4+C,iBACd/+B,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,yBAAyBlF,GACxCg/C,GAAyB/5C,EAAArf,EAAAkM,cAACmtD,GAAA,EAAD,MAC1Bh6C,EAAArf,EAAAkM,cAAA,QACIoT,UAAWe,IAAW,sBAAD/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GAChB4gB,EAAQo5C,wBAA0BH,KAEtC3Y,GAELnhC,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,wBAEnB/b,GACG8b,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQq5C,wBACnB1yB,aAAW,SACXrnB,QAAShgB,KAAKs5D,kBACdz5C,EAAArf,EAAAkM,cAAC8kD,GAAAhxD,EAAD,OAEJqf,EAAArf,EAAAkM,cAACstD,GAAD,CAAgBpb,gBAAiB5+C,KAAK4+C,2BAvUzC1+B,aAoVN4G,GALCC,YACZQ,cACArG,IAvWW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChB6vC,OAAQ,CACJ1oB,OAAQ,QAEZ64B,eAAgB,CACZ74B,OAAQ,qBAEZypC,iBAAkB,CACdzpC,OAAQ,kBAEZ8yC,wBAAyB,CACrB9yC,OAAQ,kBAEZgzC,eAAgB,CACZhzC,OAAQ,kBAEZ6yC,wBAAyB,CACrB53C,MAAOf,EAAM8d,QAAQC,QAAQuhB,KAAO,eAErCp5B,aAAYlG,KAoVI,CAAEmG,WAAW,IAGrBR,CAAQmyC,2MC3VjBiB,sNACF/1C,MAAQ,CACJsiB,SAAU,KACVnxB,MAAOmb,KAAYQ,OACnBkpC,UAAW1pC,KAAYQ,OACvBmpC,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAA55D,GAAU,IAC1BswB,EAAuBtwB,EAAvBswB,OAAQupC,EAAe75D,EAAf65D,gBAEGlsD,IAAfksD,EACA36D,EAAK4kB,SAAS,CAAEnP,MAAO2b,IAEvBpxB,EAAK4kB,SAAS,CAAEnP,MAAO2b,EAAQkpC,UAAWK,OAIlDC,kBAAoB,SAAAh0B,GAChB5mC,EAAK4kB,SAAS,CAAEgiB,SAAUA,OAG9Bi0B,mBAAqB,WAAM,IAAAx2C,EACqBrkB,EAAKskB,MAAzCi2C,EADel2C,EACfk2C,SAAUC,EADKn2C,EACLm2C,WAAYC,EADPp2C,EACOo2C,UAE1BF,GACAC,GACAC,GAEJz6D,EAAK4kB,SAAS,CAAEgiB,SAAU,UAG9Bk0B,iBAAmB,SAACtvD,EAAOuvD,GACvB/6D,EAAK4kB,SAAS,CAAE41C,YAAY,IAExBO,GACA/6D,EAAK46D,kBAAkBpvD,EAAMs7B,kBAIrCk0B,iBAAmB,WACfh7D,EAAK4kB,SAAS,CAAE41C,YAAY,GAAS,WACjCx6D,EAAK66D,0BAIbI,sBAAwB,WACpBj7D,EAAK4kB,SAAS,CAAE61C,WAAW,GAAS,WAChCz6D,EAAK66D,0BAIbK,iBAAmB,WAAM,IAAAh4B,EACQljC,EAAKskB,MAA1B7O,EADaytB,EACbztB,MAAO6kD,EADMp3B,EACNo3B,UACTa,EAAY1lD,EAAQ,EAAI,EAAI6kD,GAAalnC,IAE/CpxB,KAAgBgH,aAAa,CACzBC,QAAS,0BACTmoB,OAAQ+pC,OAIhB3U,aAAe,SAACh7C,EAAOiK,GAAU,IAAA0tB,EACGnjC,EAAKskB,MAA7Bi2C,EADqBp3B,EACrBo3B,SAAUD,EADWn3B,EACXm3B,UAEdC,EACAv4D,KAAgBgH,aAAa,CACzBC,QAAS,0BACTmoB,OAAQ3b,IAGZzT,KAAgBgH,aAAa,CACzBC,QAAS,0BACT0xD,WAAYllD,EAAQ,EAAIA,EAAQ6kD,EAChClpC,OAAQ3b,OAKpB2lD,gBAAkB,WAAM,IACZ3lD,EAAUzV,EAAKskB,MAAf7O,MAERzV,EAAK4kB,SAAS,CACV21C,UAAU,EACVD,UAAW7kD,OAInB4lD,cAAgB,WAAM,IAAA73B,EACWxjC,EAAKskB,MAA1B7O,EADU+tB,EACV/tB,MAAO6kD,EADG92B,EACH82B,UAEft6D,EAAK4kB,SACD,CACI21C,UAAU,EACVD,UAAW7kD,EAAQ,EAAIA,EAAQ6kD,GAEnC,WACIt6D,EAAK66D,0BAKjBS,cAAgB,SAAA7lD,GACZ,OAAc,IAAVA,EACOuK,EAAArf,EAAAkM,cAAC0uD,GAAA56D,EAAD,CAAeyhB,SAAS,UAG/B3M,EAAQ,IACDuK,EAAArf,EAAAkM,cAAC2uD,GAAA76D,EAAD,CAAgByhB,SAAS,UAGhC3M,EAAQ,GACDuK,EAAArf,EAAAkM,cAAC4uD,GAAA96D,EAAD,CAAgByhB,SAAS,UAG7BpC,EAAArf,EAAAkM,cAAC6uD,GAAA/6D,EAAD,CAAcyhB,SAAS,8FAlH9BwO,KAAYhP,GAAG,0BAA2BzhB,KAAKu6D,0EAI/C9pC,KAAYzuB,eAAe,0BAA2BhC,KAAKu6D,4DAiHtD,IAAA/vD,EAAAxK,KACG0gB,EAAY1gB,KAAKuf,MAAjBmB,QADH4iB,EAEuBtjC,KAAKmkB,MAAzBsiB,EAFHnD,EAEGmD,SAAUnxB,EAFbguB,EAEahuB,MACZrL,EAAOgT,QAAQwpB,GAErB,OACI5mB,EAAArf,EAAAkM,cAAA,OACI8uD,aAAc,SAAAtxC,GAAC,OAAI1f,EAAKmwD,iBAAiBzwC,GAAG,IAC5CuxC,aAAcz7D,KAAK66D,iBACnBluD,MAAO,CACHwW,SAAU,WACVuW,WAAY,gBAEhB7Z,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQ0mB,WAAYllB,MAAM,UAAUlC,QAAShgB,KAAK+6D,kBACpE/6D,KAAKm7D,cAAc7lD,IAExBuK,EAAArf,EAAAkM,cAAA,OACIC,MAAO,CACHwW,SAAU,WACVuW,WAAY,cACZgiC,WAAYzxD,EAAO,UAAY,SAC/BivB,OAAQ,GAEZsiC,aAAc,SAAAtxC,GAAC,OAAI1f,EAAKmwD,iBAAiBzwC,GAAG,IAC5CuxC,aAAcz7D,KAAK86D,uBACnBj7C,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAWH,EAAQ8F,YAAa9F,EAAQgC,MACnD/V,MAAO,CACHgvD,UAAW,EACXC,YAAa,EACbv0C,YAAa,UAEjBxH,EAAArf,EAAAkM,cAACgqC,GAAAl2C,EAAD,CACIkgB,QAAS,CAAE61C,UAAW71C,EAAQi2B,OAAQE,MAAOn2B,EAAQm2B,OACrDC,IAAK,EACLjwB,IAAK,EACLvR,MAAOA,EACPiN,SAAUviB,KAAKqmD,aACfwV,YAAa77D,KAAKi7D,gBAClBa,UAAW97D,KAAKk7D,cAChBpxC,UAAQ,cAxKT7J,IAAMC,YAiLlBgB,OArMA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBsnC,WAAY,CACR7jB,QAAS,GAEbb,KAAM,CACF9V,QAAS,OACT8C,OAAQ,IACRF,MAAO,GACP+T,QAAS,SACTmW,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,WAEnFxB,OAAQ,CACJpzB,QAAS,UAEbszB,MAAO,CACHklB,QAAS,IAEV10C,aAAYlG,KAoLe,CAAEmG,WAAW,GAAhCpG,CAAwCg5C,8CCtMjD8B,eACF,SAAAA,EAAYz8C,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAg8D,IACfn8D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAk8D,GAAA77D,KAAAH,KAAMuf,KAiBV08C,0BAA4B,SAAAt7D,GAAU,IAC1BwwB,EAAWxwB,EAAXwwB,OAERtxB,EAAK4kB,SAAS,CAAE0M,YArBDtxB,EAwBnBq8D,aAAe,WAAM,IACT/qC,EAAWtxB,EAAKskB,MAAhBgN,OAEJgrC,EAAahrC,EACjB,OAAQA,GACJ,KAAKf,KAAWE,KACZ6rC,EAAa/rC,KAAWG,OACxB,MAEJ,KAAKH,KAAWG,OACZ4rC,EAAa/rC,KAAWI,WACxB,MAEJ,KAAKJ,KAAWI,WACZ2rC,EAAa/rC,KAAWE,KAKhCzuB,KAAgBgH,aAAa,CACzBC,QAAS,0BACTqoB,OAAQgrC,KA7CGt8D,EAiDnBu8D,QAAU,SAAAjrC,GACN,OAAQA,GACJ,KAAKf,KAAWE,KAGhB,KAAKF,KAAWG,OACZ,OAAO1Q,EAAArf,EAAAkM,cAAC2vD,GAAA77D,EAAD,CAAYyhB,SAAS,UAEhC,KAAKmO,KAAWI,WACZ,OAAO3Q,EAAArf,EAAAkM,cAAC4vD,GAAA97D,EAAD,CAAeyhB,SAAS,UAEnC,QACI,OAAOpC,EAAArf,EAAAkM,cAAC2vD,GAAA77D,EAAD,CAAYyhB,SAAS,YA7DrB,IAGPkP,EAAWV,KAAXU,OAHO,OAKftxB,EAAKskB,MAAQ,CACTgN,UANWtxB,mFAWf4wB,KAAYhP,GAAG,0BAA2BzhB,KAAKi8D,0EAI/CxrC,KAAYzuB,eAAe,0BAA2BhC,KAAKi8D,4DAmDtD,IACGv7C,EAAY1gB,KAAKuf,MAAjBmB,QACAyQ,EAAWnxB,KAAKmkB,MAAhBgN,OAER,OACItR,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WACnBllB,MAAOiP,IAAWf,KAAWE,KAAO,UAAY,UAChDtQ,QAAShgB,KAAKk8D,cACbl8D,KAAKo8D,QAAQjrC,WA5EHlR,IAAMC,WAkFlBgB,OAxFA,CACXkmB,WAAY,CACR7jB,QAAS,IAsFFrC,CAAmB86C,yBCnF5BO,eACF,SAAAA,EAAYh9C,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAu8D,IACf18D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAy8D,GAAAp8D,KAAAH,KAAMuf,KAiBVi9C,2BAA6B,SAAA77D,GAAU,IAC3BywB,EAAYzwB,EAAZywB,QAERvxB,EAAK4kB,SAAS,CAAE2M,aArBDvxB,EAwBnB48D,cAAgB,WAAM,IACVrrC,EAAYvxB,EAAKskB,MAAjBiN,QAERvvB,KAAgBgH,aAAa,CACzBC,QAAS,2BACTsoB,SAAUA,KA7BC,IAGPA,EAAYX,KAAZW,QAHO,OAKfvxB,EAAKskB,MAAQ,CACTiN,WANWvxB,mFAWf4wB,KAAYhP,GAAG,2BAA4BzhB,KAAKw8D,2EAIhD/rC,KAAYzuB,eAAe,2BAA4BhC,KAAKw8D,6DAkBvD,IACG97C,EAAY1gB,KAAKuf,MAAjBmB,QACA0Q,EAAYpxB,KAAKmkB,MAAjBiN,QAER,OACIvR,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WACnBllB,MAAQkP,EAAsB,UAAZ,UAClBpR,QAAShgB,KAAKy8D,eACd58C,EAAArf,EAAAkM,cAACgwD,GAAAl8D,EAAD,CAAayhB,SAAS,kBA3CVhC,IAAMC,WAiDnBgB,OAvDA,CACXkmB,WAAY,CACR7jB,QAAS,IAqDFrC,CAAmBq7C,IClD5BI,eACF,SAAAA,EAAYp9C,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA28D,IACf98D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA68D,GAAAx8D,KAAAH,KAAMuf,KAiBVq9C,gCAAkC,SAAAj8D,GAAU,IAChC0wB,EAAiB1wB,EAAjB0wB,aAERxxB,EAAK4kB,SAAS,CAAE4M,kBArBDxxB,EAwBnBg9D,mBAAqB,WAAM,IAGjBC,EAFmBj9D,EAAKskB,MAAtBkN,eAGa2B,IAA6B+pC,IAA2B/pC,IAE7EnxB,KAAgBgH,aAAa,CACzBC,QAAS,gCACTuoB,aAAcyrC,KAhCH,IAGPzrC,EAAiBZ,KAAjBY,aAHO,OAKfxxB,EAAKskB,MAAQ,CACTkN,gBANWxxB,mFAWf4wB,KAAYhP,GAAG,gCAAiCzhB,KAAK48D,gFAIrDnsC,KAAYzuB,eAAe,gCAAiChC,KAAK48D,kEAqB5D,IACGl8C,EAAY1gB,KAAKuf,MAAjBmB,QACA2Q,EAAiBrxB,KAAKmkB,MAAtBkN,aAER,OACIxR,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WACnBllB,MAAOmP,EAAe2B,IAA6B,UAAY,UAC/DhT,QAAShgB,KAAK68D,oBACdh9C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BAAf,cA9CiBG,IAAMC,WAoDxBgB,OAzDA,CACXkmB,WAAY,CACR7jB,QAAS,IAuDFrC,CAAmBy7C,ICdnBK,eA7CX,SAAAA,EAAYz9C,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAg9D,IACfn9D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAk9D,GAAA78D,KAAAH,KAAMuf,KAiBVujB,wBAA0B,SAAAniC,GAAU,IACxBgxB,EAAgBhxB,EAAhBgxB,YAER9xB,EAAK4kB,SAAS,CACVkN,YAAaA,EACbwR,kBAAmBD,aAAkBve,KAAKC,MAAM+M,GAAe,OAvBpD9xB,EA2BnBgjC,cAAgB,SAAClR,EAAaD,GAGHwR,aAAkBve,KAAKC,MAAM8M,GAAY,IAKhE,OAJ0BwR,aAAkBve,KAAKC,MAAM+M,GAAe,KA5BtE9xB,EAAKskB,MAAQ,CACTwN,YAAa,EACbD,SAAU,EACVkR,WAAY/iC,EAAKgjC,cAAc,EAAG,IANvBhjC,mFAWf4wB,KAAYhP,GAAG,wBAAyBzhB,KAAK8iC,wEAI7CrS,KAAYzuB,eAAe,wBAAyBhC,KAAK8iC,0DAuBpD,IACGK,EAAsBnjC,KAAKmkB,MAA3Bgf,kBAER,OAAOtjB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KAAG6d,UA1CCljB,IAAMC,oBCanB+8C,uBACF,SAAAA,EAAY19C,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAi9D,IACfp9D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAm9D,GAAA98D,KAAAH,KAAMuf,KA0BV29C,eAAiB,WACb,IAAMtgC,EAAO/8B,EAAKksD,QAAQx+B,QAC1B,GAAKqP,EAAL,CAFmB,IAIX31B,EAJWnH,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,IAIXoH,UACR,GAAKA,EAAL,CAEA,IAAM5D,EAAOxD,EAAKs9D,WAAWl6D,IAAIgE,GACjC,GAAK5D,EAAL,CAEA,IAAM4kC,EAAOm1B,eAAqB/5D,GAC7B4kC,IAELrL,EAAKiM,UAAYZ,EAAKo1B,UAAY,QAxCnBx9D,EAyDnBy9D,kCAAoC,SAAA38D,GAAU,IAClC48D,EAAS58D,EAAT48D,KAEJA,EACA19D,EAAK4kB,SACD,CACI+4C,kBAAmBD,GAEvB,WACI19D,EAAK49D,YAIb59D,EAAK4kB,SACD,CACI+4C,kBAAmBD,GAEvB,WACI19D,EAAK69D,cA3EF79D,EAiFnBuiC,0BAA4B,SAAAzhC,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UAEhBpH,EAAKmH,OAASA,EACdnH,EAAKoH,UAAYA,GArFFpH,EAwFnB89D,mCAAqC,SAAAh9D,GAAU,IAAAi9D,EAAA99D,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,IACnCmH,EADmC42D,EACnC52D,OAAQC,EAD2B22D,EAC3B32D,UAEZtG,EAAOqG,SAAWA,GAAUrG,EAAOsG,YAAcA,GACjDpH,EAAK4kB,SAAS,CACVoM,SAAU,QA7FHhxB,EAkGnBg+D,4BAA8B,SAAAl9D,GAAU,IAAAm9D,EAAAh+D,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,IAC5BmH,EAD4B82D,EAC5B92D,OAAQC,EADoB62D,EACpB72D,UACR4pB,EAAalwB,EAAbkwB,SAEJ7pB,IAAW6pB,EAAS7pB,QAAUC,IAAc4pB,EAAS5pB,WACrDpH,EAAK4kB,SAAS,CACVoM,SAAUA,KAxGHhxB,EA6GnB49D,QAAU,WACNM,aAAal+D,EAAKm+D,aAElBn+D,EAAKm+D,YAAcxkC,WAAW,WAAM,IAAAtV,EACcrkB,EAAKskB,MAA3C85C,EADwB/5C,EACxB+5C,eAAgBT,EADQt5C,EACRs5C,kBACxB39D,EAAK4kB,SAAS,CACVxa,KAAMg0D,GAAkBT,KAE7B,MArHY39D,EAwHnB69D,SAAW,WACPK,aAAal+D,EAAK+9C,SAElB/9C,EAAK+9C,QAAUpkB,WAAW,WAAM,IAAAuJ,EACkBljC,EAAKskB,MAA3C85C,EADoBl7B,EACpBk7B,eAAgBT,EADIz6B,EACJy6B,kBACxB39D,EAAK4kB,SAAS,CACVxa,KAAMg0D,GAAkBT,KAE7B,MAhIY39D,EAmInB86D,iBAAmB,WACf96D,EAAK4kB,SAAS,CACV+4C,mBAAmB,EACnBvzD,MAAM,KAtIKpK,EA0InBg7D,iBAAmB,WACfh7D,EAAK4kB,SACD,CACI+4C,mBAAmB,GAEvB,WACI39D,EAAK69D,cAhJE79D,EAqJnBisD,aAAe,WACX,IAAMlvB,EAAO/8B,EAAKksD,QAAQx+B,QACrBqP,IAEkB,IAAnBA,EAAKiM,UACLhnC,KAAgBgH,aAAa,CACzBC,QAAS,kCAEN8zB,EAAKkM,eAAiBlM,EAAKiM,UAAYjM,EAAK8nB,cACnD7iD,KAAgBgH,aAAa,CACzBC,QAAS,oCA5JjBjJ,EAAKksD,QAAU9rC,IAAMogB,YACrBxgC,EAAKs9D,WAAa,IAAIj0D,IAJP,IAMP5E,EAAsBmsB,KAAtBnsB,QAASusB,EAAaJ,KAAbI,SANF,OAQfhxB,EAAKmH,OAAS1C,EAAUA,EAAQ8B,QAAU,EAC1CvG,EAAKoH,UAAY3C,EAAUA,EAAQ5B,GAAK,EAExC7C,EAAKskB,MAAQ,CACTla,MAAM,EACNg0D,gBAAgB,EAChBT,mBAAmB,EACnB3sC,SAAUA,GAfChxB,kFAmBAqlB,EAAWC,EAAWC,GAAU,IACvCnb,EAASjK,KAAKmkB,MAAdla,MAEHkb,EAAUlb,MAAQA,GACnBjK,KAAKk9D,6DAqBTzsC,KAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,KAAYhP,GAAG,4BAA6BzhB,KAAK69D,6BACjDptC,KAAYhP,GAAG,mCAAoCzhB,KAAK29D,oCACxDltC,KAAYhP,GAAG,kCAAmCzhB,KAAKs9D,kFAIvD7sC,KAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,KAAYzuB,eAAe,4BAA6BhC,KAAK69D,6BAC7DptC,KAAYzuB,eAAe,mCAAoChC,KAAK29D,oCACpEltC,KAAYzuB,eAAe,kCAAmChC,KAAKs9D,oEA8G9D,IAAA9yD,EAAAxK,KACG0gB,EAAY1gB,KAAKuf,MAAjBmB,QADHsiB,EAGsBhjC,KAAKmkB,MAAxBla,EAHH+4B,EAGG/4B,KAAM4mB,EAHTmS,EAGSnS,SACd,IAAK5mB,EAAM,OAAO,KAClB,IAAK4mB,EAAU,OAAO,KALjB,IAOGtjB,EAAasjB,EAAbtjB,SACR,OAAKA,EACDA,EAASvH,QAAU,EAAU,MAEjChG,KAAKm9D,WAAWh+C,QAGZU,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,mBAAoBH,EAAQgC,KAAMhC,EAAQ8F,cACjE3G,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAK+rD,QACVjsC,UAAU,iBACV07C,aAAcx7D,KAAK26D,iBACnBc,aAAcz7D,KAAK66D,iBACnB3N,SAAUltD,KAAK8rD,cACdj7B,EAAStjB,SACL2wD,MAAM,GACNC,UACA3wD,IAAI,SAAA/B,GAAC,OACFoU,EAAArf,EAAAkM,cAAA,OAAK4K,IAAK7L,EAAE/I,GAAIg+B,IAAK,SAAAoO,GAAE,OAAItkC,EAAK2yD,WAAWl8D,IAAIwK,EAAE/I,GAAIosC,IAAKhvB,UAAU,iBAC/DmM,aAASxgB,EAAG,kBAAM+T,aAAU/T,EAAErF,QAASqF,EAAE/I,aAnBhD,YA7KPud,IAAMC,YA0MdgB,OAjNA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChB4iB,KAAM,CACFgX,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,YAEhF9wB,aAAYlG,KA6MJD,CAAmB+7C,ICvL5BmB,uBACF,SAAAA,EAAY7+C,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAo+D,IACfv+D,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAs+D,GAAAj+D,KAAAH,KAAMuf,KA6EVq9C,gCAAkC,SAAAj8D,GAAU,IAChC0wB,EAAiB1wB,EAAjB0wB,aAEF6B,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELA,EAAO7B,aAAeA,IApFPxxB,EAuFnB06D,0BAA4B,SAAA55D,GAAU,IAC1BswB,EAAWtwB,EAAXswB,OAEFiC,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELA,EAAOjC,OAASA,IA7FDpxB,EAgGnBkgC,iCAAmC,SAAAp/B,GAC/Bd,EAAKw+D,mBAAqBphD,QAAQ7E,KAAiB4nB,qBAjGpCngC,EAoGnBy+D,+BAAiC,SAAA39D,GAC7Bd,EAAKw+D,oBAAqB,GArGXx+D,EAwGnB0+D,+BAAiC,SAAA59D,GAC7Bd,EAAKw+D,oBAAqB,GAzGXx+D,EA4GnB2+D,8BAAgC,SAAA79D,GAC5Bd,EAAKw+D,oBAAqB,EAE1B,IAAMnrC,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,GAELA,EAAO0M,SAlHQ//B,EAqHnB4+D,iBAAmB,SAACv9D,EAAMoD,GAAY,IAC1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB7C,EAAK4kB,SACD,CACI/C,IAAK7hB,EAAK6+D,YAAYp6D,IAE1B,WACI,IAAM4uB,EAASrzB,EAAKy/B,SAAS/R,QACzB2F,GACIrzB,EAAKw+D,qBACLnrC,EAAO0M,QAEP/9B,KAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQZ,EACRa,UAAWvE,QArIhB7C,EA6InB8+D,wBAA0B,SAAAh+D,GAAU,IACxBqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UACR3C,EAAYzE,EAAKskB,MAAjB7f,QAER,GAAKA,EAAL,CAJgC,IAMxB8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,GAAKA,GACDyC,IAAWZ,GAAWa,IAAcvE,EAExC,OAAQ6B,EAAQ,UACZ,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAE3B,GAAIb,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAK4+D,iBAAiBv9D,EAAMoD,GAIpC,GAAIkB,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAK4+D,iBAAiBp3D,EAAO/C,GAIrC,GAAIiB,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAK4+D,iBAAiBn5D,EAAOhB,IAKzC,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACfxD,GACArB,EAAK4+D,iBAAiBv9D,EAAMoD,GAIpC,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WACR,GAAIA,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAxH,EAAK4+D,iBAAiBp3D,EAAO/C,GAIrC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WACR,GAAIA,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACAzF,EAAK4+D,iBAAiBn5D,EAAOhB,OAhN9BzE,EAyNnBg+D,4BAA8B,SAAAl9D,GAAU,IAC5BkwB,EAAalwB,EAAbkwB,SACA7pB,EAAsB6pB,EAAtB7pB,OAAQC,EAAc4pB,EAAd5pB,UACR3C,EAAYzE,EAAKskB,MAAjB7f,QAEJA,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxDpH,EAAK4kB,SAAS,CAAEoM,SAAUA,KA/NfhxB,EAmOnB++D,yBAA2B,SAAAj+D,GACvBd,EAAK4kB,SAAS,CACVngB,QAAS,KACTusB,SAAU,KACVS,SAAS,EACT5P,IAAK,QAxOM7hB,EA4OnBuiC,0BAA4B,SAAAzhC,GAAU,IAC1BqG,EAAsBrG,EAAtBqG,OAAQC,EAActG,EAAdsG,UADkBid,EAETrkB,EAAKskB,MAAtB7f,EAF0B4f,EAE1B5f,QAASod,EAFiBwC,EAEjBxC,IAEjB,GAAIpd,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxD,GAAIya,EAAK,CACL,IAAMwR,EAASrzB,EAAKy/B,SAAS/R,QACzB2F,IACIA,EAAO2rC,OACP3rC,EAAOyM,OAEPzM,EAAO0M,cAIhB,CACH,IAAMle,EAAM7hB,EAAK6+D,YAAYjuC,KAAYnsB,SACnCgtB,EAAUrU,QAAQyE,GACP+O,KAAYI,SAC7BhxB,EAAK4kB,SACD,CACIngB,QAASmsB,KAAYnsB,QACrBusB,SAAUJ,KAAYI,SACtBS,QAASA,EACT5P,IAAKA,GAET,WACI,IAAMwR,EAASrzB,EAAKy/B,SAAS/R,QACzB2F,IACAA,EAAOvB,YAAc9xB,EAAKukB,UACtBvkB,EAAKw+D,oBACLnrC,EAAO0M,aA3QZ//B,EAqRnBi/D,WAAa,WACTj9D,KAAgBgH,aAAa,CACzBC,QAAS,2BAvREjJ,EA2RnBk/D,WAAa,WAAM,IACPz6D,EAAYzE,EAAKskB,MAAjB7f,QACHA,GAELzC,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,MAlSR7C,EAsSnBm/D,WAAa,WACTn9D,KAAgBgH,aAAa,CACzBC,QAAS,2BAxSEjJ,EA4SnB6+D,YAAc,SAAAp6D,GACV,GAAIA,EAAS,KACDC,EAAYD,EAAZC,QACR,GAAIA,EAAS,KACDG,EAA4CH,EAA5CG,MAAOc,EAAqCjB,EAArCiB,WAAYD,EAAyBhB,EAAzBgB,WAAYF,EAAad,EAAbc,SAEvC,GAAIX,EAAO,CACP,IAAMxD,EAAOwD,EAAMA,MACnB,GAAIxD,EACA,OAAOkT,YAAOlT,GAItB,GAAIsE,EAAY,KACJ6B,EAAU7B,EAAV6B,MACR,GAAIA,EACA,OAAO+M,YAAO/M,GAItB,GAAI9B,EAAY,KACJD,EAAUC,EAAVD,MACR,GAAIA,EACA,OAAO8O,YAAO9O,GAItB,GAAID,EAAU,CACV,GAAIA,EAASX,MAAO,CAChB,IAAMxD,EAAOmE,EAASX,MAAMA,MAC5B,GAAIxD,EACA,OAAOkT,YAAOlT,GAItB,GAAImE,EAASG,WAAY,KACb6B,EAAUhC,EAASG,WAAnB6B,MACR,GAAIA,EACA,OAAO+M,YAAO/M,GAItB,GAAIhC,EAASE,WAAY,KACbD,EAAUD,EAASE,WAAnBD,MACR,GAAIA,EACA,OAAO8O,YAAO9O,MAOlC,MAAO,IAhWQzF,EAmWnBo/D,YAAc,WAAqB,IAApBxtC,IAAoB/vB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,KAAAA,UAAA,GACvB4C,EAAYzE,EAAKskB,MAAjB7f,QACHA,IAELzC,KAAgBgH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB+uB,SAAUA,IAGd5xB,EAAK4kB,SACD,GAKA,WACI5iB,KAAgBgH,aAAa,CACzBC,QAAS,uBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB+uB,SAAUA,QAzXP5xB,EA+XnBq/D,iBAAmB,WACfr/D,EAAKo/D,aAAY,IAhYFp/D,EAmYnBuuC,YAAc,WACV,IAAMlb,EAASrzB,EAAKy/B,SAAS/R,QACzB2F,GACAA,EAAO0M,QAGX//B,EAAKo/D,aAAY,IAzYFp/D,EA4YnBs/D,iBAAmB,WAAM,IACb76D,EAAYzE,EAAKskB,MAAjB7f,QACR,GAAKA,EAAL,CAEA,IAAM4uB,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELrzB,EAAK4kB,SAAS,CACVkN,YAAauB,EAAOvB,YACpBwR,kBAAmBD,aAAkBve,KAAKC,MAAMsO,EAAOvB,aAAe,MAG1E9vB,KAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBgvB,SAAUwB,EAAOxB,SACjBC,YAAauB,EAAOvB,YACpBC,UAAWnZ,KAAKI,WA9ZLhZ,EAkanBkkC,cAAgB,WAAM,IACVz/B,EAAYzE,EAAKskB,MAAjB7f,QACR,GAAKA,EAAL,CAEA,IAAM4uB,EAASrzB,EAAKy/B,SAAS/R,QAC7B,GAAK2F,EAAL,CALkB,IAOV7B,EAAyBZ,KAAzBY,aAAcJ,EAAWR,KAAXQ,OAEd7qB,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACXgC,EAAQ4pB,aAASloB,EAAS1D,GAMhC,GAJAwwB,EAAO7B,aAAe3sB,EAAQsuB,IAA6B3B,EAC3D6B,EAAOjC,OAASA,EAChBiC,EAAO0N,OAAQ,GAEXl8B,EAAJ,CAIA,IAAImtB,EAAS,KACT,kBAAmBqB,EACnBrB,EAASqB,EAAOksC,gBACT,qBAAsBlsC,IAC7BrB,EAASqB,EAAOmsC,oBAGfxtC,GAILhwB,KAAgBgH,aAAa,CACzBC,QAAS,iCACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBmvB,OAAQA,QArcGhyB,EAycnBy/D,gBAAkB,WAAM,IACZh7D,EAAYzE,EAAKskB,MAAjB7f,QACR,GAAKA,EAAL,CAEAzE,EAAK4kB,SAAS,CACV6M,SAAS,IAGb,IAAM4B,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,GAELrxB,KAAgBgH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBivB,YAAauB,EAAOvB,YACpBD,SAAUwB,EAAOxB,SACjBE,UAAWnZ,KAAKI,UA1dLhZ,EA8dnB0/D,iBAAmB,WAAM,IACbj7D,EAAYzE,EAAKskB,MAAjB7f,QACHA,IAELzE,EAAK4kB,SAAS,CACV6M,SAAS,IAGEzxB,EAAKy/B,SAAS/R,SAG7B1rB,KAAgBgH,aAAa,CACzBC,QAAS,yBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,OA5eR7C,EAgfnBg9D,mBAAqB,WAAM,IAGjBC,EAFmBj9D,EAAKskB,MAAtBkN,eAGa2B,IAA6B+pC,IAA2B/pC,IAE7EnzB,EAAK4kB,SACD,CACI4M,aAAcyrC,GAElB,WACI,IAAM5pC,EAASrzB,EAAKy/B,SAAS/R,QACxB2F,IAELA,EAAO7B,aAAeyrC,KAI9Bj7D,KAAgBgH,aAAa,CACzBC,QAAS,gCACTuoB,aAAcyrC,KApgBHj9D,EAwgBnB2/D,QAAU,SAACl7D,EAASusB,GAChB,IAAKvsB,EAAS,OAAO,EACrB,IAAKusB,IAAaA,EAAStjB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQse,EAAStjB,SAASwkB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,EAAIse,EAAStjB,SAASvH,QAjhBtBnG,EAohBnB4/D,QAAU,SAACn7D,EAASusB,GAChB,IAAKvsB,EAAS,OAAO,EACrB,IAAKusB,IAAaA,EAAStjB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQse,EAAStjB,SAASwkB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,GAAK,GA7hBL1S,EAgiBnB6/D,sBAAwB,WACpB79D,KAAgBgH,aAAa,CACzBC,QAAS,kCACTy0D,MAAM,KAniBK19D,EAuiBnB8/D,sBAAwB,WACpB99D,KAAgBgH,aAAa,CACzBC,QAAS,kCACTy0D,MAAM,KA1iBK19D,EA8iBnB+/D,iBAAmB,WAAM,IACbt7D,EAAYzE,EAAKskB,MAAjB7f,QACHA,GAEL6uB,aAAS7uB,EAAQ8B,QAAS9B,EAAQ5B,KA/iBlC7C,EAAKy/B,SAAWrf,IAAMogB,YAHP,IAKP/7B,EAAsBmsB,KAAtBnsB,QAASusB,EAAaJ,KAAbI,SALF,OAOfhxB,EAAKukB,UAAYy7C,IAEjBhgE,EAAKskB,MAAQ,CACTwN,YAAa,EACbwR,kBAAmBD,aAAkB,GACrC5+B,QAASA,EACTusB,SAAUA,EACVS,SAAS,EACT5P,IAAK7hB,EAAK6+D,YAAYp6D,IAfXzE,qFAmBGilB,EAAWC,EAAWC,GAAa,IAC7C7D,EAAUnhB,KAAKuf,MAAf4B,MAD6C4hB,EAET/iC,KAAKmkB,MAAzC7f,EAF6Cy+B,EAE7Cz+B,QAASusB,EAFoCkS,EAEpClS,SAAUnP,EAF0BqhB,EAE1BrhB,IAAK4P,EAFqByR,EAErBzR,QAEhC,OAAIxM,EAAU3D,QAAUA,IAIpB4D,EAAUzgB,UAAYA,IAItBygB,EAAU8L,WAAaA,IAIvB9L,EAAUrD,MAAQA,GAIlBqD,EAAUuM,UAAYA,iDAQ1B1xB,IAAU6hB,GAAG,4BAA6BzhB,KAAK2+D,yBAC/C/+D,IAAU6hB,GAAG,4BAA6BzhB,KAAK2+D,yBAC/C/+D,IAAU6hB,GAAG,wBAAyBzhB,KAAK2+D,yBAC3CluC,KAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,KAAYhP,GAAG,yBAA0BzhB,KAAK4+D,0BAC9CnuC,KAAYhP,GAAG,4BAA6BzhB,KAAK69D,6BACjDptC,KAAYhP,GAAG,8BAA+BzhB,KAAKw+D,+BACnD/tC,KAAYhP,GAAG,+BAAgCzhB,KAAKu+D,gCACpD9tC,KAAYhP,GAAG,+BAAgCzhB,KAAKs+D,gCACpD7tC,KAAYhP,GAAG,0BAA2BzhB,KAAKu6D,2BAC/C9pC,KAAYhP,GAAG,gCAAiCzhB,KAAK48D,iCAErDxkD,KAAiBqJ,GAAG,iCAAkCzhB,KAAK+/B,iFAI3DngC,IAAUoC,eAAe,4BAA6BhC,KAAK2+D,yBAC3D/+D,IAAUoC,eAAe,4BAA6BhC,KAAK2+D,yBAC3D/+D,IAAUoC,eAAe,wBAAyBhC,KAAK2+D,yBACvDluC,KAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,KAAYzuB,eAAe,yBAA0BhC,KAAK4+D,0BAC1DnuC,KAAYzuB,eAAe,4BAA6BhC,KAAK69D,6BAC7DptC,KAAYzuB,eAAe,8BAA+BhC,KAAKw+D,+BAC/D/tC,KAAYzuB,eAAe,+BAAgChC,KAAKu+D,gCAChE9tC,KAAYzuB,eAAe,+BAAgChC,KAAKs+D,gCAChE7tC,KAAYzuB,eAAe,0BAA2BhC,KAAKu6D,2BAC3D9pC,KAAYzuB,eAAe,gCAAiChC,KAAK48D,iCAEjExkD,KAAiBpW,eAAe,iCAAkChC,KAAK+/B,mEA0elE,IACGrf,EAAY1gB,KAAKuf,MAAjBmB,QADHsiB,EAEuChjC,KAAKmkB,MAAzCmN,EAFH0R,EAEG1R,QAAShtB,EAFZ0+B,EAEY1+B,QAASusB,EAFrBmS,EAEqBnS,SAAUnP,EAF/BshB,EAE+BthB,IAEhChd,GAAQ,EACZ,GAAIJ,EAAS,KACD8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACjBgC,EAAQ4pB,aAASloB,EAAS1D,GAG9B,IAAMkY,EAAQsT,aAAc5pB,GACtBw7D,EAAW9zC,aAAY1nB,GACvBkU,EAAOS,aAAQ3U,GACfy7D,GAAYr7D,EACZs7D,GAAoBt7D,EACpBu7D,EAAav7D,EACbw7D,EAAcx7D,EACd86D,EAAUx/D,KAAKw/D,QAAQl7D,EAASusB,GAChC4uC,EAAUz/D,KAAKy/D,QAAQn7D,EAASusB,GAEtC,OACIhR,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,SACIoT,UAAU,sBACV4gB,IAAK1gC,KAAKs/B,SACV5d,IAAKA,EACLmf,UAAU,EACVs/B,UAAU,EACV3wD,MAAO,GACPE,OAAQ,GACR20B,UAAWrkC,KAAK+jC,cAChBq8B,OAAQpgE,KAAKs/D,gBACbe,QAASrgE,KAAKu/D,iBACde,aAActgE,KAAKm/D,iBACnBoB,QAASvgE,KAAKk/D,mBAEjB56D,GACGub,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQ8F,YAAa,kBAC5C3G,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACImnC,UAAW63B,EACX1/C,UAAWY,EAAQ0mB,WACnBllB,MAAM,UACNlC,QAAShgB,KAAK8+D,YACdj/C,EAAArf,EAAAkM,cAAC8zD,GAAAhgE,EAAD,CAAkByhB,SAAS,WAE/BpC,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WACnBllB,MAAM,UACNylB,UAAWjmB,EACX1B,QAAShgB,KAAK++D,YACbztC,EAAUzR,EAAArf,EAAAkM,cAACsqC,GAAAx2C,EAAD,MAAgBqf,EAAArf,EAAAkM,cAACuqC,GAAAz2C,EAAD,OAE/Bqf,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACImnC,UAAW83B,EACX3/C,UAAWY,EAAQ0mB,WACnBllB,MAAM,UACNlC,QAAShgB,KAAKg/D,YACdn/C,EAAArf,EAAAkM,cAAC+zD,GAAAjgE,EAAD,CAAcyhB,SAAS,WAE3BpC,EAAArf,EAAAkM,cAACg0D,GAAD,MACA7gD,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,wBACV07C,aAAcx7D,KAAK0/D,sBACnBjE,aAAcz7D,KAAK2/D,sBACnB3/C,QAAShgB,KAAK4/D,kBACd//C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACVlF,EACAmlD,GACGlgD,EAAArf,EAAAkM,cAAA,QAAMkO,MAAOklD,GAAb,OAEKtnD,IAVjB,OAeIqH,EAAArf,EAAAkM,cAACi0D,GAAD,OAEJ9gD,EAAArf,EAAAkM,cAACk0D,GAAD,MACCZ,GAAoBngD,EAAArf,EAAAkM,cAACm0D,GAAD,MACpBZ,GAAcpgD,EAAArf,EAAAkM,cAACo0D,GAAD,MACdZ,GAAergD,EAAArf,EAAAkM,cAACq0D,GAAD,MAChBlhD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQ0mB,WAAYpnB,QAAShgB,KAAKouC,aACrDvuB,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,CAAWyhB,SAAS,oBAxoBrBhC,IAAMC,YAspBlB4G,GALCC,YACZQ,cACArG,IA1pBW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChBsnC,WAAY,CACR7jB,QAAS,IAEV8D,aAAYlG,KAspBI,CAAEmG,WAAW,IAGrBR,CAAQs3C,ICprBjB4C,sNASFC,uBAAyB,WACrBphE,EAAK2hB,kGARL0tC,KAAkBztC,GAAG,6BAA8BzhB,KAAKihE,uEAIxD/R,KAAkBltD,eAAe,6BAA8BhC,KAAKihE,yDAO/D,IAAA3hD,EACkBtf,KAAKuf,MAApB/G,EADH8G,EACG9G,KAAMw2C,EADT1vC,EACS0vC,KAEd,OACInvC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACV,IAAIrH,KAAY,IAAPD,GAAa0oD,mBAAmB,CAAClS,EAAKD,UAAW,CAAEj2C,IAAK,UAAWqoD,MAAO,iBAlB9ElhD,IAAMC,YA4BbqH,iBAAkBy5C,ICkFlBI,uBA7GX,SAAAA,EAAY7hD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAohE,IACfvhE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAshE,GAAAjhE,KAAAH,KAAMuf,KAeV8hD,uBAAyB,SAAA1gE,GACrBd,EAAK4kB,SAAS,CAAE21C,SAAUhiD,KAAiBkpD,iBAjB5BzhE,EAoBnB0hE,gBAAkB,SAAAl2D,GACdA,EAAMsd,iBACNtd,EAAMua,mBAtBS/lB,EAyBnB2hE,WAAa,SAAAn2D,GACTA,EAAMsd,iBACNtd,EAAMua,kBACNxN,KAAiBqpD,aAAY,GAE7B5hE,EAAKizC,6BAA6BznC,EAAMq2D,aAAajvB,QA9BtC5yC,EAiCnB8hE,gBAAkB,SAAAt2D,GACdA,EAAMsd,iBACNtd,EAAMua,kBACNxN,KAAiBqpD,aAAY,IApCd5hE,EAuCnBizC,6BAA+B,SAAAL,GAC3B,GAAqB,IAAjBA,EAAMzsC,OAEV,IAAK,IAAIF,EAAI,EAAGA,EAAI2sC,EAAMzsC,OAAQF,IAAK,CACnC,IAAI5E,EAAOuxC,EAAM3sC,GACXvB,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiBoqC,KAAMhyC,EAAKgyC,KAAMjoC,KAAM/J,IAGjErB,EAAKqxC,eAAe3sC,EAAS,SAAA4F,GAAM,OAAIvK,IAAU2zC,WAAWppC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OAjDtFtK,EAqDnBqxC,eArDmB,eAAA7wC,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAqDF,SAAAC,EAAO6D,EAAS8E,GAAhB,IAAA+nC,EAAAjnC,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACPqwC,EAAgBh5B,KAAiB08B,YAD1B,CAAAj0C,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRkD,EAJQ,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAOTsX,KAAiB87B,sBAAjB,mCAAAlpC,OAA0EomC,IAPjEvwC,EAAAE,KAAA,EASUc,KAAgBgJ,KAAK,CACpC/B,QAAS,cACT1C,QAASgrC,EACThgC,oBAAqB,EACrB+iC,sBAAuB5vC,IAblB,OASL4F,EATKtJ,EAAAkK,KAkBTlJ,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAASgrC,EACTxlC,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAxBAtJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SA0BTwzC,MAAM,qBAAuBC,KAAKC,UAAL1zC,EAAAG,KA1BpB,yBAAAH,EAAAU,SAAAb,EAAA,kBArDE,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKskB,MAAQ,CACTi2C,SAAUhiD,KAAiBkpD,eAJhBzhE,mFASfuY,KAAiBqJ,GAAG,uBAAwBzhB,KAAKqhE,uEAIjDjpD,KAAiBpW,eAAe,uBAAwBhC,KAAKqhE,yDAsExD,IACGjH,EAAap6D,KAAKmkB,MAAlBi2C,SAER,OACIv6C,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK80C,GACGv6C,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,oBACV8hD,YAAa5hE,KAAKuhE,gBAClBM,YAAa7hE,KAAK2hE,gBAClBG,OAAQ9hE,KAAKwhE,YACb3hD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,2BAAf,mBACAD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,8BAAf,+CAlGFG,IAAMC,kDCoDpC,IAwBM6hD,8MACF59C,MAAQ,CACJ69C,SAAU,QAGdC,eAAiB,SAAAh6B,GACbpoC,EAAK4kB,SAAS,CACVu9C,SAAU/5B,OAIlBi6B,YAAc,SAAA72D,GACVA,EAAMua,kBADa,IAGXiH,EAAgBhtB,EAAK0f,MAArBsN,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrB3b,EAAmB2b,EAAnB3b,eAERoe,aAASpe,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxB/K,EAAwB0mB,EAAxB1mB,QAASiY,EAAeyO,EAAfzO,WAEjB8U,aAAS/sB,EAASiY,GAAY,6EAMjC,IAAAiB,EAC+Btf,KAAKuf,MAAjClI,EADHiI,EACGjI,EAAGqJ,EADNpB,EACMoB,QAASmM,EADfvN,EACeuN,YACZm1C,EAAahiE,KAAKmkB,MAAlB69C,SAEFpnD,EAAQmS,aAAgBF,EAAaxV,GACrC8qD,EAAUv1C,aAAsBC,GAClChN,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACKjO,EAAE,cACHwI,EAAArf,EAAAkM,cAAA,QAAMoT,UAAWY,EAAQ0hD,MAAO1hC,IAAK1gC,KAAKiiE,kBAG9C,GAGJ,OACIpiD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,iBAAkBH,EAAQ2hD,aAAc,YAAnE,GAAAr3D,OACQqM,EAAE,oBADV,MAAArM,OACkCqM,EAAE,QADpC,KAEIwI,EAAArf,EAAAkM,cAAC41D,GAAA9hE,EAAD,CACIoa,MAAOunD,EACPzhD,QAAS,CAAE6hD,OAAQ7hD,EAAQ8hD,YAAaL,QAASzhD,EAAQyhD,SACzDM,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAAS3lD,QAAQ+kD,GACjBtwB,QAASswB,MAKzBa,UAAU,OACVhjD,EAAArf,EAAAkM,cAAA,KAAGsT,QAAShgB,KAAKkiE,aAActnD,YArE7BqF,IAAMC,WAqFb4G,GALCC,YACZ7F,IAzGW,SAAAC,GAAK,MAAK,CACrBkhD,aAAc,CACVngD,MAAOf,EAAM8d,QAAQC,QAAQC,MAEjCqjC,aAnDoBtgD,EAmDQf,EAAM8d,QAAQuqB,KAAK,KAlDxC,CACHsZ,kCAAmC,CAC/B1/C,IAAK,EACLC,KAAM,EACNs4C,UAAW,UACXnsD,MAAO,MACPE,OAAQ,MACRqzD,YAAa,CACTnH,YAAa,gBACbp1C,YAAW,2BAAAxb,OAA6BkX,EAA7B,kBAGnB8gD,+BAAgC,CAC5B77C,OAAQ,EACR9D,KAAM,EACN4/C,aAAc,UACdzzD,MAAO,MACPE,OAAQ,MACRqzD,YAAa,CACTnH,YAAa,gBACbp1C,YAAW,GAAAxb,OAAKkX,EAAL,0CAGnBghD,iCAAkC,CAC9B7/C,KAAM,EACN8/C,WAAY,UACZzzD,OAAQ,MACRF,MAAO,MACPuzD,YAAa,CACTnH,YAAa,gBACbp1C,YAAW,eAAAxb,OAAiBkX,EAAjB,8BAGnBkhD,gCAAiC,CAC7Bl8C,MAAO,EACPm8C,YAAa,UACb3zD,OAAQ,MACRF,MAAO,MACPuzD,YAAa,CACTnH,YAAa,gBACbp1C,YAAW,uCAAAxb,OAAyCkX,OAWhEkgD,MAAO,CACHj/C,SAAU,WACVlB,SAAU,EACVzS,MAAO,MACPE,OAAQ,MACRqzD,YAAa,CACTx+D,QAAS,KACT0iB,OAAQ,OACRra,QAAS,QACT4C,MAAO,EACPE,OAAQ,EACR2X,YAAa,UAGrB86C,QAAS,CACLl7C,OAAQ,iBAnEhB,IAAwB/E,GAwJD,CAAEoF,WAAW,IAChCC,cAGWT,CAAQi7C,ICzGRuB,uBAvDX,SAAAA,EAAY/jD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAsjE,IACfzjE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwjE,GAAAnjE,KAAAH,KAAMuf,KACDgkD,wBAA0B1jE,EAAK0jE,wBAAwB3yB,KAA7B9wC,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,KAC/BA,EAAK2jE,2BAA6B3jE,EAAK2jE,2BAA2B5yB,KAAhC9wC,OAAAqwD,GAAA,EAAArwD,QAAAqwD,GAAA,EAAArwD,CAAAD,KAElCA,EAAKskB,MAAQ,CACTs/C,aAAclkD,EAAMkkD,aACpBC,QAAQ,GAPG7jE,mFAYf4N,KAAagU,GAAG,0BAA2BzhB,KAAKujE,yBAChD91D,KAAagU,GAAG,6BAA8BzhB,KAAKujE,yBAEnD3wD,IAAU6O,GAAG,uBAAwBzhB,KAAKwjE,4EAGtBG,GAChB3jE,KAAKuf,MAAMtY,YAAc08D,EAAQ9kD,gBAAkB8kD,EAAQr/D,UAC3DtE,KAAK4jE,aAAeD,EAAQr/D,QAAQ5B,GACpC1C,KAAKykB,SAAS,CAAEg/C,aAAcE,EAAQr/D,QAAQwa,oEAI3B6kD,GAEnB3jE,KAAKuf,MAAMvY,SAAW28D,EAAQv9D,UAC5BpG,KAAKuf,MAAMqkD,cAAgB5jE,KAAKuf,MAAMqkD,cAAgBD,EAAQjsD,6BAC5D1X,KAAKuf,MAAMtY,WAAa08D,EAAQjsD,8BAEpC1X,KAAKykB,SAAS,CAAEg/C,aAAc,KAAMC,QAAQ,mDAKhDj2D,KAAazL,eAAe,0BAA2BhC,KAAKujE,yBAC5D91D,KAAazL,eAAe,6BAA8BhC,KAAKujE,yBAE/D3wD,IAAU5Q,eAAe,uBAAwBhC,KAAKwjE,6DAItD,IAAIK,EAAiB,yBAQrB,OAPI7jE,KAAKmkB,MAAMs/C,eACXI,EACyC,8BAArC7jE,KAAKmkB,MAAMs/C,aAAa,SAClB,uBACA,yBAGPzjE,KAAKmkB,MAAMu/C,QAAU7jD,EAAArf,EAAAkM,cAAA,KAAGoT,UAAWe,IAAW,qBAAsBgjD,YApDvD5jD,IAAMC,6BCYnBgB,WAbA,SAAAC,GAAK,MAAK,CACrB2iD,gBAAiB,CACbpqC,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQuqB,KAAK,KAAO,UACtEtnC,MAA8B,SAAvBf,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvhB,KAAKwhB,QAAU,aAU7Dhe,CANf,SAAyB3B,GAAO,IACpBmB,EAAYnB,EAAZmB,QAER,OAAOb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,mBAAoBH,EAAQojD,kBAAvD,qGCQLC,sNACFxsD,WAAa,WAAM,IAAA+H,EACwEzf,EAAK0f,MAApFmB,EADOpB,EACPoB,QAAS1Z,EADFsY,EACEtY,OAAQC,EADVqY,EACUrY,UAAWgF,EADrBqT,EACqBrT,KAAmB+3D,GADxC1kD,EAC2Bc,YAD3Bd,EACwC0kD,kBAAkBxkD,EAD1DF,EAC0DE,UAEnElb,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAJN,IAMPC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPN,IASPc,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,KAVP,IAaX4+D,EAaA5+D,EAbA4+D,UACArpD,EAYAvV,EAZAuV,MACAa,EAWApW,EAXAoW,YAEA7W,GASAS,EAVAoD,IAUApD,EATAT,OACAJ,EAQAa,EARAb,UACAc,EAOAD,EAPAC,MACAZ,EAMAW,EANAX,MACAI,EAKAO,EALAP,SACAU,EAIAH,EAJAG,WACAD,EAGAF,EAHAE,WACAH,EAEAC,EAFAD,QACAwM,EACAvM,EADAuM,KAGJ,GAAIxM,EACA,OACIya,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAAC6f,GAAA,EAAD,CAASvlB,OAAQA,EAAQC,UAAWA,EAAW7B,QAASA,EAASoa,UAAWA,KAKxF,GAAIha,EACA,OACIqa,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAACigB,GAAA,EAAD,CAAW3lB,OAAQA,EAAQC,UAAWA,EAAWG,UAAW5B,EAAYga,UAAWA,KAK/F,GAAIja,EACA,OACIsa,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAACggB,GAAA,EAAD,CAAW1lB,OAAQA,EAAQC,UAAWA,EAAWM,UAAWhC,EAAYia,UAAWA,KAK/F,GAAI9a,EACA,OACImb,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAACwf,GAAA,EAAD,CAAOllB,OAAQA,EAAQC,UAAWA,EAAWvC,MAAOA,EAAO8a,UAAWA,KAKlF,GAAI1a,EACA,OACI+a,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAAC0f,GAAA,EAAD,CAAUplB,OAAQA,EAAQC,UAAWA,EAAWnC,SAAUA,EAAU0a,UAAWA,KAK3F,GAAIhb,IACqB4P,YAAO5P,EAAUA,YAClBA,EAAUiC,WAC1B,OACIoZ,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAAC2T,GAAA,EAAD,CAAWrZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAWgb,UAAWA,KAMlG,GAAIla,GACIA,EAAMmB,UACN,OACIoZ,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,GACvDoE,EAAArf,EAAAkM,cAAC+f,GAAA,EAAD,CAAOzlB,OAAQA,EAAQC,UAAWA,EAAW3B,MAAOA,EAAOka,UAAWA,KAMtF,GAAI5a,EAAO,CACP,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOkG,GACjCi4D,GACQ,YAATtyD,GAA+B,UAATA,KACtBqyD,GAAarpD,GAASa,IACvBxV,GACAA,EAAUuJ,QAAUvJ,EAAUyJ,OAE5B/C,EAAQu3D,EACR,CACIC,MAAO,QACPhB,WAAY,EACZF,aAAc,GAElB,GACN,OACIpjD,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK4+C,GACGrkD,EAAArf,EAAAkM,cAAC03D,GAAA,EAAD,CACIhkD,YAAa4jD,EACbr3D,MAAOA,EACP3F,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP4a,UAAWA,IAGlBykD,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,IACrDyoD,GAAcrkD,EAAArf,EAAAkM,cAAC03D,GAAA,EAAD,CAAOp9D,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO4a,UAAWA,KAKlG,OACIK,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACK2+C,GACGpkD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmBkjD,GAE/ErpD,GAASiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,kBAAkBlF,GAC1Ca,GAAeoE,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBAAwBrE,6EAK1D,IACGiF,EAAY1gB,KAAKuf,MAAjBmB,QAER,OACIb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,YACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,kBAAmBH,EAAQI,yBACtDjB,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBAAoB9f,KAAKuX,sBAnLlC0I,IAAMC,YAkM5B6jD,GAAQ/iD,aAAe,CACnB/U,KAAMgG,IACNmO,YAAaa,IACb+iD,iBAAkBK,KAGPnjD,WA5MA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,GACbuhB,aAAaF,KA2MLD,CAAmB6iD,IC/K5BO,uBACF,SAAAA,EAAY/kD,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAskE,IACfzkE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAwkE,GAAAnkE,KAAAH,KAAMuf,KAoFVglD,6BAA+B,SAAA5jE,GACtBd,EAAKskB,MAAMlF,UAEhBpf,EAAK4kB,SAAS,CAAExF,UAAU,KAxFXpf,EA2FnB2kE,iCAAmC,SAAA7jE,GAAU,IAAA2e,EACXzf,EAAK0f,MAA3BvY,EADiCsY,EACjCtY,OAAQC,EADyBqY,EACzBrY,UADyBid,EAEPrkB,EAAKskB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUwlD,EAFuBvgD,EAEvBugD,YAEdxlD,IAEAjY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cw9D,EACA5kE,EAAK4kB,SAAS,CAAEggD,aAAa,GAAS,WAClCjrC,WAAW,WACP35B,EAAK4kB,SAAS,CAAEggD,aAAa,KAC9B,KAGP5kE,EAAK4kB,SAAS,CAAEggD,aAAa,IAE1BA,GACP5kE,EAAK4kB,SAAS,CAAEggD,aAAa,MA5GlB5kE,EAgHnBs5D,8BAAgC,SAAAx4D,GAAU,IAAA8f,EACR5gB,EAAK0f,MAA3BvY,EAD8ByZ,EAC9BzZ,OAAQC,EADsBwZ,EACtBxZ,UACRgY,EAAate,EAAbse,SAEJjY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAK4kB,SAAS,CAAExF,WAAUwlD,aAAa,KArH5B5kE,EAyHnB6kE,sBAAwB,SAAA/jE,GAAU,IACtByF,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WADaiK,EAEAzoB,EAAK0f,MAA3BvY,EAFsBshB,EAEtBthB,OAAQC,EAFcqhB,EAEdrhB,UAEZD,IAAWZ,GAAWa,IAAcoX,GACpCxe,EAAK2hB,eA9HM3hB,EAkInB8kE,qBAAuB,SAAAhkE,GAAU,IACrByF,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WADYyK,EAECjpB,EAAK0f,MAA3BvY,EAFqB8hB,EAErB9hB,OAAQC,EAFa6hB,EAEb7hB,UAEZD,IAAWZ,GAAWa,IAAcoX,GACpCxe,EAAK2hB,eAvIM3hB,EA2InB+kE,uBAAyB,SAAAjkE,GAAU,IACvByF,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WADcgkB,EAEDxiC,EAAK0f,MAA3BvY,EAFuBq7B,EAEvBr7B,OAAQC,EAFeo7B,EAEfp7B,UAEZD,IAAWZ,GACXa,IAAcoX,GAElBxe,EAAK4kB,SAAS,CAAEuL,aAAcJ,aAAgB5oB,EAAQC,MAlJvCpH,EAqJnBslD,iBAAmB,SAAAr5C,GACfyjB,aAASzjB,GAAQ,IAtJFjM,EAyJnB4jD,iBAAmB,SAAAz8C,GACfmsB,aAASnsB,GAAQ,IA1JFnH,EA6JnBglE,gBAAkB,WACd,GAAKhlE,EAAKilE,YAEQ/6D,OAAO2+B,eAAeuB,WACxC,CAJoB,IAAA/F,EAMUrkC,EAAK0f,MAA3BvY,EANYk9B,EAMZl9B,OAAQC,EANIi9B,EAMJj9B,UAEVgY,GAAYxR,KAAayR,cAAcpc,IAA3B,UAAAkI,OAAyChE,EAAzC,eAAAgE,OAA6D/D,IAC/EosB,aAAcrsB,EAAQC,EAAWgY,KAtKlBpf,EAyKnBklE,gBAAkB,SAAA76C,GACdA,EAAEvB,iBACFuB,EAAEtE,kBAFiB,IAAAo/C,EAIWnlE,EAAK0f,MAA3BvY,EAJWg+D,EAIXh+D,OAAQC,EAJG+9D,EAIH/9D,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEpBqW,YAAgBtW,GAEjCnF,KAAgBgH,aAAa,CACzBC,QAAS,oBACT9B,OAAQA,EACRC,UAAWA,IAKI3C,GAAWA,EAAQi3C,kBAEtC15C,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,CACF5zC,OAAQA,EACRsG,WAAY,CAACrG,OAjMVpH,EAuMnB2f,UAAY,SAAAnU,GACJA,IACAA,EAAMsd,iBACNtd,EAAMua,mBAHO,IAAAq/C,EAMaplE,EAAK0f,MAA3BvY,EANSi+D,EAMTj+D,OAAQC,EANCg+D,EAMDh+D,UAEhBuY,aAAUxY,EAAQC,IA/MHpH,EAkNnBqlE,mBAAqB,WACjBrlE,EAAK4kB,SAAS,CAAEggD,aAAa,KAnNd5kE,EAsNnBslE,gBAAkB,WACdtlE,EAAKilE,WAAY,GAvNFjlE,EA0NnBulE,gBAAkB,WACdvlE,EAAKilE,WAAY,GA3NFjlE,EA8NnBwlE,eAAiB,WACbxlE,EAAKylE,UAAW,GA/ND,IAAAC,EAGe1lE,EAAK0f,MAA3BvY,EAHOu+D,EAGPv+D,OAAQC,EAHDs+D,EAGCt+D,UAHD,OAYXpH,EAAKskB,MAAQ,CACT6L,aAAcJ,aAAgB5oB,EAAQC,GACtCgY,UAAU,EACVwlD,aAAa,GAfN5kE,qFAoBGilB,EAAWC,GAAW,IAAAygD,EAC2CxlE,KAAKuf,MAAhF4B,EADgCqkD,EAChCrkD,MAAOna,EADyBw+D,EACzBx+D,OAAQC,EADiBu+D,EACjBv+D,UAAWw8D,EADM+B,EACN/B,aAAcgC,EADRD,EACQC,oBAAqBC,EAD7BF,EAC6BE,UAD7B3iC,EAEqB/iC,KAAKmkB,MAA1DuD,EAFgCqb,EAEhCrb,YAAazI,EAFmB8jB,EAEnB9jB,SAAUwlD,EAFS1hC,EAET0hC,YAAaz0C,EAFJ+S,EAEI/S,aAE5C,OAAIlL,EAAU3D,QAAUA,IAIpB2D,EAAU9d,SAAWA,IAIrB8d,EAAU7d,YAAcA,IAIxB6d,EAAU2+C,eAAiBA,IAI3B3+C,EAAU2gD,sBAAwBA,IAIlC3gD,EAAU4gD,YAAcA,IAIxB3gD,EAAU2C,cAAgBA,IAI1B3C,EAAU9F,WAAaA,IAIvB8F,EAAU0/C,cAAgBA,GAI1B1/C,EAAUiL,eAAiBA,sDAQ/BviB,KAAagU,GAAG,iCAAkCzhB,KAAKwkE,kCACvD/2D,KAAagU,GAAG,8BAA+BzhB,KAAKm5D,+BACpD1rD,KAAagU,GAAG,6BAA8BzhB,KAAKukE,8BACnD92D,KAAagU,GAAG,uBAAwBzhB,KAAK4kE,wBAC7Cn3D,KAAagU,GAAG,sBAAuBzhB,KAAK0kE,uBAC5Cj3D,KAAagU,GAAG,qBAAsBzhB,KAAK2kE,qEAI3Cl3D,KAAazL,eAAe,iCAAkChC,KAAKwkE,kCACnE/2D,KAAazL,eAAe,8BAA+BhC,KAAKm5D,+BAChE1rD,KAAazL,eAAe,6BAA8BhC,KAAKukE,8BAC/D92D,KAAazL,eAAe,uBAAwBhC,KAAK4kE,wBACzDn3D,KAAazL,eAAe,sBAAuBhC,KAAK0kE,uBACxDj3D,KAAazL,eAAe,qBAAsBhC,KAAK2kE,uDAgJlD,IAAAtc,EAAAsd,EACqE3lE,KAAKuf,MAAvElI,EADHsuD,EACGtuD,EAAGqJ,EADNilD,EACMjlD,QAAS1Z,EADf2+D,EACe3+D,OAAQC,EADvB0+D,EACuB1+D,UAAWw+D,EADlCE,EACkCF,oBAAqBC,EADvDC,EACuDD,UADvD1iC,EAE2ChjC,KAAKmkB,MAA7C6L,EAFHgT,EAEGhT,aAAc/Q,EAFjB+jB,EAEiB/jB,SAAUwlD,EAF3BzhC,EAE2ByhC,YAE1BngE,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOub,EAAArf,EAAAkM,cAAA,8BALhB,IAOGoS,EAAuFxa,EAAvFwa,cAAeN,EAAwEla,EAAxEka,MAAOD,EAAiEja,EAAjEia,UAAWnN,EAAsD9M,EAAtD8M,oBAAqBgd,EAAiC9pB,EAAjC8pB,aAAcjd,EAAmB7M,EAAnB6M,eAEtEuM,EAAOmO,aAAQvnB,GACfshE,EAAU75C,aAAWznB,GACrBkU,EAAOS,aAAQ3U,GACfw7D,EAAW9zC,aAAY1nB,GACvBuhE,EAAQ55C,aAAS3nB,EAAStE,KAAKwf,WACrCxf,KAAK0jE,OAASx2C,aAAU5oB,GAExB,IAAI6kD,EAAO,KACPuc,IACAvc,EAAOh4C,EACH0O,EAAArf,EAAAkM,cAACqT,GAAA,EAAD,CAAiBjU,OAAQqF,EAAgB+pB,SAAUl7B,KAAKmlD,mBAExDtlC,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQk0B,SAAUl7B,KAAKyjD,oBAIxD,IAAMqiB,EAAmBjlD,IAAW,UAAWH,EAAQpc,SAApB+jD,EAAA,CAC/B0d,mBAAoB9mD,GADWnf,OAAAymB,EAAA,EAAAzmB,CAAAuoD,EAE9B3nC,EAAQslD,gBAAkB/mD,GAFInf,OAAAymB,EAAA,EAAAzmB,CAAAuoD,EAG9B3nC,EAAQulD,mBAAqBxB,IAAgBxlD,GAHfnf,OAAAymB,EAAA,EAAAzmB,CAAAuoD,EAI/B,0BAA2Bqd,GAJIrd,IAO7B6d,EACFrmD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBACXD,EAAArf,EAAAkM,cAAA,oBACC8R,EAAQ,GACLqB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,uBACbD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,iBAAhB,OAEKtB,EAFL,cAOPD,EAAY,GAAKsB,EAAArf,EAAAkM,cAAA,YAAO2K,EAAE,iBAAT,QAClBwI,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,eAAeE,QAAShgB,KAAK+kE,iBACtCllD,EAAArf,EAAAkM,cAAA,QAAMkO,MAAOklD,GAAWtnD,KAKpC,OACIqH,EAAArf,EAAAkM,cAAA,OACIoT,UAAWgmD,EACXK,YAAanmE,KAAKolE,gBAClBgB,WAAYpmE,KAAKqlE,eACjBngC,YAAallC,KAAKmlE,gBAClBnlD,QAAShgB,KAAK6kE,gBACdwB,eAAgBrmE,KAAKklE,oBACpBO,GAAuB5lD,EAAArf,EAAAkM,cAAC45D,GAAD,MACxBzmD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,KAAGoT,UAAU,wBACZ9f,KAAK0jE,QACF7jD,EAAArf,EAAAkM,cAAC65D,GAAD,CAAev/D,OAAQA,EAAQC,UAAWA,EAAWw8D,aAAc3kD,IAEtEqqC,EACDtpC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,mBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iBACV4lD,IAAct3C,GACXvO,EAAArf,EAAAkM,cAAC4vB,GAAA,EAAD,CAAet1B,OAAQA,EAAQmsB,UAAQ,EAACrnB,OAAQqF,EAAgBoe,UAAQ,IAE3EnB,GAAgBvO,EAAArf,EAAAkM,cAAC85D,GAAD,CAAS35C,YAAauB,IACtCs3C,GAAaQ,GAEjBjpD,QAAQ7L,IAAwByO,EAAArf,EAAAkM,cAACq4B,GAAA,EAAD,CAAO/9B,OAAQA,EAAQC,UAAWmK,IAClEy0D,EACDhmD,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,eAAgB,CAClC4lD,sBAAwC,IAAjBz2C,EACvB02C,sBAAwC,IAAjB12C,EACvB22C,sBAAwC,IAAjB32C,KAE1BtS,GAEJkoD,GAAW/lD,EAAArf,EAAAkM,cAACk6D,GAAD,CAAS5/D,OAAQA,EAAQC,UAAWA,EAAWuY,UAAWxf,KAAKwf,cAE7EkmD,GAAaQ,WA1TbhmD,cAsUP4G,GALCC,YACZ7F,IArVW,SAAAC,GAAK,MAAK,CACrB7c,QAAS,CACL0iB,gBAAiB,eAErB6/C,mBAAoB,CAChB3kD,MAAOf,EAAM8d,QAAQC,QAAQC,MAEjC6mC,gBAAiB,CACbh/C,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KAAO,MAElD2nC,yBAA0B,CACtBziD,KAAM,CAAE2C,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KAAO,MACtD7a,GAAI,CAAE0C,gBAAiB,gBAE3Bi/C,mBAAoB,CAChBzhE,UAAW,6BAsUI,CAAE8iB,WAAW,IAChCC,cAGWT,CAAQw9C,cChVjByC,uBACF,SAAAA,EAAYxnD,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA+mE,IACflnE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAinE,GAAA5mE,KAAAH,KAAMuf,KAgDVynD,gCAAkC,SAAArmE,GAAU,IAChCqG,EAAuBrG,EAAvBqG,OAAQigE,EAAetmE,EAAfsmE,WAEZpnE,EAAK0f,MAAMvY,SAAWA,GAE1BnH,EAAK4kB,SAAS,CAAEwiD,gBAtDDpnE,EAyDnBqnE,0BAA4B,SAAAvmE,GAAU,IAC1ByF,EAA+BzF,EAA/ByF,QAAS+gE,EAAsBxmE,EAAtBwmE,kBACEtnE,EAAK0f,MAAhBvY,SAEOZ,GAEfvG,EAAK4kB,SAAS,CAAExd,UAAWkgE,KA/DZtnE,EAkEnBg6C,YAAc,WAAM,IACR7yC,EAAWnH,EAAK0f,MAAhBvY,OACAC,EAAcpH,EAAKskB,MAAnBld,UAEHD,IACAC,IAEWwG,KAAaxK,IAAI+D,EAAQC,IAGzCpF,KAAgBgJ,KAAK,CACjB/B,QAAS,aACT1C,QAASY,EACTqX,WAAYpX,IAEXkE,KAAK,SAAAhB,GACFsD,KAAaxM,IAAIkJ,GAEjB,IAAMxK,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO,CAACwK,IAE5BtK,EAAK2hB,gBAER9X,MAAM,SAAA/F,GACH,IAAMyb,EAAiB,CACnBtW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbkJ,KAAaxM,IAAIme,GACjBvf,EAAK2hB,mBAjGE3hB,EAoInB6lB,YAAc,SAAAra,GAAS,IACXrE,EAAWnH,EAAK0f,MAAhBvY,OACAC,EAAcpH,EAAKskB,MAAnBld,UAEHA,GAELksB,aAASnsB,EAAQC,IA1IFpH,EA6InB4pC,aA7ImB,eAAAppC,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA6IJ,SAAAC,EAAM2K,GAAN,IAAArE,EAAAC,EAAAgE,EAAA,OAAAikB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACXsK,EAAMsd,iBACNtd,EAAMua,kBAEE5e,EAAWnH,EAAK0f,MAAhBvY,OACAC,EAAcpH,EAAKskB,MAAnBld,WAEO4W,YAAe7W,GAPnB,CAAAnG,EAAAE,KAAA,QASPlB,EAAK4kB,SAAS,CAAEsoB,SAAS,IATlBlsC,EAAAE,KAAA,uBAWDkK,EAAO2H,IAAUw0D,cAAcpgE,GAX9BnG,EAAAE,KAAA,GAYDc,KAAgBgH,aAAa,CAC/BC,QAAS,gCACT9B,OAAQA,EACRigE,WAAYnnE,OAAO+7B,OAAO,GAAI5wB,EAAM,CAAEo8D,oBAAqBpgE,MAfxD,yBAAApG,EAAAU,SAAAb,MA7II,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAiKnBynE,YAjKmBxnE,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAiKL,SAAAyB,IAAA,IAAA8E,EAAA,OAAAkoB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OACFiG,EAAWnH,EAAK0f,MAAhBvY,OAERnH,EAAKuuC,cAELvsC,KAAgBgJ,KAAK,CACjB/B,QAAS,mBACT1C,QAASY,IAPH,wBAAA7E,EAAAZ,SAAAW,MAjKKrC,EA4KnBuuC,YAAc,WACVvuC,EAAK4kB,SAAS,CAAEsoB,SAAS,KA1KzB,IAAMhpC,EAAO6O,IAAU3P,IAAIsc,EAAMvY,QAHlB,OAIfnH,EAAKskB,MAAQ,CACTkoC,gBAAiB9sC,EAAMvY,OACvBigE,WAAYr0D,IAAUw0D,cAAc7nD,EAAMvY,QAC1CC,UAAWlD,GAAQA,EAAKojE,kBAAoBpjE,EAAKojE,kBAAoB,EACrEp6B,SAAS,GAREltC,kFA6BAqlB,EAAWC,EAAWC,GAAU,IACvCne,EAAcjH,KAAKmkB,MAAnBld,UAEJA,GAAake,EAAUle,YAAcA,GACrCjH,KAAK65C,0DAKT75C,KAAK65C,cAELjnC,IAAU6O,GAAG,0BAA2BzhB,KAAKknE,2BAC7Ct0D,IAAU6O,GAAG,gCAAiCzhB,KAAKgnE,gFAInDp0D,IAAU5Q,eAAe,0BAA2BhC,KAAKknE,2BACzDt0D,IAAU5Q,eAAe,gCAAiChC,KAAKgnE,+EAuD7CliD,EAAWC,EAAWC,GAAa,IAAA1F,EACxBtf,KAAKuf,MAA1BvY,EAD6CsY,EAC7CtY,OAAQqQ,EADqCiI,EACrCjI,EAAG8J,EADkC7B,EAClC6B,MADkC+C,EAEVlkB,KAAKmkB,MAAxC8iD,EAF6C/iD,EAE7C+iD,WAAYl6B,EAFiC7oB,EAEjC6oB,QAAS9lC,EAFwBid,EAExBjd,UAE7B,OAAI6d,EAAUzN,IAAMA,IAIhByN,EAAU3D,QAAUA,IAIpB2D,EAAU9d,SAAWA,IAIrB+d,EAAUkiD,aAAeA,IAIzBliD,EAAUgoB,UAAYA,GAItBhoB,EAAU9d,YAAcA,uCAmDvB,IAAAwZ,EAC0BzgB,KAAKuf,MAA5BvY,EADHyZ,EACGzZ,OAAQ0Z,EADXD,EACWC,QAASrJ,EADpBoJ,EACoBpJ,EADpB0rB,EAE0B/iC,KAAKmkB,MAA5Bld,EAFH87B,EAEG97B,UAAW8lC,EAFdhK,EAEcgK,QAEnB,IAAK/lC,EAAQ,OAAO,KAGpB,GADgC4L,IAAUw0D,cAAcpgE,GAAhDqgE,sBACoBpgE,EAAW,OAAO,KAE9C,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAIC,EAAWD,EAAyBiT,aAAWjT,EAAS+S,GAAnCA,EAAE,WACrBpR,EAAY0pB,aAAkB3oB,EAAQC,GAM5C,OAJIyoB,aAAiBprB,KACjBC,EAAU8S,EAAE,mBAIZwI,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,iBAAkBH,EAAQge,cAAehe,EAAQ8F,aACvExG,QAAShgB,KAAK0lB,aACd7F,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClD7a,GAAa4Z,EAAArf,EAAAkM,cAAC24B,GAAA,EAAD,CAAWr+B,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1E4Z,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,sBAAuBH,EAAQK,kBACrD1J,EAAE,kBAEPwI,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,0BAA0Bvb,IAE7Csb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CAAYsf,UAAWY,EAAQ0mB,WAAYpnB,QAAShgB,KAAKypC,cACrD5pB,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,UAKfusC,GACGltB,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,MAAI,EACJyf,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,8BAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,8BAA8B2U,EAAE,YAChDwI,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,KAAoB6W,EAAE,uBAE1BwI,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKouC,YAAalsB,MAAM,WACpC7K,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAKsnE,YAAaplD,MAAM,WACpC7K,EAAE,6DA3NCkI,EAAO4E,GAAO,IAClCkoC,EAAoBloC,EAApBkoC,gBACArlD,EAAWuY,EAAXvY,OAER,GAAIqlD,IAAoBrlD,EAAQ,CAC5B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,MAAO,CACHqlD,gBAAiBrlD,EACjBigE,WAAYr0D,IAAUw0D,cAAcpgE,GACpCC,UAAWlD,GAAQA,EAAKojE,kBAAoBpjE,EAAKojE,kBAAoB,EACrEp6B,SAAS,GAIjB,OAAO,YA3Ba9sB,IAAMC,YA2PnB4G,GALCC,YACZ7F,IAnQW,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,GACbuhB,aAAaF,GACbkG,aAAYlG,GAFC,CAGhBimB,WAAY,GAGZ1I,cAAe,CACXhF,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,UAC/Ej2B,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,YA2PX,CAAE5X,WAAW,IAChCC,cAGWT,CAAQigD,cCvRjBQ,WAAiB,CACnB/3D,MAAO,GACPE,OAAQ,GACR0vB,aAAc,MACdnY,OAAQ,wBAaNugD,eACF,SAAAA,EAAYjoD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAwnE,IACf3nE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA0nE,GAAArnE,KAAAH,KAAMuf,KAkDVilD,iCAAmC,SAAA7jE,GAAU,IAAA2e,EACXzf,EAAK0f,MAA3BvY,EADiCsY,EACjCtY,OAAQC,EADyBqY,EACzBrY,UADyBid,EAEPrkB,EAAKskB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUwlD,EAFuBvgD,EAEvBugD,YAEdxlD,IAEAjY,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAC7Cw9D,EACA5kE,EAAK4kB,SAAS,CAAEggD,aAAa,GAAS,WAClCjrC,WAAW,WACP35B,EAAK4kB,SAAS,CAAEggD,aAAa,KAC9B,KAGP5kE,EAAK4kB,SAAS,CAAEggD,aAAa,IAE1BA,GACP5kE,EAAK4kB,SAAS,CAAEggD,aAAa,MApElB5kE,EAwEnBqlE,mBAAqB,WACjBrlE,EAAK4kB,SAAS,CAAEggD,aAAa,KAzEd5kE,EA4EnB2f,UAAY,SAAAnU,GACJA,IACAA,EAAMsd,iBACNtd,EAAMua,mBAHO,IAAAnF,EAMa5gB,EAAK0f,MAA3BvY,EANSyZ,EAMTzZ,OAAQC,EANCwZ,EAMDxZ,UAEhBuY,aAAUxY,EAAQC,IA1EdpH,EAAKskB,MAAQ,CACTsgD,aAAa,GAXN5kE,qFAgBGilB,EAAWC,GAAW,IAAA+D,EACyB9oB,KAAKuf,MAA9DvY,EADgC8hB,EAChC9hB,OAAQC,EADwB6hB,EACxB7hB,UAAWw8D,EADa36C,EACb26C,aAAcgC,EADD38C,EACC28C,oBACjChB,EAAgBzkE,KAAKmkB,MAArBsgD,YAER,OAAI3/C,EAAU9d,SAAWA,IAIrB8d,EAAU7d,YAAcA,IAIxB6d,EAAU2+C,eAAiBA,IAI3B3+C,EAAU2gD,sBAAwBA,GAIlC1gD,EAAU0/C,cAAgBA,iDAQ9Bh3D,KAAagU,GAAG,iCAAkCzhB,KAAKwkE,iFAIvD/2D,KAAazL,eAAe,iCAAkChC,KAAKwkE,mEAuC9D,IAAAniC,EACuDriC,KAAKuf,MAAzDmB,EADH2hB,EACG3hB,QAAS1Z,EADZq7B,EACYr7B,OAAQC,EADpBo7B,EACoBp7B,UAAWw+D,EAD/BpjC,EAC+BojC,oBAC5BhB,EAAgBzkE,KAAKmkB,MAArBsgD,YAEFngE,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOub,EAAArf,EAAAkM,cAAA,sCALhB,IAOGnI,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAOsb,EAAArf,EAAAkM,cAAA,sCARhB,IAUG9H,EAAUL,EAAVK,MAEF8Y,EAAO+P,aAAyBnpB,GAAS,GAEzCwhE,EAAmBjlD,IAAW,kBAAD/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GAAuB4gB,EAAQulD,mBAAqBxB,IAEvF,OACI5kD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWgmD,EAAkBO,eAAgBrmE,KAAKklE,oBAClDO,GAAuB5lD,EAAArf,EAAAkM,cAAC45D,GAAD,MACxBzmD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,2BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,2BAA2BpC,IAE7C9Y,GACGib,EAAArf,EAAAkM,cAAC03D,GAAA,EAAD,CACIp9D,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP+H,MAAO46D,GACP/nD,UAAWxf,KAAKwf,oBApHXS,IAAMC,WA4HpBgB,OAtIA,SAAAC,GAAK,MAAK,CACrB2lD,yBAA0B,CACtBziD,KAAM,CAAE2C,gBAAiB7F,EAAM8d,QAAQC,QAAQC,KAAO,MACtD7a,GAAI,CAAE0C,gBAAiB,gBAE3Bi/C,mBAAoB,CAChBzhE,UAAW,6BAgIe,CAAE8iB,WAAW,GAAhCpG,CAAwCsmD,wBClIjDC,uBACF,SAAAA,EAAYloD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAynE,IACf5nE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA2nE,GAAAtnE,KAAAH,KAAMuf,KAuBVmoD,iCAAmC,SAAA/mE,GAAU,IACjCm7B,EAASn7B,EAATm7B,KACM6rC,EAAgB9nE,EAAKskB,MAA3B2X,KAER,IAAI6rC,GAAe7rC,EAAKlK,YAAc+1C,EAAY/1C,UAAlD,CAEA/xB,EAAK4kB,SAAS,CACVqX,KAAMP,KAAaO,KACnB94B,MAAOnD,EAAK+nE,SAASrsC,KAAaO,QAGtC,IAAMn8B,EAAQC,IAAUuD,WAChB6Q,EAAa8nB,EAAb9nB,SACRD,YAAoBpU,EAAOqU,EAASA,YArCrBnU,EAwCnBgoE,gCAAkC,SAAAlnE,GAAU,IAChCm7B,EAASn7B,EAATm7B,KAUR,GARAj8B,EAAK4kB,SAAS,CACVqX,OACA94B,MAAOnD,EAAK+nE,SAAS9rC,GACrBgsC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGXlsC,EAAL,CAEA,IAAMn8B,EAAQC,IAAUuD,WAChB6Q,EAAa8nB,EAAb9nB,SACRD,YAAoBpU,EAAOqU,EAASA,YAvDrBnU,EA0DnB0uC,WAAa,SAAAnpC,GACcvF,EAAKskB,MAApB6jD,YAEH5iE,GAELvD,KAAgBgH,aAAa,CACzBC,QAAS,0BACT1D,aAjEWvF,EAqEnBooE,mBAAqB,SAAAC,GAAa,IACtBllE,EAAUnD,EAAKskB,MAAfnhB,MAEFoC,EAAUpC,EAAM+9C,KAAK,SAAAt1C,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOwlE,IACjD,GAAK9iE,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBiN,YAAmBzQ,EAAOyF,EAAS,MAEnC,IAAI2wB,EAAiB,EACjBl2B,EAAKsoE,UAAYtoE,EAAKsoE,SAAS56C,UAC/BwI,EAAiBpR,KAAKC,MAAM/kB,EAAKsoE,SAAS56C,QAAQ66C,YAAcC,MAG5CxoE,EAAKyoE,oBAAoBJ,EAAWllE,EAAO+yB,GACnD3yB,QAAQ,SAAAqI,GACpB2E,YAAmBzQ,EAAO8L,EAAG,UArFlB5L,EAyFnByoE,oBAAsB,SAACJ,EAAWl0D,EAAU+hB,GACxC,IAAK/hB,EAAU,MAAO,GAEtB,IAAMu0D,EAAU,GACVh2D,EAAQyB,EAAS+d,UAAU,SAAAtmB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOwlE,IACvD,IAAe,IAAX31D,EAAc,MAAO,GAEzB,IAAMikB,EAAM7R,KAAKC,MAAMrS,EAAQwjB,GACzBU,EAASlkB,EAAQwjB,EAEjBY,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdyxC,EAAQ/+D,KAAKusB,EAAiBY,EAAUG,GAE5CyxC,EAAQ/+D,KAAKusB,EAAiBY,EAAUF,GACpCM,EAAahB,GACbwyC,EAAQ/+D,KAAKusB,EAAiBY,EAAUI,IAI5CD,GAAc,GACdyxC,EAAQ/+D,KAAKusB,EAAiBS,EAAMM,GAEpCC,EAAahB,GACbwyC,EAAQ/+D,KAAKusB,EAAiBS,EAAMO,GAGpCH,EAAUjS,KAAKyR,KAAKpiB,EAAShO,OAAS+vB,KAClCe,GAAc,GACdyxC,EAAQ/+D,KAAKusB,EAAiBa,EAAUE,GAE5CyxC,EAAQ/+D,KAAKusB,EAAiBa,EAAUH,GACpCM,EAAahB,GACbwyC,EAAQ/+D,KAAKusB,EAAiBa,EAAUG,IAIzCwxC,EAAQ/6D,IAAI,SAAA1H,GAAC,OAAIkO,EAASlO,MAnIlBjG,EAsInBulE,gBAAkB,SAAA/5D,GACd,IAAM68D,EAAYn1C,OAAO1nB,EAAMC,OAAOs+B,QAAQs+B,WACzCA,GAEAroE,EAAKilE,YAENjlE,EAAK2oE,qBAAuBN,IAC5BroE,EAAK2oE,mBAAqB,MAE9B3oE,EAAK4kB,SAAS,CAAEqjD,iBAAkBI,IAClCroE,EAAKooE,mBAAmBC,KAhJTroE,EAmJnBslE,gBAAkB,SAAA95D,GACd,IAAM68D,EAAYn1C,OAAO1nB,EAAMC,OAAOs+B,QAAQs+B,WAC9C,GAAKA,EAAL,CAEAroE,EAAK2oE,mBAAqBN,EAC1B,IAAMrvD,EAAMJ,KAAKI,MAiBjB,OAfAhZ,EAAK4kB,SAAS,CAAEqjD,iBAAkBI,EAAWt2C,UAAW/Y,EAAKkvD,aAAa,EAAOC,YAAY,IAC7FxuC,WAAW,WACe35B,EAAKskB,MAAnByN,YACU/Y,GACdhZ,EAAK4kB,SAAS,CAAEsjD,aAAa,EAAMC,YAAY,KAEpD,KAEHnoE,EAAKooE,mBAAmBC,GAExBroE,EAAKilE,WAAY,EACjBhgE,SAAS2jE,iBAAiB,UAAW5oE,EAAK6oE,eAE1Cr9D,EAAMsd,iBACNtd,EAAMua,mBACC,IAzKQ/lB,EA4KnB6oE,cAAgB,WACZ7oE,EAAK4kB,SAAS,CAAEqjD,iBAAkB,EAAGl2C,UAAW,EAAGm2C,aAAa,IAChEloE,EAAKilE,WAAY,EACjBhgE,SAAS6jE,oBAAoB,UAAW9oE,EAAK6oE,gBA/K9B7oE,EAkLnB+nE,SAAW,SAAA9rC,GACP,IAAM94B,EAAQ,GACd,IAAK84B,EAAM,OAAO94B,EAElB,IAAM4lE,EAAO,IAAI1/D,IACT8K,EAA4B8nB,EAA5B9nB,SAAU+nB,EAAkBD,EAAlBC,cAgBlB,OAfI/nB,GACAA,EAASA,SAAS5Q,QAAQ,SAAAqI,GACtBzI,EAAMwG,KAAKiC,GACXm9D,EAAK3nE,IAAIwK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,MAGrCq5B,GACAA,EAAc/nB,SAAS5Q,QAAQ,SAAAqI,GACtBm9D,EAAK9lE,IAAI2I,EAAErG,QAAQ1C,MACpBM,EAAMwG,KAAKiC,GACXm9D,EAAK3nE,IAAIwK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,OAKtCM,GApMPnD,EAAKsoE,SAAWloD,IAAMogB,YAEtBxgC,EAAKskB,MAAQ,CACT2X,KAAM,KACN94B,MAAO,GACP8kE,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDnoE,mFAef07B,KAAa9Z,GAAG,gCAAiCzhB,KAAK6nE,iCACtDtsC,KAAa9Z,GAAG,iCAAkCzhB,KAAK0nE,iFAIvDnsC,KAAav5B,eAAe,gCAAiChC,KAAK6nE,iCAClEtsC,KAAav5B,eAAe,iCAAkChC,KAAK0nE,mEAqL9D,IAAAl9D,EAAAxK,KACG0gB,EAAY1gB,KAAKuf,MAAjBmB,QADHwD,EAEkDlkB,KAAKmkB,MAApD2X,EAFH5X,EAEG4X,KAAM94B,EAFTkhB,EAESlhB,MAAO8kE,EAFhB5jD,EAEgB4jD,iBAAkBC,EAFlC7jD,EAEkC6jD,YACvC,IAAKjsC,EAAM,OAAO,KAClB,IAAK94B,EAAO,OAAO,KACnB,IAAKA,EAAMgD,OAAQ,OAAO,KAE1B,IAAMm6D,EAAWn9D,EAAMwK,IAAI,SAAA/B,GAAC,OACxBoU,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,0BACVxI,IAAK7L,EAAErG,QAAQ1C,GACfmmE,kBAAiBp9D,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAO64D,IAA2B34D,OAAQ24D,KACnDroD,QAAS,kBAAMxV,EAAK+jC,WAAW9iC,KAC/BoU,EAAArf,EAAAkM,cAAC6f,GAAA,EAAD,CACIjV,IAAK7L,EAAErG,QAAQ1C,GACfod,UAAU,kCACVma,SAAO,EACP70B,QAASqG,EACT2U,YAAa0oD,IACb9uC,MAAM,OAKZ9D,EAAelzB,EAAM+uB,UAAU,SAAAtmB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOolE,IACrD1iE,GAA4B,IAAlB8wB,EAAsBlzB,EAAMkzB,GAAgB,KAE5D,OACIrW,EAAArf,EAAAkM,cAAA,OACIg0B,IAAK1gC,KAAKmoE,SACVroD,UAAWe,IAAW,gBAAiBH,EAAQ8F,YAAa9F,EAAQgC,MACpEyjD,YAAanmE,KAAKolE,gBAClBlgC,YAAallC,KAAKmlE,iBACjBhF,EACAljD,QAAQ7X,IAAY2iE,GAAeloD,EAAArf,EAAAkM,cAACs0B,GAAA,EAAD,CAAgB57B,QAASA,YA9OlD6a,IAAMC,YAoPlBgB,OA3PA,SAAAC,GAAK,OAAArhB,OAAAshB,EAAA,EAAAthB,CAAA,CAChB4iB,KAAM,CACFgX,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,YAEhF9wB,aAAYlG,KAuPJD,CAAmBumD,WChRlC,SAAAsB,KAAmR,OAA9PA,GAAAjpE,OAAA+7B,QAAA,SAAAvwB,GAAgD,QAAAxF,EAAA,EAAgBA,EAAApE,UAAAsE,OAAsBF,IAAA,CAAO,IAAAI,EAAAxE,UAAAoE,GAA2B,QAAAwR,KAAApR,EAA0BpG,OAAAkpE,UAAAC,eAAA9oE,KAAA+F,EAAAoR,KAAyDhM,EAAAgM,GAAApR,EAAAoR,IAAiC,OAAAhM,IAAkB7J,MAAAzB,KAAA0B,WAEnR,SAAAwnE,GAAAhjE,EAAAijE,GAAqD,SAAAjjE,EAAA,SAA+B,IAA8DoR,EAAAxR,EAA9DwF,EAEpF,SAAApF,EAAAijE,GAA0D,SAAAjjE,EAAA,SAA+B,IAAuDoR,EAAAxR,EAAvDwF,EAAA,GAAiB89D,EAAAtpE,OAAA0R,KAAAtL,GAAkD,IAAAJ,EAAA,EAAYA,EAAAsjE,EAAApjE,OAAuBF,IAAOwR,EAAA8xD,EAAAtjE,GAAqBqjE,EAAAx1B,QAAAr8B,IAAA,IAA0ChM,EAAAgM,GAAApR,EAAAoR,IAA6B,OAAAhM,EAF9M+9D,CAAAnjE,EAAAijE,GAA0E,GAAArpE,OAAAwpE,sBAAA,CAAoC,IAAAC,EAAAzpE,OAAAwpE,sBAAApjE,GAA6D,IAAAJ,EAAA,EAAYA,EAAAyjE,EAAAvjE,OAA6BF,IAAOwR,EAAAiyD,EAAAzjE,GAA2BqjE,EAAAx1B,QAAAr8B,IAAA,GAA0CxX,OAAAkpE,UAAAQ,qBAAArpE,KAAA+F,EAAAoR,KAAwEhM,EAAAgM,GAAApR,EAAAoR,IAA+B,OAAAhM,EAM3d,IAAIm+D,GAEJ5pD,EAAArf,EAAKkM,cAAA,SAA0BmT,EAAArf,EAAKkM,cAAA,QACpCg9D,KAAA,UACA1rD,EAAA,k4BACI6B,EAAArf,EAAKkM,cAAA,QACTg9D,KAAA,UACA1rD,EAAA,g5BAGI2rD,GAAU,SAAAtpE,GACd,IAAAupE,EAAAvpE,EAAAupE,OACArqD,EAAA2pD,GAAA7oE,EAAA,YAEA,OAASwf,EAAArf,EAAKkM,cAAA,MAAAq8D,GAAA,CACdrmE,GAAA,SACA+I,EAAA,MACAw5C,EAAA,MACA4kB,QAAA,cACAl9D,MAAA,CACAm9D,iBAAA,mBAEAC,SAAA,WACArpC,IAAAkpC,GACGrqD,GAAUkqD,KAGbO,GAAiBnqD,EAAArf,EAAKypE,WAAA,SAAA1qD,EAAAmhB,GACtB,OAAS7gB,EAAArf,EAAKkM,cAAei9D,GAAUZ,GAAA,CACvCa,OAAAlpC,GACGnhB,MCzBG2qD,ID2BSnsD,EAAAosD,qBC1BX,SAAAD,EAAY3qD,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAkqE,IACfrqE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAoqE,GAAA/pE,KAAAH,KAAMuf,KAmBV+xB,qBAAuB,SAAA3wC,GAAU,IACTqG,EAAWrG,EAAvB4wC,WAER1xC,EAAK4kB,SAAS,CAAEzd,YAvBDnH,EA0BnBuqE,2BAA6B,SAAAzpE,GAAU,IAC3B0pE,EAAiBjyD,KAAjBiyD,aAERxqE,EAAK4kB,SAAS,CAAE4lD,kBA7BD,IAGPrjE,EAAyBoR,KAAzBpR,OAAQqjE,EAAiBjyD,KAAjBiyD,aAHD,OAIfxqE,EAAKskB,MAAQ,CACTnd,SACAqjE,gBANWxqE,mFAWfuY,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,sBAC/Cl5B,KAAiBqJ,GAAG,2BAA4BzhB,KAAKoqE,2EAIrDhyD,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,sBAC3Dl5B,KAAiBpW,eAAe,2BAA4BhC,KAAKoqE,6DAe5D,IACG/yD,EAAMrX,KAAKuf,MAAXlI,EADH6M,EAE4BlkB,KAAKmkB,MAA9Bnd,EAFHkd,EAEGld,OAAQqjE,EAFXnmD,EAEWmmD,aAChB,OAAIrjE,EAAe,KACdqjE,EAGDxqD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,eACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAACs9D,GAAD,CAAalqD,UAAU,qBACtBzI,EAAE,gCANW,YArCR4I,IAAMC,YAoDjBqH,iBAAkB2iD,IC/B3BI,GAAqBxqE,OAAOuwB,OAAO,CACrCC,KAAM,OACNi6C,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,yBASpBC,eACF,SAAAA,EAAYprD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA2qE,IACf9qE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA6qE,GAAAxqE,KAAAH,KAAMuf,KAwJV6iB,0BAA4B,SAAAzhC,GACxB,IAAMi8B,EAAO/8B,EAAKksD,QAAQx+B,QAEpBq9C,EAAmBhuC,EAAK8nB,aACxBmmB,EAAgBjuC,EAAKiM,UAC3BhpC,EAAK4kB,SAAS,CAAEqmD,cAAc,GAAQ,WAC9BluC,EAAKiM,YAAcgiC,IACnBjuC,EAAKiM,WAAalkB,KAAKyW,IAAIwvC,EAAmBhuC,EAAK8nB,kBAhK5C7kD,EAqKnBkrE,0BAA4B,SAAAC,GACxB,IAAMpuC,EAAO/8B,EAAKksD,QAAQx+B,QAE1B1tB,EAAK+qE,iBAAmBhuC,EAAK8nB,aAC7B7kD,EAAKgrE,cAAgBjuC,EAAKiM,WAzKXhpC,EA4KnBmiC,uBAAyB,SAAAgpC,GACrB,IAAMpuC,EAAO/8B,EAAKksD,QAAQx+B,QAK1B1tB,EAAK4kB,SAAS,CAAEqmD,cAAc,GAAS,WAC/BluC,EAAKiM,YAAchpC,EAAKgrE,gBACxBjuC,EAAKiM,WAAalkB,KAAKyW,IAAIv7B,EAAK+qE,iBAAmBhuC,EAAK8nB,kBApLjD7kD,EAyLnBorE,wBAA0B,SAAAtqE,GACtBd,EAAK4kB,SAAS,CACVymD,gBAAiBz9D,KAAayR,cAAcjT,KAAO,EACnDk/D,eAAgBb,GAAmBI,wBA5LxB7qE,EAgMnB8xD,2BAA6B,SAAAhxD,GACNd,EAAK0f,MAAhBvY,SAEOrG,EAAOqG,QAClBnH,EAAK4kB,SAAS,CAAEg7B,aAAc9+C,EAAO24B,cApM1Bz5B,EAwMnB+kE,uBAAyB,SAAAjkE,GAAU,IACvBqG,EAAWnH,EAAK0f,MAAhBvY,OACAwL,EAAY3S,EAAKskB,MAAjB3R,QACApM,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WAEjB,GAAIrX,IAAWZ,IAEsC,IAAjDoM,EAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAO2b,IAAoB,CACpD,IAAM/Z,EAAUmJ,KAAaxK,IAAImD,EAASiY,GAC1C,IAAK/Z,EAAS,OAEd,IAAM3E,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO,CAAC2E,MApNjBzE,EAwNnBurE,wBAA0B,SAAAzqE,GACHd,EAAK0f,MAAhBvY,OACOrG,EAAOyF,SA1NPvG,EA6NnBwrE,6BAA+B,SAAA1qE,GAAU,IAC7B2D,EAA4B3D,EAA5B2D,QAASua,EAAmBle,EAAnBke,eAEjB,GADmBhf,EAAK0f,MAAhBvY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAIklE,GAAsB,EAE1B,OADoBhnE,EAAZC,QACQ,UACZ,IAAK,cACD+mE,GAAsB,EAK9B,GAAKA,EAAL,CAEA,IAAIH,EAAiBb,GAAmBh6C,KAClCsM,EAAO/8B,EAAKksD,QAAQx+B,QAEtBqP,EAAKiM,YAAcjM,EAAKkM,aAAelM,EAAK8nB,aAC5CymB,EAAiBb,GAAmBC,iBAG/BjmE,EAAQmT,cACb0zD,EAAiBb,GAAmBC,kBAGxC7mE,QAAQ4F,IAAI,mEAAqE6hE,GACjFtrE,EAAK0rE,eAAe1sD,EAAgBva,EAAS6mE,GAC7C,IAAMxrE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO,CAAC2E,IAC5BqmE,EAAaa,aAAa,CAAClnE,OA5PZzE,EA+PnB4rE,mBAAqB,SAAA9qE,GACjB,GAAKd,EAAK6rE,UAAV,CAD2B,IAGnBpnE,EAAY3D,EAAZ2D,QAER,GADmBzE,EAAK0f,MAAhBvY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAI+kE,EAAiBb,GAAmBh6C,KAClCsM,EAAO/8B,EAAKksD,QAAQx+B,QAEtBqP,EAAKiM,YAAcjM,EAAKkM,aAAelM,EAAK8nB,aAC5CymB,EAAiBb,GAAmBC,iBAG/BjmE,EAAQmT,cACb0zD,EAAiBb,GAAmBC,kBAGxC,IAAM/3D,EAAU,CAAClO,GAEjBZ,QAAQ4F,IAAI,yDAA2D6hE,GACvEtrE,EAAK8rE,YAAY9rE,EAAKutB,eAAe5a,GAAU24D,GAC/C,IAAMxrE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAO6S,GAC3Bm4D,EAAaa,aAAah5D,MAvRX3S,EA0RnB+rE,uBAAyB,SAAAjrE,GACFd,EAAK0f,MAAhBvY,SACOrG,EAAOyF,SAEjBzF,EAAOkrE,cAEZhsE,EAAKisE,cAAcnrE,EAAOiL,cAhSX/L,EAmSnBksE,kBAAoB,WAChB,GAAKlsE,EAAK0N,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAIrE,IACflG,EAAQgpE,aAAYnsE,EAAKksD,QAASlsD,EAAKosE,UACpCnmE,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IAAK,CACnC,IAAMxB,EAAUzE,EAAK0N,SAASvK,EAAM8C,IACpC,GAAIxB,EAAS,KAAA4nE,EACqB5nE,EAAQib,MAA9BvY,EADCklE,EACDllE,OAAQC,EADPilE,EACOjlE,UACVqQ,EAAG,GAAAtM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GACzBsG,EAAStM,IAAIqW,EAAKA,IAI1BzV,KAAgBgH,aAAa,CACzBC,QAAS,6BACTyE,SAAUA,MAnTC1N,EAyenBssE,sBAzemB,eAAA9rE,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAyeK,SAAAC,EAAMyJ,GAAN,IAAAiiE,EAAAC,EAAAvmE,EAAA,OAAAopB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdqrE,EAAiB,EACnBC,EAAaliE,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASsmE,IAEzExmE,EAAI,EAJO,YAIJA,EAAIsmE,GAAkBC,GAJlB,CAAAxrE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDlB,EAAKyzD,aALJ,OAKhBnpD,EALgBtJ,EAAAkK,KAMhBshE,EAAaliE,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASsmE,IAN9D,OAI8BxmE,IAJ9BjF,EAAAE,KAAA,iCAAAF,EAAAU,SAAAb,MAzeL,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAmfnByzD,WAnfmBxzD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAmfN,SAAAyB,IAAA,IAAA8E,EAAAulE,EAAApiB,EAAAhgD,EAAAxK,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACDiG,EAAWnH,EAAK0f,MAAhBvY,OADC,CAAA7E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAILxB,EAAKssD,QAJA,CAAAhqD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAMLxB,EAAK2sE,oBANA,CAAArqE,EAAApB,KAAA,eAOLlB,EAAK4sE,wBAPAtqE,EAAAd,OAAA,wBAWLkrE,EAAgB,EAChB1sE,EAAKskB,MAAM3R,SAAW3S,EAAKskB,MAAM3R,QAAQxM,OAAS,IAClDumE,EAAgB1sE,EAAKskB,MAAM3R,QAAQ,GAAG9P,IAG1C7C,EAAKssD,SAAU,EAEThC,EAAYtqD,EAAKsqD,UAlBdhoD,EAAApB,KAAA,GAmBUc,KAAgBgJ,KAAK,CACpC/B,QAAS,iBACT1C,QAASY,EACT2rB,gBAAiB45C,EACjBlhD,OAAQ,EACRuH,MAAO05C,MACRnY,QAAQ,WACPt0D,EAAKssD,SAAU,IA1BV,WAmBLhiD,EAnBKhI,EAAA4I,KA6BLo/C,IAActqD,EAAKsqD,UA7Bd,CAAAhoD,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,qBAiCLxB,EAAK0f,MAAMvY,SAAWA,EAjCjB,CAAA7E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAsCToM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAAS4wD,UAChBt+D,EAAK6sE,aAAa7sE,EAAKutB,eAAejjB,EAAOoD,UAAW,WAC/CpD,EAAOoD,SAASvH,QACjBnG,EAAK4sE,0BAGP9sE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo9D,EAAaa,aAAarhE,EAAOoD,UA/CxBpL,EAAAd,OAAA,SAiDF8I,GAjDE,yBAAAhI,EAAAZ,SAAAW,MAnfMrC,EAuiBnButB,eAAiB,SAAA7f,GACb,OAAOA,EAAS7B,OAAO,SAAAD,GAAC,MAA2B,yBAAvBA,EAAElH,QAAQ,YAxiBvB1E,EA2iBnB4sE,sBA3iBmB3sE,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA2iBK,SAAA8qD,IAAA,IAAAvkD,EAAA0V,EAAAtC,EAAAuyD,EAAAJ,EAAApiB,EAAAhgD,EAAAxK,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAA4qD,GAAA,cAAAA,EAAA1qD,KAAA0qD,EAAAzqD,MAAA,UACZiG,EAAWnH,EAAK0f,MAAhBvY,OADY,CAAAwkD,EAAAzqD,KAAA,eAAAyqD,EAAAnqD,OAAA,qBAIhBxB,EAAKssD,QAJW,CAAAX,EAAAzqD,KAAA,eAAAyqD,EAAAnqD,OAAA,oBAMdqb,EAAeF,YAAgBxV,GANjB,CAAAwkD,EAAAzqD,KAAA,eAAAyqD,EAAAnqD,OAAA,oBASd+Y,EAAWH,KAAgBI,YAAYqC,GATzB,CAAA8uC,EAAAzqD,KAAA,gBAAAyqD,EAAAnqD,OAAA,qBAWf+Y,EAASwyD,6BAXM,CAAAphB,EAAAzqD,KAAA,gBAAAyqD,EAAAnqD,OAAA,yBAapBxB,EAAK2sE,qBAAsB,EAbPhhB,EAAAzqD,KAAA,GAeSc,KAAgBgJ,KAAK,CAC9C/B,QAAS,uBACT0Q,eAAgBY,EAASwyD,+BAjBT,WAedD,EAfcnhB,EAAAzgD,KAAA,CAAAygD,EAAAzqD,KAAA,gBAAAyqD,EAAAnqD,OAAA,yBAsBhBkrE,EAAgB,EAEhB1sE,EAAKskB,MAAM3R,SACX3S,EAAKskB,MAAM3R,QAAQxM,OAAS,GAC5BnG,EAAKskB,MAAM3R,QAAQ,GAAGpM,UAAYumE,EAAejqE,KAEjD6pE,EAAgB1sE,EAAKskB,MAAM3R,QAAQ,GAAG9P,IAG1C7C,EAAKssD,SAAU,EAEThC,EAAYtqD,EAAKsqD,UAjCHqB,EAAAzqD,KAAA,GAkCCc,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASumE,EAAejqE,GACxBiwB,gBAAiB45C,EACjBlhD,OAAQ,EACRuH,MAAO05C,MACRnY,QAAQ,WACPt0D,EAAKssD,SAAU,IAzCC,WAkCdhiD,EAlCcqhD,EAAAzgD,KA4ChBo/C,IAActqD,EAAKsqD,UA5CH,CAAAqB,EAAAzqD,KAAA,gBAAAyqD,EAAAnqD,OAAA,qBAgDhBxB,EAAK0f,MAAMvY,SAAWA,EAhDN,CAAAwkD,EAAAzqD,KAAA,gBAAAyqD,EAAAnqD,OAAA,kBAqDpBoM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAAS4wD,UAChBt+D,EAAK6sE,aAAa7sE,EAAKutB,eAAejjB,EAAOoD,WACvC5N,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo9D,EAAaa,aAAarhE,EAAOoD,UA1Db,yBAAAi+C,EAAAjqD,SAAAgqD,MA3iBL1rD,EAwmBnBmsD,eAxmBmBlsD,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAwmBF,SAAAiK,IAAA,IAAA1D,EAAAjD,EAAAwoE,EAAApiB,EAAAhgD,EAAAxK,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UACLiG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFd,CAAA4D,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,qBAKTxB,EAAKssD,QALI,CAAAvhD,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,qBAMTxB,EAAK6rE,UANI,CAAA9gE,EAAA7J,KAAA,eAAA6J,EAAAvJ,OAAA,wBAQTkrE,EAAgB,EAChB1sE,EAAKskB,MAAM3R,SAAW3S,EAAKskB,MAAM3R,QAAQxM,OAAS,IAClDumE,EAAgB1sE,EAAKskB,MAAM3R,QAAQ3S,EAAKskB,MAAM3R,QAAQxM,OAAS,GAAGtD,IAGtE7C,EAAKssD,SAAU,EAEThC,EAAYtqD,EAAKsqD,UAfVv/C,EAAA7J,KAAA,GAgBMc,KAAgBgJ,KAAK,CACpC/B,QAAS,iBACT1C,QAASY,EACT2rB,gBAAiB45C,EACjBlhD,QAASihD,IAAsB,EAC/B15C,MAAO05C,IAAsB,IAC9BnY,QAAQ,WACPt0D,EAAKssD,SAAU,IAvBN,WAgBThiD,EAhBSS,EAAAG,KA0BTo/C,IAActqD,EAAKsqD,UA1BV,CAAAv/C,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,qBA8BTxB,EAAK0f,MAAMvY,SAAWA,EA9Bb,CAAA4D,EAAA7J,KAAA,gBAAA6J,EAAAvJ,OAAA,yBAkCT0C,EAAKoT,aACLtX,EAAK6rE,UAAYvhE,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F7C,EAAK6rE,WAAY,EAGrBt+C,aAAejjB,EAAQtK,EAAKskB,MAAM3R,SAIlC/E,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAAS4wD,UAChBz6D,QAAQ4F,IAAI,0DACZzJ,EAAK8rE,YAAY9rE,EAAKutB,eAAejjB,EAAOoD,UAAW+8D,GAAmBh6C,MACpE3wB,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCo9D,EAAaa,aAAarhE,EAAOoD,UAlDpB3C,EAAAvJ,OAAA,SAoDN8I,GApDM,yBAAAS,EAAArJ,SAAAmJ,MAxmBE7K,EAgtBnBisD,aAAe,WACXjsD,EAAKksE,oBAEL,IAAMnvC,EAAO/8B,EAAKksD,QAAQx+B,QAG1B,GAAI1tB,EAAKgtE,qBAGL,OAFAnpE,QAAQ4F,IAAI,iDACZzJ,EAAKgtE,sBAAuB,GAI5BhtE,EAAKitE,iCACLppE,QAAQ4F,IAAI,wDAIZszB,EAAKiM,WAAa,GAClBnlC,QAAQ4F,IAAI,kCACZzJ,EAAKyzD,cACE12B,EAAKiM,UAAYjM,EAAK8nB,eAAiB9nB,EAAKkM,eACnDplC,QAAQ4F,IAAI,sCACZzJ,EAAKmsD,mBAtuBMnsD,EA4uBnBktE,qBAAuB,SAAA3nD,GAAY,IAAA9F,EACDzf,EAAK0f,MAA3BvY,EADuBsY,EACvBtY,OADuBkd,GAAA5E,EACfrY,UACoBpH,EAAKskB,OAAjCgnD,EAFuBjnD,EAEvBinD,eAAgB34D,EAFO0R,EAEP1R,QAChBq2B,EAA0CzjB,EAA1CyjB,UAAWC,EAA+B1jB,EAA/B0jB,aAAc4b,EAAiBt/B,EAAjBs/B,aAUjC,GARAhhD,QAAQ4F,IAAR,8DAAA0B,OAEqBmgE,EAFrB,uCAAAngE,OAGwB69B,EAHxB,0CAAA79B,OAI2B89B,EAJ3B,0CAAA99B,OAK2B05C,EAL3B,4BAAA15C,OAMahE,IAETmkE,IAAmBb,GAAmBh6C,WACnC,GAAI66C,IAAmBb,GAAmBC,iBAC7C1qE,EAAKmtE,sBACF,GAAI7B,IAAmBb,GAAmBG,kBAC7C5qE,EAAKotE,uBACF,GAAI9B,IAAmBb,GAAmBE,iBAAkB,CAC/D,IAAM5tC,EAAO/8B,EAAKksD,QAAQx+B,QAC1B7pB,QAAQ4F,IAAR,qEAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,gCAAA99B,OAKahE,IAIb,IADA,IAAIkmE,GAAW,EACNpnE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIqnE,EAAgBttE,EAAKutE,SAASnqE,IAAI6C,GAClCzC,EAAO+5D,eAAqB+P,GAChC,GAAI9pE,GAEI8pE,EAAc5tD,MAAMkmD,oBAAqB,CACzC7oC,EAAKiM,UAAYxlC,EAAKg6D,UACtB6P,GAAW,EACX,OAKPA,GACDrtE,EAAKmtE,iBAGTtpE,QAAQ4F,IAAR,oEAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,gCAAA99B,OAKahE,SAEV,GAAImkE,IAAmBb,GAAmBI,qBAAsB,CACnE,IAAM9tC,EAAO/8B,EAAKksD,QAAQx+B,QAC1B7pB,QAAQ4F,IAAR,yEAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,gCAAA99B,OAKahE,IAEb41B,EAAKiM,UAAYA,GAAajM,EAAKkM,aAAeA,GAClDplC,QAAQ4F,IAAR,wEAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,gCAAA99B,OAKahE,MAhzBFnH,EAqzBnBotE,gBAAkB,WAAM,IAAAxsD,EACU5gB,EAAK0f,MAA3BvY,EADYyZ,EACZzZ,OAAQC,EADIwZ,EACJxZ,UACRuL,EAAY3S,EAAKskB,MAAjB3R,QAEFoqB,EAAO/8B,EAAKksD,QAAQx+B,QAC1B7pB,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,2CAAA+D,OAEqB4xB,EAAKiM,UAF1B,uCAAA79B,OAGwB4xB,EAAK8nB,aAH7B,uCAAA15C,OAIwB4xB,EAAKkM,aAJ7B,4BAAA99B,OAKahE,IAIb,IADA,IAAIkmE,GAAW,EACNpnE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIqnE,EAAgBttE,EAAKutE,SAASnqE,IAAI6C,GAClCzC,EAAO+5D,eAAqB+P,GAChC,GAAI9pE,GAEI8pE,EAAc5tD,MAAMtY,YAAcA,EAAW,CAC7C21B,EAAKiM,UAAYxlC,EAAKg6D,UAAYzgC,EAAK8nB,aAAe,EACtDwoB,GAAW,EACX,OAKPA,GACDrtE,EAAKmtE,iBAGTtpE,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,0CAAA+D,OAEqB4xB,EAAKiM,UAF1B,uCAAA79B,OAGwB4xB,EAAK8nB,aAH7B,uCAAA15C,OAIwB4xB,EAAKkM,aAJ7B,4BAAA99B,OAKahE,KAz1BEnH,EA61BnBmtE,eAAiB,WACbntE,EAAKgtE,sBAAuB,EAC5B,IAAMjwC,EAAO/8B,EAAKksD,QAAQx+B,QAC1B7pB,QAAQ4F,IAAR,oEAAA0B,OAEwB4xB,EAAKkM,aAF7B,uCAAA99B,OAGwB4xB,EAAK8nB,aAH7B,oCAAA15C,OAIqB4xB,EAAKiM,UAJ1B,4BAAA79B,OAKanL,EAAK0f,MAAMvY,SAGF41B,EAAKkM,aAAelM,EAAK8nB,eACzB9nB,EAAKiM,WACvBjM,EAAKiM,UAAYjM,EAAKkM,aAAelM,EAAK8nB,aAC1ChhD,QAAQ4F,IAAR,oEAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,8CAAA99B,OAK2BnL,EAAKgtE,qBALhC,gCAAA7hE,OAManL,EAAK0f,MAAMvY,UAGxBtD,QAAQ4F,IAAR,oFAAA0B,OAEqB4xB,EAAKiM,UAF1B,2CAAA79B,OAGwB4xB,EAAK8nB,aAH7B,2CAAA15C,OAIwB4xB,EAAKkM,aAJ7B,8CAAA99B,OAK2BnL,EAAKgtE,qBALhC,gCAAA7hE,OAManL,EAAK0f,MAAMvY,UA13BbnH,EA+3BnBwtE,cA/3BmBvtE,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA+3BH,SAAA6sE,IAAA,IAAAtmE,EAAAjD,EAAA6uB,EAAAu3B,EAAAhgD,EAAAxK,EAAA,OAAAuvB,EAAA1uB,EAAAI,KAAA,SAAA2sE,GAAA,cAAAA,EAAAzsE,KAAAysE,EAAAxsE,MAAA,UACJiG,EAAWnH,EAAK0f,MAAhBvY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFf,CAAAumE,EAAAxsE,KAAA,eAAAwsE,EAAAlsE,OAAA,wBAKZxB,EAAKsqD,UAAY1xC,KAAKI,MACtBhZ,EAAKssD,SAAU,EACftsD,EAAK6rE,WAAY,EAEK,EACP,EACT94C,EAAQ05C,IAERniB,EAAYtqD,EAAKsqD,UAbXojB,EAAAxsE,KAAA,GAcSc,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACdiwB,gBARkB,EASlBtH,OARW,EASXuH,MAAOA,IAnBC,WAcNzoB,EAdMojE,EAAAxiE,KAsBRo/C,IAActqD,EAAKsqD,UAtBX,CAAAojB,EAAAxsE,KAAA,gBAAAwsE,EAAAlsE,OAAA,qBA4BRxB,EAAK0f,MAAMvY,SAAWA,EA5Bd,CAAAumE,EAAAxsE,KAAA,gBAAAwsE,EAAAlsE,OAAA,kBAgCR0C,EAAKoT,aACLtX,EAAK6rE,UAAYvhE,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F7C,EAAK6rE,WAAY,EAGrBj+D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAAS4wD,UAGS,EACzBz6D,QAAQ4F,IAAI,yCAEZzJ,EAAKirC,QAHoB,EAGQ3gC,EAAOoD,SAAU+8D,GAAmBC,kBAG/D5qE,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCmG,YAAiB/T,EAAO,CAACqH,IAEzB2jE,EAAaa,aAAarhE,EAAOoD,UAEjC1N,EAAKssE,sBAAsBhiE,GAtDf,yBAAAojE,EAAAhsE,SAAA+rE,MA/3BGztE,EAw7BnB2tE,oBAAsB,SAAAniE,GAClBA,EAAMsd,iBACNtd,EAAMua,kBAFqB,IAInB5e,EAAWnH,EAAK0f,MAAhBvY,OACH4V,YAAa5V,IAElBoR,KAAiBqpD,aAAY,IA57B7B/9D,QAAQ4F,IAAR,6BAAA0B,OAAyCuU,EAAMvY,OAA/C,gBAAAgE,OAAoEuU,EAAMtY,YAE1EpH,EAAKsqD,UAAY1xC,KAAKI,MACtBhZ,EAAKskB,MAAQ,CACTkiB,WAAY,EACZonC,cAAe,KACf3C,cAAc,EACdt4D,QAAS,GACTitC,cAAc,EACdyrB,iBAAiB,EACjBC,eAAgBb,GAAmBh6C,KACnCo9C,mBAAoB,GAGxB7tE,EAAKksD,QAAU9rC,IAAMogB,YACrBxgC,EAAKosE,SAAWhsD,IAAMogB,YAEtBxgC,EAAKutE,SAAW,IAAIlkE,IAEpBrJ,EAAKksE,kBAAoB4B,aAAS9tE,EAAKksE,kBAAmB,KAtB3ClsE,uFAyCKqlB,EAAWC,GAAW,IAClCne,EAAWhH,KAAKuf,MAAhBvY,OAEF41B,EAAO58B,KAAK+rD,QAAQx+B,QACpBnI,EAAW,CACbyjB,UAAWjM,EAAKiM,UAChBC,aAAclM,EAAKkM,aACnB4b,aAAc9nB,EAAK8nB,cAWvB,OARAhhD,QAAQ4F,IAAR,iEAAA0B,OAEqB4xB,EAAKiM,UAF1B,uCAAA79B,OAGwB4xB,EAAKkM,aAH7B,uCAAA99B,OAIwB4xB,EAAK8nB,aAJ7B,4BAAA15C,OAKahE,IAGNoe,6CAGQF,EAAWC,EAAWC,GAAU,IAAAkD,EACjBtoB,KAAKuf,MAA3BvY,EADuCshB,EACvCthB,OAAQC,EAD+BqhB,EAC/BrhB,UAEV21B,EAAO58B,KAAK+rD,QAAQx+B,QAC1B7pB,QAAQ4F,IAAR,2CAAA0B,OAC+ChE,EAD/C,gBAAAgE,OACoE/D,EADpE,kCAAA+D,OAEmBka,EAAUle,OAF7B,qBAAAgE,OAEuDka,EAAUje,UAFjE,oCAAA+D,OAGqB4xB,EAAKiM,UAH1B,uCAAA79B,OAIwB4xB,EAAKkM,aAJ7B,uCAAA99B,OAKwB4xB,EAAK8nB,eAGzBx/B,EAAUle,SAAWA,GAAUke,EAAUje,YAAcA,EACvDjH,KAAKyjD,iBAAiBz8C,EAAQke,EAAUle,OAAQC,EAAWie,EAAUje,WAErEjH,KAAK+sE,qBAAqB3nD,iDAIZN,EAAWC,GAAW,IAAA+D,EACH9oB,KAAKuf,MAAlCvY,EADgC8hB,EAChC9hB,OAAQC,EADwB6hB,EACxB7hB,UAAWka,EADa2H,EACb3H,MADa4hB,EAEmC/iC,KAAKmkB,MAAxE2mD,EAFgC/nC,EAEhC+nC,aAAct4D,EAFkBuwB,EAElBvwB,QAAS4nD,EAFSr3B,EAETq3B,SAAU3a,EAFD1c,EAEC0c,aAAcyrB,EAFfnoC,EAEemoC,gBAEvD,OAAIpmD,EAAU3D,QAAUA,IAIpB2D,EAAU9d,SAAWA,IAIrB8d,EAAU7d,YAAcA,IAIxB8d,EAAU+lD,eAAiBA,IAI3B/lD,EAAUvS,UAAYA,IAItBuS,EAAUq1C,WAAaA,IAIvBr1C,EAAU06B,eAAiBA,GAI3B16B,EAAUmmD,kBAAoBA,oDAOlB,IACRlkE,EAAWhH,KAAKuf,MAAhBvY,OACRhH,KAAKyjD,iBAAiBz8C,EAAQ,GAE9ByG,KAAagU,GAAG,mBAAoBzhB,KAAKyrE,oBACzCh+D,KAAagU,GAAG,uBAAwBzhB,KAAK4rE,wBAC7Cn+D,KAAagU,GAAG,uBAAwBzhB,KAAK4kE,wBAC7Cn3D,KAAagU,GAAG,6BAA8BzhB,KAAKqrE,8BACnD59D,KAAagU,GAAG,8BAA+BzhB,KAAKirE,yBACpDx9D,KAAagU,GAAG,6BAA8BzhB,KAAKirE,yBACnDr4D,IAAU6O,GAAG,wBAAyBzhB,KAAKorE,yBAC3Cx4D,IAAU6O,GAAG,2BAA4BzhB,KAAK2xD,4BAE9ClhC,KAAYhP,GAAG,0BAA2BzhB,KAAKoiC,2BAC/C3R,KAAYhP,GAAG,0BAA2BzhB,KAAK+qE,2BAC/Ct6C,KAAYhP,GAAG,uBAAwBzhB,KAAKgiC,uEAI5Cv0B,KAAazL,eAAe,mBAAoBhC,KAAKyrE,oBACrDh+D,KAAazL,eAAe,uBAAwBhC,KAAK4rE,wBACzDn+D,KAAazL,eAAe,uBAAwBhC,KAAK4kE,wBACzDn3D,KAAazL,eAAe,6BAA8BhC,KAAKqrE,8BAC/D59D,KAAazL,eAAe,8BAA+BhC,KAAKirE,yBAChEx9D,KAAazL,eAAe,6BAA8BhC,KAAKirE,yBAC/Dr4D,IAAU5Q,eAAe,wBAAyBhC,KAAKorE,yBACvDx4D,IAAU5Q,eAAe,2BAA4BhC,KAAK2xD,4BAE1DlhC,KAAYzuB,eAAe,0BAA2BhC,KAAKoiC,2BAC3D3R,KAAYzuB,eAAe,0BAA2BhC,KAAK+qE,2BAC3Dt6C,KAAYzuB,eAAe,uBAAwBhC,KAAKgiC,yGAyLrCh7B,EAAQohD,EAAgBnhD,EAAW6hD,2GAChD/kD,EAAO6O,IAAU3P,IAAI+D,GACrB4mE,EAAeh7D,IAAU3P,IAAImlD,GAEnCpoD,KAAKmqD,UAAY1xC,KAAKI,MACtB7Y,KAAKmsD,SAAU,EACfnsD,KAAK0rE,WAAY,EACjB1rE,KAAKwsE,qBAAsB,EAE3BxsE,KAAK8sE,kCAAmC,GACpC/oE,0BACAlC,KAAgBgJ,KAAK,CACjB/B,QAAS,WACT1C,QAASrC,EAAKrB,KAGZghE,GAAUz8D,GAAalD,EAAK6T,aAAe,EAC3C20D,EACF7I,GAAU3/D,EAAK6T,aAAe,EAAI7T,EAAK8pE,2BAA6B5mE,GAAwB,EAC1FokB,EAAUq4C,GAAU3/D,EAAK6T,aAAe,GAAM3Q,GAAa,EAAIqlE,IAAsB,EACrF15C,EACD8wC,GAAU3/D,EAAK6T,aAAe,GAAM3Q,EAAY,EAAIqlE,IAAsBA,IAEzEniB,EAAYnqD,KAAKmqD,oBACFtoD,KAAgBgJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACdiwB,gBAAiB45C,EACjBlhD,OAAQA,EACRuH,MAAOA,eALLzoB,SAQFggD,IAAcnqD,KAAKmqD,gEAMnBpmD,EAAKoT,aACLnX,KAAK0rE,UAAYvhE,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKoT,aAAazU,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F1C,KAAK0rE,WAAY,EAGrBj+D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAAS4wD,UAGZuP,EAAqB36C,OAAO+6C,YAC5B/pE,GAAQA,EAAK6T,aAAe,oBACnB9R,EAAIqE,EAAOoD,SAASvH,OAAS,eAAGF,GAAK,uBAClCpD,EAAOyH,EAAOoD,SAASzH,GAAvBpD,MAEHyH,EAAOoD,SAASzH,GAAG2R,aACpB/U,EAAKqB,EAAK8pE,4BACVnrE,EAAKgrE,oBAELA,EAAqBhrE,8DAPoBoD,4BAarD4nE,EAAqBA,IAAuB36C,OAAO+6C,UAAY,EAAIJ,EACnEhqE,QAAQ4F,IAAI,uCAAyCokE,GAEjDvC,EAAiBb,GAAmBC,iBACpCtjE,EACAkkE,EAAiBb,GAAmBG,kBAC7B/G,GAAUgK,IACjBvC,EAAiBb,GAAmBE,kBAGxCxqE,KAAK8qC,QAAQ4iC,EAAoBvjE,EAAOoD,SAAU49D,EAAgB,WAC9D3gE,EAAKsiE,kCAAmC,EACpC7lE,GACAmsB,aAAiBpsB,EAAQC,KAK3BtH,EAAQC,IAAUuD,WACxB6N,YAAoBrR,EAAOwK,EAAOoD,UAClCmG,YAAiB/T,EAAO,CAACqH,IACzB2M,YAAiBhU,EAAOqH,GAExB2jE,EAAaa,aAAarhE,EAAOoD,UAEjCvN,KAAKmsE,sBAAsBhiE,GAG3BiS,YAAgBrY,EAAKrB,4BAErB1C,KAAK8qC,QACD,EACA,GACAw/B,GAAmBC,iBACnB,kBAAO//D,EAAKsiE,kCAAmC,YAInDc,GACA/rE,KAAgBgJ,KAAK,CACjB/B,QAAS,YACT1C,QAASwnE,EAAalrE,iKAiBR6K,GAEtB,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAIxB,EAAUiJ,EAASzH,GACvB,GAAIxB,GAAWA,EAAQC,QACnB,OAAQD,EAAQC,QAAQ,UACpB,IAAK,eAAgB,IAAAwpE,EACD/tE,KAAKguE,gBAAgB1pE,GADpB2pE,EAAAnuE,OAAAy6C,EAAA,EAAAz6C,CAAAiuE,EAAA,GACZrrE,EADYurE,EAAA,GAEjB,GAFiBA,EAAA,GAGHh+D,aAAa3L,EAAQC,QAAQK,MAAMmB,OACpCoC,MACLvI,IAAUuS,oBAAoBzP,EAAI4B,GAG1C,MAEJ,IAAK,iBAAkB,IAAA4pE,EACHluE,KAAKmuE,kBAAkB7pE,GADpB8pE,EAAAtuE,OAAAy6C,EAAA,EAAAz6C,CAAAouE,EAAA,GACdxrE,EADc0rE,EAAA,GAEnB,GAFmBA,EAAA,GAGL9pE,EAAQC,QAAQa,QAAQA,QACzB+C,MACLvI,IAAUuS,oBAAoBzP,EAAI4B,qCAkMtDopE,EAAoBl7D,EAAS24D,EAAgB9hE,GACjDrJ,KAAKykB,SACD,CAAEipD,mBAAoBA,EAAoBl7D,QAASA,EAAS24D,eAAgBA,GAC5E9hE,wCAIKmJ,EAASnJ,GACK,IAAnBmJ,EAAQxM,OAKZhG,KAAKykB,SACD,CAAEjS,QAASA,EAAQxH,OAAOhL,KAAKmkB,MAAM3R,SAAU24D,eAAgBb,GAAmBI,sBAClFrhE,GANIA,GAAUA,2CAUPglE,EAAc/pE,EAAS6mE,EAAgB9hE,GAC7C/E,GAELtE,KAAKykB,SACD,CACIjS,QAASxS,KAAKmkB,MAAM3R,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAO2rE,IAAcrjE,OAAO,CAAC1G,IACvE6mE,eAAgBA,GAEpB9hE,uCAIImJ,EAAS24D,EAAgB9hE,GACV,IAAnBmJ,EAAQxM,QAEZhG,KAAKykB,SAAS,CAAEjS,QAASxS,KAAKmkB,MAAM3R,QAAQxH,OAAOwH,GAAU24D,eAAgBA,GAAkB9hE,yCAGrFuC,EAAavC,GAAU,IACzBmJ,EAAYxS,KAAKmkB,MAAjB3R,QACR,GAAuB,IAAnBA,EAAQxM,OAAZ,CAEA,IAAIwH,EAAM,IAAItE,IAAI0C,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAE3CzL,KAAKykB,SACD,CAAEjS,QAASA,EAAQ9G,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,MAAMyoE,eAAgBb,GAAmBC,kBACnFlhE,qCAsPC,IAAAulC,EAAA5uC,KAAAqiC,EACuBriC,KAAKuf,MAAzBmB,EADH2hB,EACG3hB,QAAS1Z,EADZq7B,EACYr7B,OADZg8B,EAEkEhjC,KAAKmkB,MAApE3R,EAFHwwB,EAEGxwB,QAASk7D,EAFZ1qC,EAEY0qC,mBAAoBjuB,EAFhCzc,EAEgCyc,aAAcyrB,EAF9CloC,EAE8CkoC,gBAI7C7tC,EAAYzhB,YAAc5U,GA4DhC,OAzDAhH,KAAKotE,SAASjuD,QACdnf,KAAKuN,SAAWkyC,EACV,KACAjtC,EAAQhF,IAAI,SAAC/B,EAAG3F,GACZ,IAAMwoE,EAAcxoE,EAAI,EAAI0M,EAAQ1M,EAAI,GAAK,KACvC0S,EAAO,IAAIC,KAAc,IAAThN,EAAE+M,MAClB+1D,EAAWD,EAAc,IAAI71D,KAAwB,IAAnB61D,EAAY91D,MAAeA,EAC/DunD,GAAW,EACL,IAANj6D,GACA0S,EAAKg2D,gBAAkBD,EAASC,eAChCh2D,EAAKi2D,aAAeF,EAASE,YAC7Bj2D,EAAKS,YAAcs1D,EAASt1D,YAE5B8mD,GAAW,GAGf,IAAIjwC,EAAI,KACR,GAAIhZ,aAAiBrL,GACjBqkB,EACIjQ,EAAArf,EAAAkM,cAACgiE,GAAD,CACIhuC,IAAK,SAAAoO,GAAE,OAAIF,EAAKw+B,SAASnsE,IAAI6E,EAAGgpC,IAChC9nC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb+iE,oBAAqBiI,IAAuBjiE,EAAE/I,SAGnD,CACH,IAAMgjE,EAEFroC,GACM,IAANv3B,GACCwoE,IACIx3D,aAAiBw3D,IACd7iE,EAAE0F,iBAAmBm9D,EAAYn9D,gBACjC1F,EAAE+M,KAAO81D,EAAY91D,KAAOm2D,KAExC7+C,EACIjQ,EAAArf,EAAAkM,cAACkiE,GAAD,CACIluC,IAAK,SAAAoO,GAAE,OAAIF,EAAKw+B,SAASnsE,IAAI6E,EAAGgpC,IAChC9nC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb+gE,aAAch4D,EAAEqT,cAChB4mD,UAAWA,EACXD,oBAAqBiI,IAAuBjiE,EAAE/I,KAM1D,OACImd,EAAArf,EAAAkM,cAAA,OAAK4K,IAAG,WAAAtM,OAAaS,EAAErF,QAAf,gBAAA4E,OAAqCS,EAAE/I,KAC1Cq9D,GAAYlgD,EAAArf,EAAAkM,cAACmiE,GAAD,CAASr2D,KAAM/M,EAAE+M,OAC7BsX,KAMfjQ,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAWH,EAAQgZ,WAAY,gBAAiB,CACvDo1C,iCAAkC5D,IAEtCtJ,YAAa5hE,KAAKwtE,qBAClB3tD,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAK+rD,QAASjsC,UAAU,wBAAwBotC,SAAUltD,KAAK8rD,cACrEjsC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBACfD,EAAArf,EAAAkM,cAAA,OAAKg0B,IAAK1gC,KAAKisE,SAAUnsD,UAAU,uBAC9B9f,KAAKuN,WAGdsS,EAAArf,EAAAkM,cAACqiE,GAAD,MACAlvD,EAAArf,EAAAkM,cAACsiE,GAAD,CAAehoE,OAAQA,IACvB6Y,EAAArf,EAAAkM,cAACuiE,GAAD,MACApvD,EAAArf,EAAAkM,cAACwiE,GAAD,0DAz/BoB3vD,EAAO4E,GACnC,OAAI5E,EAAMvY,SAAWmd,EAAMkiB,YAAc9mB,EAAMtY,YAAckd,EAAMspD,cACxD,CACHpnC,WAAY9mB,EAAMvY,OAClBymE,cAAeluD,EAAMtY,UACrBw4C,cAAc,EACdyrB,iBAAiB,EACjBC,eAAgBb,GAAmBC,iBACnCmD,mBAAoB,GAIrB,0CAsZSngE,GACXA,GACmB,IAApBA,EAASvH,QACRuH,EAAS,GAAGnH,SAEjBvE,KAAgBgJ,KAAK,CACjB/B,QAAS,eACT1C,QAASmH,EAAS,GAAGnH,QACrBwF,YAAa2B,EAASC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/I,cArclBud,IAAMC,WA0hClBgB,OAhiCA,SAAAC,GAAK,MAAK,CACrBuY,WAAY,CACRA,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQuqB,KAAK,KAAO,iBA8hC5C,CAAEliC,WAAW,GAAhCpG,CAAwCypD,8CCviCjDwE,8MACFhrD,MAAQ,CACJsiB,SAAU,QAGdC,gBAAkB,SAAAr7B,GACdxL,EAAKolC,WAAW55B,EAAMs7B,kBAG1B1B,WAAa,SAAAwB,GACT5mC,EAAK4kB,SAAS,CAAEgiB,gBAGpB2H,YAAc,WACVvuC,EAAK4kB,SAAS,CAAEgiB,SAAU,UAG9BoU,eAAiB,WACbh7C,EAAKuuC,cADc,IAGX/2B,EAAMxX,EAAK0f,MAAXlI,EAEFyjC,EAAOj7C,EAAKuvE,gBAAgB7zC,KAAaznB,YAC/C,GAAKgnC,EAAL,CAEAC,IAAKD,GAEL,IAAMxjC,EAAG,GAAAtM,OAAM8vC,EAAN,uBACHx2C,EAAU+S,EAAE,cAGlBxX,EAAKm7C,sBAAsB1jC,EAAKhT,EAFjB,UAKnB8qE,gBAAkB,SAAAt7D,GACd,IAAKA,EAAY,MAAO,GADI,IAGpBo/B,EAASp/B,EAATo/B,KACR,IAAKA,EAAM,MAAO,GAElB,IAAM4Q,EAAoBC,KAAY9gD,IAAI,YAE1C,OAAQ6gD,EAAoBA,EAAkBxuC,MAAQ,yBAA2B,eAAiB49B,KAGtG8H,sBAAwB,SAAC1jC,EAAKhT,EAASiR,GACnC,GAAK+B,EAAL,CAD8C,IAAAgI,EAGNzf,EAAK0f,MAArC07B,EAHsC37B,EAGtC27B,gBAAiBv6B,EAHqBpB,EAGrBoB,QAHqBpB,EAGZjI,EAClC,GAAK4jC,EAAL,CAII7iC,KAAiB8iC,mBAAmB5jC,EAAK6jC,IAAqC,IAAsB5lC,IAEpG0lC,EAAgB32C,EAAS,CACrB82C,iBAAkBD,IAClB5lC,OAAQ,CACJsK,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACI8W,IAAI,QACJ+vB,aAAW,QACXnlB,MAAM,UACNpC,UAAWY,EAAQkQ,MACnB5Q,QAAS,kBAAM5H,KAAiBijC,sBAAsB/jC,KACtDuI,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,eAOpB6uE,YAAc,WACVxvE,EAAKuuC,cAEL,IAAM0M,EAAOj7C,EAAKuvE,gBAAgB7zC,KAAaznB,YAC1CgnC,IAELj5C,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,WAAY,OAGhBjS,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,CAAEE,oFAIP,IAAAr6B,EAC6BzgB,KAAKuf,MAA/BmB,EADHD,EACGC,QAASrJ,EADZoJ,EACYpJ,EAAGyI,EADfW,EACeX,UACZ2mB,EAAazmC,KAAKmkB,MAAlBsiB,SAER,OACI5mB,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAACy6B,EAAA3mC,EAAD,CACIsf,UAAWY,EAAQ0mB,WAAa,IAAMtnB,EACtCunB,aAAW,QACXp9B,KAAMgT,QAAQwpB,GACdzmB,QAAShgB,KAAK0mC,iBACd7mB,EAAArf,EAAAkM,cAACqzC,GAAAv/C,EAAD,OAEJqf,EAAArf,EAAAkM,cAAC66B,GAAA/mC,EAAD,CACIkC,GAAG,cACH+jC,SAAUA,EACVx8B,KAAMgT,QAAQwpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrB7d,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBL,QAAS1pB,KAAKouC,aACdvuB,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAK66C,gBACpBh7B,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC4iE,GAAA9uE,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CAAc0+B,QAAS7nB,EAAE,eAE7BwI,EAAArf,EAAAkM,cAACyd,GAAA3pB,EAAD,CAAUwf,QAAShgB,KAAKqvE,aACpBxvD,EAAArf,EAAAkM,cAACk7B,GAAApnC,EAAD,KACIqf,EAAArf,EAAAkM,cAAC6iE,GAAA/uE,EAAD,OAEJqf,EAAArf,EAAAkM,cAACo7B,GAAAtnC,EAAD,CAAc0+B,QAAS7nB,EAAE,6BA/Hb4I,IAAMC,WA+I3B4G,GANCC,YACZ7F,IAhJW,SAAAC,GAAK,MAAK,CACrByP,MAAO,CACHrN,QAASpC,EAAMk8B,QAAQC,KAAO,KA8If,CAAEh2B,WAAW,IAChCC,cACAi2B,eAGW12B,CAAQqoD,ICtHjBK,uBACF,SAAAA,EAAYjwD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAwvE,IACf3vE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA0vE,GAAArvE,KAAAH,KAAMuf,KAwBVkwD,iCAAmC,SAAA9uE,GAAU,IACjCmT,EAAeynB,KAAfznB,WAERjU,EAAK4kB,SAAS,CAAE3Q,gBA5BDjU,EA+BnB6vE,6BAA+B,SAAA/uE,GAAU,IAC7BmT,EAAenT,EAAfmT,WAIR,GAFAjU,EAAK4kB,SAAS,CAAE3Q,eAEZA,EAAY,CACZ,IAAMnU,EAAQC,IAAUuD,WACxB0Q,YAAsBlU,EAAOmU,KAtClBjU,EA0CnBuuC,YAAc,WACVvsC,KAAgBgH,aAAa,CACzBC,QAAS,yBACTgL,WAAY,QA7CDjU,EAiDnB+wD,WAAa,WAAM,IACP98C,EAAejU,EAAKskB,MAApBrQ,WACR,GAAKA,EAAL,CAFe,IAIP8nB,EAAiB9nB,EAAjB8nB,aAER/5B,KAAgBgJ,KAAK,CACjB/B,QAAS,mBACTmmB,OAAQnb,EAAWpR,GACnBk5B,cAAeA,IAGnB/7B,EAAKuuC,gBA7DUvuC,EAgEnBooE,mBAAqB,SAAAC,GAAa,IAGxB9iE,EAFiBvF,EAAKskB,MAApBrQ,WACAE,SACiB+sC,KAAK,SAAAt1C,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOwlE,IACpD,GAAK9iE,EAAL,CAEA,IAAMzF,EAAQC,IAAUuD,WACxBiN,YAAmBzQ,EAAOyF,EAAS,MAEXvF,EAAKyoE,oBAAoBJ,GACjC9kE,QAAQ,SAAAqI,GACpB2E,YAAmBzQ,EAAO8L,EAAG,UA3ElB5L,EA+EnByoE,oBAAsB,SAAAJ,GAAa,IACvBp0D,EAAejU,EAAKskB,MAApBrQ,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBE,EAAaF,EAAbE,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMu0D,EAAU,GACVh2D,EAAQyB,EAAS+d,UAAU,SAAAtmB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOwlE,IACvD,IAAe,IAAX31D,EAAc,MAAO,GAEzB,IACMikB,EAAM7R,KAAKC,MAAMrS,EADE,GAEnBkkB,EAASlkB,EAFU,EAInBokB,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdyxC,EAAQ/+D,KAXS,EAWemtB,EAAUG,GAE9CyxC,EAAQ/+D,KAba,EAaWmtB,EAAUF,GACtCM,EAdiB,GAejBwxC,EAAQ/+D,KAfS,EAeemtB,EAAUI,IAI9CD,GAAc,GACdyxC,EAAQ/+D,KApBa,EAoBWgtB,EAAMM,GAEtCC,EAtBqB,GAuBrBwxC,EAAQ/+D,KAvBa,EAuBWgtB,EAAMO,GAGtCH,EAAUjS,KAAKyR,KAAKpiB,EAAShO,OA1BR,KA2BjB8wB,GAAc,GACdyxC,EAAQ/+D,KA5BS,EA4BeotB,EAAUE,GAE9CyxC,EAAQ/+D,KA9Ba,EA8BWotB,EAAUH,GACtCM,EA/BiB,GAgCjBwxC,EAAQ/+D,KAhCS,EAgCeotB,EAAUG,IAI3CwxC,EAAQ/6D,IAAI,SAAA1H,GAAC,OAAIkO,EAASlO,MA9HlBjG,EAiInBulE,gBAAkB,SAAA/5D,GACd,IAAM68D,EAAYn1C,OAAO1nB,EAAMC,OAAOs+B,QAAQs+B,WACzCA,GAEAroE,EAAKilE,YAEVjlE,EAAK4kB,SAAS,CAAEyjD,cAChBroE,EAAKooE,mBAAmBC,KAxITroE,EA2InBslE,gBAAkB,SAAA95D,GACd,IAAM68D,EAAYn1C,OAAO1nB,EAAMC,OAAOs+B,QAAQs+B,WAC9C,GAAKA,EAUL,OARAroE,EAAK4kB,SAAS,CAAEyjD,cAChBroE,EAAKooE,mBAAmBC,GAExBroE,EAAKilE,WAAY,EACjBhgE,SAAS2jE,iBAAiB,UAAW5oE,EAAK6oE,eAE1Cr9D,EAAMsd,iBACNtd,EAAMua,mBACC,GAvJQ/lB,EA0JnB6oE,cAAgB,WACZ7oE,EAAK4kB,SAAS,CAAEyjD,UAAW,IAC3BroE,EAAKilE,WAAY,EACjBhgE,SAAS6jE,oBAAoB,UAAW9oE,EAAK6oE,gBA1J7C7oE,EAAKskB,MAAQ,CACTrQ,WAAYynB,KAAaznB,WACzBo0D,UAAW,GALAroE,qFASGilB,EAAWC,EAAWC,GAAa,IAAAd,EACnBlkB,KAAKmkB,MAA/BrQ,EAD6CoQ,EAC7CpQ,WAAYo0D,EADiChkD,EACjCgkD,UAEpB,OAAOp0D,IAAeiR,EAAUjR,YAAco0D,IAAcnjD,EAAUmjD,sDAItE3sC,KAAa9Z,GAAG,yBAA0BzhB,KAAK0vE,8BAC/Cn0C,KAAa9Z,GAAG,6BAA8BzhB,KAAKyvE,iFAInDl0C,KAAav5B,eAAe,yBAA0BhC,KAAK0vE,8BAC3Dn0C,KAAav5B,eAAe,6BAA8BhC,KAAKyvE,mEA0I1D,IAAAnwD,EACkBtf,KAAKuf,MAApBlI,EADHiI,EACGjI,EAAGqJ,EADNpB,EACMoB,QADNqiB,EAE6B/iC,KAAKmkB,MAA/BrQ,EAFHivB,EAEGjvB,WAAYo0D,EAFfnlC,EAEemlC,UACpB,IAAKp0D,EAAY,OAAO,KAHnB,IAKG8G,EAAkC9G,EAAlC8G,MAAO5G,EAA2BF,EAA3BE,SAAU4nB,EAAiB9nB,EAAjB8nB,aAEnB54B,EAAQgR,EAASxG,IAAI,SAAA/B,GAAC,OACxBoU,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,0BACVxI,IAAK7L,EAAErG,QAAQ1C,GACfmmE,kBAAiBp9D,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAO,GAAIE,OAAQ,KAC5BmQ,EAAArf,EAAAkM,cAAC6f,GAAA,EAAD,CACIjV,IAAK7L,EAAErG,QAAQ1C,GACfod,UAAU,kCACVma,SAAO,EACP70B,QAASqG,EACT2U,YAAa0oD,IACb9uC,MAAM,IAEVna,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iCAAiCrU,EAAEkiB,UAIpDuI,EAAeliB,EAAS+d,UAAU,SAAAtmB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOwlE,IACxD9iE,GAA4B,IAAlB8wB,EAAsBliB,EAASkiB,GAAgB,KAE/D,OACIrW,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACIsf,UAAWY,EAAQsuB,WACnB/kC,MAAI,EACJogB,mBAAoB,EACpBX,QAAS1pB,KAAKouC,YACd9jB,kBAAgB,gCAChB5J,QAAS,CAAE24B,MAAO34B,EAAQ+1C,YAC1B52C,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CACIkC,GAAG,gCACHod,UAAWe,IAAWH,EAAQivD,gBAAT7vE,OAAAymB,EAAA,EAAAzmB,CAAA,GAChB4gB,EAAQkvD,qBAAuB3yD,QAAQ7X,KAE5CwqC,mBAAiB,GACjB/vB,EAAArf,EAAAkM,cAACwiC,GAAA1uC,EAAD,CAAYomB,QAAQ,KAAK9G,UAAWY,EAAQmvB,eAAgBsS,QAAM,GAC7DvnC,GAELiF,EAAArf,EAAAkM,cAACmjE,GAAD,CAAuB/vD,UAAWY,EAAQovD,mBAE9CjwD,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,CACIkgB,QAAS,CAAEgC,KAAMhC,EAAQuuB,aACzBk3B,YAAanmE,KAAKolE,gBAClBgB,WAAYpmE,KAAKqlE,eACjBngC,YAAallC,KAAKmlE,iBACjBniE,GAEL6c,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,CAAesf,UAAWe,IAAW/gB,OAAAymB,EAAA,EAAAzmB,CAAA,GAAG4gB,EAAQkvD,qBAAuB3yD,QAAQ7X,MAC3Eya,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAKouC,aACjC/2B,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQ0hB,MAAM,UAAUlC,QAAShgB,KAAK4wD,YAClBv5C,EAAfukB,EAAiB,iBAAsB,SAG/C3e,QAAQ7X,IAAYya,EAAArf,EAAAkM,cAACs0B,GAAA,EAAD,CAAgB57B,QAASA,YA/N/B6a,IAAMC,YA4OtB4G,GALCC,YACZ7F,IAvQW,SAAAC,GAAK,MAAK,CACrB8tB,YAAa,CACTriC,QAAS,OACTmjE,SAAU,OACV5a,UAAW,IACX5xC,QAAS,cACTmW,WAAY,eAEhB+8B,UAAW,CACPjnD,MAAO,KAEXmgE,gBAAiB,CACb/iE,QAAS,OACTojE,cAAe,MACfpZ,WAAY,UAEhB5nB,WAAY,CACR9sB,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,SAE9B4wC,gBAAiB,CACb7oD,OAAQ,uBAEZ4oB,eAAgB,CACZV,SAAU,EACV8gC,WAAY,GAEhBL,qBAAsB,CAClBtsD,cAAe,WA6OnBiE,cAGWT,CAAQ0oD,IC1KRU,uBA1GX,SAAAA,EAAY3wD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAkwE,IACfrwE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAowE,GAAA/vE,KAAAH,KAAMuf,KAiCV4wD,8BAAgC,SAAAxvE,GAC5Bd,EAAK2hB,eAnCU3hB,EAsCnByxC,qBAAuB,SAAA3wC,GACnBd,EAAK4kB,SAAS,CACVzd,OAAQrG,EAAO4wC,WACftqC,UAAWtG,EAAOioD,iBAzCP/oD,EA6CnBmtE,eAAiB,WACbntE,EAAKuwE,aAAapD,kBA9CHntE,EAiDnBwtE,cAAgB,WACZxtE,EAAKuwE,aAAa/C,iBAlDHxtE,EAqDnBotE,gBAAkB,WACdptE,EAAKuwE,aAAanD,mBAnDlBptE,EAAKskB,MAAQ,CACTnd,OAAQoR,KAAiB08B,YACzB7tC,UAAWmR,KAAiBywC,eAC5BwnB,cAAe,GANJxwE,qFAUGilB,EAAWC,GAC7B,OAAIA,EAAU/d,SAAWhH,KAAKmkB,MAAMnd,SAGhC+d,EAAU9d,YAAcjH,KAAKmkB,MAAMld,WAGnC8d,EAAUsrD,gBAAkBrwE,KAAKmkB,MAAMjF,2DAQ3C9G,KAAiBqJ,GAAG,oCAAqCzhB,KAAKmwE,+BAC9D/3D,KAAiBqJ,GAAG,qBAAsBzhB,KAAKsxC,qEAI/Cl5B,KAAiBpW,eAAe,oCAAqChC,KAAKmwE,+BAC1E/3D,KAAiBpW,eAAe,qBAAsBhC,KAAKsxC,uDA0BtD,IAAA9mC,EAAAxK,KAAAkkB,EAiCwClkB,KAAKmkB,MAA1Cnd,EAjCHkd,EAiCGld,OAAQC,EAjCXid,EAiCWjd,UACRsuD,GAlCHrxC,EAiCsBmsD,cACMj4D,KAAzBm9C,sBAER,OACI11C,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,iBAAkB,CAAEyvD,8BAA+B/a,KAC1E11C,EAAArf,EAAAkM,cAAC6jE,GAAD,MACA1wD,EAAArf,EAAAkM,cAAC8jE,GAAD,CAAQxpE,OAAQA,IAChB6Y,EAAArf,EAAAkM,cAAC+jE,GAAD,CAAcjgB,SAAU,SAAA9vB,GAAG,OAAKl2B,EAAK4lE,aAAe1vC,GAAM15B,OAAQA,EAAQC,UAAWA,IACrF4Y,EAAArf,EAAAkM,cAACopC,GAAA,EAAD,CAAQ9uC,OAAQA,IAChB6Y,EAAArf,EAAAkM,cAACgkE,GAAD,MACA7wD,EAAArf,EAAAkM,cAACikE,GAAD,cArGYzwD,qJCwCb0wD,uBA1CX,SAAAA,EAAYrxD,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA4wE,GAAA9wE,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA8wE,GAAAzwE,KAAAH,KACVuf,0EAGD,IAAAD,EACyBtf,KAAKuf,MAA3BvY,EADHsY,EACGtY,OAAQC,EADXqY,EACWrY,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAMwH,EAASqhB,aAAgB7oB,GACzBw7D,EAAW9zC,aAAY1nB,GAEvBusE,EAAc/kE,EAChB+T,EAAArf,EAAAkM,cAACqT,GAAA,EAAD,CAAiBjU,OAAQA,IAEzB+T,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,IAG7B,OACI6Y,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACV+wD,EACDhxD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAAC4vB,GAAA,EAAD,CAAet1B,OAAQA,EAAQ8E,OAAQA,KAE3C+T,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iCACXD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,gBAAgBggD,cA7B3B7/C,IAAMC,sBCHjC4wD,uBACF,SAAAA,EAAYvxD,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA8wE,IACfjxE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAgxE,GAAA3wE,KAAAH,KAAMuf,KAGVmG,YAAc,SAAAra,GACVA,EAAMua,mBALS/lB,wEAQV,IACG6d,EAAS1d,KAAKuf,MAAd7B,KAER,OACImC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAAgBE,QAAShgB,KAAK0lB,aACzC7F,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,sBAAsBpC,WAd1BuC,IAAMC,YAwBjC4wD,GAAa9vD,aAAe,GAEb8vD,oBClBTC,WAAS9wD,IAAMywB,KAAK,kBAAM/mC,QAAAgnC,IAAA,CAAA5yB,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA/e,KAAA4S,EAAA6yB,KAAA,cAuXjBogC,eApXX,SAAAA,EAAYzxD,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAgxE,IACfnxE,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAkxE,GAAA7wE,KAAAH,KAAMuf,KA+FV0xD,2BAA6B,SAAAtwE,GAAU,IAAA2e,EACLzf,EAAK0f,MAA3BvY,EAD2BsY,EAC3BtY,OAAQC,EADmBqY,EACnBrY,UAEZD,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,WACjDpH,EAAKqxE,uBApGMrxE,EAwGnBqxE,oBAxGmBpxE,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAwGG,SAAAC,IAAA,IAAA+f,EAAAzZ,EAAAC,EAAAgF,EAAAklE,EAAAC,EAAAlwE,EAAAmwE,EAAA,OAAAniD,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAA0f,EACkB5gB,EAAK0f,MAAjCvY,EADUyZ,EACVzZ,OAAQC,EADEwZ,EACFxZ,UAAWgF,EADTwU,EACSxU,KAEtB6hB,aAAgB9mB,EAAQC,GAHX,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAA8vE,EAOYn/D,YAAahL,EAAQC,EAAWgF,GAP5CmlE,EAAAtxE,OAAAy6C,EAAA,EAAAz6C,CAAAqxE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOIlwE,EAPJkwE,EAAA,GAAAvwE,EAAAE,KAAA,EAQUlB,EAAKyxE,iBAAiBpwE,GARhC,OAQZmwE,EARYxwE,EAAAkK,KAUlBlL,EAAK4kB,SAAS,CAAE4sD,kBAVE,wBAAAxwE,EAAAU,SAAAb,MAxGHb,EAqHnByxE,iBAAmB,SAAApwE,GACf,OAAO,IAAIyI,QAAQ,SAAAC,GACf,GAAK1I,EAAL,CAKA,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,IACpC,GAAKyF,EAAL,CAKA,IAAMopE,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAApmE,GAAK,OAAIzB,EAAQ0qC,KAAKo9B,MAAMrmE,EAAMC,OAAOnB,UAC7DonE,EAAWnnE,QAAU,kBAAMR,EAAQ,OACnC2nE,EAAWI,QAAU,kBAAM/nE,EAAQ,OACnC2nE,EAAWK,WAAWzpE,QARlByB,EAAQ,WANRA,EAAQ,SAxHD/J,EA0InB8+D,wBAA0B,SAAAh+D,GAAU,IAAA2nB,EACIzoB,EAAK0f,MAAjCvY,EADwBshB,EACxBthB,OAAQC,EADgBqhB,EAChBrhB,UAAWgF,EADKqc,EACLrc,KAE3B,GAAIjF,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAA4qE,EAC9B7/D,YAAahL,EAAQC,EAAWgF,GADF6lE,EAAAhyE,OAAAy6C,EAAA,EAAAz6C,CAAA+xE,EAAA,GACrDriE,EADqDsiE,EAAA,GAC9CpiE,EAD8CoiE,EAAA,GACtC5wE,EADsC4wE,EAAA,GAE5DjyE,EAAK4kB,SAAS,CACVjV,QACAE,SACAxO,WAlJOrB,EAuJnBkyE,iCAAmC,SAAApxE,GAAU,IAAAmoB,EACXjpB,EAAK0f,MAA3BvY,EADiC8hB,EACjC9hB,OAAQC,EADyB6hB,EACzB7hB,UAEhB,GAAID,IAAWrG,EAAOqG,QAAUC,IAActG,EAAOsG,UAAW,KAAA+qE,EAC9BjgE,YAAoB/K,EAAQC,GADEgrE,EAAAnyE,OAAAy6C,EAAA,EAAAz6C,CAAAkyE,EAAA,GACrDxiE,EADqDyiE,EAAA,GAC9CviE,EAD8CuiE,EAAA,GACtC/wE,EADsC+wE,EAAA,GAE5DpyE,EAAK4kB,SAAS,CACVusB,eAAgBxhC,EAChByhC,gBAAiBvhC,EACjBjJ,UAAWvF,MA/JJrB,EAoKnB+kE,uBAAyB,SAAAjkE,GAAU,IAAA0hC,EACKxiC,EAAK0f,MAAjCvY,EADuBq7B,EACvBr7B,OAAQC,EADeo7B,EACfp7B,UAAWgF,EADIo2B,EACJp2B,KACnB7F,EAAwBzF,EAAxByF,QAASiY,EAAe1d,EAAf0d,WAEjB,GAAIrX,IAAWZ,GAAWa,IAAcoX,EAAY,KAAA6zD,EAClBlgE,YAAahL,EAAQC,EAAWgF,GADdkmE,EAAAryE,OAAAy6C,EAAA,EAAAz6C,CAAAoyE,EAAA,GACzC1iE,EADyC2iE,EAAA,GAClCziE,EADkCyiE,EAAA,GAC1BjxE,EAD0BixE,EAAA,GAE1C7tE,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCyW,EAAOmO,aAAQvnB,GACrBzE,EAAK4kB,SAAS,CACVjV,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAAMA,MAhLC7d,EAqLnBuyE,mBAAqB,SAAA/mE,GACbA,GAAOA,EAAMua,mBAtLF/lB,EAyLnBwyE,YAAc,SAAAC,GACVzyE,EAAK4kB,SAAS,CACV6tD,WAxLJzyE,EAAKy/B,SAAWrf,IAAMogB,YACtBxgC,EAAK0yE,UAAYtyD,IAAMogB,YAJR,IAAA6D,EAMqBrkC,EAAK0f,MAAjCvY,EANOk9B,EAMPl9B,OAAQC,EANDi9B,EAMCj9B,UAAWgF,EANZi4B,EAMYj4B,KANZumE,EAQaxgE,YAAahL,EAAQC,EAAWgF,GAR7CwmE,EAAA3yE,OAAAy6C,EAAA,EAAAz6C,CAAA0yE,EAAA,GAQVhjE,EARUijE,EAAA,GAQH/iE,EARG+iE,EAAA,GAQKvxE,EARLuxE,EAAA,GASfvxE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EATlB,IAAAwxE,EAWoC3gE,YAAoB/K,EAAQC,GAXhE0rE,EAAA7yE,OAAAy6C,EAAA,EAAAz6C,CAAA4yE,EAAA,GAWV1hC,EAXU2hC,EAAA,GAWM1hC,EAXN0hC,EAAA,GAWuBlsE,EAXvBksE,EAAA,GAYflsE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCyW,EAAOmO,aAAQvnB,GAfN,OAoBfzE,EAAKskB,MAAQ,CACTmuD,MAAO,EACPjsC,WAAYr/B,EACZymE,cAAexmE,EACf2rE,WAAW,EACXpjE,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAAMA,EACNszB,eAAgBA,EAChBC,gBAAiBA,EACjBxqC,UAAWA,GAGf5G,EAAKqxE,sBAlCUrxE,mFAqEfD,IAAU6hB,GAAG,2BAA4BzhB,KAAKixE,4BAC9CrxE,IAAU6hB,GAAG,wBAAyBzhB,KAAK2+D,yBAC3C/+D,IAAU6hB,GAAG,wBAAyBzhB,KAAK2+D,yBAC3C/+D,IAAU6hB,GAAG,4BAA6BzhB,KAAK2+D,yBAC/C/+D,IAAU6hB,GAAG,iCAAkCzhB,KAAK+xE,kCACpDnyE,IAAU6hB,GAAG,qCAAsCzhB,KAAK+xE,kCACxDtkE,KAAagU,GAAG,uBAAwBzhB,KAAK4kE,uEAI7ChlE,IAAUoC,eAAe,2BAA4BhC,KAAKixE,4BAC1DrxE,IAAUoC,eAAe,wBAAyBhC,KAAK2+D,yBACvD/+D,IAAUoC,eAAe,wBAAyBhC,KAAK2+D,yBACvD/+D,IAAUoC,eAAe,4BAA6BhC,KAAK2+D,yBAC3D/+D,IAAUoC,eAAe,iCAAkChC,KAAK+xE,kCAChEnyE,IAAUoC,eAAe,qCAAsChC,KAAK+xE,kCACpEtkE,KAAazL,eAAe,uBAAwBhC,KAAK4kE,mEAG1C1/C,EAAWC,EAAWC,GAAU,IAAA4/C,EACjBhlE,KAAKuf,MAA3BvY,EADuCg+D,EACvCh+D,OAAQC,EAD+B+9D,EAC/B/9D,UAEZie,EAAUle,SAAWA,GAAUke,EAAUje,YAAcA,GACvDjH,KAAKkxE,uDAmGJ,IAAA1mE,EAAAxK,KAAAilE,EACyBjlE,KAAKuf,MAA3BvY,EADHi+D,EACGj+D,OAAQC,EADXg+D,EACWh+D,UADXid,EAYDlkB,KAAKmkB,MATLktD,EAHCntD,EAGDmtD,cACA7hE,EAJC0U,EAID1U,MACAE,EALCwU,EAKDxU,OACAshC,EANC9sB,EAMD8sB,eACAC,EAPC/sB,EAOD+sB,gBACA/vC,EARCgjB,EAQDhjB,KACAwc,EATCwG,EASDxG,KACAjX,EAVCyd,EAUDzd,UACAmsE,EAXC1uD,EAWD0uD,UAEJ,IAAK1xE,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CuZ,EAAM9hB,IAAU2I,WAAWJ,IAAS,GAEpC0qE,EAAgBpsE,EAAY7G,IAAUoI,QAAQvB,EAAU/D,KAAO+D,EAAU0B,KAAO,KAChFswB,EAAe74B,IAAU2I,WAAWsqE,GACpC34C,EAAY5E,aAAmB,CAAE9lB,MAAOwhC,EAAgBthC,OAAQuhC,IAEhE6hC,EAAUjlD,aAAe7mB,EAAQC,GACjC8rE,EAAc/kD,aAAmBhnB,EAAQC,GACzC+rE,EAAWllD,aAAgB9mB,EAAQC,GACrCgsE,EAAazjE,EACb0jE,EAAcxjE,EAClB,GAAIiV,KAAKkC,IAAIosD,EAAYC,GAAe,IAAK,CACzC,IAAMtjE,EAAQ,IAAM+U,KAAKkC,IAAIosD,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMvuD,KAAKC,MAAMquD,EAAarjE,IAC7B,IAAM+U,KAAKC,MAAMsuD,EAActjE,GAG5E,IAAIrL,EAAU,KACd,GAAIuuE,EACAvuE,EACIsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAAA,SACIg0B,IAAK1gC,KAAKs/B,SACVxf,UAAU,oCACV4B,IAAKA,EACL1B,QAAShgB,KAAKoyE,mBACdjS,UAAQ,EACRt/B,UAAQ,EACRrxB,MAAOyjE,EACPvjE,OAAQwjE,EACR9S,OAAQ,WACJ51D,EAAKia,SAAS,CAAEmuD,WAAW,IAC3B/wE,KAAgBgH,aAAa,CACzBC,QAAS,iCAGjBu7B,UAAW,WACP,IAAMnR,EAAS1oB,EAAK80B,SAAS/R,QACzB2F,IACAA,EAAOjC,OAASR,KAAYQ,SAGpCovC,QAAS,WACLx+D,KAAgBgH,aAAa,CACzBC,QAAS,kCAGjBy3D,QAAS,WACL1+D,KAAgBgH,aAAa,CACzBC,QAAS,kCAGjBqqE,eAAgB,WACZ,IAAMjgD,EAAS1oB,EAAK80B,SAAS/R,QACzB2F,GACArxB,KAAgBgH,aAAa,CACzBC,QAAS,0BACTmoB,OAAQiC,EAAOjC,aAK7B2hD,KACIlxD,GAAO+W,EACL5Y,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,uCAAwC,CAC1DyZ,gBAAiBJ,IAErBxY,IAAK+W,EACL1W,IAAI,GACJvS,MAAOyjE,EACPvjE,OAAQwjE,IAGZrzD,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,uCACVnT,MAAO,CACH6C,MAAOyjE,EACPvjE,OAAQwjE,YAM7B,GAAIH,EACPxuE,EACIsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAAA,SACIoT,UAAU,oCACV4B,IAAKA,EACL1B,QAAShgB,KAAKoyE,mBACdtxC,MAAI,EACJD,UAAQ,EACRrxB,MAAOyjE,EACPvjE,OAAQwjE,EACR9S,OAAQ,WACJ51D,EAAKia,SAAS,CAAEmuD,WAAW,QAGjCA,KACIlxD,GAAO+W,EACL5Y,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW,uCAAwC,CAC1DyZ,gBAAiBJ,IAErBxY,IAAK+W,EACL1W,IAAI,GACJvS,MAAOyjE,EACPvjE,OAAQwjE,IAGZrzD,EAAArf,EAAAkM,cAAA,OACIoT,UAAU,uCACVnT,MAAO,CACH6C,MAAOyjE,EACPvjE,OAAQwjE,YAM7B,GAAIF,EAAU,CACjB,IAAMI,EAAiB,CACnBtyC,MAAM,EACNuyC,UAAU,EAEVhC,cAAeA,EACfiC,iBAAkB,CACdC,oBAAqB,mBAGrBjB,EAAUtyE,KAAKmkB,MAAfmuD,MAER/tE,EACIsb,EAAArf,EAAAkM,cAACqkE,GAAD,CACIrwC,IAAK1gC,KAAKuyE,UACVD,MAAOA,EACPtpD,QAASoqD,EACT1jE,OAAO,OACPF,MAAO,IACPgkE,WAAW,EACXC,UAAU,SAIlBlvE,EAAUsb,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAShgB,KAAKoyE,qBAGzF,OACIvyD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAACmT,EAAArf,EAAMw0C,SAAP,CAAgBC,SAAS,IAAI1wC,GAE7Bsb,EAAArf,EAAAkM,cAACgrB,GAAA,EAAD,CAAcx2B,KAAMA,EAAMg4B,OAAQ,IACjCxb,GAAQA,EAAK1X,OAAS,GAAK6Z,EAAArf,EAAAkM,cAACgnE,GAAD,CAAch2D,KAAMA,wDAnU5B6B,EAAO4E,GAAO,IAClCnd,EAA4BuY,EAA5BvY,OAAQC,EAAoBsY,EAApBtY,UAAWgF,EAASsT,EAATtT,KAE3B,GAAIjF,IAAWmd,EAAMkiB,YAAcp/B,IAAckd,EAAMspD,cAAe,KAAAkG,EACtC3hE,YAAahL,EAAQC,EAAWgF,GADM2nE,EAAA9zE,OAAAy6C,EAAA,EAAAz6C,CAAA6zE,EAAA,GAC7DnkE,EAD6DokE,EAAA,GACtDlkE,EADsDkkE,EAAA,GAC9C1yE,EAD8C0yE,EAAA,GAElE1yE,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAFiC,IAAA2yE,EAIf9hE,YAAoB/K,EAAQC,GAJb6sE,EAAAh0E,OAAAy6C,EAAA,EAAAz6C,CAAA+zE,EAAA,GAI7D7iC,EAJ6D8iC,EAAA,GAI7C7iC,EAJ6C6iC,EAAA,GAI5BrtE,EAJ4BqtE,EAAA,GAKlErtE,EAAY7G,IAAUqD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAGzC,MAAO,CACHqrE,MAAO,EACPjsC,WAAYr/B,EACZymE,cAAexmE,EACf2rE,WAAW,EACXpjE,MAAOA,EACPE,OAAQA,EACRxO,KAAMA,EACNwc,KAVSmO,aAAQvnB,GAWjB0sC,eAAgBA,EAChBC,gBAAiBA,EACjBxqC,UAAWA,GAInB,OAAO,YAlEkBwZ,IAAMC,WCqBxB6zD,sNA/BXruD,YAAc,SAAAra,GACVA,EAAMua,kBADa,IAAAtG,EAGWzf,EAAK0f,MAA3BooB,EAHWroB,EAGXqoB,SAAU3nB,EAHCV,EAGDU,QAEd2nB,GAEJ3nB,EAAQ3U,4EAGH,IAAAoV,EACgCzgB,KAAKuf,MAAlCooB,EADHlnB,EACGknB,SAAUqsC,EADbvzD,EACauzD,KAAMC,EADnBxzD,EACmBwzD,SAElBn0D,EAAYe,IACd8mB,EAAW,+BAAiC,sBAC5C,CAAEqsC,KAAMA,IAGZ,OACIn0D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWA,EAAWE,QAAShgB,KAAK0lB,aACpCuuD,UArBeh0D,IAAMC,YCyBvBg0D,4LAzBF,IAAA50D,EACuBtf,KAAKuf,MAAzB3E,EADH0E,EACG1E,MAAOomC,EADV1hC,EACU0hC,SAEf,OACInhC,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,4BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCACXD,EAAArf,EAAAkM,cAAA,YAAOkO,GAEHqC,QAAQ+jC,IACJnhC,EAAArf,EAAAkM,cAAA,mBAEKs0C,YAZG/gC,IAAMC,YCCpCi0D,sNACFzuD,YAAc,SAAAra,GACVA,EAAMua,kBADa,IAAAtG,EAGWzf,EAAK0f,MAA3BS,EAHWV,EAGXU,QAHWV,EAGFqoB,UAIjB3nB,EAAQ3U,4EAGH,IAAAoV,EACmDzgB,KAAKuf,MAArDqD,EADHnC,EACGmC,QAASqxD,EADZxzD,EACYwzD,SAAUvzD,EADtBD,EACsBC,QAASinB,EAD/BlnB,EAC+BknB,SAAU/sB,EADzC6F,EACyC7F,MAE9C,OACIiF,EAAArf,EAAAkM,cAAA,OACIoT,UAAWe,IAAW8mB,EAAW,sCAAwC,6BAApD7nC,OAAAymB,EAAA,EAAAzmB,CAAA,GAChB4gB,EAAQkC,QAAUA,IAEvBhI,MAAOA,EACPoF,QAAShgB,KAAK0lB,aACbuuD,UArBqBh0D,IAAMC,YAkC7BgB,OAxCA,SAAAC,GAAK,MAAK,CACrByB,QAAS,CACLV,MAAOf,EAAM8d,QAAQC,QAAQC,QAsCtBje,CAAmBizD,yBCvC5BC,GAAY,CACd7wD,QAAS,GACTrB,MAAO,SAGLmyD,eACF,SAAAA,EAAY90D,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAq0E,IACfx0E,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAu0E,GAAAl0E,KAAAH,KAAMuf,KA4CVo/C,wBAA0B,SAAAh+D,GAAU,IACxBoH,EAAWlI,EAAKskB,MAAhBpc,OAEJA,IAAWpH,EAAOoH,QAClBlI,EAAK4kB,SAAS,CACVkjB,SAAU0sC,EAA0BC,aAAavsE,MAlD1ClI,EA2DnB6lB,YAAc,SAAAra,GACVA,EAAMua,kBADa,IAGX5F,EAAYngB,EAAK0f,MAAjBS,QACangB,EAAKskB,MAAlBwjB,UAGR3nB,EAAQ3U,IAlEO,IAGPtD,EAAWwX,EAAXxX,OAHO,OAKflI,EAAKskB,MAAQ,CACTowD,gBAAiBxsE,EACjBA,OAAQA,EACR4/B,SAAU0sC,EAA0BC,aAAavsE,IARtClI,mFA4BfD,IAAU6hB,GAAG,4BAA6BzhB,KAAK2+D,yBAC/C/+D,IAAU6hB,GAAG,uBAAwBzhB,KAAK2+D,yBAC1C/+D,IAAU6hB,GAAG,2BAA4BzhB,KAAK2+D,yBAC9C/+D,IAAU6hB,GAAG,wBAAyBzhB,KAAK2+D,yBAC3C/+D,IAAU6hB,GAAG,uBAAwBzhB,KAAK2+D,yBAC1C/+D,IAAU6hB,GAAG,wBAAyBzhB,KAAK2+D,wEAI3C/+D,IAAUoC,eAAe,4BAA6BhC,KAAK2+D,yBAC3D/+D,IAAUoC,eAAe,uBAAwBhC,KAAK2+D,yBACtD/+D,IAAUoC,eAAe,2BAA4BhC,KAAK2+D,yBAC1D/+D,IAAUoC,eAAe,wBAAyBhC,KAAK2+D,yBACvD/+D,IAAUoC,eAAe,uBAAwBhC,KAAK2+D,yBACtD/+D,IAAUoC,eAAe,wBAAyBhC,KAAK2+D,0DA2BlD,IACG/jD,EAAU5a,KAAKuf,MAAf3E,MACA+sB,EAAa3nC,KAAKmkB,MAAlBwjB,SAER,OACI9nB,EAAArf,EAAAkM,cAAC8nE,GAAD,CAAyB7sC,SAAUA,EAAU/sB,MAAOA,EAAOoF,QAAShgB,KAAK0lB,aACrE7F,EAAArf,EAAAkM,cAAC+nE,GAAAj0E,EAAD,CAAUmM,MAAOynE,yDA/DG70D,EAAO4E,GAAO,IAClCpc,EAAWwX,EAAXxX,OAGR,OAAIA,IAFwBoc,EAApBowD,gBAGG,CACHA,gBAAiBxsE,EACjBA,OAAQA,EACR4/B,SAAU0sC,EAA0BC,aAAavsE,IAIlD,YAzByBkY,IAAMC,WAAxCm0D,GAwDKC,aAAe,SAAAvsE,GAClB,OAAQkV,QAAQrd,IAAUoI,QAAQD,KA+B3BssE,UC7CTK,WAAmB,CACrBnxD,QAAS,GACToxD,UAAW,eAGTP,GAAY,CACd7wD,QAAS,IAGPqxD,GAAsB,CACxBrxD,QAAS,IAGPsxD,eACF,SAAAA,EAAYt1D,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA60E,IACfh1E,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+0E,GAAA10E,KAAAH,KAAMuf,KA4FVksB,UAAY,SAAApgC,GACR,GAAsB,KAAlBA,EAAM+9B,QAAgB,CAEtB,GADqCvpC,EAAKskB,MAAlC2wD,yBACsB,OAE9Bj1E,EAAKuuC,mBACoB,KAAlB/iC,EAAM+9B,QACbvpC,EAAKm/D,aACoB,KAAlB3zD,EAAM+9B,SACbvpC,EAAKk1E,kBAtGMl1E,EA0GnB+kE,uBAAyB,SAAAjkE,GAAU,IACvByF,EAAkDzF,EAAlDyF,QAASiY,EAAyC1d,EAAzC0d,WAAYK,EAA6B/d,EAA7B+d,YAAaD,EAAgB9d,EAAhB8d,YAClCzX,EAAWnH,EAAK0f,MAAhBvY,OAFuBkd,EAGUrkB,EAAKskB,MAAtC6wD,EAHuB9wD,EAGvB8wD,iBAAkBviD,EAHKvO,EAGLuO,WAE1B,GAAIzrB,IAAWZ,EAAf,CAEA,IAAM9B,EAAUmJ,KAAaxK,IAAImD,EAASiY,GAC1C,GAAK/Z,EAAL,CAKA,GAHA8N,YAAuB,CAAC9N,IAELspB,aAAelP,KAAiBkP,aAAenP,GAClD,CACZ,GACI5e,EAAK2S,QAAQxM,QAAU,IACtBnG,EAAKo1E,kBACFC,aAAQ72D,EAAYxe,EAAK2S,QAAQ,GAAG9P,GAAI7C,EAAK2S,QAAQ3S,EAAK2S,QAAQxM,OAAS,GAAGtD,KACpF,CAGE,IAFA,IAAIyyE,GAAW,EACX3iE,EAAU,GACL1M,EAAI,EAAGA,EAAIjG,EAAK2S,QAAQxM,OAAQF,IACjCjG,EAAK2S,QAAQ1M,GAAGpD,GAAK2b,EACrB7L,EAAQhJ,KAAK3J,EAAK2S,QAAQ1M,KAErBqvE,IACDA,GAAW,EACX3iE,EAAQhJ,KAAKlF,IAEjBkO,EAAQhJ,KAAK3J,EAAK2S,QAAQ1M,KAGlCjG,EAAK2S,QAAUA,EAGnB,IAAMD,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IACnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxCkgB,WAAYA,EAAa,IAKjC,IADuB7E,aAAelP,IAAgBkP,aAAenP,GAClD,CACf,IAAI62D,EAAaz1E,EAAK2S,QAGtB,GAFA3S,EAAK2S,QAAU3S,EAAK2S,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAO2b,IAE7C22D,IAAqB32D,EAAY,CACjC,IAAMk3D,EAAY,IAAIrsE,IACtBqsE,EAAUt0E,IAAIod,EAAYA,GAE1Bxe,EAAK0xB,gBAAgB+jD,EAAYC,GACjC11E,EAAK4kB,SAAS,CACVgO,WAAY9N,KAAKkC,IAAI4L,EAAa,EAAG,SAEtC,CACH,IAAMlgB,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IACnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxCkgB,WAAY9N,KAAKkC,IAAI4L,EAAa,EAAG,UAvKlC5yB,EA6KnB+rE,uBAAyB,SAAAjrE,GAAU,IACvByF,EAAuCzF,EAAvCyF,QAASwF,EAA8BjL,EAA9BiL,YAAaigE,EAAiBlrE,EAAjBkrE,aACtB7kE,EAAWnH,EAAK0f,MAAhBvY,OAFuB+7B,EAGUljC,EAAKskB,MAAtC6wD,EAHuBjyC,EAGvBiyC,iBAAkBviD,EAHKsQ,EAGLtQ,WAE1B,GAAKo5C,GACD7kE,IAAWZ,EAAf,CAEA,IAAMmvE,EAAY3pE,EAAYyhB,OAAO,SAACC,EAAakoD,GAE/C,OADAloD,EAAYrsB,IAAIu0E,EAAWA,GACpBloD,GACR,IAAIpkB,KAEDosE,EAAaz1E,EAAK2S,QACpBijE,EAAeH,EAAWtvE,OAE9BnG,EAAK2S,QAAU3S,EAAK2S,QAAQ9G,OAAO,SAAAD,GAAC,OAAK8pE,EAAUzyE,IAAI2I,EAAE/I,MACzD+yE,GAAgB51E,EAAK2S,QAAQxM,OAE7BnG,EAAK4kB,SAAS,CAAEgO,WAAY9N,KAAKkC,IAAI4L,EAAagjD,EAAc,KAE3D51E,EAAK2S,QAAQxM,OAKduvE,EAAUzyE,IAAIkyE,IACdn1E,EAAK0xB,gBAAgB+jD,EAAYC,GALjCn9D,KAAiBwW,sBAAsB,QAnM5B/uB,EA4MnB4rE,mBAAqB,SAAA9qE,GAAU,IACnBqG,EAAWnH,EAAK0f,MAAhBvY,OADmBg8B,EAEcnjC,EAAKskB,MAAtC6wD,EAFmBhyC,EAEnBgyC,iBAAkBviD,EAFCuQ,EAEDvQ,WAElBnuB,EAAY3D,EAAZ2D,QACR,GAAKA,GACAspB,aAAetpB,EAAQC,UAExBD,EAAQ8B,UAAYY,GACnBnH,EAAKo1E,iBAAV,CAEAp1E,EAAK2S,QAAU,CAAClO,GAAS0G,OAAOnL,EAAK2S,SACrC,IAAMD,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAEnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxCkgB,WAAYA,EAAa,MA7Nd5yB,EAiOnB61E,UAAY,SAAC1uE,EAAQC,GACjB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAFU,IAIvBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACHuE,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAjJ,EA8PnB81E,YA9PmB71E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA8PL,SAAAC,IAAA,IAAA4e,EAAAtY,EAAAC,EAAAyE,EAAAvB,EAAA6qE,EAAAziE,EAAAqjE,EAAAC,EAAAn8D,EAAAo8D,EAAA,OAAA5mD,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAue,EACoBzf,EAAK0f,MAA3BvY,EADEsY,EACFtY,OAAQC,EADNqY,EACMrY,UAEVyE,EAAS7L,EAAK61E,UAAU1uE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVglB,YAAa,IAEb7mB,EAVM,CAAAvJ,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAWSc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO,GACPvhB,eAAgB,EAChBwhB,gBAAiB1rB,EACjBokB,QAAS0qD,IACTnjD,MAAO,EAAImjD,IACXrqE,OAAQA,IAnBN,OAWNvB,EAXMhI,EAAA4I,KAAA,UAuBVqiB,aAAejjB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAUrI,EAAOoD,SACtB1N,EAAKo1E,iBAA8C,IAA3B9qE,EAAOoD,SAASvH,OAEhCgvE,EAAqBn1E,EAAKskB,MAA1B6wD,iBACFziE,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAEnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,MAG7B,IAAXA,EArCM,CAAApQ,EAAApB,KAAA,SAsCNlB,EAAK2S,QAAU,CAAC/E,KAAaxK,IAAI+D,EAAQguE,IACzCviE,YAA0B,EAAG5S,EAAK2S,SAvC5BrQ,EAAApB,KAAA,oBAyCN0R,YAA0BF,EAAO1S,EAAK2S,SAEhC9G,EAAS7L,EAAK61E,UAAU1uE,EAAQC,GA3ChC,CAAA9E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA8CAw0E,EAAW,KACbn8D,EAAQ,EA/CNo8D,EAAA5mD,EAAA1uB,EAAAC,KAAA,SAAAq1E,IAAA,IAAA3rE,EAAA6qE,EAAAziE,EAAA,OAAA2c,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmBc,KAAgBgJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO,GACPvhB,eAAgB,EAChBwhB,gBAAiB9yB,EAAK2S,QAAQxM,OAAS,EAAInG,EAAK2S,QAAQ,GAAG9P,GAAK,EAChE2oB,QAAS,GACTuH,MAAO,IACPlnB,OAAQA,IAzDV,OAiDIvB,EAjDJtJ,EAAAkK,KA2DF2O,GAASvP,EAAOoD,SAASvH,OAEzBonB,aAAejjB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAUrI,EAAOoD,SAASvC,OAAOnL,EAAK2S,SAC3C3S,EAAKo1E,iBAA8C,IAA3B9qE,EAAOoD,SAASvH,OAEhCgvE,EAAqBn1E,EAAKskB,MAA1B6wD,iBACFziE,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAEnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxC0iE,iBAAkBp1E,EAAKo1E,iBACvBxiD,WAAYtoB,EAAOooB,cA1ErB,yBAAA1xB,EAAAU,SAAAu0E,KAAA,WAgDEj2E,EAAKo1E,oBAAoBv7D,EAAQm8D,GAhDnC,CAAA1zE,EAAApB,KAAA,gBAAAoB,EAAA6zE,cAAAF,IAAA,iBAAA3zE,EAAApB,KAAA,kCAAAoB,EAAAZ,SAAAb,MA9PKb,EA8UnBuuC,YAAc,WACVh2B,KAAiBwW,sBAAsB,MADvB,IAGRomD,EAAqBn1E,EAAKskB,MAA1B6wD,iBACFziE,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,KACpC,IAAXziE,GACAD,YAAgCC,EAAO1S,EAAK2S,UApVjC3S,EAwVnBo2E,cAAgB,SAACzxE,EAAWF,GACxB,GAAKA,EAAL,CADoC,IAE5B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK8B,EAAL,CAJoC,IAMjBtD,EAAoBsD,EAA/BA,UAAiBkpB,EAAclpB,EAAdkpB,UACzB,GAAKxsB,EAAL,CAPoC,IASxB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAMwsB,GAAahrB,EAAI4B,EAAS,kBAAM1E,IAAUiI,oBAAoBzB,EAAS1D,EAAIqF,SAnWjFlI,EAsWnBq2E,aAAe,SAACpxE,EAAUR,GACtB,GAAKA,EAAL,CADkC,IAE1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKoC,EAAL,CAJkC,IAMhB5D,EAAoB4D,EAA9BA,SAAgB4oB,EAAc5oB,EAAd4oB,UACxB,GAAKxsB,EAAL,CAPkC,IAStB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAMwsB,GAAahrB,EAAI4B,EAAS,kBAAM1E,IAAU+G,mBAAmBP,EAAS1D,EAAIqF,SAjXhFlI,EAoXnBs2E,UAAY,SAAC7wE,EAAOhB,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK4C,EAAL,CAJ4B,IAMbpE,EAAoBoE,EAA3BA,MAAaooB,EAAcpoB,EAAdooB,UACrB,GAAKxsB,EAAL,CAP4B,IAShB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAMwsB,GAAahrB,EAAI4B,EAAS,kBAAM1E,IAAU+H,gBAAgBvB,EAAS1D,EAAIqF,SA/X7ElI,EAkYnBu2E,UAAY,SAACxxE,EAAON,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKkC,EAAL,CAEA,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOiK,KACvC,GAAK/J,EAAL,CAP4B,IASb/E,EAAS+E,EAAhBrB,MACR,GAAK1D,EAAL,CAV4B,IAYhB6G,EAAW7G,EAAfwB,GAER+O,YAAevQ,EAAMA,EAAKwB,GAAK,OAAQ4B,EAAS,kBAAM1E,IAAUuG,gBAAgBC,EAAS1D,EAAIqF,UAhZ9ElI,EAmZnBw2E,WAAa,WAAM,IACPrvE,EAAWnH,EAAK0f,MAAhBvY,OACAguE,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEF1wE,EAAUmJ,KAAaxK,IAAI+D,EAAQguE,GACzC,GAAK1wE,EAAL,CALe,IAOPC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER3E,EAAKo2E,cAAczxE,EAAWF,GAC9B,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAER/E,EAAKu2E,UAAUxxE,EAAON,GACtB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERjF,EAAKq2E,aAAapxE,EAAUR,GAC5B,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAER/E,EAAKu2E,UAAUxxE,EAAON,GACtB,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,OAFC,IAIRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAEpC,GAAId,EAEA,YADA3E,EAAKo2E,cAAczxE,EAAWF,GAIlC,GAAIQ,EAEA,YADAjF,EAAKq2E,aAAapxE,EAAUR,GAIhC,GAAIM,EAEA,YADA/E,EAAKu2E,UAAUxxE,EAAON,GAI1B,GAAIgB,EAEA,YADAzF,EAAKs2E,UAAU7wE,EAAOhB,GAG1B,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAERzF,EAAKs2E,UAAU7wE,EAAOhB,MApdfzE,EA0dnBw3D,cAAgB,WAAM,IACVrwD,EAAWnH,EAAK0f,MAAhBvY,OACAguE,EAAqBn1E,EAAKskB,MAA1B6wD,iBAERnzE,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,CACF5zC,OAAQA,EACRsG,WAAY,CAAC0nE,OAleNn1E,EAuenB4pC,aAAe,WACX5pC,EAAKy2E,oBAxeUz2E,EAigBnBw1E,iBAAmB,SAAA9iE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP1S,EAAK2S,QAAQxM,QArgBjBnG,EAwgBnBk1E,eAAiB,SAAA1pE,GACTA,GACAA,EAAMua,kBAFY,IAKdovD,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEF9iD,EADQryB,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IACzB,EAE1B,OAAOn1E,EAAK02E,UAAUrkD,EAAW,WACzBA,IAAcryB,EAAK2S,QAAQxM,OAAS,GACpCnG,EAAK22E,kBAnhBE32E,EAwhBnB22E,aAxhBmB12E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAwhBJ,SAAAyB,IAAA,IAAAomB,EAAAthB,EAAAC,EAAA+tE,EAAAtpE,EAAAvB,EAAAoI,EAAA,OAAA2c,EAAA1uB,EAAAI,KAAA,SAAA4qD,GAAA,cAAAA,EAAA1qD,KAAA0qD,EAAAzqD,MAAA,UAAAunB,EACmBzoB,EAAK0f,MAA3BvY,EADGshB,EACHthB,OAAQC,EADLqhB,EACKrhB,UACR+tE,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEFtpE,EAAS7L,EAAK61E,UAAU1uE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVglB,YAAa,IAEb7mB,EAXO,CAAA8/C,EAAAzqD,KAAA,eAAAyqD,EAAAzqD,KAAA,EAYQc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO,GACPvhB,eAAgB,EAChBwhB,gBAAiBqiD,EACjB3pD,OAAQ,EACRuH,MAAOmjD,IACPrqE,OAAQA,IApBL,OAYPvB,EAZOqhD,EAAAzgD,KAAA,OAwBXqiB,aAAejjB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAK2S,QAAU3S,EAAK2S,QAAQxH,OAAOb,EAAOoD,UAEpCgF,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAEnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxCkgB,WAAYtoB,EAAOooB,cAlCZ,yBAAAi5B,EAAAjqD,SAAAW,MAxhBIrC,EA8jBnBu1E,aAAe,SAAA7iE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL1S,EAqkBnBm/D,WAAa,SAAA3zD,GACLA,GACAA,EAAMua,kBAFQ,IAKVovD,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEF9iD,EADQryB,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IACzB,EAE1B,OAAOn1E,EAAK02E,UAAUrkD,EAAW,WACX,IAAdA,GACAryB,EAAK42E,cAhlBE52E,EAqlBnB42E,SArlBmB32E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAqlBR,SAAA8qD,IAAA,IAAAziC,EAAA9hB,EAAAC,EAAA+tE,EAAAtpE,EAAAvB,EAAAoI,EAAA,OAAA2c,EAAA1uB,EAAAI,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAAA+nB,EACuBjpB,EAAK0f,MAA3BvY,EADD8hB,EACC9hB,OAAQC,EADT6hB,EACS7hB,UACR+tE,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEFtpE,EAAS7L,EAAK61E,UAAU1uE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVglB,YAAa,IAEb7mB,EAXG,CAAAd,EAAA7J,KAAA,eAAA6J,EAAA7J,KAAA,EAYYc,KAAgBgJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACT0rB,MAAO,GACPvhB,eAAgB,EAChBwhB,gBAAiBqiD,EACjB3pD,QAAS0qD,IACTnjD,MAAOmjD,IAAoB,EAC3BrqE,OAAQA,IApBT,OAYHvB,EAZGS,EAAAG,KAAA,OAwBPqiB,aAAejjB,EAAQtK,EAAK2S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B1N,EAAKo1E,iBAA8C,IAA3B9qE,EAAOoD,SAASvH,OACxCnG,EAAK2S,QAAUrI,EAAOoD,SAASvC,OAAOnL,EAAK2S,SAErCD,EAAQ1S,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAEnDn1E,EAAK4kB,SAAS,CACV2wD,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,GACxC0iE,iBAAkBp1E,EAAKo1E,iBACvBxiD,WAAYtoB,EAAOooB,cApChB,yBAAA3nB,EAAArJ,SAAAgqD,MArlBQ1rD,EA6nBnB02E,UAAY,SAAChkE,EAAOlJ,GAChB,QAAIkJ,EAAQ,OACRA,GAAS1S,EAAK2S,QAAQxM,UAE1BnG,EAAK4kB,SACD,CACIuwD,iBAAkBn1E,EAAK2S,QAAQD,GAAO7P,GACtC0yE,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,IAE5ClJ,GAGJoJ,YAA0BF,EAAO1S,EAAK2S,UAC/B,KA3oBQ3S,EA8oBnB0xB,gBAAkB,SAAC+jD,EAAYC,GAK3B,IALyC,IACjCP,EAAqBn1E,EAAKskB,MAA1B6wD,iBAEFziE,EAAQ+iE,EAAWvjD,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,IAC7C0B,EAAS,EACJ5wE,EAAIyM,EAAQ,EAAGzM,GAAK,EAAGA,IAC5B,GAAIyvE,IAAcA,EAAUzyE,IAAIwyE,EAAWxvE,GAAGpD,IAAK,CAC/Cg0E,EAASpB,EAAWxvE,GAAGpD,GACvB,MAGR,IAAKg0E,EACD,IAAK,IAAI5wE,EAAIyM,EAAQ,EAAGzM,EAAIwvE,EAAWtvE,OAAQF,IAC3C,GAAIyvE,IAAcA,EAAUzyE,IAAIwyE,EAAWxvE,GAAGpD,IAAK,CAC/Cg0E,EAASpB,EAAWxvE,GAAGpD,GACvB,MAKZ,GAAKg0E,EAAL,CAEA,IAAMxkD,EAAYryB,EAAK2S,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOg0E,IAEvD,OAAO72E,EAAK02E,UAAUrkD,EAAW,WACX,IAAdA,EACAryB,EAAK42E,WACEvkD,IAAcryB,EAAK2S,QAAQxM,OAAS,GAC3CnG,EAAK22E,mBA1qBE32E,EA+qBnBy2E,iBAAmB,WACfz2E,EAAK4kB,SAAS,CAAEqwD,0BAA0B,KAhrB3Bj1E,EAmrBnB82E,kBAAoB,WAChB92E,EAAK4kB,SAAS,CAAEqwD,0BAA0B,KAprB3Bj1E,EAurBnB+wD,WAAa,WACT/wD,EAAK4kB,SAAS,CAAEqwD,0BAA0B,IAD3B,IAGP9tE,EAAWnH,EAAK0f,MAAhBvY,OAHOq8B,EAI4BxjC,EAAKskB,MAAxC6wD,EAJO3xC,EAIP2xC,iBAAkB4B,EAJXvzC,EAIWuzC,aAEpBtyE,EAAUmJ,KAAaxK,IAAI+D,EAAQguE,GACzC,GAAK1wE,EAAL,CAPe,IASP+zD,EAA+D/zD,EAA/D+zD,6BAA8BrB,EAAiC1yD,EAAjC0yD,8BACjBqB,GAAgCrB,IAGrDn1D,KAAgBgJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASY,EACT4E,YAAa,CAACopE,GACdnpE,OAAQmrD,GAAgC4f,MAxsB7B/2E,EA4sBnBg3E,yBAA2B,SAAAxrE,GACvBxL,EAAK4kB,SAAS,CAAEmyD,aAAcvrE,EAAMC,OAAOsX,WA7sB5B/iB,EAgtBnBi3E,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuBl3E,EAAKskB,MAApBuV,YAIJ,IAAK,uBACDq9C,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzBl3E,EAAK4kB,SAAS,CACViV,WAAYq9C,KApuBDl3E,EAwuBnBm3E,kBAAoB,WAChB,GAAKn3E,EAAKo3E,WAAV,CADsB,IAGd1pD,EAAY1tB,EAAKo3E,WAAjB1pD,QACR,GAAKA,EAAL,CAJsB,IAOhB2pD,EADYr3E,EAAKskB,MAAfmuD,MACkB,EAAI,EAAI,GAElCzyE,EAAK4kB,SAAS,CAAE6tD,MAAO4E,IAEvB3pD,EAAQ8kD,YAAY6E,MAnvBLr3E,EAsvBnBy4D,eAAiB,SAACtxD,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFe,IAI5Bi3C,EAA8Bj3C,EAA9Bi3C,iBAAkBh3C,EAAYD,EAAZC,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOg3C,IA/vBf17C,EAAKo3E,WAAah3D,IAAMogB,YACxBxgC,EAAK2S,QAAU,GAJA,IAAA6vB,EAMexiC,EAAK0f,MAA3BvY,EANOq7B,EAMPr7B,OAAQC,EANDo7B,EAMCp7B,UAND,OAQfpH,EAAKskB,MAAQ,CACTmuD,MAAO,EACP54C,WAAY,uBACZ2M,WAAYr/B,EACZymE,cAAexmE,EACf+tE,iBAAkB/tE,EAClBmuE,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,EAC1B8B,cAAc,GAjBH/2E,qFAqBGilB,EAAWC,GAAW,IAAAmf,EACVlkC,KAAKuf,MAA3BvY,EADgCk9B,EAChCl9B,OAAQC,EADwBi9B,EACxBj9B,UADwBq8B,EAWpCtjC,KAAKmkB,MARLuV,EAHoC4J,EAGpC5J,WACAs7C,EAJoC1xC,EAIpC0xC,iBACAF,EALoCxxC,EAKpCwxC,yBACAG,EANoC3xC,EAMpC2xC,iBACAG,EAPoC9xC,EAOpC8xC,aACAC,EARoC/xC,EAQpC+xC,iBACA/C,EAToChvC,EASpCgvC,MACA7/C,EAVoC6Q,EAUpC7Q,WAGJ,OAAI1N,EAAU2U,aAAeA,IAIzB5U,EAAU9d,SAAWA,IAIrB8d,EAAU7d,YAAcA,IAIxB8d,EAAUiwD,mBAAqBA,IAI/BjwD,EAAUoyD,kBAAoB9B,IAI9BtwD,EAAUqwD,eAAiBA,IAI3BrwD,EAAUkwD,mBAAqBA,IAI/BlwD,EAAU0N,aAAeA,IAIzB1N,EAAU+vD,2BAA6BA,GAIvC/vD,EAAUutD,QAAUA,sDAQxBtyE,KAAK21E,cAEL7wE,SAAS2jE,iBAAiB,UAAWzoE,KAAKyrC,WAAW,GACrDh+B,KAAagU,GAAG,uBAAwBzhB,KAAK4rE,wBAC7Cn+D,KAAagU,GAAG,mBAAoBzhB,KAAKyrE,oBACzCh+D,KAAagU,GAAG,uBAAwBzhB,KAAK4kE,uEAI7C9/D,SAAS6jE,oBAAoB,UAAW3oE,KAAKyrC,WAAW,GACxDh+B,KAAazL,eAAe,uBAAwBhC,KAAK4rE,wBACzDn+D,KAAazL,eAAe,mBAAoBhC,KAAKyrE,oBACrDh+D,KAAazL,eAAe,uBAAwBhC,KAAK4kE,yDA6qBpD,IAAAI,EACiBhlE,KAAKuf,MAAnBvY,EADHg+D,EACGh+D,OAAQqQ,EADX2tD,EACW3tD,EADX+/D,EAYDp3E,KAAKmkB,MATLuV,EAHC09C,EAGD19C,WACAs7C,EAJCoC,EAIDpC,iBACAF,EALCsC,EAKDtC,yBACA8B,EANCQ,EAMDR,aACA3B,EAPCmC,EAODnC,iBACAG,EARCgC,EAQDhC,aACAC,EATC+B,EASD/B,iBACA/C,EAVC8E,EAUD9E,MACA7/C,EAXC2kD,EAWD3kD,WAGAlgB,GAAS,EACTkgB,GAAcwiD,IACd1iE,EAAQvS,KAAKwS,QAAQuf,UAAU,SAAAtmB,GAAC,OAAIA,EAAE/I,KAAOsyE,KAEjD,IAAMa,EAAWlxD,KAAKkC,IAAI7mB,KAAKwS,QAAQxM,OAAQysB,GAEzCnuB,EAAUmJ,KAAaxK,IAAI+D,EAAQguE,GACjChe,EAA+D1yD,EAA/D0yD,6BAA8BqB,EAAiC/zD,EAAjC+zD,6BAEhCP,EAAed,GAAgCqB,EAC/CC,EAAiBt4D,KAAKs4D,eAAetxD,EAAQguE,GAE/CqC,EAA4B,GAE5BA,EADAxpD,aAAe7mB,EAAQguE,GACK39D,EAAE,yBACvB2W,aAAmBhnB,EAAQguE,GACN39D,EAAE,uBAEFA,EAAE,yBAElC,IAAMigE,EAAqBxC,EACvBj1D,EAAArf,EAAAkM,cAAC0d,EAAA5pB,EAAD,CACI6pB,mBAAoB,EACpBpgB,KAAM6qE,EACNprD,QAAS1pB,KAAK22E,kBACdrsD,kBAAgB,qBAChBzK,EAAArf,EAAAkM,cAAC6d,EAAA/pB,EAAD,CAAakC,GAAG,qBAAqB2U,EAAE,YACvCwI,EAAArf,EAAAkM,cAAC8d,GAAAhqB,EAAD,KACIqf,EAAArf,EAAAkM,cAAC+d,GAAAjqB,EAAD,KAAoB62E,GACnBrgB,GACGn3C,EAAArf,EAAAkM,cAAC0hD,GAAA5tD,EAAD,CACIsmD,MAAOzvC,EAAE,gBACTg3C,QACIxuC,EAAArf,EAAAkM,cAACssD,GAAAx4D,EAAD,CAAU0hB,MAAM,UAAU5M,MAAM,YAAYiN,SAAUviB,KAAK62E,2BAE/Dj0D,QAASg0D,KAIrB/2D,EAAArf,EAAAkM,cAACge,EAAAlqB,EAAD,KACIqf,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAK22E,kBAAmBz0D,MAAM,WAC1C7K,EAAE,WAEPwI,EAAArf,EAAAkM,cAACie,EAAAnqB,EAAD,CAAQwf,QAAShgB,KAAK4wD,WAAY1uC,MAAM,WACnC7K,EAAE,SAIf,KA9DC85D,EAgEyBn/D,YAAahL,EAAQguE,EAAkBhlE,KAhEhEohE,EAAAtxE,OAAAy6C,EAAA,EAAAz6C,CAAAqxE,EAAA,GAgEiBjwE,GAhEjBkwE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkECrpE,EAAS7G,EAAOA,EAAKwB,GAAK,EAC5BkY,EAAQvD,EAAE,eASd,OARIwW,aAAe7mB,EAAQguE,GACvBp6D,EAAQvD,EAAE,eACH2W,aAAmBhnB,EAAQguE,GAClCp6D,EAAQvD,EAAE,aACHyW,aAAgB9mB,EAAQguE,KAC/Bp6D,EAAQ,IAIRiF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAW,eAAgB6Y,IACtC49C,EACDz3D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBAAuBE,QAAShgB,KAAK+0E,gBAChDl1D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,4BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCACfD,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmB5vC,UAAW0tC,EAAkBrB,MAAI,EAACh0D,QAAShgB,KAAK+0E,gBAC/Dl1D,EAAArf,EAAAkM,cAAC8qE,GAAAh3E,EAAD,CAAoByhB,SAAS,QAAQtV,MAAOioE,OAIpD/0D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BACXD,EAAArf,EAAAkM,cAAC+qE,GAAD,CACI/2C,IAAK1gC,KAAKi3E,WACVjwE,OAAQA,EACRC,UAAW+tE,EACX/oE,KAAM+D,IACNgQ,QAAShgB,KAAK+0E,kBAItBl1D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BACXD,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmBv3D,QAAShgB,KAAKouC,aAC7BvuB,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,CAAWyhB,SAAS,QAAQtV,MAAOioE,MAEvC/0D,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmB5vC,UAAWytC,EAAcpB,MAAI,EAACh0D,QAAShgB,KAAKg/D,YAC3Dn/C,EAAArf,EAAAkM,cAACgrE,GAAAl3E,EAAD,CAAkByhB,SAAS,QAAQtV,MAAOioE,QAItD/0D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAACirE,GAAD,CAAoB3wE,OAAQA,EAAQC,UAAW+tE,IAC/Cn1D,EAAArf,EAAAkM,cAACkrE,GAAD,CACIh9D,MAAOA,EACPomC,SAAU60B,GAAYtjE,GAAS,EAArB,GAAAvH,OAA4B6qE,EAAWtjE,EAAvC,QAAAvH,OAAmD6qE,GAAa,OAE7E/nD,aAAgB9mB,EAAQguE,IACrBn1D,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAC8nE,GAAD,CACI55D,MAAOvD,EAAE,eACTuL,QAAS0vD,EAAQ,EACjBtyD,QAAShgB,KAAKg3E,mBACdn3D,EAAArf,EAAAkM,cAACmrE,GAAAr3E,EAAD,CAAqBmM,MAAOynE,MAEhCv0D,EAAArf,EAAAkM,cAAC8nE,GAAD,CACI55D,MAAOvD,EAAE,yBACT2I,QAAShgB,KAAK82E,oBACdj3D,EAAArf,EAAAkM,cAACorE,GAAAt3E,EAAD,CAAkBmM,MAAOynE,OAIrCv0D,EAAArf,EAAAkM,cAACqrE,GAAD,CAA2Bn9D,MAAOvD,EAAE,QAAStP,OAAQA,EAAQiY,QAAShgB,KAAKq2E,aAC3Ex2D,EAAArf,EAAAkM,cAAC8nE,GAAD,CACI55D,MAAOvD,EAAE,WACTswB,UAAW2wB,EACXt4C,QAAShgB,KAAKq3D,eACdx3C,EAAArf,EAAAkM,cAACqjC,GAAAvvC,EAAD,CAAWmM,MAAO+nE,MAEtB70D,EAAArf,EAAAkM,cAAC8nE,GAAD,CAAyB55D,MAAOvD,EAAE,UAAWswB,UAAWmwB,EAAc93C,QAAShgB,KAAKypC,cAChF5pB,EAAArf,EAAAkM,cAACsrE,GAAAx3E,EAAD,CAAYmM,MAAOynE,eA/4BjBn0D,IAAMC,WA45BjBqH,iBAAkBstD,ICz3BlBoD,uBA9FX,SAAAA,EAAY14D,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAi4E,IACfp4E,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAm4E,GAAA93E,KAAAH,KAAMuf,KA0CVub,uBAAyB,SAAAn6B,GAAU,IAAA2e,EACLzf,EAAK0f,MAAvBvY,EADuBsY,EACvBtY,OAAQpC,EADe0a,EACf1a,MAEhB,GAAIoC,IAAWrG,EAAOqG,QAAUpC,EAAMqO,IAAIvQ,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKskB,MAAMjjB,KACxDrB,EAAK4kB,SAAS,CACVvjB,KAAMA,MAjDCrB,EAsDnBg7B,uBAAyB,SAAAl6B,GAAU,IAAA8f,EACL5gB,EAAK0f,MAAvBvY,EADuByZ,EACvBzZ,OAAQpC,EADe6b,EACf7b,MAGhB,GAFesO,YAAclM,KAEdrG,EAAOmL,QAAUlH,EAAMqO,IAAIvQ,KAAO/B,EAAOoH,OAAQ,CAC5D,IAAM7G,EAAOtB,IAAUqD,IAAItC,EAAOoH,SAAWlI,EAAKskB,MAAMjjB,KACxDrB,EAAK4kB,SAAS,CACVvjB,KAAMA,MA7DCrB,EAkEnBuyE,mBAAqB,SAAA/mE,GACbA,GAAOA,EAAMua,kBAEjB/lB,EAAK0f,MAAMS,QAAQ3U,IArEJ,IAAAid,EAGWzoB,EAAK0f,MAAvBvY,EAHOshB,EAGPthB,OAAQpC,EAHD0jB,EAGC1jB,MAEL1D,EAAS0D,EAAdqO,IALS,OAMf/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EAEjCrB,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZkxE,UAAWtzE,EACX4K,MAAOylB,IACPvlB,OAAQulB,IACR/zB,KAAMA,GAbKrB,mFAkCfD,IAAU6hB,GAAG,uBAAwBzhB,KAAK86B,wBAC1Cl7B,IAAU6hB,GAAG,uBAAwBzhB,KAAK66B,uEAI1Cj7B,IAAUoC,eAAe,uBAAwBhC,KAAK86B,wBACtDl7B,IAAUoC,eAAe,uBAAwBhC,KAAK66B,yDAgCjD,IAAA3W,EAC2BlkB,KAAKmkB,MAAdjjB,GADlBgjB,EACG1U,MADH0U,EACUxU,OADVwU,EACkBhjB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMiH,EAAOvI,IAAUoI,QAAQ9G,EAAKwB,KAAOxB,EAAKiH,KAC1CuZ,EAAM9hB,IAAU2I,WAAWJ,GAEjC,OACI0X,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAShgB,KAAKoyE,qBAE3EvyD,EAAArf,EAAAkM,cAACgrB,GAAA,EAAD,CAAcx2B,KAAMA,wDAlEAqe,EAAO4E,GAAO,IAClCnd,EAAkBuY,EAAlBvY,OAAQpC,EAAU2a,EAAV3a,MAEhB,OAAIoC,IAAWmd,EAAMkiB,YAAczhC,IAAUuf,EAAM+zD,UACxC,CACH7xC,WAAYr/B,EACZkxE,UAAWtzE,EACX4K,MAAOylB,IACPvlB,OAAQulB,IACR/zB,KAAM0D,EAAMqO,KAIb,YA/ByBgN,IAAMC,YCsC/Bi4D,eAhCX,SAAAA,EAAY54D,GAAQ,OAAAzf,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAm4E,GAAAr4E,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAq4E,GAAAh4E,KAAAH,KACVuf,0EAGD,IAAAD,EACoBtf,KAAKuf,MAAtBvY,EADHsY,EACGtY,OAAQwR,EADX8G,EACW9G,KAEhB,OACIqH,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,wBACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAACssC,EAAD,CAAiBhyC,OAAQA,EAAQwT,mBAAmB,IACpDqF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gCACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oBACXD,EAAArf,EAAAkM,cAAC4vB,GAAA,EAAD,CAAet1B,OAAQA,KAE1BwR,GACGqH,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,iCACXD,EAAArf,EAAAkM,cAAA,QAAMoT,UAAU,gBAAgBtH,cAlBxByH,IAAMC,WCiBxCw0D,GAAmB,CACrBnxD,QAAS,GACTrB,MAAO,QACPyyD,UAAW,cAGTyD,GAAkB,CACpB70D,QAAS,GACTrB,MAAO,SAGL0yD,GAAsB,CACxBrxD,QAAS,GACTrB,MAAO,SAGLm2D,eACF,SAAAA,EAAY94D,GAAO,IAAA1f,EAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAAq4E,IACfx4E,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAAu4E,GAAAl4E,KAAAH,KAAMuf,KA4EVksB,UAAY,SAAApgC,GACR,GAAsB,KAAlBA,EAAM+9B,QAAgB,CAEtB,GADqCvpC,EAAKskB,MAAlC2wD,yBACsB,OAE9Bj1E,EAAKuuC,mBACoB,KAAlB/iC,EAAM+9B,QACbvpC,EAAKk1E,iBACoB,KAAlB1pE,EAAM+9B,SACbvpC,EAAKm/D,cAtFMn/D,EA0FnB81E,YA1FmB71E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA0FL,SAAAC,IAAA,IAAAsG,EAAAmD,EAAA,OAAA+kB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFiG,EAAWnH,EAAK0f,MAAhBvY,OAEH0U,YAAc1U,GAHT,CAAAnG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKWc,KAAgBgJ,KAAK,CACtC/B,QAAS,uBACTgG,QAASoE,YAAclM,GACvBqkB,OAAQ,EACRuH,MAAO,MATD,OAKJzoB,EALItJ,EAAAkK,KAYVlL,EAAK2S,QAAUrI,EAAO2I,OACtBjT,EAAKo1E,iBAA4C,IAAzB9qE,EAAO2I,OAAO9M,OAExB,EAEdnG,EAAK4kB,SAAS,CACV6zD,aAHU,EAIVlD,aAAcv1E,EAAKu1E,aAJT,GAKVC,iBAAkBx1E,EAAKw1E,iBALb,GAMV5iD,WAAYtoB,EAAOooB,cAGvBjf,YAAiCtM,EATnB,EASkCnH,EAAK2S,SAxB3C,yBAAA3R,EAAAU,SAAAb,MA1FKb,EAqHnBuuC,YAAc,WACVh2B,KAAiBksC,6BAA6B,OAtH/BzkD,EAyHnBw2E,WAAa,WAAM,IACPrvE,EAAWnH,EAAK0f,MAAhBvY,OADOkd,EAEsBrkB,EAAKskB,MAAlCm0D,EAFOp0D,EAEPo0D,aAAc7lD,EAFPvO,EAEOuO,WAEhB1uB,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAIwO,GAAS,EACTkgB,IACAlgB,EAAQ+lE,GAGZ,IAAM1zE,EACF2N,EAAQ,GAAKA,EAAQ1S,EAAK2S,QAAQxM,OAASoN,YAAgBvT,EAAK2S,QAAQD,IAAUoK,YAAiB3V,GACvG,GAAKpC,GACAA,EAAMqO,IAAX,CAEA,IAAM/R,EAAOtB,IAAUqD,IAAI2B,EAAMqO,IAAIvQ,KAAOkC,EAAMqO,IAC7C/R,GAELuQ,YAAevQ,EAAMA,EAAKwB,GAAK,OAAQqB,EAAM,kBAAMnE,IAAUqE,oBAAoB+C,EAAQ9F,EAAKwB,SA7I/E7C,EAgJnBw3D,cAAgB,WAAM,IACVrwD,EAAWnH,EAAK0f,MAAhBvY,OACR,GAAK0U,YAAc1U,GAAnB,CAFkB,IAAA+7B,EAImBljC,EAAKskB,MAAlCm0D,EAJUv1C,EAIVu1C,aAEJ/lE,GAAS,EAKb,GAXkBwwB,EAIItQ,aAIlBlgB,EAAQ+lE,KAGR/lE,EAAQ,GAAKA,GAAS1S,EAAK2S,QAAQxM,QAAvC,CACA,IAAMpB,EAAQwO,YAAgBvT,EAAK2S,QAAQD,IAC3C,GAAK3N,EAAL,CAbkB,IAeP1D,EAAS0D,EAAdqO,IAEN,GADA/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACjC,CAEA,IAAM+E,EAAY,CACd6C,QAAS,YACT8I,KAAM,IACNhN,MAAO1D,EACPsO,MAAO,IACPE,OAAQ,KAGZ7N,KAAgBgH,aAAa,CACzBC,QAAS,sBACT8xC,KAAM,CAAE30C,oBA7KGpG,EAiLnB4pC,aAAe,WAAM,IAAAnqB,EACazf,EAAK0f,MAA3BvY,EADSsY,EACTtY,OADSg8B,GAAA1jB,EACDrY,UACqBpH,EAAKskB,OAAlCm0D,EAFSt1C,EAETs1C,aAEJ/lE,GAAS,EAJIywB,EAEKvQ,aAIlBlgB,EAAQ+lE,GAGZ,IAAM1zE,EACF2N,EAAQ,GAAKA,EAAQ1S,EAAK2S,QAAQxM,OAASoN,YAAgBvT,EAAK2S,QAAQD,IAAUoK,YAAiB3V,GAEvG,GAAIpC,EAAO,CACP,IAAI1D,EAAO0D,EAAMqO,IAEjB,GADA/R,EAAOtB,IAAUqD,IAAI/B,EAAKwB,KAAOxB,EACvB,CACN,IAAMvB,EAAQC,IAAU24E,oBAExB34E,IAAUkI,gBAAgBnI,EAAOuB,MAnM1BrB,EAwMnBw1E,iBAAmB,SAAA9iE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP1S,EAAK2S,QAAQxM,QA5MjBnG,EA+MnBk1E,eAAiB,SAAA1pE,GACTA,GACAA,EAAMua,kBAFY,IAMhBsM,EADmBryB,EAAKskB,MAAtBm0D,aACyB,EAEjC,OAAOz4E,EAAK02E,UAAUrkD,EAAW,WACzBA,IAAcryB,EAAK2S,QAAQxM,OAAS,GACpCnG,EAAK22E,kBAzNE32E,EA8NnB22E,aA9NmB12E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA8NJ,SAAAyB,IAAA,OAAAgtB,EAAA1uB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAd,OAAA,kCAAAc,EAAAZ,SAAAW,MA9NIrC,EAkOnBu1E,aAAe,SAAA7iE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL1S,EAyOnBm/D,WAAa,SAAA3zD,GACLA,GACAA,EAAMua,kBAFQ,IAMZsM,EADmBryB,EAAKskB,MAAtBm0D,aACyB,EAEjC,OAAOz4E,EAAK02E,UAAUrkD,EAAW,WACX,IAAdA,GACAryB,EAAK42E,cAnPE52E,EAwPnB42E,SAxPmB32E,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KAwPR,SAAA8qD,IAAA,OAAAr8B,EAAA1uB,EAAAI,KAAA,SAAA4qD,GAAA,cAAAA,EAAA1qD,KAAA0qD,EAAAzqD,MAAA,cAAAyqD,EAAAnqD,OAAA,kCAAAmqD,EAAAjqD,SAAAgqD,MAxPQ1rD,EA4PnB02E,UAAY,SAAChkE,EAAOlJ,GAChB,GAAIkJ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS1S,EAAK2S,QAAQxM,OAAQ,OAAO,EAEzCnG,EAAK4kB,SACD,CACI6zD,aAAc/lE,EACd6iE,aAAcv1E,EAAKu1E,aAAa7iE,GAChC8iE,iBAAkBx1E,EAAKw1E,iBAAiB9iE,IAE5ClJ,GAVyB,IAarBrC,EAAWnH,EAAK0f,MAAhBvY,OAGR,OADAsM,YAAiCtM,EAAQuL,EAAO1S,EAAK2S,UAC9C,GAzQP3S,EAAK2S,QAAU,GAHA,IAAAiO,EAKY5gB,EAAK0f,MAAxBvY,EALOyZ,EAKPzZ,OAAQe,EALD0Y,EAKC1Y,OALD,OAOflI,EAAKskB,MAAQ,CACTkiB,WAAYr/B,EACZwxE,WAAYzwE,EACZuwE,aAAc,EACdlD,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,GAbfj1E,qFAiBGilB,EAAWC,GAAW,IAAAuD,EACVtoB,KAAKuf,MAA3BvY,EADgCshB,EAChCthB,OAAQC,EADwBqhB,EACxBrhB,UADwBo8B,EASpCrjC,KAAKmkB,MANLs0D,EAHoCp1C,EAGpCo1C,cACApD,EAJoChyC,EAIpCgyC,iBACAD,EALoC/xC,EAKpC+xC,aACAH,EANoC5xC,EAMpC4xC,iBACAxiD,EAPoC4Q,EAOpC5Q,WACAqiD,EARoCzxC,EAQpCyxC,yBAGJ,OAAIhwD,EAAU9d,SAAWA,IAIrB8d,EAAU7d,YAAcA,IAIxB8d,EAAU0zD,gBAAkBA,IAI5B1zD,EAAUoyD,kBAAoB9B,IAI9BtwD,EAAUqwD,eAAiBA,IAI3BrwD,EAAUkwD,mBAAqBA,IAI/BlwD,EAAU0N,aAAeA,GAIzB1N,EAAU+vD,2BAA6BA,oDAO3B,IACR9tE,EAAWhH,KAAKuf,MAAhBvY,OACFpC,EAAQ+X,YAAiB3V,GAC/B6L,YAA8B7L,EAAQ,CAACpC,IAEvC5E,KAAK21E,cAEL7wE,SAAS2jE,iBAAiB,UAAWzoE,KAAKyrC,WAAW,kDAIrD3mC,SAAS6jE,oBAAoB,UAAW3oE,KAAKyrC,WAAW,oCAqMnD,IAAA3iB,EACiB9oB,KAAKuf,MAAnBvY,EADH8hB,EACG9hB,OAAQqQ,EADXyR,EACWzR,EADXisB,EAUDtjC,KAAKmkB,MAPLm0D,EAHCh1C,EAGDg1C,aACAlD,EAJC9xC,EAID8xC,aACAC,EALC/xC,EAKD+xC,iBAEA5iD,GAPC6Q,EAMD2xC,iBANC3xC,EAOD7Q,YAKAlgB,GAZC+wB,EAQDwxC,yBARCxxC,EASDszC,cAGS,GACTnkD,IACAlgB,EAAQ+lE,GAGZ,IACMI,EAAYnmE,GAAS,GAAKA,EAAQvS,KAAKwS,QAAQxM,OAC/CpB,EAAQ8zE,EAAYtlE,YAAgBpT,KAAKwS,QAAQD,IAAUoK,YAAiB3V,GAC5E6tB,EAAmB6jD,EAAY14E,KAAKwS,QAAQD,GAAS,KAC9CrR,EAAS0D,EAAdqO,IAER,OACI4M,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,gBAPQ,KASnBD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBAAuBE,QAAShgB,KAAK+0E,gBAChDl1D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,4BACXD,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,oCACfD,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmB5vC,UAAWytC,EAAcpB,MAAI,EAACh0D,QAAShgB,KAAKg/D,YAC3Dn/C,EAAArf,EAAAkM,cAAC8qE,GAAAh3E,EAAD,CAAoByhB,SAAS,QAAQtV,MAAOioE,OAIpD/0D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,+BACXD,EAAArf,EAAAkM,cAACisE,GAAD,CAA2B3xE,OAAQA,EAAQpC,MAAOA,EAAOob,QAAShgB,KAAK+0E,kBAG3El1D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,6BACXD,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmBv3D,QAAShgB,KAAKouC,aAC7BvuB,EAAArf,EAAAkM,cAACi/B,EAAAnrC,EAAD,CAAWyhB,SAAS,QAAQtV,MAAOioE,MAEvC/0D,EAAArf,EAAAkM,cAAC6qE,GAAD,CAAmB5vC,UAAW0tC,EAAkBrB,MAAI,EAACh0D,QAAShgB,KAAK+0E,gBAC/Dl1D,EAAArf,EAAAkM,cAACgrE,GAAAl3E,EAAD,CAAkByhB,SAAS,QAAQtV,MAAOioE,QAItD/0D,EAAArf,EAAAkM,cAAA,OAAKoT,UAAU,uBACXD,EAAArf,EAAAkM,cAACksE,GAAD,CAA2B5xE,OAAQA,EAAQwR,KAAMmb,YAAwBkB,KACzEhV,EAAArf,EAAAkM,cAACkrE,GAAD,CACIh9D,MAAOvD,EAAE,eACT2pC,SAAUvuB,GAAclgB,GAAS,EAAvB,GAAAvH,OAA8BuH,EAAQ,EAAtC,QAAAvH,OAA8CynB,GAAe,OAE3E5S,EAAArf,EAAAkM,cAACqrE,GAAD,CAA2Bn9D,MAAOvD,EAAE,QAAStP,OAAQ7G,EAAKwB,GAAIsd,QAAShgB,KAAKq2E,aAC3E36D,YAAc1U,IACX6Y,EAAArf,EAAAkM,cAAC8nE,GAAD,CACI55D,MAAOvD,EAAE,WACTswB,UAAW+wC,EACX14D,QAAShgB,KAAKq3D,eACdx3C,EAAArf,EAAAkM,cAACqjC,GAAAvvC,EAAD,CAAWmM,MAAO+nE,MAG1B70D,EAAArf,EAAAkM,cAAC8nE,GAAD,CAAyB55D,MAAOvD,EAAE,UAAWswB,UAAQ,EAAC3nB,QAAShgB,KAAKypC,cAChE5pB,EAAArf,EAAAkM,cAACsrE,GAAAx3E,EAAD,CAAYmM,MAAOyrE,eA/UVn4D,IAAMC,WA2VxBqH,iBAAkB8wD,ICtW3BQ,uBACF,SAAAA,EAAYt5D,GAAO,IAAA1f,EAAA,OAAAC,OAAA2jB,EAAA,EAAA3jB,CAAAE,KAAA64E,IACfh5E,EAAAC,OAAA4jB,EAAA,EAAA5jB,CAAAE,KAAAF,OAAA6jB,EAAA,EAAA7jB,CAAA+4E,GAAA14E,KAAAH,KAAMuf,KAyCVu5D,uBAAyB,SAAAn4E,GAAU,IACvBqG,EAA6BrG,EAA7BqG,OAAQC,EAAqBtG,EAArBsG,UAAWssB,EAAU5yB,EAAV4yB,MAE3B1zB,EAAK4jD,iBAAiBz8C,EAAQC,EAAWssB,IA7C1B1zB,EAgDnBk5E,uBAAyB,SAAAp4E,GAAU,IACvBmL,EAAkBnL,EAAlBmL,OAAQynB,EAAU5yB,EAAV4yB,MAEhB1zB,EAAKslD,iBAAiBr5C,EAAQynB,IAnDf1zB,EAsDnBy1D,oCAAsC,SAAA30D,GAClCd,EAAK4kB,SAAS,CACV8wC,qBAAsBn9C,KAAiBm9C,wBAxD5B11D,EA4DnBkgC,iCAAmC,SAAAp/B,GAC/Bd,EAAK4kB,SAAS,CAAEub,mBAAoB5nB,KAAiB4nB,sBA7DtCngC,EAgEnBggC,wCAA0C,SAAAl/B,GACtCd,EAAK4kB,SAAS,CACVqb,0BAA2B1nB,KAAiB0nB,6BAlEjCjgC,EAsEnBm5E,sBAAwB,SAAAr4E,GAAU,IACtBi6C,EAASj6C,EAATi6C,KAER/6C,EAAK4kB,SAAS,CAAEoI,YAAa+tB,KAzEd/6C,EA4EnB4jD,iBAAmB,SAACz8C,GAA4C,IAApCC,EAAoCvF,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,GAAAA,UAAA,GAAxB,KAAM6xB,EAAkB7xB,UAAAsE,OAAA,QAAAsI,IAAA5M,UAAA,IAAAA,UAAA,GACtD0vC,EAAgBh5B,KAAiB08B,YACjCmkC,EAAsB7gE,KAAiBsvC,aACvCstB,EAAmB58D,KAAiBywC,eAE1C,GAAIt1B,EACI0lD,IAAwBjyE,GACxBnF,KAAgBgH,aAAa,CACzBC,QAAS,2BACT9B,gBAOZ,GAAIoqC,IAAkBpqC,GAAUC,GAAa+tE,IAAqB/tE,EAC9DpH,EAAKq5E,iBAAiB3rD,QAAQ0/C,kBAC1BhmE,GACAmsB,aAAiBpsB,EAAQC,QAE1B,GAAImqC,IAAkBpqC,GAAWC,EAQpCpF,KAAgB6gD,UAAU17C,EAAQC,OARa,CAC/C,IAAMlD,EAAO6O,IAAU3P,IAAI+D,GACvBjD,GAAQA,EAAK6T,aAAe,EAC5B/X,EAAKq5E,iBAAiB3rD,QAAQ8/C,gBAE9BxtE,EAAKq5E,iBAAiB3rD,QAAQy/C,mBAtGvBntE,EA6GnBslD,iBA7GmB,eAAA9kD,EAAAP,OAAAk0C,EAAA,EAAAl0C,CAAAovB,EAAA1uB,EAAAC,KA6GA,SAAAC,EAAOoL,EAAQynB,GAAf,IAAAxvB,EAAA,OAAAmrB,EAAA1uB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV+K,EADU,CAAAjL,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGIc,KAAgBgJ,KAAK,CACpC/B,QAAS,oBACTgG,QAAShD,EACTwuC,OAAO,IANI,OAGTv2C,EAHSlD,EAAAkK,KASflL,EAAK4jD,iBAAiB1/C,EAAKrB,GAAI,KAAM6wB,GATtB,wBAAA1yB,EAAAU,SAAAb,MA7GA,gBAAAc,EAAAc,GAAA,OAAAjC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKq5E,iBAAmBj5D,IAAMogB,YAE9BxgC,EAAKskB,MAAQ,CACToxC,qBAAsBn9C,KAAiBm9C,qBACvCv1B,mBAAoB5nB,KAAiB4nB,mBACrCF,0BAA2B1nB,KAAiB0nB,0BAC5CjT,YAAa,MATFhtB,mFAoBfkP,IAAU0S,GAAG,uBAAwBzhB,KAAK+4E,wBAC1CnmE,IAAU6O,GAAG,uBAAwBzhB,KAAK84E,wBAE1C1gE,KAAiBqJ,GAAG,oCAAqCzhB,KAAKs1D,qCAC9Dl9C,KAAiBqJ,GAAG,iCAAkCzhB,KAAK+/B,kCAC3D3nB,KAAiBqJ,GAAG,wCAAyCzhB,KAAK6/B,yCAClEznB,KAAiBqJ,GAAG,sBAAuBzhB,KAAKg5E,sEAIhDjqE,IAAU/M,eAAe,uBAAwBhC,KAAK+4E,wBACtDnmE,IAAU5Q,eAAe,uBAAwBhC,KAAK84E,wBAEtD1gE,KAAiBpW,eAAe,oCAAqChC,KAAKs1D,qCAC1El9C,KAAiBpW,eAAe,iCAAkChC,KAAK+/B,kCACvE3nB,KAAiBpW,eACb,wCACAhC,KAAK6/B,yCAETznB,KAAiBpW,eAAe,sBAAuBhC,KAAKg5E,wDAkFvD,IACGt4D,EAAY1gB,KAAKuf,MAAjBmB,QADHwD,EAEwFlkB,KAAKmkB,MAA1FoxC,EAFHrxC,EAEGqxC,qBAAsBv1B,EAFzB9b,EAEyB8b,mBAAoBF,EAF7C5b,EAE6C4b,0BAA2BjT,EAFxE3I,EAEwE2I,YAE7E,OACIhN,EAAArf,EAAAkM,cAAAmT,EAAArf,EAAA8kB,SAAA,KACIzF,EAAArf,EAAAkM,cAAA,OAAKoT,UAAWe,IAAWH,EAAQy4D,KAAM,OAAQ,CAAEC,oBAAqB7jB,KACpE11C,EAAArf,EAAAkM,cAAC2sE,GAAD,CAASxjB,aAAc71D,KAAKyjD,mBAC5B5jC,EAAArf,EAAAkM,cAAC4sE,GAAD,CAAe54C,IAAK1gC,KAAKk5E,mBACxB3jB,GAAwB11C,EAAArf,EAAAkM,cAACgqD,GAAD,OAE7B72C,EAAArf,EAAAkM,cAAC6sE,GAAA,EAAD,MACCv5C,GAAsBngB,EAAArf,EAAAkM,cAAC8sE,GAAgBx5C,GACvCF,GAA6BjgB,EAAArf,EAAAkM,cAAC+sE,GAAuB35C,GACrDjT,GAAehN,EAAArf,EAAAkM,cAACgtE,GAAkB7sD,WAxI5B5M,IAAMC,YAgJvB4G,GAAUC,YACZ4yD,IACAryD,IACApG,IA1JW,SAAAC,GAAK,MAAK,CACrBg4D,KAAM,CACFz/C,WAAmC,SAAvBvY,EAAM8d,QAAQrtB,KAAkBuP,EAAM8d,QAAQvF,WAAWye,QAAU,UAC/Ej2B,MAAOf,EAAM8d,QAAQvhB,KAAKwhB,YAwJ9BiY,GAGWrwB,aAAQ+xD","file":"static/js/3.b5fa6f69.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return basicGroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return isMeChat(chatId);\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return supergroup.status.can_pin_messages;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return false;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport emojiRegex from 'emoji-regex';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus\n                        classes={{\n                            root: classes.statusRoot,\n                            icon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                        chatId={chatId}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n        if (!onSelect) return;\n\n        onSelect(user);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {!isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatUnreadMessageIcon,\n    isChatMuted,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadMessageIcon = getChatUnreadMessageIcon(chat);\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n        const showDraftChat = showChatDraft(chat.id);\n\n        return (\n            <>\n                {unreadMessageIcon && !showDraftChat && <i className='dialog-badge-unread' />}\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned && !unreadMessageIcon ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n\n        return <>{date && <div className='dialog-meta-date'>{date}</div>}</>;\n    }\n}\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    iconIndicator: {\n        background: '#80d066'\n    },\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        },\n        '& $iconIndicator': {\n            background: '#ffffff'\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{\n                            statusRoot: classes.statusRoot,\n                            statusIcon: classes.statusIcon,\n                            iconIndicator: classes.iconIndicator\n                        }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport DialogControl from '../Tile/DialogControl';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { itemsInView, orderCompare, throttle } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        } else {\n            this.appendChats(result.chat_ids, () => this.loadChatContents(result.chat_ids));\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                {dialogs}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        return (\n            <div className='day-meta'>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getEmojiMatches,\n    getText,\n    getMedia,\n    getUnread,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTileControl userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-without-avatar': !showTitle\n        });\n\n        const meta = (\n            <div className='message-meta'>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='message-views-icon' />\n                        <span className='message-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a className='message-date' onClick={this.handleDateClick}>\n                    <span title={dateHint}>{date}</span>\n                </a>\n            </div>\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div className='reply-content-subtitle'>{content}</div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo'/>\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\nimport Placeholder from './Placeholder';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive } = this.state;\n\n        //console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder/>\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}